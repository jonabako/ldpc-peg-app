{"version":3,"file":"maskito-angular.js","sources":["../../../projects/angular/src/lib/maskito.cva.ts","../../../projects/angular/src/lib/maskito.directive.ts","../../../projects/angular/src/lib/maskito.pipe.ts","../../../projects/angular/src/lib/maskito.module.ts","../../../projects/angular/src/maskito-angular.ts"],"sourcesContent":["import {Directive, Input} from '@angular/core';\nimport {DefaultValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {MASKITO_DEFAULT_OPTIONS, MaskitoOptions, maskitoTransform} from '@maskito/core';\n\n@Directive({\n    selector: 'input[maskito], textarea[maskito]',\n    providers: [\n        DefaultValueAccessor,\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: DefaultValueAccessor,\n        },\n    ],\n    host: {\n        '(input)': '$any(this.accessor)._handleInput($event.target.value)',\n        '(blur)': 'accessor.onTouched()',\n        '(compositionstart)': '$any(this.accessor)._compositionStart()',\n        '(compositionend)': '$any(this.accessor)._compositionEnd($event.target.value)',\n    },\n})\nexport class MaskitoCva {\n    @Input()\n    maskito: MaskitoOptions | null = MASKITO_DEFAULT_OPTIONS;\n\n    constructor(readonly accessor: DefaultValueAccessor) {\n        const original = accessor.writeValue.bind(accessor);\n\n        accessor.writeValue = (value: unknown) => {\n            original(\n                maskitoTransform(\n                    String(value ?? ''),\n                    this.maskito ?? MASKITO_DEFAULT_OPTIONS,\n                ),\n            );\n        };\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Inject,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n} from '@angular/core';\nimport {\n    Maskito,\n    MASKITO_DEFAULT_ELEMENT_PREDICATE,\n    MASKITO_DEFAULT_OPTIONS,\n    MaskitoElementPredicate,\n    MaskitoElementPredicateAsync,\n    MaskitoOptions,\n} from '@maskito/core';\n\n@Directive({\n    selector: '[maskito]',\n})\nexport class MaskitoDirective implements OnDestroy, OnChanges {\n    private maskedElement: Maskito | null = null;\n\n    @Input()\n    maskito: MaskitoOptions | null = MASKITO_DEFAULT_OPTIONS;\n\n    @Input()\n    maskitoElement: MaskitoElementPredicate | MaskitoElementPredicateAsync =\n        MASKITO_DEFAULT_ELEMENT_PREDICATE;\n\n    constructor(\n        @Inject(NgZone) private readonly ngZone: NgZone,\n        @Inject(ElementRef) private readonly elementRef: ElementRef<HTMLElement>,\n    ) {}\n\n    async ngOnChanges(): Promise<void> {\n        this.maskedElement?.destroy();\n\n        const predicate = this.maskitoElement;\n        const predicateResult = await predicate(this.elementRef.nativeElement);\n\n        if (this.maskitoElement !== predicate) {\n            // Ignore the result of the predicate if the\n            // maskito element has changed before the predicate was resolved.\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            this.maskedElement = new Maskito(\n                predicateResult,\n                this.maskito ?? MASKITO_DEFAULT_OPTIONS,\n            );\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.maskedElement?.destroy();\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {MASKITO_DEFAULT_OPTIONS, MaskitoOptions, maskitoTransform} from '@maskito/core';\n\n@Pipe({\n    name: 'maskito',\n})\nexport class MaskitoPipe implements PipeTransform {\n    transform(value: unknown, maskitoOptions: MaskitoOptions | null): string {\n        return maskitoTransform(\n            String(value ?? ''),\n            maskitoOptions ?? MASKITO_DEFAULT_OPTIONS,\n        );\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {MaskitoCva} from './maskito.cva';\nimport {MaskitoDirective} from './maskito.directive';\nimport {MaskitoPipe} from './maskito.pipe';\n\n@NgModule({\n    declarations: [MaskitoDirective, MaskitoCva, MaskitoPipe],\n    exports: [MaskitoDirective, MaskitoCva, MaskitoPipe],\n})\nexport class MaskitoModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
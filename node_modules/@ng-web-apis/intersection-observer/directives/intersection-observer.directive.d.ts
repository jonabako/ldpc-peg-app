import { ElementRef, OnDestroy } from '@angular/core';
import * as i0 from "@angular/core";
declare const SafeObserver: {
    new (callback: IntersectionObserverCallback, options?: IntersectionObserverInit | undefined): IntersectionObserver;
    prototype: IntersectionObserver;
};
export declare class IntersectionObserverDirective extends SafeObserver implements OnDestroy {
    private readonly callbacks;
    constructor(root: ElementRef<Element> | null, rootMargin: string | null, threshold: string | null);
    observe(target: Element, callback?: IntersectionObserverCallback): void;
    unobserve(target: Element): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<IntersectionObserverDirective, [{ optional: true; }, { attribute: "waIntersectionRootMargin"; }, { attribute: "waIntersectionThreshold"; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<IntersectionObserverDirective, "[waIntersectionObserver]", ["IntersectionObserver"], {}, {}, never>;
}
export {};

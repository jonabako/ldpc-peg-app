import { ChangeDetectionStrategy, Component, HostListener, Inject, Input, Optional, Self, ViewChild, } from '@angular/core';
import { TUI_PLATFORM, TuiDestroyService, tuiIsString } from '@taiga-ui/cdk';
import { MODE_PROVIDER, TUI_HINT_OPTIONS, TUI_MODE, TuiHintHoverDirective, TuiHintOptionsDirective, } from '@taiga-ui/core';
import { TuiAppearanceDirective } from '@taiga-ui/experimental/directives/appearance';
import { takeUntil } from 'rxjs/operators';
import { TUI_TOOLTIP_OPTIONS } from './tooltip.options';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/experimental/directives/icons";
import * as i2 from "@taiga-ui/experimental/components/button";
import * as i3 from "@taiga-ui/experimental/directives/appearance";
import * as i4 from "@taiga-ui/core";
import * as i5 from "@angular/common";
import * as i6 from "rxjs";
// TODO: Turn into a directive with hint as hostDirective in 4.0
export class TuiTooltipComponent extends TuiHintOptionsDirective {
    constructor(destroy$, mode$, options, tooltipOptions, platform, iconAppearance) {
        super(options);
        this.tooltipOptions = tooltipOptions;
        this.platform = platform;
        this.iconAppearance = iconAppearance;
        this.mode = null;
        this.describeId = '';
        mode$.pipe(takeUntil(destroy$)).subscribe(mode => {
            this.mode = mode;
        });
    }
    get computedAppearance() {
        return this.appearance || this.mode || '';
    }
    get tooltipIcon() {
        const { icons } = this.tooltipOptions;
        return tuiIsString(icons) ? icons : icons[this.platform];
    }
    stopOnMobile(event) {
        var _a;
        if (this.platform !== 'web') {
            event.preventDefault();
            event.stopPropagation();
        }
        (_a = this.driver$) === null || _a === void 0 ? void 0 : _a.toggle();
    }
}
TuiTooltipComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTooltipComponent, deps: [{ token: TuiDestroyService, self: true }, { token: TUI_MODE }, { token: TUI_HINT_OPTIONS }, { token: TUI_TOOLTIP_OPTIONS }, { token: TUI_PLATFORM }, { token: TuiAppearanceDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });
TuiTooltipComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTooltipComponent, selector: "tui-tooltip", inputs: { content: "content", direction: "direction", appearance: "appearance", showDelay: "showDelay", hideDelay: "hideDelay", describeId: "describeId", context: "context" }, host: { listeners: { "mousedown": "stopOnMobile($event)" } }, providers: [TuiDestroyService, MODE_PROVIDER], viewQueries: [{ propertyName: "driver$", first: true, predicate: TuiHintHoverDirective, descendants: true }], usesInheritance: true, ngImport: i0, template: "<button\n    #driver=\"tuiHintHover\"\n    automation-id=\"tui-tooltip__icon\"\n    size=\"xs\"\n    tuiIconButton\n    class=\"t-tooltip-button\"\n    [attr.tabindex]=\"describeId ? -1 : 0\"\n    [iconLeft]=\"tooltipIcon\"\n    [tuiAppearance]=\"iconAppearance?.tuiAppearance || 'icon'\"\n    [tuiAppearanceState]=\"(driver | async) ? 'active' : null\"\n    [tuiHint]=\"content\"\n    [tuiHintAppearance]=\"computedAppearance\"\n    [tuiHintContext]=\"context\"\n    [tuiHintDescribe]=\"describeId\"\n    [tuiHintDirection]=\"direction\"\n    [tuiHintHideDelay]=\"hideDelay\"\n    [tuiHintShowDelay]=\"showDelay\"\n></button>\n", styles: [":host{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:relative;display:inline-flex;align-items:center;justify-content:center;vertical-align:middle;font-size:0;line-height:0;pointer-events:auto;border-radius:100%;cursor:pointer}.t-tooltip-button{border-radius:inherit;outline-offset:-4px}.t-tooltip-button:before{width:1rem;height:1rem}:host-context([tuiWrapper][data-appearance=\"textfield\"][data-state=\"disabled\"]) .t-tooltip-button{opacity:1}\n"], directives: [{ type: i1.TuiIconsDirective, selector: "[iconLeft]:is(a,button,tui-badge,tui-chip),[iconRight]:is(a,button,tui-badge,tui-chip),[tuiBadge][iconLeft],[tuiBadge][iconRight],[tuiChip][iconLeft],[tuiChip][iconRight],[tuiButtonClose]", inputs: ["iconLeft", "iconRight"] }, { type: i2.TuiButtonDirective, selector: "a[tuiButton],button[tuiButton],a[tuiIconButton],button[tuiIconButton]", inputs: ["size", "appearance"] }, { type: i3.TuiAppearanceDirective, selector: "[tuiAppearance]", inputs: ["tuiAppearance", "tuiAppearanceState", "tuiAppearanceFocus"] }, { type: i4.TuiHintDirective, selector: "[tuiHint]:not(ng-container):not(ng-template)", inputs: ["tuiHint", "tuiHintContext", "tuiHintAppearance"] }, { type: i4.TuiHintDriverDirective, selector: "[tuiHint]:not(ng-container):not(ng-template)" }, { type: i4.TuiHintHoverDirective, selector: "[tuiHint]:not(ng-container):not(ng-template)", inputs: ["tuiHintShowDelay", "tuiHintHideDelay"], exportAs: ["tuiHintHover"] }, { type: i4.TuiHintPositionDirective, selector: "[tuiHint]:not([tuiHintCustomPosition]):not(ng-container):not(ng-template)", inputs: ["tuiHintDirection"] }, { type: i4.TuiHintDescribeDirective, selector: "[tuiHintDescribe]", inputs: ["tuiHintDescribe"] }], pipes: { "async": i5.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTooltipComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-tooltip',
                    templateUrl: './tooltip.template.html',
                    styleUrls: ['./tooltip.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [TuiDestroyService, MODE_PROVIDER],
                    inputs: ['content', 'direction', 'appearance', 'showDelay', 'hideDelay'],
                }]
        }], ctorParameters: function () { return [{ type: i6.Observable, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDestroyService]
                }] }, { type: i6.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_HINT_OPTIONS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_TOOLTIP_OPTIONS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_PLATFORM]
                }] }, { type: i3.TuiAppearanceDirective, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiAppearanceDirective]
                }] }]; }, propDecorators: { driver$: [{
                type: ViewChild,
                args: [TuiHintHoverDirective]
            }], describeId: [{
                type: Input
            }], context: [{
                type: Input
            }], stopOnMobile: [{
                type: HostListener,
                args: ['mousedown', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9leHBlcmltZW50YWwvY29tcG9uZW50cy90b29sdGlwL3Rvb2x0aXAuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZXhwZXJpbWVudGFsL2NvbXBvbmVudHMvdG9vbHRpcC90b29sdGlwLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUNaLE1BQU0sRUFDTixLQUFLLEVBQ0wsUUFBUSxFQUNSLElBQUksRUFDSixTQUFTLEdBQ1osTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLFlBQVksRUFBRSxpQkFBaUIsRUFBRSxXQUFXLEVBQWMsTUFBTSxlQUFlLENBQUM7QUFDeEYsT0FBTyxFQUNILGFBQWEsRUFDYixnQkFBZ0IsRUFDaEIsUUFBUSxFQUVSLHFCQUFxQixFQUVyQix1QkFBdUIsR0FDMUIsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSw4Q0FBOEMsQ0FBQztBQUVwRixPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFekMsT0FBTyxFQUFDLG1CQUFtQixFQUFvQixNQUFNLG1CQUFtQixDQUFDOzs7Ozs7OztBQUV6RSxnRUFBZ0U7QUFVaEUsTUFBTSxPQUFPLG1CQUE2QixTQUFRLHVCQUF1QjtJQVlyRSxZQUN1QyxRQUE2QixFQUM5QyxLQUF1QyxFQUMvQixPQUF1QixFQUNYLGNBQWlDLEVBQ2hDLFFBQXFCLEVBR25ELGNBQTZDO1FBRXRELEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQU51QixtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7UUFDaEMsYUFBUSxHQUFSLFFBQVEsQ0FBYTtRQUduRCxtQkFBYyxHQUFkLGNBQWMsQ0FBK0I7UUFuQmxELFNBQUksR0FBeUIsSUFBSSxDQUFDO1FBTTFDLGVBQVUsR0FBRyxFQUFFLENBQUM7UUFpQlosS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDN0MsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDckIsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsSUFBSSxrQkFBa0I7UUFDbEIsT0FBTyxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDO0lBQzlDLENBQUM7SUFFRCxJQUFJLFdBQVc7UUFDWCxNQUFNLEVBQUMsS0FBSyxFQUFDLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQztRQUVwQyxPQUFPLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFHRCxZQUFZLENBQUMsS0FBaUI7O1FBQzFCLElBQUksSUFBSSxDQUFDLFFBQVEsS0FBSyxLQUFLLEVBQUU7WUFDekIsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3ZCLEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQztTQUMzQjtRQUVELE1BQUEsSUFBSSxDQUFDLE9BQU8sMENBQUUsTUFBTSxFQUFFLENBQUM7SUFDM0IsQ0FBQzs7aUhBL0NRLG1CQUFtQixrQkFhUixpQkFBaUIseUJBQ3pCLFFBQVEsYUFDUixnQkFBZ0IsYUFDaEIsbUJBQW1CLGFBQ25CLFlBQVksYUFFWixzQkFBc0I7cUdBbkJ6QixtQkFBbUIsb1JBSGpCLENBQUMsaUJBQWlCLEVBQUUsYUFBYSxDQUFDLG1FQU1sQyxxQkFBcUIsdUVDdkNwQyxzbkJBa0JBOzRGRGtCYSxtQkFBbUI7a0JBUi9CLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLFdBQVcsRUFBRSx5QkFBeUI7b0JBQ3RDLFNBQVMsRUFBRSxDQUFDLHNCQUFzQixDQUFDO29CQUNuQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsU0FBUyxFQUFFLENBQUMsaUJBQWlCLEVBQUUsYUFBYSxDQUFDO29CQUM3QyxNQUFNLEVBQUUsQ0FBQyxTQUFTLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsV0FBVyxDQUFDO2lCQUMzRTs7MEJBY1EsSUFBSTs7MEJBQUksTUFBTTsyQkFBQyxpQkFBaUI7OzBCQUNoQyxNQUFNOzJCQUFDLFFBQVE7OzBCQUNmLE1BQU07MkJBQUMsZ0JBQWdCOzswQkFDdkIsTUFBTTsyQkFBQyxtQkFBbUI7OzBCQUMxQixNQUFNOzJCQUFDLFlBQVk7OzBCQUNuQixRQUFROzswQkFDUixNQUFNOzJCQUFDLHNCQUFzQjs0Q0FmekIsT0FBTztzQkFEZixTQUFTO3VCQUFDLHFCQUFxQjtnQkFJaEMsVUFBVTtzQkFEVCxLQUFLO2dCQUlOLE9BQU87c0JBRE4sS0FBSztnQkErQk4sWUFBWTtzQkFEWCxZQUFZO3VCQUFDLFdBQVcsRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEhvc3RMaXN0ZW5lcixcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG4gICAgT3B0aW9uYWwsXG4gICAgU2VsZixcbiAgICBWaWV3Q2hpbGQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUVUlfUExBVEZPUk0sIFR1aURlc3Ryb3lTZXJ2aWNlLCB0dWlJc1N0cmluZywgVHVpUGxhdGZvcm19IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtcbiAgICBNT0RFX1BST1ZJREVSLFxuICAgIFRVSV9ISU5UX09QVElPTlMsXG4gICAgVFVJX01PREUsXG4gICAgVHVpQnJpZ2h0bmVzcyxcbiAgICBUdWlIaW50SG92ZXJEaXJlY3RpdmUsXG4gICAgVHVpSGludE9wdGlvbnMsXG4gICAgVHVpSGludE9wdGlvbnNEaXJlY3RpdmUsXG59IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7VHVpQXBwZWFyYW5jZURpcmVjdGl2ZX0gZnJvbSAnQHRhaWdhLXVpL2V4cGVyaW1lbnRhbC9kaXJlY3RpdmVzL2FwcGVhcmFuY2UnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7dGFrZVVudGlsfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7VFVJX1RPT0xUSVBfT1BUSU9OUywgVHVpVG9vbHRpcE9wdGlvbnN9IGZyb20gJy4vdG9vbHRpcC5vcHRpb25zJztcblxuLy8gVE9ETzogVHVybiBpbnRvIGEgZGlyZWN0aXZlIHdpdGggaGludCBhcyBob3N0RGlyZWN0aXZlIGluIDQuMFxuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS10b29sdGlwJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vdG9vbHRpcC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi90b29sdGlwLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtUdWlEZXN0cm95U2VydmljZSwgTU9ERV9QUk9WSURFUl0sXG4gICAgaW5wdXRzOiBbJ2NvbnRlbnQnLCAnZGlyZWN0aW9uJywgJ2FwcGVhcmFuY2UnLCAnc2hvd0RlbGF5JywgJ2hpZGVEZWxheSddLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlUb29sdGlwQ29tcG9uZW50PEMgPSBhbnk+IGV4dGVuZHMgVHVpSGludE9wdGlvbnNEaXJlY3RpdmUge1xuICAgIHByaXZhdGUgbW9kZTogVHVpQnJpZ2h0bmVzcyB8IG51bGwgPSBudWxsO1xuXG4gICAgQFZpZXdDaGlsZChUdWlIaW50SG92ZXJEaXJlY3RpdmUpXG4gICAgcmVhZG9ubHkgZHJpdmVyJD86IFR1aUhpbnRIb3ZlckRpcmVjdGl2ZTtcblxuICAgIEBJbnB1dCgpXG4gICAgZGVzY3JpYmVJZCA9ICcnO1xuXG4gICAgQElucHV0KClcbiAgICBjb250ZXh0PzogQztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBAU2VsZigpIEBJbmplY3QoVHVpRGVzdHJveVNlcnZpY2UpIGRlc3Ryb3kkOiBPYnNlcnZhYmxlPHVua25vd24+LFxuICAgICAgICBASW5qZWN0KFRVSV9NT0RFKSBtb2RlJDogT2JzZXJ2YWJsZTxUdWlCcmlnaHRuZXNzIHwgbnVsbD4sXG4gICAgICAgIEBJbmplY3QoVFVJX0hJTlRfT1BUSU9OUykgb3B0aW9uczogVHVpSGludE9wdGlvbnMsXG4gICAgICAgIEBJbmplY3QoVFVJX1RPT0xUSVBfT1BUSU9OUykgcmVhZG9ubHkgdG9vbHRpcE9wdGlvbnM6IFR1aVRvb2x0aXBPcHRpb25zLFxuICAgICAgICBASW5qZWN0KFRVSV9QTEFURk9STSkgcHJpdmF0ZSByZWFkb25seSBwbGF0Zm9ybTogVHVpUGxhdGZvcm0sXG4gICAgICAgIEBPcHRpb25hbCgpXG4gICAgICAgIEBJbmplY3QoVHVpQXBwZWFyYW5jZURpcmVjdGl2ZSlcbiAgICAgICAgcmVhZG9ubHkgaWNvbkFwcGVhcmFuY2U6IFR1aUFwcGVhcmFuY2VEaXJlY3RpdmUgfCBudWxsLFxuICAgICkge1xuICAgICAgICBzdXBlcihvcHRpb25zKTtcblxuICAgICAgICBtb2RlJC5waXBlKHRha2VVbnRpbChkZXN0cm95JCkpLnN1YnNjcmliZShtb2RlID0+IHtcbiAgICAgICAgICAgIHRoaXMubW9kZSA9IG1vZGU7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGdldCBjb21wdXRlZEFwcGVhcmFuY2UoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXBwZWFyYW5jZSB8fCB0aGlzLm1vZGUgfHwgJyc7XG4gICAgfVxuXG4gICAgZ2V0IHRvb2x0aXBJY29uKCk6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IHtpY29uc30gPSB0aGlzLnRvb2x0aXBPcHRpb25zO1xuXG4gICAgICAgIHJldHVybiB0dWlJc1N0cmluZyhpY29ucykgPyBpY29ucyA6IGljb25zW3RoaXMucGxhdGZvcm1dO1xuICAgIH1cblxuICAgIEBIb3N0TGlzdGVuZXIoJ21vdXNlZG93bicsIFsnJGV2ZW50J10pXG4gICAgc3RvcE9uTW9iaWxlKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLnBsYXRmb3JtICE9PSAnd2ViJykge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5kcml2ZXIkPy50b2dnbGUoKTtcbiAgICB9XG59XG4iLCI8YnV0dG9uXG4gICAgI2RyaXZlcj1cInR1aUhpbnRIb3ZlclwiXG4gICAgYXV0b21hdGlvbi1pZD1cInR1aS10b29sdGlwX19pY29uXCJcbiAgICBzaXplPVwieHNcIlxuICAgIHR1aUljb25CdXR0b25cbiAgICBjbGFzcz1cInQtdG9vbHRpcC1idXR0b25cIlxuICAgIFthdHRyLnRhYmluZGV4XT1cImRlc2NyaWJlSWQgPyAtMSA6IDBcIlxuICAgIFtpY29uTGVmdF09XCJ0b29sdGlwSWNvblwiXG4gICAgW3R1aUFwcGVhcmFuY2VdPVwiaWNvbkFwcGVhcmFuY2U/LnR1aUFwcGVhcmFuY2UgfHwgJ2ljb24nXCJcbiAgICBbdHVpQXBwZWFyYW5jZVN0YXRlXT1cIihkcml2ZXIgfCBhc3luYykgPyAnYWN0aXZlJyA6IG51bGxcIlxuICAgIFt0dWlIaW50XT1cImNvbnRlbnRcIlxuICAgIFt0dWlIaW50QXBwZWFyYW5jZV09XCJjb21wdXRlZEFwcGVhcmFuY2VcIlxuICAgIFt0dWlIaW50Q29udGV4dF09XCJjb250ZXh0XCJcbiAgICBbdHVpSGludERlc2NyaWJlXT1cImRlc2NyaWJlSWRcIlxuICAgIFt0dWlIaW50RGlyZWN0aW9uXT1cImRpcmVjdGlvblwiXG4gICAgW3R1aUhpbnRIaWRlRGVsYXldPVwiaGlkZURlbGF5XCJcbiAgICBbdHVpSGludFNob3dEZWxheV09XCJzaG93RGVsYXlcIlxuPjwvYnV0dG9uPlxuIl19
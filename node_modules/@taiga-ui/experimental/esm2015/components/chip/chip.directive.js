import { Directive, Inject, Input } from '@angular/core';
import { TuiDirectiveStylesService } from '@taiga-ui/cdk';
import { tuiAvatarOptionsProvider } from '@taiga-ui/experimental/components/avatar';
import { tuiButtonOptionsProvider } from '@taiga-ui/experimental/components/button';
import { tuiCheckboxOptionsProvider } from '@taiga-ui/experimental/components/checkbox';
import { tuiToggleOptionsProvider } from '@taiga-ui/experimental/components/toggle';
import { TuiChipComponent } from './chip.component';
import { TUI_CHIP_OPTIONS } from './chip.options';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
export class TuiChipDirective {
    constructor(options, directiveStyles) {
        this.options = options;
        this.size = this.options.size;
        this.appearance = this.options.appearance;
        directiveStyles.addComponent(TuiChipComponent);
    }
}
TuiChipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiChipDirective, deps: [{ token: TUI_CHIP_OPTIONS }, { token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiChipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiChipDirective, selector: "tui-chip,[tuiChip]", inputs: { size: "size", appearance: "appearance" }, host: { attributes: { "tuiAppearance": "" }, properties: { "attr.data-appearance": "appearance", "attr.data-size": "size" } }, providers: [
        tuiToggleOptionsProvider({ size: 's' }),
        tuiCheckboxOptionsProvider({ size: 's' }),
        tuiAvatarOptionsProvider({ size: 'xs' }),
        tuiButtonOptionsProvider({
            size: 'xs',
            appearance: 'icon',
        }),
    ], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiChipDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'tui-chip,[tuiChip]',
                    providers: [
                        tuiToggleOptionsProvider({ size: 's' }),
                        tuiCheckboxOptionsProvider({ size: 's' }),
                        tuiAvatarOptionsProvider({ size: 'xs' }),
                        tuiButtonOptionsProvider({
                            size: 'xs',
                            appearance: 'icon',
                        }),
                    ],
                    host: {
                        tuiAppearance: '',
                        '[attr.data-appearance]': 'appearance',
                        '[attr.data-size]': 'size',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_CHIP_OPTIONS]
                }] }, { type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { size: [{
                type: Input
            }], appearance: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpcC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9leHBlcmltZW50YWwvY29tcG9uZW50cy9jaGlwL2NoaXAuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2RCxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEQsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sMENBQTBDLENBQUM7QUFDbEYsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sMENBQTBDLENBQUM7QUFDbEYsT0FBTyxFQUFDLDBCQUEwQixFQUFDLE1BQU0sNENBQTRDLENBQUM7QUFDdEYsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sMENBQTBDLENBQUM7QUFFbEYsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFDbEQsT0FBTyxFQUFDLGdCQUFnQixFQUFpQixNQUFNLGdCQUFnQixDQUFDOzs7QUFtQmhFLE1BQU0sT0FBTyxnQkFBZ0I7SUFPekIsWUFDK0MsT0FBdUIsRUFDL0IsZUFBMEM7UUFEbEMsWUFBTyxHQUFQLE9BQU8sQ0FBZ0I7UUFOdEUsU0FBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBR3pCLGVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQztRQU1qQyxlQUFlLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDbkQsQ0FBQzs7OEdBWlEsZ0JBQWdCLGtCQVFiLGdCQUFnQixhQUNoQix5QkFBeUI7a0dBVDVCLGdCQUFnQixnT0FmZDtRQUNQLHdCQUF3QixDQUFDLEVBQUMsSUFBSSxFQUFFLEdBQUcsRUFBQyxDQUFDO1FBQ3JDLDBCQUEwQixDQUFDLEVBQUMsSUFBSSxFQUFFLEdBQUcsRUFBQyxDQUFDO1FBQ3ZDLHdCQUF3QixDQUFDLEVBQUMsSUFBSSxFQUFFLElBQUksRUFBQyxDQUFDO1FBQ3RDLHdCQUF3QixDQUFDO1lBQ3JCLElBQUksRUFBRSxJQUFJO1lBQ1YsVUFBVSxFQUFFLE1BQU07U0FDckIsQ0FBQztLQUNMOzRGQU9RLGdCQUFnQjtrQkFqQjVCLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsU0FBUyxFQUFFO3dCQUNQLHdCQUF3QixDQUFDLEVBQUMsSUFBSSxFQUFFLEdBQUcsRUFBQyxDQUFDO3dCQUNyQywwQkFBMEIsQ0FBQyxFQUFDLElBQUksRUFBRSxHQUFHLEVBQUMsQ0FBQzt3QkFDdkMsd0JBQXdCLENBQUMsRUFBQyxJQUFJLEVBQUUsSUFBSSxFQUFDLENBQUM7d0JBQ3RDLHdCQUF3QixDQUFDOzRCQUNyQixJQUFJLEVBQUUsSUFBSTs0QkFDVixVQUFVLEVBQUUsTUFBTTt5QkFDckIsQ0FBQztxQkFDTDtvQkFDRCxJQUFJLEVBQUU7d0JBQ0YsYUFBYSxFQUFFLEVBQUU7d0JBQ2pCLHdCQUF3QixFQUFFLFlBQVk7d0JBQ3RDLGtCQUFrQixFQUFFLE1BQU07cUJBQzdCO2lCQUNKOzswQkFTUSxNQUFNOzJCQUFDLGdCQUFnQjs7MEJBQ3ZCLE1BQU07MkJBQUMseUJBQXlCOzRDQVByQyxJQUFJO3NCQURILEtBQUs7Z0JBSU4sVUFBVTtzQkFEVCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEluamVjdCwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlEaXJlY3RpdmVTdHlsZXNTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7dHVpQXZhdGFyT3B0aW9uc1Byb3ZpZGVyfSBmcm9tICdAdGFpZ2EtdWkvZXhwZXJpbWVudGFsL2NvbXBvbmVudHMvYXZhdGFyJztcbmltcG9ydCB7dHVpQnV0dG9uT3B0aW9uc1Byb3ZpZGVyfSBmcm9tICdAdGFpZ2EtdWkvZXhwZXJpbWVudGFsL2NvbXBvbmVudHMvYnV0dG9uJztcbmltcG9ydCB7dHVpQ2hlY2tib3hPcHRpb25zUHJvdmlkZXJ9IGZyb20gJ0B0YWlnYS11aS9leHBlcmltZW50YWwvY29tcG9uZW50cy9jaGVja2JveCc7XG5pbXBvcnQge3R1aVRvZ2dsZU9wdGlvbnNQcm92aWRlcn0gZnJvbSAnQHRhaWdhLXVpL2V4cGVyaW1lbnRhbC9jb21wb25lbnRzL3RvZ2dsZSc7XG5cbmltcG9ydCB7VHVpQ2hpcENvbXBvbmVudH0gZnJvbSAnLi9jaGlwLmNvbXBvbmVudCc7XG5pbXBvcnQge1RVSV9DSElQX09QVElPTlMsIFR1aUNoaXBPcHRpb25zfSBmcm9tICcuL2NoaXAub3B0aW9ucyc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAndHVpLWNoaXAsW3R1aUNoaXBdJyxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgdHVpVG9nZ2xlT3B0aW9uc1Byb3ZpZGVyKHtzaXplOiAncyd9KSxcbiAgICAgICAgdHVpQ2hlY2tib3hPcHRpb25zUHJvdmlkZXIoe3NpemU6ICdzJ30pLFxuICAgICAgICB0dWlBdmF0YXJPcHRpb25zUHJvdmlkZXIoe3NpemU6ICd4cyd9KSxcbiAgICAgICAgdHVpQnV0dG9uT3B0aW9uc1Byb3ZpZGVyKHtcbiAgICAgICAgICAgIHNpemU6ICd4cycsXG4gICAgICAgICAgICBhcHBlYXJhbmNlOiAnaWNvbicsXG4gICAgICAgIH0pLFxuICAgIF0sXG4gICAgaG9zdDoge1xuICAgICAgICB0dWlBcHBlYXJhbmNlOiAnJyxcbiAgICAgICAgJ1thdHRyLmRhdGEtYXBwZWFyYW5jZV0nOiAnYXBwZWFyYW5jZScsXG4gICAgICAgICdbYXR0ci5kYXRhLXNpemVdJzogJ3NpemUnLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUNoaXBEaXJlY3RpdmUge1xuICAgIEBJbnB1dCgpXG4gICAgc2l6ZSA9IHRoaXMub3B0aW9ucy5zaXplO1xuXG4gICAgQElucHV0KClcbiAgICBhcHBlYXJhbmNlID0gdGhpcy5vcHRpb25zLmFwcGVhcmFuY2U7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUVUlfQ0hJUF9PUFRJT05TKSBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IFR1aUNoaXBPcHRpb25zLFxuICAgICAgICBASW5qZWN0KFR1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2UpIGRpcmVjdGl2ZVN0eWxlczogVHVpRGlyZWN0aXZlU3R5bGVzU2VydmljZSxcbiAgICApIHtcbiAgICAgICAgZGlyZWN0aXZlU3R5bGVzLmFkZENvbXBvbmVudChUdWlDaGlwQ29tcG9uZW50KTtcbiAgICB9XG59XG4iXX0=
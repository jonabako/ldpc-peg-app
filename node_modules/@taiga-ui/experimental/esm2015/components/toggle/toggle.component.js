import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input, Optional, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { tuiIsString } from '@taiga-ui/cdk';
import { TUI_ICON_RESOLVER } from '@taiga-ui/experimental/tokens';
import { TUI_TOGGLE_OPTIONS } from './toggle.options';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class TuiToggleComponent {
    constructor(resolver, options, control) {
        this.resolver = resolver;
        this.options = options;
        this.control = control;
        this.size = this.options.size;
        this.showIcons = this.options.showIcons;
    }
    get icon() {
        const { options, resolver, size } = this;
        const icon = tuiIsString(options.icon) ? options.icon : options.icon(size);
        return `url(${resolver(icon)})`;
    }
}
TuiToggleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiToggleComponent, deps: [{ token: TUI_ICON_RESOLVER }, { token: TUI_TOGGLE_OPTIONS }, { token: NgControl, optional: true }], target: i0.ɵɵFactoryTarget.Component });
TuiToggleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiToggleComponent, selector: "input[type=\"checkbox\"][tuiToggle]", inputs: { size: "size", showIcons: "showIcons" }, host: { attributes: { "tuiAppearance": "" }, properties: { "disabled": "!control || control.disabled", "attr.data-size": "size", "class._invalid": "control?.invalid && control?.touched", "class._readonly": "!control", "class._icons": "showIcons", "style.--t-mask": "this.icon" } }, ngImport: i0, template: '', isInline: true, styles: [":host{transition-property:background,box-shadow;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;width:3rem;height:1.5rem;border-radius:2rem;color:var(--tui-primary-text);overflow:hidden;cursor:pointer;margin:0;background:var(--tui-secondary)}:host[data-size=s]{height:1rem;width:2rem}:host[data-size=s]:before{width:1rem;transform:translate(-1rem);-webkit-mask-size:.75rem;mask-size:.75rem}:host[data-size=s]:after{width:1rem;box-shadow:-2rem 0 0 .25rem var(--tui-text-01-night)}:host[data-size=s]:checked:after{transform:scale(.5) translate(2rem)}:host:hover{background:var(--tui-secondary-hover)}:host:active{background:var(--tui-secondary-active)}:host:checked{background:var(--tui-primary)}:host:checked:hover{background:var(--tui-primary-hover)}:host:checked:active{background:var(--tui-primary-active)}:host:checked:before{transform:none}:host:checked:after{transform:scale(.5) translate(3rem)}:host:disabled._readonly{opacity:1}:host:before,:host:after{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;content:\"\";position:absolute;height:100%;width:1.5rem}:host:before{display:none;background:currentColor;-webkit-mask:var(--t-mask) no-repeat center;mask:var(--t-mask) no-repeat center;-webkit-mask-size:1rem;mask-size:1rem;transform:translate(-1.5rem)}:host:after{right:0;border-radius:100%;transform:scale(.5);box-shadow:-3rem 0 0 .25rem var(--tui-text-01-night)}:host._icons:before{display:block}:host._icons:after{box-shadow:inset 0 0 0 .25rem var(--tui-clear-active),-3rem 0 0 .25rem var(--tui-text-01-night)}:host._icons[data-size=s]:after{box-shadow:inset 0 0 0 .125rem var(--tui-clear-active),-2rem 0 0 .25rem var(--tui-text-01-night)}:host._invalid{background:var(--tui-error-bg)}:host._invalid:hover,:host._invalid:active{background:var(--tui-error-bg-hover)}:host._invalid:checked{background:var(--tui-error-fill)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiToggleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'input[type="checkbox"][tuiToggle]',
                    template: '',
                    styleUrls: ['./toggle.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        tuiAppearance: '',
                        '[disabled]': '!control || control.disabled',
                        '[attr.data-size]': 'size',
                        '[class._invalid]': 'control?.invalid && control?.touched',
                        '[class._readonly]': '!control',
                        '[class._icons]': 'showIcons',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ICON_RESOLVER]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_TOGGLE_OPTIONS]
                }] }, { type: i1.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }]; }, propDecorators: { size: [{
                type: Input
            }], showIcons: [{
                type: Input
            }], icon: [{
                type: HostBinding,
                args: ['style.--t-mask']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2V4cGVyaW1lbnRhbC9jb21wb25lbnRzL3RvZ2dsZS90b2dnbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFdBQVcsRUFDWCxNQUFNLEVBQ04sS0FBSyxFQUNMLFFBQVEsR0FDWCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDekMsT0FBTyxFQUFDLFdBQVcsRUFBbUIsTUFBTSxlQUFlLENBQUM7QUFDNUQsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sK0JBQStCLENBQUM7QUFFaEUsT0FBTyxFQUFDLGtCQUFrQixFQUFtQixNQUFNLGtCQUFrQixDQUFDOzs7QUFnQnRFLE1BQU0sT0FBTyxrQkFBa0I7SUFPM0IsWUFDZ0QsUUFBa0MsRUFDakMsT0FBeUIsRUFDOUIsT0FBeUI7UUFGckIsYUFBUSxHQUFSLFFBQVEsQ0FBMEI7UUFDakMsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFDOUIsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFSckUsU0FBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBR3pCLGNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQztJQU1oQyxDQUFDO0lBRUosSUFDSSxJQUFJO1FBQ0osTUFBTSxFQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDLEdBQUcsSUFBSSxDQUFDO1FBQ3ZDLE1BQU0sSUFBSSxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFM0UsT0FBTyxPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO0lBQ3BDLENBQUM7O2dIQW5CUSxrQkFBa0Isa0JBUWYsaUJBQWlCLGFBQ2pCLGtCQUFrQixhQUNOLFNBQVM7b0dBVnhCLGtCQUFrQix1WkFaakIsRUFBRTs0RkFZSCxrQkFBa0I7a0JBZDlCLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLG1DQUFtQztvQkFDN0MsUUFBUSxFQUFFLEVBQUU7b0JBQ1osU0FBUyxFQUFFLENBQUMscUJBQXFCLENBQUM7b0JBQ2xDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxJQUFJLEVBQUU7d0JBQ0YsYUFBYSxFQUFFLEVBQUU7d0JBQ2pCLFlBQVksRUFBRSw4QkFBOEI7d0JBQzVDLGtCQUFrQixFQUFFLE1BQU07d0JBQzFCLGtCQUFrQixFQUFFLHNDQUFzQzt3QkFDMUQsbUJBQW1CLEVBQUUsVUFBVTt3QkFDL0IsZ0JBQWdCLEVBQUUsV0FBVztxQkFDaEM7aUJBQ0o7OzBCQVNRLE1BQU07MkJBQUMsaUJBQWlCOzswQkFDeEIsTUFBTTsyQkFBQyxrQkFBa0I7OzBCQUN6QixRQUFROzswQkFBSSxNQUFNOzJCQUFDLFNBQVM7NENBUmpDLElBQUk7c0JBREgsS0FBSztnQkFJTixTQUFTO3NCQURSLEtBQUs7Z0JBVUYsSUFBSTtzQkFEUCxXQUFXO3VCQUFDLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEhvc3RCaW5kaW5nLFxuICAgIEluamVjdCxcbiAgICBJbnB1dCxcbiAgICBPcHRpb25hbCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge05nQ29udHJvbH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHt0dWlJc1N0cmluZywgVHVpU3RyaW5nSGFuZGxlcn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1RVSV9JQ09OX1JFU09MVkVSfSBmcm9tICdAdGFpZ2EtdWkvZXhwZXJpbWVudGFsL3Rva2Vucyc7XG5cbmltcG9ydCB7VFVJX1RPR0dMRV9PUFRJT05TLCBUdWlUb2dnbGVPcHRpb25zfSBmcm9tICcuL3RvZ2dsZS5vcHRpb25zJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl1bdHVpVG9nZ2xlXScsXG4gICAgdGVtcGxhdGU6ICcnLFxuICAgIHN0eWxlVXJsczogWycuL3RvZ2dsZS5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgaG9zdDoge1xuICAgICAgICB0dWlBcHBlYXJhbmNlOiAnJywgLy8gQXBwbHkgYmFzZSBhcHBlYXJhbmNlXG4gICAgICAgICdbZGlzYWJsZWRdJzogJyFjb250cm9sIHx8IGNvbnRyb2wuZGlzYWJsZWQnLFxuICAgICAgICAnW2F0dHIuZGF0YS1zaXplXSc6ICdzaXplJyxcbiAgICAgICAgJ1tjbGFzcy5faW52YWxpZF0nOiAnY29udHJvbD8uaW52YWxpZCAmJiBjb250cm9sPy50b3VjaGVkJyxcbiAgICAgICAgJ1tjbGFzcy5fcmVhZG9ubHldJzogJyFjb250cm9sJyxcbiAgICAgICAgJ1tjbGFzcy5faWNvbnNdJzogJ3Nob3dJY29ucycsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpVG9nZ2xlQ29tcG9uZW50IHtcbiAgICBASW5wdXQoKVxuICAgIHNpemUgPSB0aGlzLm9wdGlvbnMuc2l6ZTtcblxuICAgIEBJbnB1dCgpXG4gICAgc2hvd0ljb25zID0gdGhpcy5vcHRpb25zLnNob3dJY29ucztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFRVSV9JQ09OX1JFU09MVkVSKSBwcml2YXRlIHJlYWRvbmx5IHJlc29sdmVyOiBUdWlTdHJpbmdIYW5kbGVyPHN0cmluZz4sXG4gICAgICAgIEBJbmplY3QoVFVJX1RPR0dMRV9PUFRJT05TKSBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IFR1aVRvZ2dsZU9wdGlvbnMsXG4gICAgICAgIEBPcHRpb25hbCgpIEBJbmplY3QoTmdDb250cm9sKSByZWFkb25seSBjb250cm9sOiBOZ0NvbnRyb2wgfCBudWxsLFxuICAgICkge31cblxuICAgIEBIb3N0QmluZGluZygnc3R5bGUuLS10LW1hc2snKVxuICAgIGdldCBpY29uKCk6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IHtvcHRpb25zLCByZXNvbHZlciwgc2l6ZX0gPSB0aGlzO1xuICAgICAgICBjb25zdCBpY29uID0gdHVpSXNTdHJpbmcob3B0aW9ucy5pY29uKSA/IG9wdGlvbnMuaWNvbiA6IG9wdGlvbnMuaWNvbihzaXplKTtcblxuICAgICAgICByZXR1cm4gYHVybCgke3Jlc29sdmVyKGljb24pfSlgO1xuICAgIH1cbn1cbiJdfQ==
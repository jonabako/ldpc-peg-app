import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input, ViewChildren, ViewEncapsulation, } from '@angular/core';
import { MutationObserverService } from '@ng-web-apis/mutation-observer';
import { EMPTY_QUERY, TuiResizeService } from '@taiga-ui/cdk';
import { merge } from 'rxjs';
import { map } from 'rxjs/operators';
import { TUI_APP_BAR_PROVIDERS } from './app-bar.providers';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/experimental/directives/fade";
import * as i2 from "@angular/common";
import * as i3 from "rxjs";
export class TuiAppBarComponent {
    constructor(resize$, mutation$) {
        this.resize$ = resize$;
        this.mutation$ = mutation$;
        this.side = EMPTY_QUERY;
        this.size = 'm';
        this.width$ = merge(this.resize$, this.mutation$).pipe(map(() => {
            var _a, _b;
            return 2 *
                Math.max((_a = this.side.first) === null || _a === void 0 ? void 0 : _a.nativeElement.clientWidth, (_b = this.side.last) === null || _b === void 0 ? void 0 : _b.nativeElement.clientWidth);
        }));
    }
}
TuiAppBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAppBarComponent, deps: [{ token: TuiResizeService }, { token: MutationObserverService }], target: i0.ɵɵFactoryTarget.Component });
TuiAppBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiAppBarComponent, selector: "tui-app-bar", inputs: { size: "size" }, host: { properties: { "attr.data-size": "this.size" } }, providers: TUI_APP_BAR_PROVIDERS, viewQueries: [{ propertyName: "side", predicate: ["side"], descendants: true }], ngImport: i0, template: "<div #side>\n    <ng-content select=\"[tuiSlot='left']\"></ng-content>\n</div>\n<div\n    tuiFade\n    class=\"t-content\"\n    [style.--sides.px]=\"width$ | async\"\n>\n    <ng-content></ng-content>\n</div>\n<div #side>\n    <ng-content select=\"[tuiSlot='right']\"></ng-content>\n</div>\n", styles: ["tui-app-bar{position:relative;display:flex;height:3rem;align-items:center;justify-content:space-between;border:solid transparent;border-width:0 .375rem;box-sizing:border-box;font:var(--tui-font-text-m);font-weight:bold;text-align:center;color:var(--tui-text-01);background:var(--tui-base-01);-webkit-backdrop-filter:blur(2rem);backdrop-filter:blur(2rem)}tui-app-bar>.t-content{left:50%;transform:translate(-50%);position:absolute;display:flex;height:100%;max-width:calc(100% - var(--sides, 0px));flex-direction:column;justify-content:center;flex:1;padding:0 .375rem;box-sizing:border-box;text-align:inherit;white-space:nowrap}tui-app-bar [tuiButton][data-size=m]{font-weight:normal}tui-app-bar [tuiTitle]{text-align:inherit;font:inherit}tui-app-bar [tuiSubtitle]{color:var(--tui-text-02)}tui-app-bar[data-size=m] [tuiTitle]{line-height:1.2em;grid-gap:0;gap:0}tui-app-bar[data-size=l]{border:0;height:4rem}tui-app-bar[data-size=l]>:first-child,tui-app-bar[data-size=l]>:last-child{margin:0 -.75rem}\n"], directives: [{ type: i1.TuiFadeDirective, selector: "[tuiFade]", inputs: ["tuiFadeHeight", "tuiFadeSize", "tuiFadeOffset", "tuiFade"] }], pipes: { "async": i2.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAppBarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-app-bar',
                    templateUrl: './app-bar.template.html',
                    styleUrls: ['./app-bar.style.less'],
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: TUI_APP_BAR_PROVIDERS,
                }]
        }], ctorParameters: function () { return [{ type: i3.Observable, decorators: [{
                    type: Inject,
                    args: [TuiResizeService]
                }] }, { type: i3.Observable, decorators: [{
                    type: Inject,
                    args: [MutationObserverService]
                }] }]; }, propDecorators: { side: [{
                type: ViewChildren,
                args: ['side']
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLWJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9leHBlcmltZW50YWwvY29tcG9uZW50cy9hcHAtYmFyL2FwcC1iYXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZXhwZXJpbWVudGFsL2NvbXBvbmVudHMvYXBwLWJhci9hcHAtYmFyLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBRVQsV0FBVyxFQUNYLE1BQU0sRUFDTixLQUFLLEVBRUwsWUFBWSxFQUNaLGlCQUFpQixHQUNwQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN2RSxPQUFPLEVBQUMsV0FBVyxFQUFFLGdCQUFnQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTVELE9BQU8sRUFBQyxLQUFLLEVBQWEsTUFBTSxNQUFNLENBQUM7QUFDdkMsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRW5DLE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLHFCQUFxQixDQUFDOzs7OztBQVUxRCxNQUFNLE9BQU8sa0JBQWtCO0lBbUIzQixZQUMrQyxPQUE0QixFQUNyQixTQUE4QjtRQURyQyxZQUFPLEdBQVAsT0FBTyxDQUFxQjtRQUNyQixjQUFTLEdBQVQsU0FBUyxDQUFxQjtRQW5CbkUsU0FBSSxHQUF1QyxXQUFXLENBQUM7UUFJeEUsU0FBSSxHQUFhLEdBQUcsQ0FBQztRQUVaLFdBQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUN0RCxHQUFHLENBQ0MsR0FBRyxFQUFFOztZQUNELE9BQUEsQ0FBQztnQkFDRCxJQUFJLENBQUMsR0FBRyxDQUNKLE1BQUEsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLDBDQUFFLGFBQWEsQ0FBQyxXQUFXLEVBQzFDLE1BQUEsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLDBDQUFFLGFBQWEsQ0FBQyxXQUFXLENBQzVDLENBQUE7U0FBQSxDQUNSLENBQ0osQ0FBQztJQUtDLENBQUM7O2dIQXRCSyxrQkFBa0Isa0JBb0JmLGdCQUFnQixhQUNoQix1QkFBdUI7b0dBckIxQixrQkFBa0IseUhBRmhCLHFCQUFxQiwyR0N6QnBDLG9TQWFBOzRGRGNhLGtCQUFrQjtrQkFSOUIsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsV0FBVyxFQUFFLHlCQUF5QjtvQkFDdEMsU0FBUyxFQUFFLENBQUMsc0JBQXNCLENBQUM7b0JBQ25DLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsU0FBUyxFQUFFLHFCQUFxQjtpQkFDbkM7OzBCQXFCUSxNQUFNOzJCQUFDLGdCQUFnQjs7MEJBQ3ZCLE1BQU07MkJBQUMsdUJBQXVCOzRDQW5CbEIsSUFBSTtzQkFEcEIsWUFBWTt1QkFBQyxNQUFNO2dCQUtwQixJQUFJO3NCQUZILEtBQUs7O3NCQUNMLFdBQVc7dUJBQUMsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG4gICAgUXVlcnlMaXN0LFxuICAgIFZpZXdDaGlsZHJlbixcbiAgICBWaWV3RW5jYXBzdWxhdGlvbixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge011dGF0aW9uT2JzZXJ2ZXJTZXJ2aWNlfSBmcm9tICdAbmctd2ViLWFwaXMvbXV0YXRpb24tb2JzZXJ2ZXInO1xuaW1wb3J0IHtFTVBUWV9RVUVSWSwgVHVpUmVzaXplU2VydmljZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aVNpemVMfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge21lcmdlLCBPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7bWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7VFVJX0FQUF9CQVJfUFJPVklERVJTfSBmcm9tICcuL2FwcC1iYXIucHJvdmlkZXJzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0dWktYXBwLWJhcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2FwcC1iYXIudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vYXBwLWJhci5zdHlsZS5sZXNzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFRVSV9BUFBfQkFSX1BST1ZJREVSUyxcbn0pXG5leHBvcnQgY2xhc3MgVHVpQXBwQmFyQ29tcG9uZW50IHtcbiAgICBAVmlld0NoaWxkcmVuKCdzaWRlJylcbiAgICBwcml2YXRlIHJlYWRvbmx5IHNpZGU6IFF1ZXJ5TGlzdDxFbGVtZW50UmVmPEhUTUxFbGVtZW50Pj4gPSBFTVBUWV9RVUVSWTtcblxuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtc2l6ZScpXG4gICAgc2l6ZTogVHVpU2l6ZUwgPSAnbSc7XG5cbiAgICByZWFkb25seSB3aWR0aCQgPSBtZXJnZSh0aGlzLnJlc2l6ZSQsIHRoaXMubXV0YXRpb24kKS5waXBlKFxuICAgICAgICBtYXAoXG4gICAgICAgICAgICAoKSA9PlxuICAgICAgICAgICAgICAgIDIgKlxuICAgICAgICAgICAgICAgIE1hdGgubWF4KFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNpZGUuZmlyc3Q/Lm5hdGl2ZUVsZW1lbnQuY2xpZW50V2lkdGgsXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2lkZS5sYXN0Py5uYXRpdmVFbGVtZW50LmNsaWVudFdpZHRoLFxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICksXG4gICAgKTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFR1aVJlc2l6ZVNlcnZpY2UpIHByaXZhdGUgcmVhZG9ubHkgcmVzaXplJDogT2JzZXJ2YWJsZTx1bmtub3duPixcbiAgICAgICAgQEluamVjdChNdXRhdGlvbk9ic2VydmVyU2VydmljZSkgcHJpdmF0ZSByZWFkb25seSBtdXRhdGlvbiQ6IE9ic2VydmFibGU8dW5rbm93bj4sXG4gICAgKSB7fVxufVxuIiwiPGRpdiAjc2lkZT5cbiAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbdHVpU2xvdD0nbGVmdCddXCI+PC9uZy1jb250ZW50PlxuPC9kaXY+XG48ZGl2XG4gICAgdHVpRmFkZVxuICAgIGNsYXNzPVwidC1jb250ZW50XCJcbiAgICBbc3R5bGUuLS1zaWRlcy5weF09XCJ3aWR0aCQgfCBhc3luY1wiXG4+XG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuPC9kaXY+XG48ZGl2ICNzaWRlPlxuICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIlt0dWlTbG90PSdyaWdodCddXCI+PC9uZy1jb250ZW50PlxuPC9kaXY+XG4iXX0=
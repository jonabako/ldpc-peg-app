import { ElementRef, Inject, Pipe } from '@angular/core';
import { TUI_ICON_ERROR } from '@taiga-ui/core';
import { fromEvent, merge } from 'rxjs';
import { map, startWith } from 'rxjs/operators';
import * as i0 from "@angular/core";
export class TuiFallbackSrcPipe {
    constructor(el) {
        this.el = el;
    }
    transform(src, fallback) {
        return merge(fromEvent(this.el.nativeElement, TUI_ICON_ERROR), fromEvent(this.el.nativeElement, 'error', { capture: true })).pipe(map(() => fallback), startWith(src));
    }
}
TuiFallbackSrcPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFallbackSrcPipe, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Pipe });
TuiFallbackSrcPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFallbackSrcPipe, name: "tuiFallbackSrc" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFallbackSrcPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'tuiFallbackSrc',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFsbGJhY2stc3JjLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9leHBlcmltZW50YWwvcGlwZXMvZmFsbGJhY2stc3JjL2ZhbGxiYWNrLXNyYy5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBZ0IsTUFBTSxlQUFlLENBQUM7QUFDdEUsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBQ2xELE9BQU8sRUFBQyxHQUFHLEVBQUUsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7O0FBSzlDLE1BQU0sT0FBTyxrQkFBa0I7SUFDM0IsWUFBaUQsRUFBMkI7UUFBM0IsT0FBRSxHQUFGLEVBQUUsQ0FBeUI7SUFBRyxDQUFDO0lBRWhGLFNBQVMsQ0FBQyxHQUFXLEVBQUUsUUFBZ0I7UUFDbkMsT0FBTyxLQUFLLENBQ1IsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLGNBQWMsQ0FBQyxFQUNoRCxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsT0FBTyxFQUFFLEVBQUMsT0FBTyxFQUFFLElBQUksRUFBQyxDQUFDLENBQzdELENBQUMsSUFBSSxDQUNGLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFDbkIsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUNqQixDQUFDO0lBQ04sQ0FBQzs7Z0hBWFEsa0JBQWtCLGtCQUNQLFVBQVU7OEdBRHJCLGtCQUFrQjs0RkFBbEIsa0JBQWtCO2tCQUg5QixJQUFJO21CQUFDO29CQUNGLElBQUksRUFBRSxnQkFBZ0I7aUJBQ3pCOzswQkFFZ0IsTUFBTTsyQkFBQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtFbGVtZW50UmVmLCBJbmplY3QsIFBpcGUsIFBpcGVUcmFuc2Zvcm19IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUVUlfSUNPTl9FUlJPUn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUnO1xuaW1wb3J0IHtmcm9tRXZlbnQsIG1lcmdlLCBPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7bWFwLCBzdGFydFdpdGh9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQFBpcGUoe1xuICAgIG5hbWU6ICd0dWlGYWxsYmFja1NyYycsXG59KVxuZXhwb3J0IGNsYXNzIFR1aUZhbGxiYWNrU3JjUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoRWxlbWVudFJlZikgcHJpdmF0ZSByZWFkb25seSBlbDogRWxlbWVudFJlZjxIVE1MRWxlbWVudD4pIHt9XG5cbiAgICB0cmFuc2Zvcm0oc3JjOiBzdHJpbmcsIGZhbGxiYWNrOiBzdHJpbmcpOiBPYnNlcnZhYmxlPHN0cmluZz4ge1xuICAgICAgICByZXR1cm4gbWVyZ2UoXG4gICAgICAgICAgICBmcm9tRXZlbnQodGhpcy5lbC5uYXRpdmVFbGVtZW50LCBUVUlfSUNPTl9FUlJPUiksXG4gICAgICAgICAgICBmcm9tRXZlbnQodGhpcy5lbC5uYXRpdmVFbGVtZW50LCAnZXJyb3InLCB7Y2FwdHVyZTogdHJ1ZX0pLFxuICAgICAgICApLnBpcGUoXG4gICAgICAgICAgICBtYXAoKCkgPT4gZmFsbGJhY2spLFxuICAgICAgICAgICAgc3RhcnRXaXRoKHNyYyksXG4gICAgICAgICk7XG4gICAgfVxufVxuIl19
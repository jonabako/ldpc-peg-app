import { Directive, Inject, Input } from '@angular/core';
import { TuiDirectiveStylesService } from '@taiga-ui/cdk';
import { TuiSurfaceComponent } from './surface.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
export class TuiSurfaceDirective {
    constructor(directiveStyles) {
        this.tuiSurface = '';
        directiveStyles.addComponent(TuiSurfaceComponent);
    }
}
TuiSurfaceDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSurfaceDirective, deps: [{ token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiSurfaceDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiSurfaceDirective, selector: "[tuiSurface]", inputs: { tuiSurface: "tuiSurface" }, host: { attributes: { "tuiSurface": "" }, properties: { "attr.data-surface": "tuiSurface" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSurfaceDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiSurface]',
                    host: {
                        tuiSurface: '',
                        '[attr.data-surface]': 'tuiSurface',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { tuiSurface: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VyZmFjZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9leHBlcmltZW50YWwvZGlyZWN0aXZlcy9zdXJmYWNlL3N1cmZhY2UuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2RCxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFeEQsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0scUJBQXFCLENBQUM7OztBQVN4RCxNQUFNLE9BQU8sbUJBQW1CO0lBSTVCLFlBQ3VDLGVBQTBDO1FBSGpGLGVBQVUsR0FBRyxFQUFFLENBQUM7UUFLWixlQUFlLENBQUMsWUFBWSxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDdEQsQ0FBQzs7aUhBUlEsbUJBQW1CLGtCQUtoQix5QkFBeUI7cUdBTDVCLG1CQUFtQjs0RkFBbkIsbUJBQW1CO2tCQVAvQixTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxjQUFjO29CQUN4QixJQUFJLEVBQUU7d0JBQ0YsVUFBVSxFQUFFLEVBQUU7d0JBQ2QscUJBQXFCLEVBQUUsWUFBWTtxQkFDdEM7aUJBQ0o7OzBCQU1RLE1BQU07MkJBQUMseUJBQXlCOzRDQUhyQyxVQUFVO3NCQURULEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSW5qZWN0LCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2V9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuXG5pbXBvcnQge1R1aVN1cmZhY2VDb21wb25lbnR9IGZyb20gJy4vc3VyZmFjZS5jb21wb25lbnQnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0dWlTdXJmYWNlXScsXG4gICAgaG9zdDoge1xuICAgICAgICB0dWlTdXJmYWNlOiAnJyxcbiAgICAgICAgJ1thdHRyLmRhdGEtc3VyZmFjZV0nOiAndHVpU3VyZmFjZScsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpU3VyZmFjZURpcmVjdGl2ZSB7XG4gICAgQElucHV0KClcbiAgICB0dWlTdXJmYWNlID0gJyc7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUdWlEaXJlY3RpdmVTdHlsZXNTZXJ2aWNlKSBkaXJlY3RpdmVTdHlsZXM6IFR1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2UsXG4gICAgKSB7XG4gICAgICAgIGRpcmVjdGl2ZVN0eWxlcy5hZGRDb21wb25lbnQoVHVpU3VyZmFjZUNvbXBvbmVudCk7XG4gICAgfVxufVxuIl19
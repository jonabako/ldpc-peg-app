import { __decorate } from "tslib";
import { Directive, ElementRef, Inject, Input } from '@angular/core';
import { CHAR_NO_BREAK_SPACE, TuiDirectiveStylesService, tuiPure } from '@taiga-ui/cdk';
import { TUI_ANIMATIONS_DURATION } from '@taiga-ui/core';
import { TuiSkeletonComponent } from './skeleton.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
const FADE = [{ opacity: 0.06 }, { opacity: 1 }];
export class TuiSkeletonDirective {
    constructor(el, duration, directiveStyles) {
        this.el = el;
        this.duration = duration;
        this.tuiSkeleton = false;
        directiveStyles.addComponent(TuiSkeletonComponent);
    }
    getPlaceholder(value) {
        switch (typeof value) {
            case 'number':
                return Array.from({ length: value })
                    .map(() => CHAR_NO_BREAK_SPACE.repeat(getLength()))
                    .join(' ');
            case 'string':
                return value;
            default:
                return null;
        }
    }
    ngOnChanges({ tuiSkeleton }) {
        var _a;
        (_a = this.animation) === null || _a === void 0 ? void 0 : _a.cancel();
        if (!tuiSkeleton.currentValue && !tuiSkeleton.firstChange) {
            this.animation = this.el.nativeElement.animate(FADE, this.duration * 2);
        }
    }
}
TuiSkeletonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSkeletonDirective, deps: [{ token: ElementRef }, { token: TUI_ANIMATIONS_DURATION }, { token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiSkeletonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiSkeletonDirective, selector: "[tuiSkeleton]", inputs: { tuiSkeleton: "tuiSkeleton" }, host: { attributes: { "tuiSkeleton": "" }, properties: { "class._skeleton": "tuiSkeleton", "attr.data-tui-skeleton": "getPlaceholder(tuiSkeleton)" } }, usesOnChanges: true, ngImport: i0 });
__decorate([
    tuiPure
], TuiSkeletonDirective.prototype, "getPlaceholder", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSkeletonDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiSkeleton]',
                    host: {
                        tuiSkeleton: '',
                        '[class._skeleton]': 'tuiSkeleton',
                        '[attr.data-tui-skeleton]': 'getPlaceholder(tuiSkeleton)',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ANIMATIONS_DURATION]
                }] }, { type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { tuiSkeleton: [{
                type: Input
            }], getPlaceholder: [] } });
function getLength() {
    return Math.floor(Math.random() * (15 - 5 + 1)) + 5;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tlbGV0b24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZXhwZXJpbWVudGFsL2RpcmVjdGl2ZXMvc2tlbGV0b24vc2tlbGV0b24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBQyxtQkFBbUIsRUFBRSx5QkFBeUIsRUFBRSxPQUFPLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDdEYsT0FBTyxFQUFDLHVCQUF1QixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFdkQsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7OztBQUUxRCxNQUFNLElBQUksR0FBRyxDQUFDLEVBQUMsT0FBTyxFQUFFLElBQUksRUFBQyxFQUFFLEVBQUMsT0FBTyxFQUFFLENBQUMsRUFBQyxDQUFDLENBQUM7QUFVN0MsTUFBTSxPQUFPLG9CQUFvQjtJQU03QixZQUN5QyxFQUEyQixFQUNkLFFBQWdCLEVBQy9CLGVBQTBDO1FBRnhDLE9BQUUsR0FBRixFQUFFLENBQXlCO1FBQ2QsYUFBUSxHQUFSLFFBQVEsQ0FBUTtRQUp0RSxnQkFBVyxHQUE4QixLQUFLLENBQUM7UUFPM0MsZUFBZSxDQUFDLFlBQVksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFHRCxjQUFjLENBQUMsS0FBZ0M7UUFDM0MsUUFBUSxPQUFPLEtBQUssRUFBRTtZQUNsQixLQUFLLFFBQVE7Z0JBQ1QsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBQyxDQUFDO3FCQUM3QixHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsbUJBQW1CLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUM7cUJBQ2xELElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNuQixLQUFLLFFBQVE7Z0JBQ1QsT0FBTyxLQUFLLENBQUM7WUFDakI7Z0JBQ0ksT0FBTyxJQUFJLENBQUM7U0FDbkI7SUFDTCxDQUFDO0lBRUQsV0FBVyxDQUFDLEVBQUMsV0FBVyxFQUFnQjs7UUFDcEMsTUFBQSxJQUFJLENBQUMsU0FBUywwQ0FBRSxNQUFNLEVBQUUsQ0FBQztRQUV6QixJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUU7WUFDdkQsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDM0U7SUFDTCxDQUFDOztrSEFsQ1Esb0JBQW9CLGtCQU9qQixVQUFVLGFBQ1YsdUJBQXVCLGFBQ3ZCLHlCQUF5QjtzR0FUNUIsb0JBQW9CO0FBZTdCO0lBREMsT0FBTzswREFZUDs0RkExQlEsb0JBQW9CO2tCQVJoQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxlQUFlO29CQUN6QixJQUFJLEVBQUU7d0JBQ0YsV0FBVyxFQUFFLEVBQUU7d0JBQ2YsbUJBQW1CLEVBQUUsYUFBYTt3QkFDbEMsMEJBQTBCLEVBQUUsNkJBQTZCO3FCQUM1RDtpQkFDSjs7MEJBUVEsTUFBTTsyQkFBQyxVQUFVOzswQkFDakIsTUFBTTsyQkFBQyx1QkFBdUI7OzBCQUM5QixNQUFNOzJCQUFDLHlCQUF5Qjs0Q0FMckMsV0FBVztzQkFEVixLQUFLO2dCQVlOLGNBQWM7QUFzQmxCLFNBQVMsU0FBUztJQUNkLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3hELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7T25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbmplY3QsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q0hBUl9OT19CUkVBS19TUEFDRSwgVHVpRGlyZWN0aXZlU3R5bGVzU2VydmljZSwgdHVpUHVyZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1RVSV9BTklNQVRJT05TX0RVUkFUSU9OfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5cbmltcG9ydCB7VHVpU2tlbGV0b25Db21wb25lbnR9IGZyb20gJy4vc2tlbGV0b24uY29tcG9uZW50JztcblxuY29uc3QgRkFERSA9IFt7b3BhY2l0eTogMC4wNn0sIHtvcGFjaXR5OiAxfV07XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aVNrZWxldG9uXScsXG4gICAgaG9zdDoge1xuICAgICAgICB0dWlTa2VsZXRvbjogJycsXG4gICAgICAgICdbY2xhc3MuX3NrZWxldG9uXSc6ICd0dWlTa2VsZXRvbicsXG4gICAgICAgICdbYXR0ci5kYXRhLXR1aS1za2VsZXRvbl0nOiAnZ2V0UGxhY2Vob2xkZXIodHVpU2tlbGV0b24pJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlTa2VsZXRvbkRpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBhbmltYXRpb24/OiBBbmltYXRpb247XG5cbiAgICBASW5wdXQoKVxuICAgIHR1aVNrZWxldG9uOiBib29sZWFuIHwgbnVtYmVyIHwgc3RyaW5nID0gZmFsc2U7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSBwcml2YXRlIHJlYWRvbmx5IGVsOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICAgICAgQEluamVjdChUVUlfQU5JTUFUSU9OU19EVVJBVElPTikgcHJpdmF0ZSByZWFkb25seSBkdXJhdGlvbjogbnVtYmVyLFxuICAgICAgICBASW5qZWN0KFR1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2UpIGRpcmVjdGl2ZVN0eWxlczogVHVpRGlyZWN0aXZlU3R5bGVzU2VydmljZSxcbiAgICApIHtcbiAgICAgICAgZGlyZWN0aXZlU3R5bGVzLmFkZENvbXBvbmVudChUdWlTa2VsZXRvbkNvbXBvbmVudCk7XG4gICAgfVxuXG4gICAgQHR1aVB1cmVcbiAgICBnZXRQbGFjZWhvbGRlcih2YWx1ZTogYm9vbGVhbiB8IG51bWJlciB8IHN0cmluZyk6IHN0cmluZyB8IG51bGwge1xuICAgICAgICBzd2l0Y2ggKHR5cGVvZiB2YWx1ZSkge1xuICAgICAgICAgICAgY2FzZSAnbnVtYmVyJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbSh7bGVuZ3RoOiB2YWx1ZX0pXG4gICAgICAgICAgICAgICAgICAgIC5tYXAoKCkgPT4gQ0hBUl9OT19CUkVBS19TUEFDRS5yZXBlYXQoZ2V0TGVuZ3RoKCkpKVxuICAgICAgICAgICAgICAgICAgICAuam9pbignICcpO1xuICAgICAgICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbmdPbkNoYW5nZXMoe3R1aVNrZWxldG9ufTogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgICAgICB0aGlzLmFuaW1hdGlvbj8uY2FuY2VsKCk7XG5cbiAgICAgICAgaWYgKCF0dWlTa2VsZXRvbi5jdXJyZW50VmFsdWUgJiYgIXR1aVNrZWxldG9uLmZpcnN0Q2hhbmdlKSB7XG4gICAgICAgICAgICB0aGlzLmFuaW1hdGlvbiA9IHRoaXMuZWwubmF0aXZlRWxlbWVudC5hbmltYXRlKEZBREUsIHRoaXMuZHVyYXRpb24gKiAyKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gZ2V0TGVuZ3RoKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICgxNSAtIDUgKyAxKSkgKyA1O1xufVxuIl19
import { Directive, Inject, Input } from '@angular/core';
import { TuiDirectiveStylesService } from '@taiga-ui/cdk';
import { TUI_ICON_RESOLVER } from '@taiga-ui/experimental/tokens';
import { TuiIconsComponent } from './icons.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
// TODO: Turn into a hostDirective in 4.0
export class TuiIconsDirective {
    constructor(resolver, directiveStyles) {
        this.resolver = resolver;
        this.iconLeft = '';
        this.iconRight = '';
        directiveStyles.addComponent(TuiIconsComponent);
    }
}
TuiIconsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiIconsDirective, deps: [{ token: TUI_ICON_RESOLVER }, { token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiIconsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiIconsDirective, selector: "[iconLeft]:is(a,button,tui-badge,tui-chip),[iconRight]:is(a,button,tui-badge,tui-chip),[tuiBadge][iconLeft],[tuiBadge][iconRight],[tuiChip][iconLeft],[tuiChip][iconRight],[tuiButtonClose]", inputs: { iconLeft: "iconLeft", iconRight: "iconRight" }, host: { attributes: { "tuiIcons": "" }, properties: { "class._icon-left": "iconLeft", "class._icon-right": "iconRight", "style.--t-mask-left": "\"url(\" + resolver(iconLeft) + \")\"", "style.--t-mask-right": "\"url(\" + resolver(iconRight) + \")\"" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiIconsDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[iconLeft]:is(a,button,tui-badge,tui-chip),[iconRight]:is(a,button,tui-badge,tui-chip),[tuiBadge][iconLeft],[tuiBadge][iconRight],[tuiChip][iconLeft],[tuiChip][iconRight],[tuiButtonClose]',
                    host: {
                        tuiIcons: '',
                        '[class._icon-left]': 'iconLeft',
                        '[class._icon-right]': 'iconRight',
                        '[style.--t-mask-left]': '"url(" + resolver(iconLeft) + ")"',
                        '[style.--t-mask-right]': '"url(" + resolver(iconRight) + ")"',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ICON_RESOLVER]
                }] }, { type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { iconLeft: [{
                type: Input
            }], iconRight: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbnMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZXhwZXJpbWVudGFsL2RpcmVjdGl2ZXMvaWNvbnMvaWNvbnMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2RCxPQUFPLEVBQUMseUJBQXlCLEVBQW1CLE1BQU0sZUFBZSxDQUFDO0FBQzFFLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLCtCQUErQixDQUFDO0FBRWhFLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLG1CQUFtQixDQUFDOzs7QUFFcEQseUNBQXlDO0FBWXpDLE1BQU0sT0FBTyxpQkFBaUI7SUFPMUIsWUFDd0MsUUFBa0MsRUFDbkMsZUFBMEM7UUFEekMsYUFBUSxHQUFSLFFBQVEsQ0FBMEI7UUFOMUUsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUdkLGNBQVMsR0FBRyxFQUFFLENBQUM7UUFNWCxlQUFlLENBQUMsWUFBWSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDcEQsQ0FBQzs7K0dBWlEsaUJBQWlCLGtCQVFkLGlCQUFpQixhQUNqQix5QkFBeUI7bUdBVDVCLGlCQUFpQjs0RkFBakIsaUJBQWlCO2tCQVg3QixTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFDSiw2TEFBNkw7b0JBQ2pNLElBQUksRUFBRTt3QkFDRixRQUFRLEVBQUUsRUFBRTt3QkFDWixvQkFBb0IsRUFBRSxVQUFVO3dCQUNoQyxxQkFBcUIsRUFBRSxXQUFXO3dCQUNsQyx1QkFBdUIsRUFBRSxtQ0FBbUM7d0JBQzVELHdCQUF3QixFQUFFLG9DQUFvQztxQkFDakU7aUJBQ0o7OzBCQVNRLE1BQU07MkJBQUMsaUJBQWlCOzswQkFDeEIsTUFBTTsyQkFBQyx5QkFBeUI7NENBUHJDLFFBQVE7c0JBRFAsS0FBSztnQkFJTixTQUFTO3NCQURSLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSW5qZWN0LCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2UsIFR1aVN0cmluZ0hhbmRsZXJ9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUVUlfSUNPTl9SRVNPTFZFUn0gZnJvbSAnQHRhaWdhLXVpL2V4cGVyaW1lbnRhbC90b2tlbnMnO1xuXG5pbXBvcnQge1R1aUljb25zQ29tcG9uZW50fSBmcm9tICcuL2ljb25zLmNvbXBvbmVudCc7XG5cbi8vIFRPRE86IFR1cm4gaW50byBhIGhvc3REaXJlY3RpdmUgaW4gNC4wXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjpcbiAgICAgICAgJ1tpY29uTGVmdF06aXMoYSxidXR0b24sdHVpLWJhZGdlLHR1aS1jaGlwKSxbaWNvblJpZ2h0XTppcyhhLGJ1dHRvbix0dWktYmFkZ2UsdHVpLWNoaXApLFt0dWlCYWRnZV1baWNvbkxlZnRdLFt0dWlCYWRnZV1baWNvblJpZ2h0XSxbdHVpQ2hpcF1baWNvbkxlZnRdLFt0dWlDaGlwXVtpY29uUmlnaHRdLFt0dWlCdXR0b25DbG9zZV0nLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgdHVpSWNvbnM6ICcnLFxuICAgICAgICAnW2NsYXNzLl9pY29uLWxlZnRdJzogJ2ljb25MZWZ0JyxcbiAgICAgICAgJ1tjbGFzcy5faWNvbi1yaWdodF0nOiAnaWNvblJpZ2h0JyxcbiAgICAgICAgJ1tzdHlsZS4tLXQtbWFzay1sZWZ0XSc6ICdcInVybChcIiArIHJlc29sdmVyKGljb25MZWZ0KSArIFwiKVwiJyxcbiAgICAgICAgJ1tzdHlsZS4tLXQtbWFzay1yaWdodF0nOiAnXCJ1cmwoXCIgKyByZXNvbHZlcihpY29uUmlnaHQpICsgXCIpXCInLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUljb25zRGlyZWN0aXZlIHtcbiAgICBASW5wdXQoKVxuICAgIGljb25MZWZ0ID0gJyc7XG5cbiAgICBASW5wdXQoKVxuICAgIGljb25SaWdodCA9ICcnO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVFVJX0lDT05fUkVTT0xWRVIpIHJlYWRvbmx5IHJlc29sdmVyOiBUdWlTdHJpbmdIYW5kbGVyPHN0cmluZz4sXG4gICAgICAgIEBJbmplY3QoVHVpRGlyZWN0aXZlU3R5bGVzU2VydmljZSkgZGlyZWN0aXZlU3R5bGVzOiBUdWlEaXJlY3RpdmVTdHlsZXNTZXJ2aWNlLFxuICAgICkge1xuICAgICAgICBkaXJlY3RpdmVTdHlsZXMuYWRkQ29tcG9uZW50KFR1aUljb25zQ29tcG9uZW50KTtcbiAgICB9XG59XG4iXX0=
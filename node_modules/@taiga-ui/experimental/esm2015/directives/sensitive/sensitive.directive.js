import { Directive, Inject, Input } from '@angular/core';
import { TuiDestroyService, TuiDirectiveStylesService, TuiResizeService, } from '@taiga-ui/cdk';
import { map } from 'rxjs/operators';
import { TuiSensitiveComponent } from './sensitive.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
const rowsInSvg = 3;
export class TuiSensitiveDirective {
    constructor(directiveStyles, resize$) {
        this.resize$ = resize$;
        this.tuiSensitive = false;
        this.offset = Math.round(Math.random() * 10) * 10;
        this.height$ = this.resize$.pipe(map(([{ contentRect }]) => [
            Math.max(2, Math.floor(contentRect.height / 16) + 1),
            contentRect.height,
        ]), map(([rows, height]) => height * (rowsInSvg / rows)));
        directiveStyles.addComponent(TuiSensitiveComponent);
    }
}
TuiSensitiveDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSensitiveDirective, deps: [{ token: TuiDirectiveStylesService }, { token: TuiResizeService }], target: i0.ɵɵFactoryTarget.Directive });
TuiSensitiveDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiSensitiveDirective, selector: "[tuiSensitive]", inputs: { tuiSensitive: "tuiSensitive" }, host: { listeners: { "$.style.--t-mask-height.px": "height$" }, properties: { "style.--t-offset.px": "offset", "$.style.--t-mask-height.px": "height$", "class.tui-sensitive": "tuiSensitive" } }, providers: [TuiResizeService, TuiDestroyService], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSensitiveDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiSensitive]',
                    providers: [TuiResizeService, TuiDestroyService],
                    host: {
                        '[style.--t-offset.px]': 'offset',
                        '[$.style.--t-mask-height.px]': 'height$',
                        '($.style.--t-mask-height.px)': 'height$',
                        '[class.tui-sensitive]': 'tuiSensitive',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }, { type: i1.TuiResizeService, decorators: [{
                    type: Inject,
                    args: [TuiResizeService]
                }] }]; }, propDecorators: { tuiSensitive: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Vuc2l0aXZlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2V4cGVyaW1lbnRhbC9kaXJlY3RpdmVzL3NlbnNpdGl2ZS9zZW5zaXRpdmUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2RCxPQUFPLEVBQ0gsaUJBQWlCLEVBQ2pCLHlCQUF5QixFQUN6QixnQkFBZ0IsR0FDbkIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRW5DLE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDOzs7QUFFNUQsTUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFDO0FBWXBCLE1BQU0sT0FBTyxxQkFBcUI7SUFhOUIsWUFDdUMsZUFBMEMsRUFDbEMsT0FBeUI7UUFBekIsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFieEUsaUJBQVksR0FBbUIsS0FBSyxDQUFDO1FBRTVCLFdBQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDN0MsWUFBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUNoQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUMsV0FBVyxFQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDckIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNwRCxXQUFXLENBQUMsTUFBTTtTQUNyQixDQUFDLEVBQ0YsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUN2RCxDQUFDO1FBTUUsZUFBZSxDQUFDLFlBQVksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBQ3hELENBQUM7O21IQWxCUSxxQkFBcUIsa0JBY2xCLHlCQUF5QixhQUN6QixnQkFBZ0I7dUdBZm5CLHFCQUFxQixzUkFSbkIsQ0FBQyxnQkFBZ0IsRUFBRSxpQkFBaUIsQ0FBQzs0RkFRdkMscUJBQXFCO2tCQVZqQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFNBQVMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLGlCQUFpQixDQUFDO29CQUNoRCxJQUFJLEVBQUU7d0JBQ0YsdUJBQXVCLEVBQUUsUUFBUTt3QkFDakMsOEJBQThCLEVBQUUsU0FBUzt3QkFDekMsOEJBQThCLEVBQUUsU0FBUzt3QkFDekMsdUJBQXVCLEVBQUUsY0FBYztxQkFDMUM7aUJBQ0o7OzBCQWVRLE1BQU07MkJBQUMseUJBQXlCOzswQkFDaEMsTUFBTTsyQkFBQyxnQkFBZ0I7NENBYjVCLFlBQVk7c0JBRFgsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBJbmplY3QsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gICAgVHVpRGVzdHJveVNlcnZpY2UsXG4gICAgVHVpRGlyZWN0aXZlU3R5bGVzU2VydmljZSxcbiAgICBUdWlSZXNpemVTZXJ2aWNlLFxufSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7bWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7VHVpU2Vuc2l0aXZlQ29tcG9uZW50fSBmcm9tICcuL3NlbnNpdGl2ZS5jb21wb25lbnQnO1xuXG5jb25zdCByb3dzSW5TdmcgPSAzO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0dWlTZW5zaXRpdmVdJyxcbiAgICBwcm92aWRlcnM6IFtUdWlSZXNpemVTZXJ2aWNlLCBUdWlEZXN0cm95U2VydmljZV0sXG4gICAgaG9zdDoge1xuICAgICAgICAnW3N0eWxlLi0tdC1vZmZzZXQucHhdJzogJ29mZnNldCcsXG4gICAgICAgICdbJC5zdHlsZS4tLXQtbWFzay1oZWlnaHQucHhdJzogJ2hlaWdodCQnLFxuICAgICAgICAnKCQuc3R5bGUuLS10LW1hc2staGVpZ2h0LnB4KSc6ICdoZWlnaHQkJyxcbiAgICAgICAgJ1tjbGFzcy50dWktc2Vuc2l0aXZlXSc6ICd0dWlTZW5zaXRpdmUnLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVNlbnNpdGl2ZURpcmVjdGl2ZSB7XG4gICAgQElucHV0KClcbiAgICB0dWlTZW5zaXRpdmU6IGJvb2xlYW4gfCBudWxsID0gZmFsc2U7XG5cbiAgICByZWFkb25seSBvZmZzZXQgPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAxMCkgKiAxMDtcbiAgICByZWFkb25seSBoZWlnaHQkID0gdGhpcy5yZXNpemUkLnBpcGUoXG4gICAgICAgIG1hcCgoW3tjb250ZW50UmVjdH1dKSA9PiBbXG4gICAgICAgICAgICBNYXRoLm1heCgyLCBNYXRoLmZsb29yKGNvbnRlbnRSZWN0LmhlaWdodCAvIDE2KSArIDEpLFxuICAgICAgICAgICAgY29udGVudFJlY3QuaGVpZ2h0LFxuICAgICAgICBdKSxcbiAgICAgICAgbWFwKChbcm93cywgaGVpZ2h0XSkgPT4gaGVpZ2h0ICogKHJvd3NJblN2ZyAvIHJvd3MpKSxcbiAgICApO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVHVpRGlyZWN0aXZlU3R5bGVzU2VydmljZSkgZGlyZWN0aXZlU3R5bGVzOiBUdWlEaXJlY3RpdmVTdHlsZXNTZXJ2aWNlLFxuICAgICAgICBASW5qZWN0KFR1aVJlc2l6ZVNlcnZpY2UpIHByaXZhdGUgcmVhZG9ubHkgcmVzaXplJDogVHVpUmVzaXplU2VydmljZSxcbiAgICApIHtcbiAgICAgICAgZGlyZWN0aXZlU3R5bGVzLmFkZENvbXBvbmVudChUdWlTZW5zaXRpdmVDb21wb25lbnQpO1xuICAgIH1cbn1cbiJdfQ==
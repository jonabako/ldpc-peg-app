import { Directive, Inject, Input } from '@angular/core';
import { TuiDirectiveStylesService } from '@taiga-ui/cdk';
import { tuiAvatarOptionsProvider, tuiButtonOptionsProvider, } from '@taiga-ui/experimental/components';
import { TuiCellComponent } from './cell.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
export class TuiCellDirective {
    constructor(directiveStyles) {
        this.size = 'l';
        directiveStyles.addComponent(TuiCellComponent);
    }
}
TuiCellDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCellDirective, deps: [{ token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiCellDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiCellDirective, selector: "[tuiCell]", inputs: { size: ["tuiCell", "size"] }, host: { attributes: { "tuiCell": "" }, properties: { "attr.data-size": "size || \"l\"" } }, providers: [
        tuiAvatarOptionsProvider({ size: 's' }),
        tuiButtonOptionsProvider({ size: 's' }),
    ], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCellDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiCell]',
                    providers: [
                        tuiAvatarOptionsProvider({ size: 's' }),
                        tuiButtonOptionsProvider({ size: 's' }),
                    ],
                    host: {
                        tuiCell: '',
                        '[attr.data-size]': 'size || "l"',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { size: [{
                type: Input,
                args: ['tuiCell']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VsbC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9leHBlcmltZW50YWwvZGlyZWN0aXZlcy9jZWxsL2NlbGwuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2RCxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFeEQsT0FBTyxFQUNILHdCQUF3QixFQUN4Qix3QkFBd0IsR0FDM0IsTUFBTSxtQ0FBbUMsQ0FBQztBQUUzQyxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQzs7O0FBYWxELE1BQU0sT0FBTyxnQkFBZ0I7SUFJekIsWUFDdUMsZUFBMEM7UUFIakYsU0FBSSxHQUE2QixHQUFHLENBQUM7UUFLakMsZUFBZSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ25ELENBQUM7OzhHQVJRLGdCQUFnQixrQkFLYix5QkFBeUI7a0dBTDVCLGdCQUFnQix1S0FUZDtRQUNQLHdCQUF3QixDQUFDLEVBQUMsSUFBSSxFQUFFLEdBQUcsRUFBQyxDQUFDO1FBQ3JDLHdCQUF3QixDQUFDLEVBQUMsSUFBSSxFQUFFLEdBQUcsRUFBQyxDQUFDO0tBQ3hDOzRGQU1RLGdCQUFnQjtrQkFYNUIsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsV0FBVztvQkFDckIsU0FBUyxFQUFFO3dCQUNQLHdCQUF3QixDQUFDLEVBQUMsSUFBSSxFQUFFLEdBQUcsRUFBQyxDQUFDO3dCQUNyQyx3QkFBd0IsQ0FBQyxFQUFDLElBQUksRUFBRSxHQUFHLEVBQUMsQ0FBQztxQkFDeEM7b0JBQ0QsSUFBSSxFQUFFO3dCQUNGLE9BQU8sRUFBRSxFQUFFO3dCQUNYLGtCQUFrQixFQUFFLGFBQWE7cUJBQ3BDO2lCQUNKOzswQkFNUSxNQUFNOzJCQUFDLHlCQUF5Qjs0Q0FIckMsSUFBSTtzQkFESCxLQUFLO3VCQUFDLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSW5qZWN0LCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2V9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlTaXplTCwgVHVpU2l6ZVN9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7XG4gICAgdHVpQXZhdGFyT3B0aW9uc1Byb3ZpZGVyLFxuICAgIHR1aUJ1dHRvbk9wdGlvbnNQcm92aWRlcixcbn0gZnJvbSAnQHRhaWdhLXVpL2V4cGVyaW1lbnRhbC9jb21wb25lbnRzJztcblxuaW1wb3J0IHtUdWlDZWxsQ29tcG9uZW50fSBmcm9tICcuL2NlbGwuY29tcG9uZW50JztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpQ2VsbF0nLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB0dWlBdmF0YXJPcHRpb25zUHJvdmlkZXIoe3NpemU6ICdzJ30pLFxuICAgICAgICB0dWlCdXR0b25PcHRpb25zUHJvdmlkZXIoe3NpemU6ICdzJ30pLFxuICAgIF0sXG4gICAgaG9zdDoge1xuICAgICAgICB0dWlDZWxsOiAnJyxcbiAgICAgICAgJ1thdHRyLmRhdGEtc2l6ZV0nOiAnc2l6ZSB8fCBcImxcIicsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpQ2VsbERpcmVjdGl2ZSB7XG4gICAgQElucHV0KCd0dWlDZWxsJylcbiAgICBzaXplOiBUdWlTaXplTCB8IFR1aVNpemVTIHwgJycgPSAnbCc7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUdWlEaXJlY3RpdmVTdHlsZXNTZXJ2aWNlKSBkaXJlY3RpdmVTdHlsZXM6IFR1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2UsXG4gICAgKSB7XG4gICAgICAgIGRpcmVjdGl2ZVN0eWxlcy5hZGRDb21wb25lbnQoVHVpQ2VsbENvbXBvbmVudCk7XG4gICAgfVxufVxuIl19
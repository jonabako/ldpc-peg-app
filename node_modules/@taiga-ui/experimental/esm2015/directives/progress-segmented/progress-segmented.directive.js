import { Directive, Inject, Input } from '@angular/core';
import { TuiDirectiveStylesService } from '@taiga-ui/cdk';
import { TuiProgressSegmentedComponent } from './progress-segmented.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
export class TuiProgressSegmentedDirective {
    constructor(directiveStyles) {
        this.segments = 1;
        directiveStyles.addComponent(TuiProgressSegmentedComponent);
    }
}
TuiProgressSegmentedDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiProgressSegmentedDirective, deps: [{ token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiProgressSegmentedDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiProgressSegmentedDirective, selector: "[tuiProgressBar][segments]", inputs: { segments: "segments" }, host: { properties: { "style.--t-segment-width": "1 / segments", "attr.new": "\"\"" }, classAttribute: "_segmented" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiProgressSegmentedDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiProgressBar][segments]',
                    host: {
                        class: '_segmented',
                        '[style.--t-segment-width]': '1 / segments',
                        '[attr.new]': '""', // TODO: drop in v4.0
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { segments: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3Mtc2VnbWVudGVkLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2V4cGVyaW1lbnRhbC9kaXJlY3RpdmVzL3Byb2dyZXNzLXNlZ21lbnRlZC9wcm9ncmVzcy1zZWdtZW50ZWQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2RCxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFeEQsT0FBTyxFQUFDLDZCQUE2QixFQUFDLE1BQU0sZ0NBQWdDLENBQUM7OztBQVU3RSxNQUFNLE9BQU8sNkJBQTZCO0lBSXRDLFlBQ3VDLGVBQTBDO1FBSGpGLGFBQVEsR0FBRyxDQUFDLENBQUM7UUFLVCxlQUFlLENBQUMsWUFBWSxDQUFDLDZCQUE2QixDQUFDLENBQUM7SUFDaEUsQ0FBQzs7MkhBUlEsNkJBQTZCLGtCQUsxQix5QkFBeUI7K0dBTDVCLDZCQUE2Qjs0RkFBN0IsNkJBQTZCO2tCQVJ6QyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSw0QkFBNEI7b0JBQ3RDLElBQUksRUFBRTt3QkFDRixLQUFLLEVBQUUsWUFBWTt3QkFDbkIsMkJBQTJCLEVBQUUsY0FBYzt3QkFDM0MsWUFBWSxFQUFFLElBQUksRUFBRSxxQkFBcUI7cUJBQzVDO2lCQUNKOzswQkFNUSxNQUFNOzJCQUFDLHlCQUF5Qjs0Q0FIckMsUUFBUTtzQkFEUCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEluamVjdCwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlEaXJlY3RpdmVTdHlsZXNTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcblxuaW1wb3J0IHtUdWlQcm9ncmVzc1NlZ21lbnRlZENvbXBvbmVudH0gZnJvbSAnLi9wcm9ncmVzcy1zZWdtZW50ZWQuY29tcG9uZW50JztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpUHJvZ3Jlc3NCYXJdW3NlZ21lbnRzXScsXG4gICAgaG9zdDoge1xuICAgICAgICBjbGFzczogJ19zZWdtZW50ZWQnLFxuICAgICAgICAnW3N0eWxlLi0tdC1zZWdtZW50LXdpZHRoXSc6ICcxIC8gc2VnbWVudHMnLFxuICAgICAgICAnW2F0dHIubmV3XSc6ICdcIlwiJywgLy8gVE9ETzogZHJvcCBpbiB2NC4wXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpUHJvZ3Jlc3NTZWdtZW50ZWREaXJlY3RpdmUge1xuICAgIEBJbnB1dCgpXG4gICAgc2VnbWVudHMgPSAxO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVHVpRGlyZWN0aXZlU3R5bGVzU2VydmljZSkgZGlyZWN0aXZlU3R5bGVzOiBUdWlEaXJlY3RpdmVTdHlsZXNTZXJ2aWNlLFxuICAgICkge1xuICAgICAgICBkaXJlY3RpdmVTdHlsZXMuYWRkQ29tcG9uZW50KFR1aVByb2dyZXNzU2VnbWVudGVkQ29tcG9uZW50KTtcbiAgICB9XG59XG4iXX0=
import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiControl, TuiFocusableElementAccessor } from '@taiga-ui/cdk';
import { TuiRatingOptions } from './rating.options';
import * as i0 from "@angular/core";
export declare class TuiRatingComponent extends AbstractTuiControl<number> implements TuiFocusableElementAccessor {
    private readonly options;
    private readonly input?;
    icon: import("@tinkoff/ng-polymorpheus").PolymorpheusContent<import("@taiga-ui/cdk").TuiContextWithImplicit<number>>;
    max: number;
    active: number;
    constructor(control: NgControl | null, cdr: ChangeDetectorRef, options: TuiRatingOptions);
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    onKeyDown(event: KeyboardEvent): void;
    onPointer(delta: number): void;
    onClick(value: number): void;
    isActive(index: number): boolean;
    isFraction(index: number): boolean;
    getCut(index: number): number;
    protected getFallbackValue(): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiRatingComponent, [{ optional: true; self: true; }, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiRatingComponent, "tui-rating", never, { "icon": "icon"; "max": "max"; }, {}, never, never>;
}

(function (global, factory) {
        typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/experimental/tokens')) :
        typeof define === 'function' && define.amd ? define('@taiga-ui/experimental/directives/icons', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/experimental/tokens'], factory) :
        (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].experimental = global["taiga-ui"].experimental || {}, global["taiga-ui"].experimental.directives = global["taiga-ui"].experimental.directives || {}, global["taiga-ui"].experimental.directives.icons = {}), global.ng.core, global.i1, global["taiga-ui"].experimental.tokens));
})(this, (function (exports, i0, i1, tokens) { 'use strict';

        function _interopNamespace(e) {
                if (e && e.__esModule) return e;
                var n = Object.create(null);
                if (e) {
                        Object.keys(e).forEach(function (k) {
                                if (k !== 'default') {
                                        var d = Object.getOwnPropertyDescriptor(e, k);
                                        Object.defineProperty(n, k, d.get ? d : {
                                                enumerable: true,
                                                get: function () { return e[k]; }
                                        });
                                }
                        });
                }
                n["default"] = e;
                return Object.freeze(n);
        }

        var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
        var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

        var TuiIconsComponent = /** @class */ (function () {
            function TuiIconsComponent() {
            }
            return TuiIconsComponent;
        }());
        TuiIconsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIconsComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
        TuiIconsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiIconsComponent, selector: "ng-component", host: { classAttribute: "tui-icons" }, ngImport: i0__namespace, template: '', isInline: true, styles: ["[tuiIcons]:before,[tuiIcons]:after{font-size:1.5rem}[tuiIcons]._icon-left:before,[tuiIcons]._icon-right:after{content:\"\";width:1em;height:1em;flex-shrink:0;background:currentColor;-webkit-mask:var(--t-mask-left) no-repeat center / contain;mask:var(--t-mask-left) no-repeat center / contain}[tuiIcons]._icon-right:after{-webkit-mask:var(--t-mask-right) no-repeat center / contain;mask:var(--t-mask-right) no-repeat center / contain}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIconsComponent, decorators: [{
                    type: i0.Component,
                    args: [{
                            template: '',
                            styleUrls: ['./icons.styles.less'],
                            encapsulation: i0.ViewEncapsulation.None,
                            changeDetection: i0.ChangeDetectionStrategy.OnPush,
                            host: {
                                class: 'tui-icons',
                            },
                        }]
                }] });

        // TODO: Turn into a hostDirective in 4.0
        var TuiIconsDirective = /** @class */ (function () {
            function TuiIconsDirective(resolver, directiveStyles) {
                this.resolver = resolver;
                this.iconLeft = '';
                this.iconRight = '';
                directiveStyles.addComponent(TuiIconsComponent);
            }
            return TuiIconsDirective;
        }());
        TuiIconsDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIconsDirective, deps: [{ token: tokens.TUI_ICON_RESOLVER }, { token: i1.TuiDirectiveStylesService }], target: i0__namespace.ɵɵFactoryTarget.Directive });
        TuiIconsDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiIconsDirective, selector: "[iconLeft]:is(a,button,tui-badge,tui-chip),[iconRight]:is(a,button,tui-badge,tui-chip),[tuiBadge][iconLeft],[tuiBadge][iconRight],[tuiChip][iconLeft],[tuiChip][iconRight],[tuiButtonClose]", inputs: { iconLeft: "iconLeft", iconRight: "iconRight" }, host: { attributes: { "tuiIcons": "" }, properties: { "class._icon-left": "iconLeft", "class._icon-right": "iconRight", "style.--t-mask-left": "\"url(\" + resolver(iconLeft) + \")\"", "style.--t-mask-right": "\"url(\" + resolver(iconRight) + \")\"" } }, ngImport: i0__namespace });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIconsDirective, decorators: [{
                    type: i0.Directive,
                    args: [{
                            selector: '[iconLeft]:is(a,button,tui-badge,tui-chip),[iconRight]:is(a,button,tui-badge,tui-chip),[tuiBadge][iconLeft],[tuiBadge][iconRight],[tuiChip][iconLeft],[tuiChip][iconRight],[tuiButtonClose]',
                            host: {
                                tuiIcons: '',
                                '[class._icon-left]': 'iconLeft',
                                '[class._icon-right]': 'iconRight',
                                '[style.--t-mask-left]': '"url(" + resolver(iconLeft) + ")"',
                                '[style.--t-mask-right]': '"url(" + resolver(iconRight) + ")"',
                            },
                        }]
                }], ctorParameters: function () {
                return [{ type: undefined, decorators: [{
                                type: i0.Inject,
                                args: [tokens.TUI_ICON_RESOLVER]
                            }] }, { type: i1__namespace.TuiDirectiveStylesService, decorators: [{
                                type: i0.Inject,
                                args: [i1.TuiDirectiveStylesService]
                            }] }];
            }, propDecorators: { iconLeft: [{
                        type: i0.Input
                    }], iconRight: [{
                        type: i0.Input
                    }] } });

        var TuiIconsModule = /** @class */ (function () {
            function TuiIconsModule() {
            }
            return TuiIconsModule;
        }());
        TuiIconsModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIconsModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
        TuiIconsModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIconsModule, declarations: [TuiIconsComponent, TuiIconsDirective], exports: [TuiIconsDirective] });
        TuiIconsModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIconsModule });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIconsModule, decorators: [{
                    type: i0.NgModule,
                    args: [{
                            declarations: [TuiIconsComponent, TuiIconsDirective],
                            exports: [TuiIconsDirective],
                        }]
                }] });

        /**
         * Generated bundle index. Do not edit.
         */

        exports.TuiIconsComponent = TuiIconsComponent;
        exports.TuiIconsDirective = TuiIconsDirective;
        exports.TuiIconsModule = TuiIconsModule;

        Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-experimental-directives-icons.umd.js.map

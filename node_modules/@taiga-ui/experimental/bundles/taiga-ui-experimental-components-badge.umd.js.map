{"version":3,"file":"taiga-ui-experimental-components-badge.umd.js","sources":["../../../projects/experimental/components/badge/badge.component.ts","../../../projects/experimental/components/badge/badge.options.ts","../../../projects/experimental/components/badge/badge.directive.ts","../../../projects/experimental/components/badge/badge.module.ts","../../../projects/experimental/components/badge/taiga-ui-experimental-components-badge.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    template: '',\n    styleUrls: ['./badge.style.less'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'tui-badge',\n    },\n})\nexport class TuiBadgeComponent {}\n","import {Provider} from '@angular/core';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk';\nimport {TuiSizeS, TuiSizeXL} from '@taiga-ui/core';\n\nexport interface TuiBadgeOptions {\n    readonly appearance: string;\n    readonly size: TuiSizeS | TuiSizeXL;\n    readonly dot: boolean;\n}\n\nexport const TUI_BADGE_DEFAULT_OPTIONS: TuiBadgeOptions = {\n    size: 'l',\n    appearance: 'default',\n    dot: false,\n};\n\nexport const TUI_BADGE_OPTIONS = tuiCreateToken(TUI_BADGE_DEFAULT_OPTIONS);\n\nexport function tuiBadgeOptionsProvider(options: Partial<TuiBadgeOptions>): Provider {\n    return tuiProvideOptions(TUI_BADGE_OPTIONS, options, TUI_BADGE_DEFAULT_OPTIONS);\n}\n","import {Directive, Inject, Input} from '@angular/core';\nimport {TuiDirectiveStylesService} from '@taiga-ui/cdk';\n\nimport {TuiBadgeComponent} from './badge.component';\nimport {TUI_BADGE_OPTIONS, TuiBadgeOptions} from './badge.options';\n\n@Directive({\n    selector: 'tui-badge,[tuiBadge]',\n    host: {\n        tuiBadgeNew: '',\n        tuiAppearance: '',\n        '[class._dot]': 'dot',\n        '[attr.data-appearance]': 'appearance',\n        '[attr.data-size]': 'size',\n    },\n})\nexport class TuiBadgeDirective {\n    @Input()\n    size = this.options.size;\n\n    @Input()\n    appearance = this.options.appearance;\n\n    @Input()\n    dot = this.options.dot;\n\n    constructor(\n        @Inject(TUI_BADGE_OPTIONS) private readonly options: TuiBadgeOptions,\n        @Inject(TuiDirectiveStylesService) directiveStyles: TuiDirectiveStylesService,\n    ) {\n        directiveStyles.addComponent(TuiBadgeComponent);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {TuiIconsDirective, TuiIconsModule} from '@taiga-ui/experimental/directives/icons';\n\nimport {TuiBadgeComponent} from './badge.component';\nimport {TuiBadgeDirective} from './badge.directive';\n\n@NgModule({\n    imports: [TuiIconsModule],\n    declarations: [TuiBadgeComponent, TuiBadgeDirective],\n    exports: [TuiBadgeDirective, TuiIconsDirective],\n})\nexport class TuiBadgeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0","Component","ViewEncapsulation","ChangeDetectionStrategy","tuiCreateToken","tuiProvideOptions","TuiDirectiveStylesService","Directive","Inject","Input","TuiIconsModule","TuiIconsDirective","NgModule"],"mappings":"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"}
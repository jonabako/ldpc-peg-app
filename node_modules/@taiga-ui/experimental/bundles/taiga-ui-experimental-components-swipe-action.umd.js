(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/experimental/components/swipe-action', ['exports', '@angular/core', '@taiga-ui/cdk', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].experimental = global["taiga-ui"].experimental || {}, global["taiga-ui"].experimental.components = global["taiga-ui"].experimental.components || {}, global["taiga-ui"].experimental.components["swipe-action"] = {}), global.ng.core, global.i1, global.ng.common));
})(this, (function (exports, i0, i1, common) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    var TuiSwipeActionsComponent = /** @class */ (function () {
        function TuiSwipeActionsComponent() {
            this.actionsWidth = 0;
        }
        TuiSwipeActionsComponent.prototype.onResize = function (_a) {
            var target = _a.target;
            this.actionsWidth = target.clientWidth;
        };
        return TuiSwipeActionsComponent;
    }());
    TuiSwipeActionsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSwipeActionsComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiSwipeActionsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiSwipeActionsComponent, selector: "tui-swipe-actions", host: { properties: { "style.--t-actions-width": "actionsWidth" } }, ngImport: i0__namespace, template: "<div class=\"t-content\">\n    <ng-content></ng-content>\n</div>\n\n<div\n    class=\"t-actions\"\n    (tuiResize)=\"onResize($event[0])\"\n>\n    <ng-content select=\"[tuiSwipeAction]\"></ng-content>\n</div>\n", styles: [":host{scrollbar-width:none;-ms-overflow-style:none;--tui-action-gap: 24;--tui-actions-padding: .5rem;--tui-item-size: 44;display:flex;width:-webkit-fill-available;width:stretch;align-items:center;overflow-x:scroll;overflow-y:hidden;scroll-snap-type:x mandatory;perspective:1px;perspective-origin:calc(100% + calc(1px * var(--tui-item-size) / 2) + var(--tui-actions-padding))}:host::-webkit-scrollbar,:host::-webkit-scrollbar-thumb{display:none}.t-content{scroll-snap-align:start;flex-shrink:0;width:100%}.t-actions{display:flex;grid-gap:calc(1px * var(--tui-action-gap));gap:calc(1px * var(--tui-action-gap));padding:0 1rem 0 var(--tui-actions-padding);scroll-snap-align:start;align-items:center;transform-style:preserve-3d}.t-actions:empty{display:none}::ng-deep .t-actions>*:nth-child(2){--t-distance: calc(var(--tui-item-size) + var(--tui-action-gap)) * calc(2 - 1);--t-factor: calc((var(--t-actions-width) - var(--t-distance)) / var(--t-actions-width));--t-scale: calc(1 / var(--t-factor));--t-translate: calc(1px * (1 - 1 / var(--t-factor)));transform:translate3d(calc(calc((-100% - calc(1px * var(--tui-action-gap))) * (2 - 1)) / var(--t-scale)),0,var(--t-translate));scale:var(--t-scale)}::ng-deep .t-actions>*:nth-child(3){--t-distance: calc(var(--tui-item-size) + var(--tui-action-gap)) * calc(3 - 1);--t-factor: calc((var(--t-actions-width) - var(--t-distance)) / var(--t-actions-width));--t-scale: calc(1 / var(--t-factor));--t-translate: calc(1px * (1 - 1 / var(--t-factor)));transform:translate3d(calc(calc((-100% - calc(1px * var(--tui-action-gap))) * (3 - 1)) / var(--t-scale)),0,var(--t-translate));scale:var(--t-scale)}::ng-deep .t-actions>*:nth-child(4){--t-distance: calc(var(--tui-item-size) + var(--tui-action-gap)) * calc(4 - 1);--t-factor: calc((var(--t-actions-width) - var(--t-distance)) / var(--t-actions-width));--t-scale: calc(1 / var(--t-factor));--t-translate: calc(1px * (1 - 1 / var(--t-factor)));transform:translate3d(calc(calc((-100% - calc(1px * var(--tui-action-gap))) * (4 - 1)) / var(--t-scale)),0,var(--t-translate));scale:var(--t-scale)}::ng-deep .t-actions>*:nth-child(5){--t-distance: calc(var(--tui-item-size) + var(--tui-action-gap)) * calc(5 - 1);--t-factor: calc((var(--t-actions-width) - var(--t-distance)) / var(--t-actions-width));--t-scale: calc(1 / var(--t-factor));--t-translate: calc(1px * (1 - 1 / var(--t-factor)));transform:translate3d(calc(calc((-100% - calc(1px * var(--tui-action-gap))) * (5 - 1)) / var(--t-scale)),0,var(--t-translate));scale:var(--t-scale)}::ng-deep .t-actions>*:nth-child(6){--t-distance: calc(var(--tui-item-size) + var(--tui-action-gap)) * calc(6 - 1);--t-factor: calc((var(--t-actions-width) - var(--t-distance)) / var(--t-actions-width));--t-scale: calc(1 / var(--t-factor));--t-translate: calc(1px * (1 - 1 / var(--t-factor)));transform:translate3d(calc(calc((-100% - calc(1px * var(--tui-action-gap))) * (6 - 1)) / var(--t-scale)),0,var(--t-translate));scale:var(--t-scale)}@media (hover: hover) and (pointer: fine){.t-actions{display:none}}\n"], directives: [{ type: i1__namespace.TuiResizeDirective, selector: "[tuiResize]", outputs: ["tuiResize"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSwipeActionsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-swipe-actions',
                        templateUrl: './swipe-actions.template.html',
                        styleUrls: ['./swipe-actions.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        host: {
                            '[style.--t-actions-width]': 'actionsWidth',
                        },
                    }]
            }] });

    var TuiSwipeActionsAutoCloseDirective = /** @class */ (function () {
        function TuiSwipeActionsAutoCloseDirective(el) {
            this.el = el;
            this.autoClose = true;
        }
        TuiSwipeActionsAutoCloseDirective.prototype.handleEvent = function (event) {
            var target = i1.tuiGetActualTarget(event);
            if (this.autoClose !== false && !this.el.nativeElement.contains(target)) {
                this.close();
            }
        };
        TuiSwipeActionsAutoCloseDirective.prototype.close = function () {
            this.el.nativeElement.scrollTo({
                left: 0,
                behavior: 'smooth',
            });
        };
        return TuiSwipeActionsAutoCloseDirective;
    }());
    TuiSwipeActionsAutoCloseDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSwipeActionsAutoCloseDirective, deps: [{ token: i0.ElementRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiSwipeActionsAutoCloseDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiSwipeActionsAutoCloseDirective, selector: "tui-swipe-actions[autoClose]", inputs: { autoClose: "autoClose" }, host: { listeners: { "document:pointerdown.silent": "handleEvent($event)", "document:focusin.silent": "handleEvent($event)" } }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSwipeActionsAutoCloseDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'tui-swipe-actions[autoClose]',
                        host: {
                            '(document:pointerdown.silent)': 'handleEvent($event)',
                            '(document:focusin.silent)': 'handleEvent($event)',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }];
        }, propDecorators: { autoClose: [{
                    type: i0.Input
                }] } });

    var TuiSwipeActionsModule = /** @class */ (function () {
        function TuiSwipeActionsModule() {
        }
        return TuiSwipeActionsModule;
    }());
    TuiSwipeActionsModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSwipeActionsModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiSwipeActionsModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSwipeActionsModule, declarations: [TuiSwipeActionsComponent, TuiSwipeActionsAutoCloseDirective], imports: [common.CommonModule, i1.TuiResizeModule], exports: [TuiSwipeActionsComponent, TuiSwipeActionsAutoCloseDirective] });
    TuiSwipeActionsModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSwipeActionsModule, imports: [[common.CommonModule, i1.TuiResizeModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSwipeActionsModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [common.CommonModule, i1.TuiResizeModule],
                        declarations: [TuiSwipeActionsComponent, TuiSwipeActionsAutoCloseDirective],
                        exports: [TuiSwipeActionsComponent, TuiSwipeActionsAutoCloseDirective],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiSwipeActionsAutoCloseDirective = TuiSwipeActionsAutoCloseDirective;
    exports.TuiSwipeActionsComponent = TuiSwipeActionsComponent;
    exports.TuiSwipeActionsModule = TuiSwipeActionsModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-experimental-components-swipe-action.umd.js.map

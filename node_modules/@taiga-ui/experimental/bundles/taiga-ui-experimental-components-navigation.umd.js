(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/core'), require('@taiga-ui/experimental/components/button'), require('@taiga-ui/experimental/directives/fade'), require('@taiga-ui/experimental/components/avatar'), require('@taiga-ui/experimental/components/badge'), require('@taiga-ui/experimental/components/badge-notification'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/experimental/components/navigation', ['exports', '@angular/core', '@taiga-ui/core', '@taiga-ui/experimental/components/button', '@taiga-ui/experimental/directives/fade', '@taiga-ui/experimental/components/avatar', '@taiga-ui/experimental/components/badge', '@taiga-ui/experimental/components/badge-notification', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].experimental = global["taiga-ui"].experimental || {}, global["taiga-ui"].experimental.components = global["taiga-ui"].experimental.components || {}, global["taiga-ui"].experimental.components.navigation = {}), global.ng.core, global.i1, global["taiga-ui"].experimental.components.button, global["taiga-ui"].experimental.directives.fade, global["taiga-ui"].experimental.components.avatar, global["taiga-ui"].experimental.components.badge, global["taiga-ui"].experimental.components["badge-notification"], global.ng.common));
})(this, (function (exports, i0, i1, button, i2, avatar, badge, badgeNotification, common) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);

    var TuiAsideComponent = /** @class */ (function () {
        function TuiAsideComponent() {
            this.tuiNavigationAside = false;
        }
        return TuiAsideComponent;
    }());
    TuiAsideComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiAsideComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiAsideComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiAsideComponent, selector: "aside[tuiNavigationAside]", inputs: { tuiNavigationAside: "tuiNavigationAside" }, host: { attributes: { "tuiNavigationAside": "", "tuiTheme": "night" }, properties: { "class._expanded": "tuiNavigationAside" } }, providers: [
            button.tuiButtonOptionsProvider({ size: 's', appearance: 'flat' }),
            i1.tuiDropdownOptionsProvider({ appearance: 'dropdown-navigation', align: 'right' }),
        ], ngImport: i0__namespace, template: "\n        <ng-content select=\"header\"></ng-content>\n        <tui-scrollbar class=\"t-nav-scrollbar\">\n            <div\n                tuiFade=\"vertical\"\n                tuiScrollable\n                class=\"t-nav-content\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </tui-scrollbar>\n        <ng-content select=\"footer\"></ng-content>\n    ", isInline: true, styles: ["aside[tuiNavigationAside]{--tui-link: var(--tui-text-01-night);--tui-link-hover: var(--tui-text-01-night);position:-webkit-sticky;position:sticky;top:3rem;display:flex;width:3rem;flex-direction:column;padding:.5rem .5rem .25rem;box-sizing:border-box;background:var(--tui-theme-color, #000);color:var(--tui-text-01-night);transition-property:width;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}aside[tuiNavigationAside]._expanded{width:13.75rem}aside[tuiNavigationAside]._expanded+main[tuiNavigationMain]{max-width:calc(100% - 13.75rem)}aside[tuiNavigationAside] a[tuiButton].active{background:var(--tui-clear-hover)}aside[tuiNavigationAside] .t-nav-scrollbar{margin:0 -.25rem}aside[tuiNavigationAside] .t-nav-content{scrollbar-width:none;-ms-overflow-style:none;height:100%;padding:0 .25rem;overflow:auto}aside[tuiNavigationAside] .t-nav-content::-webkit-scrollbar,aside[tuiNavigationAside] .t-nav-content::-webkit-scrollbar-thumb{display:none}aside[tuiNavigationAside] tui-hosted-dropdown{width:100%}aside[tuiNavigationAside] [tuiButton]{width:100%;justify-content:flex-start;grid-gap:.625rem;gap:.625rem;margin-bottom:.25rem}aside[tuiNavigationAside] [tuiButton]:after{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;margin-left:auto;color:var(--tui-text-03-night)}aside[tuiNavigationAside] tui-expand [tuiButton]{-webkit-padding-start:2rem;padding-inline-start:2rem}aside[tuiNavigationAside] hr{background:var(--tui-clear-inverse);height:1px;margin:0 0 .25rem;border:none}aside[tuiNavigationAside] header{padding-bottom:.25rem;box-shadow:inset 0 -1px var(--tui-clear);margin-bottom:1rem}aside[tuiNavigationAside] footer{margin-top:auto;border-top:1.75rem solid transparent}aside[tuiNavigationAside]+main[tuiNavigationMain]{max-width:calc(100% - 3rem)}tui-dropdown[data-appearance=dropdown-navigation]{--tui-text-01: var(--tui-text-01-night);--tui-clear: var(--tui-clear-inverse);border:none;background:#323232;background:color-mix(in srgb,var(--tui-theme-color, #000) 80%,#fff)}\n"], components: [{ type: i1__namespace.TuiScrollbarComponent, selector: "tui-scrollbar", inputs: ["hidden"] }], directives: [{ type: i2__namespace.TuiFadeDirective, selector: "[tuiFade]", inputs: ["tuiFadeHeight", "tuiFadeSize", "tuiFadeOffset", "tuiFade"] }, { type: i1__namespace.TuiScrollableDirective, selector: "[tuiScrollable]" }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiAsideComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'aside[tuiNavigationAside]',
                        template: "\n        <ng-content select=\"header\"></ng-content>\n        <tui-scrollbar class=\"t-nav-scrollbar\">\n            <div\n                tuiFade=\"vertical\"\n                tuiScrollable\n                class=\"t-nav-content\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </tui-scrollbar>\n        <ng-content select=\"footer\"></ng-content>\n    ",
                        styleUrls: ['./aside.style.less'],
                        encapsulation: i0.ViewEncapsulation.None,
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            button.tuiButtonOptionsProvider({ size: 's', appearance: 'flat' }),
                            i1.tuiDropdownOptionsProvider({ appearance: 'dropdown-navigation', align: 'right' }),
                        ],
                        host: {
                            tuiNavigationAside: '',
                            tuiTheme: 'night',
                            '[class._expanded]': 'tuiNavigationAside',
                        },
                    }]
            }], propDecorators: { tuiNavigationAside: [{
                    type: i0.Input
                }] } });

    var TuiHeaderComponent = /** @class */ (function () {
        function TuiHeaderComponent() {
        }
        return TuiHeaderComponent;
    }());
    TuiHeaderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHeaderComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiHeaderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiHeaderComponent, selector: "header[tuiNavigationHeader]", host: { attributes: { "tuiTheme": "night" } }, providers: [
            avatar.tuiAvatarOptionsProvider({ size: 's', appearance: 'secondary' }),
            badgeNotification.tuiBadgeNotificationOptionsProvider({ size: 'xs' }),
            badge.tuiBadgeOptionsProvider({ size: 'm', appearance: 'primary' }),
            button.tuiButtonOptionsProvider({ size: 's', appearance: 'flat' }),
            i1.tuiDropdownOptionsProvider({ appearance: 'dropdown-navigation' }),
        ], ngImport: i0__namespace, template: '<ng-content></ng-content>', isInline: true, styles: ["header[tuiNavigationHeader]{--tui-link: var(--tui-text-01-night);--tui-link-hover: var(--tui-text-01-night);position:-webkit-sticky;position:sticky;top:0;z-index:1;display:flex;height:3rem;width:100%;align-items:center;grid-gap:.25rem;gap:.25rem;padding:.5rem;box-sizing:border-box;font:var(--tui-font-text-s);line-height:1rem;background:var(--tui-theme-color, #000);color:var(--tui-text-01-night)}header[tuiNavigationHeader] [tuiNavigationLogo]{padding:0 .5rem;-webkit-margin-start:.25rem;margin-inline-start:.25rem}header[tuiNavigationHeader] [tuiNavigationLogo] tui-icon{font-size:1rem}header[tuiNavigationHeader] [tuiButton],header[tuiNavigationHeader] [tuiBadge],header[tuiNavigationHeader] [tuiChip],header[tuiNavigationHeader] tui-badge,header[tuiNavigationHeader] tui-chip{max-width:8rem}header[tuiNavigationHeader] hr{width:2rem;margin:0 0 0 auto;border:none;visibility:hidden;flex-shrink:0}header[tuiNavigationHeader] hr~[tuiButton]{margin-right:.5rem}tui-dropdown[data-appearance=dropdown-navigation]{--tui-text-01: var(--tui-text-01-night);--tui-clear: var(--tui-clear-inverse);border:none;color:var(--tui-text-01);background:#323232;background:color-mix(in srgb,var(--tui-theme-color, #000) 80%,#fff)}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHeaderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'header[tuiNavigationHeader]',
                        template: '<ng-content></ng-content>',
                        styleUrls: ['./header.style.less'],
                        encapsulation: i0.ViewEncapsulation.None,
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            avatar.tuiAvatarOptionsProvider({ size: 's', appearance: 'secondary' }),
                            badgeNotification.tuiBadgeNotificationOptionsProvider({ size: 'xs' }),
                            badge.tuiBadgeOptionsProvider({ size: 'm', appearance: 'primary' }),
                            button.tuiButtonOptionsProvider({ size: 's', appearance: 'flat' }),
                            i1.tuiDropdownOptionsProvider({ appearance: 'dropdown-navigation' }),
                        ],
                        host: {
                            tuiTheme: 'night',
                        },
                    }]
            }] });

    var TuiLogoComponent = /** @class */ (function () {
        function TuiLogoComponent() {
        }
        return TuiLogoComponent;
    }());
    TuiLogoComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLogoComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiLogoComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiLogoComponent, selector: "[tuiNavigationLogo]", ngImport: i0__namespace, template: '<ng-content></ng-content>', isInline: true, styles: ["[tuiNavigationLogo]{display:flex;align-items:center;grid-gap:.5rem;gap:.5rem;overflow:hidden;white-space:nowrap;font-weight:bold}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLogoComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: '[tuiNavigationLogo]',
                        template: '<ng-content></ng-content>',
                        styleUrls: ['./logo.style.less'],
                        encapsulation: i0.ViewEncapsulation.None,
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }] });

    var TuiMainComponent = /** @class */ (function () {
        function TuiMainComponent() {
        }
        return TuiMainComponent;
    }());
    TuiMainComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMainComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiMainComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiMainComponent, selector: "main[tuiNavigationMain]", host: { attributes: { "tuiNavigationMain": "" } }, ngImport: i0__namespace, template: '<ng-content></ng-content>', isInline: true, styles: ["main[tuiNavigationMain]{transition-property:max-width;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;flex:1;padding:0 1.25rem;isolation:isolate;box-sizing:border-box}main[tuiNavigationMain]:before{content:\"\";position:-webkit-sticky;position:sticky;top:3rem;z-index:2;display:block;height:3rem;width:calc(100% + 2.5rem);pointer-events:none;margin:0 -1.25rem -3rem;border-radius:1.25rem 1.25rem 0 0;box-shadow:0 -1.25rem var(--tui-theme-color, #000)}main[tuiNavigationMain]>[tuiHeader]{margin:1rem 0 .5rem}main[tuiNavigationMain]>[tuiHeader][tuiCardLarge]{flex-direction:column;grid-gap:1rem;gap:1rem}main[tuiNavigationMain]>[tuiHeader][tuiCardLarge]>:last-child:not([tuiTitle]){margin-bottom:.25rem}main[tuiNavigationMain]>[tuiHeader]:not([tuiCardLarge]) [tuiTitle]{max-width:42rem;white-space:nowrap;grid-gap:.375rem;gap:.375rem;overflow:hidden}main[tuiNavigationMain]>[tuiHeader]:not([tuiCardLarge]) [tuiSubtitle]{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2;white-space:normal;word-break:break-word;font:var(--tui-font-text-s);overflow:hidden}main[tuiNavigationMain]>[tuiHeader] [tuiCaption]{scrollbar-width:none;-ms-overflow-style:none;display:flex;grid-gap:1rem;gap:1rem;color:var(--tui-text-03);font:var(--tui-font-text-s);white-space:nowrap;text-transform:none;overflow:auto}main[tuiNavigationMain]>[tuiHeader] [tuiCaption]::-webkit-scrollbar,main[tuiNavigationMain]>[tuiHeader] [tuiCaption]::-webkit-scrollbar-thumb{display:none}main[tuiNavigationMain]>[tuiHeader] [tuiCaption] tui-icon{font-size:1rem;margin:.125rem 0;color:var(--tui-text-02)}main[tuiNavigationMain]>[tuiHeader] [tuiAccessories]{-webkit-margin-start:3rem;margin-inline-start:3rem;grid-gap:.5rem!important;gap:.5rem!important}main[tuiNavigationMain]>a:first-child,main[tuiNavigationMain]>button:first-child,main[tuiNavigationMain]>tui-breadcrumbs:first-child{height:1.25rem;padding:0;margin-top:.875rem}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMainComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'main[tuiNavigationMain]',
                        template: '<ng-content></ng-content>',
                        styleUrls: ['./main.style.less'],
                        encapsulation: i0.ViewEncapsulation.None,
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        host: {
                            tuiNavigationMain: '',
                        },
                    }]
            }] });

    var TuiNavComponent = /** @class */ (function () {
        function TuiNavComponent() {
        }
        return TuiNavComponent;
    }());
    TuiNavComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNavComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiNavComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiNavComponent, selector: "nav[tuiNavigationNav]", providers: [
            badge.tuiBadgeOptionsProvider({ size: 'm' }),
            button.tuiButtonOptionsProvider({ size: 's' }),
        ], ngImport: i0__namespace, template: '<ng-content></ng-content>', isInline: true, styles: ["nav[tuiNavigationNav]{top:3rem;z-index:1;display:flex;align-items:center;grid-gap:.5rem;gap:.5rem;box-shadow:inset 0 -1px var(--tui-base-03);padding:0 1.25rem;margin:0 -1.25rem;box-sizing:border-box;white-space:nowrap;overflow:hidden;font:var(--tui-font-text-s);line-height:1rem;color:var(--tui-text-02);background:var(--tui-base-01)}nav[tuiNavigationNav] [tuiNavigationLogo]{font:var(--tui-font-text-m);font-weight:bold;color:var(--tui-text-01)}nav[tuiNavigationNav]>a{text-decoration:none;color:inherit}nav[tuiNavigationNav]>hr{width:2rem;margin:0 0 0 auto;border:none;visibility:hidden;flex-shrink:0}nav[tuiNavigationNav] tui-icon{font-size:1rem;vertical-align:bottom}nav[tuiNavigationNav] tui-tabs,nav[tuiNavigationNav] [tuiTabs]{height:3rem;-webkit-margin-end:1rem;margin-inline-end:1rem}nav[tuiNavigationNav] tui-tabs tui-underline,nav[tuiNavigationNav] [tuiTabs] tui-underline{--tui-primary: var(--tui-base-07)}nav[tuiNavigationNav] [tuiTab]{font:var(--tui-font-text-s)}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNavComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'nav[tuiNavigationNav]',
                        template: '<ng-content></ng-content>',
                        styleUrls: ['./nav.style.less'],
                        encapsulation: i0.ViewEncapsulation.None,
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            badge.tuiBadgeOptionsProvider({ size: 'm' }),
                            button.tuiButtonOptionsProvider({ size: 's' }),
                        ],
                    }]
            }] });

    var TuiNavigationModule = /** @class */ (function () {
        function TuiNavigationModule() {
        }
        return TuiNavigationModule;
    }());
    TuiNavigationModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNavigationModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiNavigationModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNavigationModule, declarations: [TuiHeaderComponent,
            TuiLogoComponent,
            TuiMainComponent,
            TuiAsideComponent,
            TuiNavComponent], imports: [common.CommonModule, i1.TuiScrollbarModule, i2.TuiFadeModule], exports: [TuiHeaderComponent,
            TuiLogoComponent,
            TuiMainComponent,
            TuiAsideComponent,
            TuiNavComponent] });
    TuiNavigationModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNavigationModule, imports: [[common.CommonModule, i1.TuiScrollbarModule, i2.TuiFadeModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNavigationModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [common.CommonModule, i1.TuiScrollbarModule, i2.TuiFadeModule],
                        declarations: [
                            TuiHeaderComponent,
                            TuiLogoComponent,
                            TuiMainComponent,
                            TuiAsideComponent,
                            TuiNavComponent,
                        ],
                        exports: [
                            TuiHeaderComponent,
                            TuiLogoComponent,
                            TuiMainComponent,
                            TuiAsideComponent,
                            TuiNavComponent,
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiAsideComponent = TuiAsideComponent;
    exports.TuiHeaderComponent = TuiHeaderComponent;
    exports.TuiLogoComponent = TuiLogoComponent;
    exports.TuiMainComponent = TuiMainComponent;
    exports.TuiNavComponent = TuiNavComponent;
    exports.TuiNavigationModule = TuiNavigationModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-experimental-components-navigation.umd.js.map

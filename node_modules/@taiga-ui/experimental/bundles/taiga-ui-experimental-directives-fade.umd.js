(function (global, factory) {
        typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@ng-web-apis/mutation-observer'), require('@taiga-ui/cdk'), require('rxjs'), require('rxjs/operators')) :
        typeof define === 'function' && define.amd ? define('@taiga-ui/experimental/directives/fade', ['exports', '@angular/core', '@ng-web-apis/mutation-observer', '@taiga-ui/cdk', 'rxjs', 'rxjs/operators'], factory) :
        (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].experimental = global["taiga-ui"].experimental || {}, global["taiga-ui"].experimental.directives = global["taiga-ui"].experimental.directives || {}, global["taiga-ui"].experimental.directives.fade = {}), global.ng.core, global.mutationObserver, global.i2, global.rxjs, global.rxjs.operators));
})(this, (function (exports, i0, mutationObserver, i2, i1, operators) { 'use strict';

        function _interopNamespace(e) {
                if (e && e.__esModule) return e;
                var n = Object.create(null);
                if (e) {
                        Object.keys(e).forEach(function (k) {
                                if (k !== 'default') {
                                        var d = Object.getOwnPropertyDescriptor(e, k);
                                        Object.defineProperty(n, k, d.get ? d : {
                                                enumerable: true,
                                                get: function () { return e[k]; }
                                        });
                                }
                        });
                }
                n["default"] = e;
                return Object.freeze(n);
        }

        var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
        var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
        var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

        var TuiFadeComponent = /** @class */ (function () {
            function TuiFadeComponent() {
            }
            return TuiFadeComponent;
        }());
        TuiFadeComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFadeComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
        TuiFadeComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiFadeComponent, selector: "ng-component", host: { classAttribute: "tui-fade-styles" }, ngImport: i0__namespace, template: '', isInline: true, styles: ["[tuiFade]{scrollbar-width:none;-ms-overflow-style:none;transition-property:-webkit-mask-position;transition-property:mask-position;transition-property:mask-position,-webkit-mask-position;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;overflow:auto;text-overflow:unset!important;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat}[tuiFade]::-webkit-scrollbar,[tuiFade]::-webkit-scrollbar-thumb{display:none}[tuiFade]:not([data-orientation=\"vertical\"]){overflow-y:hidden;-webkit-mask-image:linear-gradient(to right,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset))),linear-gradient(to left,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset))),linear-gradient(#000,#000);mask-image:linear-gradient(to right,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset))),linear-gradient(to left,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset))),linear-gradient(#000,#000);-webkit-mask-position:calc(-1 * var(--fade-size) - var(--fade-offset)) bottom,calc(100% + var(--fade-size) + var(--fade-offset)) bottom,top;mask-position:calc(-1 * var(--fade-size) - var(--fade-offset)) bottom,calc(100% + var(--fade-size) + var(--fade-offset)) bottom,top;-webkit-mask-size:calc(50% + var(--fade-size) + var(--fade-offset)) var(--line-height, 100%),calc(50% + var(--fade-size) + var(--fade-offset)) var(--line-height, 100%),100% calc(100% - var(--line-height, 100%));mask-size:calc(50% + var(--fade-size) + var(--fade-offset)) var(--line-height, 100%),calc(50% + var(--fade-size) + var(--fade-offset)) var(--line-height, 100%),100% calc(100% - var(--line-height, 100%))}[tuiFade]:not([data-orientation=\"vertical\"])._start{-webkit-mask-position:left bottom,calc(100% + var(--fade-size) + var(--fade-offset)) bottom,top;mask-position:left bottom,calc(100% + var(--fade-size) + var(--fade-offset)) bottom,top}[tuiFade]:not([data-orientation=\"vertical\"])._end{-webkit-mask-position:calc(-1 * var(--fade-size) - var(--fade-offset)) bottom,right bottom,top;mask-position:calc(-1 * var(--fade-size) - var(--fade-offset)) bottom,right bottom,top}[tuiFade]:not([data-orientation=\"vertical\"])._start._end{-webkit-mask-position:left bottom,right bottom,top;mask-position:left bottom,right bottom,top}[tuiFade][data-orientation=vertical]{overflow-x:hidden;-webkit-mask-image:linear-gradient(to bottom,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset))),linear-gradient(to top,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset)));mask-image:linear-gradient(to bottom,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset))),linear-gradient(to top,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset)));-webkit-mask-position:left calc(-1 * var(--fade-size) - var(--fade-offset)),left calc(100% + var(--fade-size) + var(--fade-offset));mask-position:left calc(-1 * var(--fade-size) - var(--fade-offset)),left calc(100% + var(--fade-size) + var(--fade-offset));-webkit-mask-size:100% calc(51% + var(--fade-size) + var(--fade-offset));mask-size:100% calc(51% + var(--fade-size) + var(--fade-offset))}[tuiFade][data-orientation=vertical]._start{-webkit-mask-position:left top,left calc(100% + var(--fade-size) + var(--fade-offset));mask-position:left top,left calc(100% + var(--fade-size) + var(--fade-offset))}[tuiFade][data-orientation=vertical]._end{-webkit-mask-position:left calc(-1 * var(--fade-size) - var(--fade-offset)),left bottom;mask-position:left calc(-1 * var(--fade-size) - var(--fade-offset)),left bottom}[tuiFade][data-orientation=vertical]._start._end{-webkit-mask-position:left top,left bottom;mask-position:left top,left bottom}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFadeComponent, decorators: [{
                    type: i0.Component,
                    args: [{
                            template: '',
                            styleUrls: ['./fade.style.less'],
                            encapsulation: i0.ViewEncapsulation.None,
                            changeDetection: i0.ChangeDetectionStrategy.OnPush,
                            host: {
                                class: 'tui-fade-styles',
                            },
                        }]
                }] });

        var BUFFER = 1; // buffer for rounding issues
        var TuiFadeDirective = /** @class */ (function () {
            function TuiFadeDirective(destroy$, resize$, mutate$, element, zone, directiveStyles) {
                var _this = this;
                // TODO: Remove when lh CSS units are supported: https://caniuse.com/mdn-css_types_length_lh
                this.lineHeight = null;
                this.size = '1.5em';
                this.offset = '0em';
                this.orientation = 'horizontal';
                var el = element.nativeElement;
                directiveStyles.addComponent(TuiFadeComponent);
                i1.merge(resize$, mutate$, i1.fromEvent(el, 'scroll'))
                    .pipe(i2.tuiZonefree(zone), operators.takeUntil(destroy$))
                    .subscribe(function () {
                    el.classList.toggle('_start', !!el.scrollLeft || !!el.scrollTop);
                    el.classList.toggle('_end', _this.isEnd(el));
                });
            }
            TuiFadeDirective.prototype.isEnd = function (el) {
                if (this.orientation === 'vertical') {
                    return Math.round(el.scrollTop) < el.scrollHeight - el.clientHeight - BUFFER;
                }
                return (Math.round(el.scrollLeft) < el.scrollWidth - el.clientWidth - BUFFER ||
                    // horizontal multiline fade can kick in early due to hanging elements of fonts so using bigger buffer
                    el.scrollHeight > el.clientHeight + 4 * BUFFER);
            };
            return TuiFadeDirective;
        }());
        TuiFadeDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFadeDirective, deps: [{ token: i2.TuiDestroyService, self: true }, { token: i2.TuiResizeService }, { token: mutationObserver.MutationObserverService }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i2.TuiDirectiveStylesService }], target: i0__namespace.ɵɵFactoryTarget.Directive });
        TuiFadeDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiFadeDirective, selector: "[tuiFade]", inputs: { lineHeight: ["tuiFadeHeight", "lineHeight"], size: ["tuiFadeSize", "size"], offset: ["tuiFadeOffset", "offset"], orientation: ["tuiFade", "orientation"] }, host: { properties: { "style.line-height": "this.lineHeight", "style.--line-height": "this.lineHeight", "style.--fade-size": "this.size", "style.--fade-offset": "this.offset", "attr.data-orientation": "this.orientation" } }, providers: [
                i2.TuiDestroyService,
                i2.TuiResizeService,
                mutationObserver.MutationObserverService,
                {
                    provide: mutationObserver.MUTATION_OBSERVER_INIT,
                    useValue: { characterData: true, subtree: true },
                },
            ], ngImport: i0__namespace });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFadeDirective, decorators: [{
                    type: i0.Directive,
                    args: [{
                            selector: '[tuiFade]',
                            providers: [
                                i2.TuiDestroyService,
                                i2.TuiResizeService,
                                mutationObserver.MutationObserverService,
                                {
                                    provide: mutationObserver.MUTATION_OBSERVER_INIT,
                                    useValue: { characterData: true, subtree: true },
                                },
                            ],
                        }]
                }], ctorParameters: function () {
                return [{ type: i1__namespace.Observable, decorators: [{
                                type: i0.Self
                            }, {
                                type: i0.Inject,
                                args: [i2.TuiDestroyService]
                            }] }, { type: i1__namespace.Observable, decorators: [{
                                type: i0.Inject,
                                args: [i2.TuiResizeService]
                            }] }, { type: i1__namespace.Observable, decorators: [{
                                type: i0.Inject,
                                args: [mutationObserver.MutationObserverService]
                            }] }, { type: i0__namespace.ElementRef, decorators: [{
                                type: i0.Inject,
                                args: [i0.ElementRef]
                            }] }, { type: i0__namespace.NgZone, decorators: [{
                                type: i0.Inject,
                                args: [i0.NgZone]
                            }] }, { type: i2__namespace.TuiDirectiveStylesService, decorators: [{
                                type: i0.Inject,
                                args: [i2.TuiDirectiveStylesService]
                            }] }];
            }, propDecorators: { lineHeight: [{
                        type: i0.Input,
                        args: ['tuiFadeHeight']
                    }, {
                        type: i0.HostBinding,
                        args: ['style.line-height']
                    }, {
                        type: i0.HostBinding,
                        args: ['style.--line-height']
                    }], size: [{
                        type: i0.Input,
                        args: ['tuiFadeSize']
                    }, {
                        type: i0.HostBinding,
                        args: ['style.--fade-size']
                    }], offset: [{
                        type: i0.Input,
                        args: ['tuiFadeOffset']
                    }, {
                        type: i0.HostBinding,
                        args: ['style.--fade-offset']
                    }], orientation: [{
                        type: i0.Input,
                        args: ['tuiFade']
                    }, {
                        type: i0.HostBinding,
                        args: ['attr.data-orientation']
                    }] } });

        var TuiFadeModule = /** @class */ (function () {
            function TuiFadeModule() {
            }
            return TuiFadeModule;
        }());
        TuiFadeModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFadeModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
        TuiFadeModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFadeModule, declarations: [TuiFadeComponent, TuiFadeDirective], exports: [TuiFadeDirective] });
        TuiFadeModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFadeModule });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiFadeModule, decorators: [{
                    type: i0.NgModule,
                    args: [{
                            declarations: [TuiFadeComponent, TuiFadeDirective],
                            exports: [TuiFadeDirective],
                        }]
                }] });

        /**
         * Generated bundle index. Do not edit.
         */

        exports.TuiFadeComponent = TuiFadeComponent;
        exports.TuiFadeDirective = TuiFadeDirective;
        exports.TuiFadeModule = TuiFadeModule;

        Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-experimental-directives-fade.umd.js.map

(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@taiga-ui/cdk'), require('@taiga-ui/experimental/tokens'), require('rxjs/operators'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/experimental/components/checkbox', ['exports', '@angular/core', '@angular/forms', '@taiga-ui/cdk', '@taiga-ui/experimental/tokens', 'rxjs/operators', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].experimental = global["taiga-ui"].experimental || {}, global["taiga-ui"].experimental.components = global["taiga-ui"].experimental.components || {}, global["taiga-ui"].experimental.components.checkbox = {}), global.ng.core, global.ng.forms, global.cdk, global["taiga-ui"].experimental.tokens, global.rxjs.operators, global.rxjs));
})(this, (function (exports, i0, i2, cdk, tokens, operators, i1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    var TUI_CHECKBOX_DEFAULT_OPTIONS = {
        size: 'm',
        icons: {
            checked: function (size) { return (size === 'm' ? 'tuiIconCheckLarge' : 'tuiIconCheck'); },
            indeterminate: function (size) { return (size === 'm' ? 'tuiIconMinusLarge' : 'tuiIconMinus'); },
        },
    };
    var TUI_CHECKBOX_OPTIONS = cdk.tuiCreateToken(TUI_CHECKBOX_DEFAULT_OPTIONS);
    function tuiCheckboxOptionsProvider(options) {
        return cdk.tuiProvideOptions(TUI_CHECKBOX_OPTIONS, options, TUI_CHECKBOX_DEFAULT_OPTIONS);
    }

    var TuiCheckboxComponent = /** @class */ (function () {
        function TuiCheckboxComponent(cdr, resolver, options, destroy$, el, control) {
            this.cdr = cdr;
            this.resolver = resolver;
            this.options = options;
            this.destroy$ = destroy$;
            this.el = el;
            this.control = control;
            this.size = this.options.size;
        }
        Object.defineProperty(TuiCheckboxComponent.prototype, "icon", {
            get: function () {
                var option = this.el.nativeElement.indeterminate
                    ? this.options.icons.indeterminate
                    : this.options.icons.checked;
                var icon = cdk.tuiIsString(option) ? option : option(this.size);
                return "url(" + this.resolver(icon) + ")";
            },
            enumerable: false,
            configurable: true
        });
        TuiCheckboxComponent.prototype.ngOnInit = function () {
            var _this = this;
            var _a;
            if (!((_a = this.control) === null || _a === void 0 ? void 0 : _a.valueChanges)) {
                return;
            }
            cdk.tuiControlValue(this.control)
                .pipe(operators.distinctUntilChanged(), cdk.tuiWatch(this.cdr), operators.takeUntil(this.destroy$))
                .subscribe(function (value) {
                // https://github.com/angular/angular/issues/14988
                var fix = _this.control instanceof i2.NgModel ? _this.control.model : value;
                _this.el.nativeElement.indeterminate = fix === null;
            });
        };
        return TuiCheckboxComponent;
    }());
    TuiCheckboxComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCheckboxComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: tokens.TUI_ICON_RESOLVER }, { token: TUI_CHECKBOX_OPTIONS }, { token: cdk.TuiDestroyService, self: true }, { token: i0.ElementRef }, { token: i2.NgControl, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiCheckboxComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiCheckboxComponent, selector: "input[type=\"checkbox\"][tuiCheckbox]", inputs: { size: "size" }, host: { attributes: { "tuiAppearance": "" }, properties: { "disabled": "!control || control.disabled", "attr.data-size": "size", "class._invalid": "control?.invalid && control?.touched", "class._readonly": "!control", "style.--t-mask": "icon" } }, providers: [cdk.TuiDestroyService], ngImport: i0__namespace, template: '', isInline: true, styles: [":host{width:1.5rem;height:1.5rem;border-radius:var(--tui-radius-s);color:var(--tui-primary-text);cursor:pointer;margin:0;box-shadow:inset 0 0 0 .0625rem var(--tui-clear-active)}:host:before{position:absolute;top:0;left:0;width:100%;height:100%;content:\"\";background:currentColor;-webkit-mask:url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\"></svg>') center / 100%;mask:url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\"></svg>') center / 100%;transform:scale(0);transition:transform var(--tui-duration) ease-in-out,-webkit-mask 0s var(--tui-duration) ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s var(--tui-duration) ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s var(--tui-duration) ease-in-out,-webkit-mask 0s var(--tui-duration) ease-in-out}:host:disabled._readonly{opacity:1}:host:checked,:host:indeterminate{box-shadow:none;background:var(--tui-primary)}:host:checked:hover,:host:indeterminate:hover{background:var(--tui-primary-hover)}:host:checked:active,:host:indeterminate:active{background:var(--tui-primary-active)}:host:checked:before,:host:indeterminate:before{-webkit-mask-image:var(--t-mask);mask-image:var(--t-mask);transform:scale(1);transition:transform var(--tui-duration) ease-in-out,-webkit-mask 0s ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s ease-in-out;transition:transform var(--tui-duration) ease-in-out,mask 0s ease-in-out,-webkit-mask 0s ease-in-out}:host[data-size=s]{width:1rem;height:1rem;border-radius:var(--tui-radius-xs)}:host._invalid{box-shadow:inset 0 0 0 .0625rem var(--tui-error-bg-hover)}:host._invalid:checked,:host._invalid:indeterminate{background:var(--tui-error-fill)}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCheckboxComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'input[type="checkbox"][tuiCheckbox]',
                        template: '',
                        styleUrls: ['./checkbox.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [cdk.TuiDestroyService],
                        host: {
                            tuiAppearance: '',
                            '[disabled]': '!control || control.disabled',
                            '[attr.data-size]': 'size',
                            '[class._invalid]': 'control?.invalid && control?.touched',
                            '[class._readonly]': '!control',
                            '[style.--t-mask]': 'icon',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_ICON_RESOLVER]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_CHECKBOX_OPTIONS]
                        }] }, { type: i1__namespace.Observable, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [cdk.TuiDestroyService]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i2__namespace.NgControl, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i2.NgControl]
                        }] }];
        }, propDecorators: { size: [{
                    type: i0.Input
                }] } });

    var TuiCheckboxModule = /** @class */ (function () {
        function TuiCheckboxModule() {
        }
        return TuiCheckboxModule;
    }());
    TuiCheckboxModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCheckboxModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiCheckboxModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCheckboxModule, declarations: [TuiCheckboxComponent], exports: [TuiCheckboxComponent] });
    TuiCheckboxModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCheckboxModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCheckboxModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TuiCheckboxComponent],
                        exports: [TuiCheckboxComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_CHECKBOX_DEFAULT_OPTIONS = TUI_CHECKBOX_DEFAULT_OPTIONS;
    exports.TUI_CHECKBOX_OPTIONS = TUI_CHECKBOX_OPTIONS;
    exports.TuiCheckboxComponent = TuiCheckboxComponent;
    exports.TuiCheckboxModule = TuiCheckboxModule;
    exports.tuiCheckboxOptionsProvider = tuiCheckboxOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-experimental-components-checkbox.umd.js.map

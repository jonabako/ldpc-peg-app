{"version":3,"file":"taiga-ui-experimental-components-avatar.umd.js","sources":["../../../projects/experimental/components/avatar/avatar.options.ts","../../../projects/experimental/components/avatar/avatar.component.ts","../../../projects/experimental/components/avatar/avatar.template.html","../../../projects/experimental/components/avatar/avatar.module.ts","../../../projects/experimental/components/avatar/taiga-ui-experimental-components-avatar.ts"],"sourcesContent":["import {Provider} from '@angular/core';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk';\nimport {TuiSizeXS, TuiSizeXXL} from '@taiga-ui/core';\n\nexport interface TuiAvatarOptions {\n    readonly appearance: string;\n    readonly round: boolean;\n    readonly size: TuiSizeXS | TuiSizeXXL;\n}\n\nexport const TUI_AVATAR_DEFAULT_OPTIONS: TuiAvatarOptions = {\n    appearance: '',\n    round: true,\n    size: 'l',\n};\n\nexport const TUI_AVATAR_OPTIONS = tuiCreateToken(TUI_AVATAR_DEFAULT_OPTIONS);\n\nexport function tuiAvatarOptionsProvider(options: Partial<TuiAvatarOptions>): Provider {\n    return tuiProvideOptions(TUI_AVATAR_OPTIONS, options, TUI_AVATAR_DEFAULT_OPTIONS);\n}\n","import {ChangeDetectionStrategy, Component, Inject, Input} from '@angular/core';\nimport {SafeResourceUrl} from '@angular/platform-browser';\nimport {tuiIsString, TuiStringHandler} from '@taiga-ui/cdk';\nimport {TUI_ICON_RESOLVER} from '@taiga-ui/experimental/tokens';\n\nimport {TUI_AVATAR_OPTIONS, TuiAvatarOptions} from './avatar.options';\n\n@Component({\n    selector: 'tui-avatar',\n    templateUrl: './avatar.template.html',\n    styleUrls: ['./avatar.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        tuiAppearance: '',\n        '[attr.data-appearance]': 'appearance',\n        '[attr.data-size]': 'size',\n        '[attr.data-type]': 'type',\n        '[style.--t-mask]': '\"url(\" + resolver(safeSrc) + \")\"',\n        '[class._round]': 'round',\n    },\n})\nexport class TuiAvatarComponent {\n    @Input()\n    size = this.options.size;\n\n    @Input()\n    round = this.options.round;\n\n    @Input()\n    src: SafeResourceUrl | string | null = null;\n\n    @Input()\n    appearance = this.options.appearance;\n\n    constructor(\n        @Inject(TUI_AVATAR_OPTIONS) private readonly options: TuiAvatarOptions,\n        @Inject(TUI_ICON_RESOLVER) readonly resolver: TuiStringHandler<string>,\n    ) {}\n\n    get safeSrc(): string {\n        return this.src?.toString() ?? '';\n    }\n\n    get value(): SafeResourceUrl | string {\n        return this.src || '';\n    }\n\n    get type(): 'content' | 'icon' | 'img' | 'text' {\n        if (this.value && !tuiIsString(this.value)) {\n            return 'img';\n        }\n\n        if (this.value.startsWith('tuiIcon') || this.value.endsWith('.svg')) {\n            return 'icon';\n        }\n\n        if (this.value.length > 0 && this.value.length < 3) {\n            return 'text';\n        }\n\n        return this.value.length ? 'img' : 'content';\n    }\n}\n","<ng-container [ngSwitch]=\"type\">\n    <img\n        *ngSwitchCase=\"'img'\"\n        alt=\"\"\n        loading=\"lazy\"\n        [src]=\"value\"\n    />\n    <ng-container *ngSwitchCase=\"'text'\">{{ value }}</ng-container>\n    <ng-container *ngSwitchDefault>\n        <ng-content></ng-content>\n    </ng-container>\n</ng-container>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiIconModule} from '@taiga-ui/experimental/components/icon';\nimport {TuiLazyLoadingModule} from '@taiga-ui/kit';\n\nimport {TuiAvatarComponent} from './avatar.component';\n\n@NgModule({\n    imports: [CommonModule, TuiIconModule, TuiLazyLoadingModule],\n    declarations: [TuiAvatarComponent],\n    exports: [TuiAvatarComponent],\n})\nexport class TuiAvatarModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tuiCreateToken","tuiProvideOptions","tuiIsString","TUI_ICON_RESOLVER","i0","i1","i2","Component","ChangeDetectionStrategy","Inject","Input","CommonModule","TuiIconModule","TuiLazyLoadingModule","NgModule"],"mappings":"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"}
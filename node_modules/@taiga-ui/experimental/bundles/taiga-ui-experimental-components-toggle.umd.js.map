{"version":3,"file":"taiga-ui-experimental-components-toggle.umd.js","sources":["../../../projects/experimental/components/toggle/toggle.options.ts","../../../projects/experimental/components/toggle/toggle.component.ts","../../../projects/experimental/components/toggle/toggle.module.ts","../../../projects/experimental/components/toggle/taiga-ui-experimental-components-toggle.ts"],"sourcesContent":["import {Provider} from '@angular/core';\nimport {tuiCreateToken, TuiMapper, tuiProvideOptions} from '@taiga-ui/cdk';\nimport {TuiSizeS} from '@taiga-ui/core';\n\nexport interface TuiToggleOptions {\n    readonly showIcons: boolean;\n    readonly size: TuiSizeS;\n    readonly icon: TuiMapper<TuiSizeS, string> | string;\n}\n\nexport const TUI_TOGGLE_DEFAULT_OPTIONS: TuiToggleOptions = {\n    showIcons: true,\n    size: 'm',\n    icon: 'tuiIconCheck',\n};\n\nexport const TUI_TOGGLE_OPTIONS = tuiCreateToken(TUI_TOGGLE_DEFAULT_OPTIONS);\n\nexport function tuiToggleOptionsProvider(options: Partial<TuiToggleOptions>): Provider {\n    return tuiProvideOptions(TUI_TOGGLE_OPTIONS, options, TUI_TOGGLE_DEFAULT_OPTIONS);\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    Inject,\n    Input,\n    Optional,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {tuiIsString, TuiStringHandler} from '@taiga-ui/cdk';\nimport {TUI_ICON_RESOLVER} from '@taiga-ui/experimental/tokens';\n\nimport {TUI_TOGGLE_OPTIONS, TuiToggleOptions} from './toggle.options';\n\n@Component({\n    selector: 'input[type=\"checkbox\"][tuiToggle]',\n    template: '',\n    styleUrls: ['./toggle.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        tuiAppearance: '', // Apply base appearance\n        '[disabled]': '!control || control.disabled',\n        '[attr.data-size]': 'size',\n        '[class._invalid]': 'control?.invalid && control?.touched',\n        '[class._readonly]': '!control',\n        '[class._icons]': 'showIcons',\n    },\n})\nexport class TuiToggleComponent {\n    @Input()\n    size = this.options.size;\n\n    @Input()\n    showIcons = this.options.showIcons;\n\n    constructor(\n        @Inject(TUI_ICON_RESOLVER) private readonly resolver: TuiStringHandler<string>,\n        @Inject(TUI_TOGGLE_OPTIONS) private readonly options: TuiToggleOptions,\n        @Optional() @Inject(NgControl) readonly control: NgControl | null,\n    ) {}\n\n    @HostBinding('style.--t-mask')\n    get icon(): string {\n        const {options, resolver, size} = this;\n        const icon = tuiIsString(options.icon) ? options.icon : options.icon(size);\n\n        return `url(${resolver(icon)})`;\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiToggleComponent} from './toggle.component';\n\n@NgModule({\n    declarations: [TuiToggleComponent],\n    exports: [TuiToggleComponent],\n})\nexport class TuiToggleModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tuiCreateToken","tuiProvideOptions","tuiIsString","i0","TUI_ICON_RESOLVER","NgControl","Component","ChangeDetectionStrategy","Inject","Optional","Input","HostBinding","NgModule"],"mappings":"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"}
(function (global, factory) {
        typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/experimental/components/avatar'), require('@taiga-ui/experimental/components/button'), require('@taiga-ui/experimental/components/checkbox'), require('@taiga-ui/experimental/components/toggle'), require('@taiga-ui/experimental/directives/icons')) :
        typeof define === 'function' && define.amd ? define('@taiga-ui/experimental/components/chip', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/experimental/components/avatar', '@taiga-ui/experimental/components/button', '@taiga-ui/experimental/components/checkbox', '@taiga-ui/experimental/components/toggle', '@taiga-ui/experimental/directives/icons'], factory) :
        (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].experimental = global["taiga-ui"].experimental || {}, global["taiga-ui"].experimental.components = global["taiga-ui"].experimental.components || {}, global["taiga-ui"].experimental.components.chip = {}), global.ng.core, global.i1, global["taiga-ui"].experimental.components.avatar, global["taiga-ui"].experimental.components.button, global["taiga-ui"].experimental.components.checkbox, global["taiga-ui"].experimental.components.toggle, global["taiga-ui"].experimental.directives.icons));
})(this, (function (exports, i0, i1, avatar, button, checkbox, toggle, icons) { 'use strict';

        function _interopNamespace(e) {
                if (e && e.__esModule) return e;
                var n = Object.create(null);
                if (e) {
                        Object.keys(e).forEach(function (k) {
                                if (k !== 'default') {
                                        var d = Object.getOwnPropertyDescriptor(e, k);
                                        Object.defineProperty(n, k, d.get ? d : {
                                                enumerable: true,
                                                get: function () { return e[k]; }
                                        });
                                }
                        });
                }
                n["default"] = e;
                return Object.freeze(n);
        }

        var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
        var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

        var TuiChipComponent = /** @class */ (function () {
            function TuiChipComponent() {
            }
            return TuiChipComponent;
        }());
        TuiChipComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiChipComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
        TuiChipComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiChipComponent, selector: "ng-component", host: { classAttribute: "tui-chip" }, ngImport: i0__namespace, template: '', isInline: true, styles: ["tui-chip,[tuiChip]{--t-gap: .125rem;--t-margin: -.125rem;--t-icon-size: 1rem;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;text-decoration:none;position:relative;display:inline-flex;align-items:center;flex-shrink:0;box-sizing:border-box;white-space:nowrap;overflow:hidden;vertical-align:middle;max-width:100%;grid-gap:calc(var(--t-gap) - 2 * var(--t-margin));gap:calc(var(--t-gap) - 2 * var(--t-margin));font:var(--tui-font-text-s);border-radius:var(--tui-radius-m);padding:var(--t-padding);height:var(--t-size);width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}tui-chip>img,[tuiChip]>img,tui-chip>tui-svg,[tuiChip]>tui-svg,tui-chip>tui-icon,[tuiChip]>tui-icon,tui-chip>tui-avatar,[tuiChip]>tui-avatar,tui-chip>tui-badge,[tuiChip]>tui-badge,tui-chip>[tuiBadge],[tuiChip]>[tuiBadge],tui-chip>[tuiRadio],[tuiChip]>[tuiRadio],tui-chip>[tuiToggle],[tuiChip]>[tuiToggle],tui-chip>[tuiCheckbox],[tuiChip]>[tuiCheckbox],tui-chip._icon-left:before,[tuiChip]._icon-left:before,tui-chip._icon-right:after,[tuiChip]._icon-right:after{margin:var(--t-margin)}tui-chip:-webkit-any(a,button,select,textarea,input,label),[tuiChip]:-webkit-any(a,button,select,textarea,input,label){cursor:pointer}tui-chip:-moz-any(a,button,select,textarea,input,label),[tuiChip]:-moz-any(a,button,select,textarea,input,label){cursor:pointer}tui-chip>tui-icon,[tuiChip]>tui-icon,tui-chip[tuiIcons]:before,[tuiChip][tuiIcons]:before,tui-chip[tuiIcons]:after,[tuiChip][tuiIcons]:after{font-size:var(--t-icon-size)!important}tui-chip[data-size=xxs],[tuiChip][data-size=xxs]{--t-gap: 0rem;--t-padding: 0 .25rem;--t-size: 1rem;--t-icon-size: .75rem;font:var(--tui-font-text-xs);border-radius:var(--tui-radius-xs)}tui-chip[data-size=xxs]>[tuiIconButton],[tuiChip][data-size=xxs]>[tuiIconButton]{margin:-.5rem;transform:scale(.75)}tui-chip[data-size=xs],[tuiChip][data-size=xs]{--t-padding: 0 .375rem;--t-size: 1.25rem;border-radius:var(--tui-radius-xs)}tui-chip[data-size=xs]>[tuiIconButton],[tuiChip][data-size=xs]>[tuiIconButton]{margin:-.375rem}tui-chip[data-size=s],[tuiChip][data-size=s]{--t-padding: 0 .625rem;--t-size: var(--tui-height-s)}tui-chip[data-size=s]>[tuiIconButton],[tuiChip][data-size=s]>[tuiIconButton]{margin:-.375rem}tui-chip[data-size=s]>img,[tuiChip][data-size=s]>img,tui-chip[data-size=s] tui-avatar,[tuiChip][data-size=s] tui-avatar{-webkit-margin-start:-.375rem;margin-inline-start:-.375rem}tui-chip[data-size=m],[tuiChip][data-size=m]{--t-margin: -.375rem;--t-icon-size: 1.5rem;--t-padding: 0 1rem;--t-size: var(--tui-height-m);font:var(--tui-font-text-m)}tui-chip[data-size=m]>[tuiIconButton],[tuiChip][data-size=m]>[tuiIconButton]{margin:-.75rem}tui-chip>img,[tuiChip]>img{width:1.5rem}tui-chip>input[tuiChip],[tuiChip]>input[tuiChip]{position:absolute;top:0;left:0;width:100%;height:100%;margin:0}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush, encapsulation: i0__namespace.ViewEncapsulation.None });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiChipComponent, decorators: [{
                    type: i0.Component,
                    args: [{
                            template: '',
                            styleUrls: ['./chip.style.less'],
                            encapsulation: i0.ViewEncapsulation.None,
                            changeDetection: i0.ChangeDetectionStrategy.OnPush,
                            host: {
                                class: 'tui-chip',
                            },
                        }]
                }] });

        var TUI_CHIP_DEFAULT_OPTIONS = {
            size: 's',
            appearance: 'neutral',
        };
        var TUI_CHIP_OPTIONS = i1.tuiCreateToken(TUI_CHIP_DEFAULT_OPTIONS);
        function tuiChipOptionsProvider(options) {
            return i1.tuiProvideOptions(TUI_CHIP_OPTIONS, options, TUI_CHIP_DEFAULT_OPTIONS);
        }

        var TuiChipDirective = /** @class */ (function () {
            function TuiChipDirective(options, directiveStyles) {
                this.options = options;
                this.size = this.options.size;
                this.appearance = this.options.appearance;
                directiveStyles.addComponent(TuiChipComponent);
            }
            return TuiChipDirective;
        }());
        TuiChipDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiChipDirective, deps: [{ token: TUI_CHIP_OPTIONS }, { token: i1.TuiDirectiveStylesService }], target: i0__namespace.ɵɵFactoryTarget.Directive });
        TuiChipDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiChipDirective, selector: "tui-chip,[tuiChip]", inputs: { size: "size", appearance: "appearance" }, host: { attributes: { "tuiAppearance": "" }, properties: { "attr.data-appearance": "appearance", "attr.data-size": "size" } }, providers: [
                toggle.tuiToggleOptionsProvider({ size: 's' }),
                checkbox.tuiCheckboxOptionsProvider({ size: 's' }),
                avatar.tuiAvatarOptionsProvider({ size: 'xs' }),
                button.tuiButtonOptionsProvider({
                    size: 'xs',
                    appearance: 'icon',
                }),
            ], ngImport: i0__namespace });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiChipDirective, decorators: [{
                    type: i0.Directive,
                    args: [{
                            selector: 'tui-chip,[tuiChip]',
                            providers: [
                                toggle.tuiToggleOptionsProvider({ size: 's' }),
                                checkbox.tuiCheckboxOptionsProvider({ size: 's' }),
                                avatar.tuiAvatarOptionsProvider({ size: 'xs' }),
                                button.tuiButtonOptionsProvider({
                                    size: 'xs',
                                    appearance: 'icon',
                                }),
                            ],
                            host: {
                                tuiAppearance: '',
                                '[attr.data-appearance]': 'appearance',
                                '[attr.data-size]': 'size',
                            },
                        }]
                }], ctorParameters: function () {
                return [{ type: undefined, decorators: [{
                                type: i0.Inject,
                                args: [TUI_CHIP_OPTIONS]
                            }] }, { type: i1__namespace.TuiDirectiveStylesService, decorators: [{
                                type: i0.Inject,
                                args: [i1.TuiDirectiveStylesService]
                            }] }];
            }, propDecorators: { size: [{
                        type: i0.Input
                    }], appearance: [{
                        type: i0.Input
                    }] } });

        var TuiChipModule = /** @class */ (function () {
            function TuiChipModule() {
            }
            return TuiChipModule;
        }());
        TuiChipModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiChipModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
        TuiChipModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiChipModule, declarations: [TuiChipComponent, TuiChipDirective], imports: [icons.TuiIconsModule], exports: [TuiChipDirective, icons.TuiIconsDirective] });
        TuiChipModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiChipModule, imports: [[icons.TuiIconsModule]] });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiChipModule, decorators: [{
                    type: i0.NgModule,
                    args: [{
                            imports: [icons.TuiIconsModule],
                            declarations: [TuiChipComponent, TuiChipDirective],
                            exports: [TuiChipDirective, icons.TuiIconsDirective],
                        }]
                }] });

        /**
         * Generated bundle index. Do not edit.
         */

        exports.TUI_CHIP_DEFAULT_OPTIONS = TUI_CHIP_DEFAULT_OPTIONS;
        exports.TUI_CHIP_OPTIONS = TUI_CHIP_OPTIONS;
        exports.TuiChipComponent = TuiChipComponent;
        exports.TuiChipDirective = TuiChipDirective;
        exports.TuiChipModule = TuiChipModule;
        exports.tuiChipOptionsProvider = tuiChipOptionsProvider;

        Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-experimental-components-chip.umd.js.map

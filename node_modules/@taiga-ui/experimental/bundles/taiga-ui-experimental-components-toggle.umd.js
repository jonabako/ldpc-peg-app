(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@taiga-ui/cdk'), require('@taiga-ui/experimental/tokens')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/experimental/components/toggle', ['exports', '@angular/core', '@angular/forms', '@taiga-ui/cdk', '@taiga-ui/experimental/tokens'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].experimental = global["taiga-ui"].experimental || {}, global["taiga-ui"].experimental.components = global["taiga-ui"].experimental.components || {}, global["taiga-ui"].experimental.components.toggle = {}), global.ng.core, global.ng.forms, global.cdk, global["taiga-ui"].experimental.tokens));
})(this, (function (exports, i0, i1, cdk, tokens) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    var TUI_TOGGLE_DEFAULT_OPTIONS = {
        showIcons: true,
        size: 'm',
        icon: 'tuiIconCheck',
    };
    var TUI_TOGGLE_OPTIONS = cdk.tuiCreateToken(TUI_TOGGLE_DEFAULT_OPTIONS);
    function tuiToggleOptionsProvider(options) {
        return cdk.tuiProvideOptions(TUI_TOGGLE_OPTIONS, options, TUI_TOGGLE_DEFAULT_OPTIONS);
    }

    var TuiToggleComponent = /** @class */ (function () {
        function TuiToggleComponent(resolver, options, control) {
            this.resolver = resolver;
            this.options = options;
            this.control = control;
            this.size = this.options.size;
            this.showIcons = this.options.showIcons;
        }
        Object.defineProperty(TuiToggleComponent.prototype, "icon", {
            get: function () {
                var _a = this, options = _a.options, resolver = _a.resolver, size = _a.size;
                var icon = cdk.tuiIsString(options.icon) ? options.icon : options.icon(size);
                return "url(" + resolver(icon) + ")";
            },
            enumerable: false,
            configurable: true
        });
        return TuiToggleComponent;
    }());
    TuiToggleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiToggleComponent, deps: [{ token: tokens.TUI_ICON_RESOLVER }, { token: TUI_TOGGLE_OPTIONS }, { token: i1.NgControl, optional: true }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiToggleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiToggleComponent, selector: "input[type=\"checkbox\"][tuiToggle]", inputs: { size: "size", showIcons: "showIcons" }, host: { attributes: { "tuiAppearance": "" }, properties: { "disabled": "!control || control.disabled", "attr.data-size": "size", "class._invalid": "control?.invalid && control?.touched", "class._readonly": "!control", "class._icons": "showIcons", "style.--t-mask": "this.icon" } }, ngImport: i0__namespace, template: '', isInline: true, styles: [":host{transition-property:background,box-shadow;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;width:3rem;height:1.5rem;border-radius:2rem;color:var(--tui-primary-text);overflow:hidden;cursor:pointer;margin:0;background:var(--tui-secondary)}:host[data-size=s]{height:1rem;width:2rem}:host[data-size=s]:before{width:1rem;transform:translate(-1rem);-webkit-mask-size:.75rem;mask-size:.75rem}:host[data-size=s]:after{width:1rem;box-shadow:-2rem 0 0 .25rem var(--tui-text-01-night)}:host[data-size=s]:checked:after{transform:scale(.5) translate(2rem)}:host:hover{background:var(--tui-secondary-hover)}:host:active{background:var(--tui-secondary-active)}:host:checked{background:var(--tui-primary)}:host:checked:hover{background:var(--tui-primary-hover)}:host:checked:active{background:var(--tui-primary-active)}:host:checked:before{transform:none}:host:checked:after{transform:scale(.5) translate(3rem)}:host:disabled._readonly{opacity:1}:host:before,:host:after{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;content:\"\";position:absolute;height:100%;width:1.5rem}:host:before{display:none;background:currentColor;-webkit-mask:var(--t-mask) no-repeat center;mask:var(--t-mask) no-repeat center;-webkit-mask-size:1rem;mask-size:1rem;transform:translate(-1.5rem)}:host:after{right:0;border-radius:100%;transform:scale(.5);box-shadow:-3rem 0 0 .25rem var(--tui-text-01-night)}:host._icons:before{display:block}:host._icons:after{box-shadow:inset 0 0 0 .25rem var(--tui-clear-active),-3rem 0 0 .25rem var(--tui-text-01-night)}:host._icons[data-size=s]:after{box-shadow:inset 0 0 0 .125rem var(--tui-clear-active),-2rem 0 0 .25rem var(--tui-text-01-night)}:host._invalid{background:var(--tui-error-bg)}:host._invalid:hover,:host._invalid:active{background:var(--tui-error-bg-hover)}:host._invalid:checked{background:var(--tui-error-fill)}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiToggleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'input[type="checkbox"][tuiToggle]',
                        template: '',
                        styleUrls: ['./toggle.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        host: {
                            tuiAppearance: '',
                            '[disabled]': '!control || control.disabled',
                            '[attr.data-size]': 'size',
                            '[class._invalid]': 'control?.invalid && control?.touched',
                            '[class._readonly]': '!control',
                            '[class._icons]': 'showIcons',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_ICON_RESOLVER]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_TOGGLE_OPTIONS]
                        }] }, { type: i1__namespace.NgControl, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i1.NgControl]
                        }] }];
        }, propDecorators: { size: [{
                    type: i0.Input
                }], showIcons: [{
                    type: i0.Input
                }], icon: [{
                    type: i0.HostBinding,
                    args: ['style.--t-mask']
                }] } });

    var TuiToggleModule = /** @class */ (function () {
        function TuiToggleModule() {
        }
        return TuiToggleModule;
    }());
    TuiToggleModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiToggleModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiToggleModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiToggleModule, declarations: [TuiToggleComponent], exports: [TuiToggleComponent] });
    TuiToggleModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiToggleModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiToggleModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TuiToggleComponent],
                        exports: [TuiToggleComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_TOGGLE_DEFAULT_OPTIONS = TUI_TOGGLE_DEFAULT_OPTIONS;
    exports.TUI_TOGGLE_OPTIONS = TUI_TOGGLE_OPTIONS;
    exports.TuiToggleComponent = TuiToggleComponent;
    exports.TuiToggleModule = TuiToggleModule;
    exports.tuiToggleOptionsProvider = tuiToggleOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-experimental-components-toggle.umd.js.map

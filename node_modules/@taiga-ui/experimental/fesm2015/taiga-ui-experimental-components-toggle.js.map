{"version":3,"file":"taiga-ui-experimental-components-toggle.js","sources":["../../../projects/experimental/components/toggle/toggle.options.ts","../../../projects/experimental/components/toggle/toggle.component.ts","../../../projects/experimental/components/toggle/toggle.module.ts","../../../projects/experimental/components/toggle/taiga-ui-experimental-components-toggle.ts"],"sourcesContent":["import {Provider} from '@angular/core';\nimport {tuiCreateToken, TuiMapper, tuiProvideOptions} from '@taiga-ui/cdk';\nimport {TuiSizeS} from '@taiga-ui/core';\n\nexport interface TuiToggleOptions {\n    readonly showIcons: boolean;\n    readonly size: TuiSizeS;\n    readonly icon: TuiMapper<TuiSizeS, string> | string;\n}\n\nexport const TUI_TOGGLE_DEFAULT_OPTIONS: TuiToggleOptions = {\n    showIcons: true,\n    size: 'm',\n    icon: 'tuiIconCheck',\n};\n\nexport const TUI_TOGGLE_OPTIONS = tuiCreateToken(TUI_TOGGLE_DEFAULT_OPTIONS);\n\nexport function tuiToggleOptionsProvider(options: Partial<TuiToggleOptions>): Provider {\n    return tuiProvideOptions(TUI_TOGGLE_OPTIONS, options, TUI_TOGGLE_DEFAULT_OPTIONS);\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    Inject,\n    Input,\n    Optional,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {tuiIsString, TuiStringHandler} from '@taiga-ui/cdk';\nimport {TUI_ICON_RESOLVER} from '@taiga-ui/experimental/tokens';\n\nimport {TUI_TOGGLE_OPTIONS, TuiToggleOptions} from './toggle.options';\n\n@Component({\n    selector: 'input[type=\"checkbox\"][tuiToggle]',\n    template: '',\n    styleUrls: ['./toggle.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        tuiAppearance: '', // Apply base appearance\n        '[disabled]': '!control || control.disabled',\n        '[attr.data-size]': 'size',\n        '[class._invalid]': 'control?.invalid && control?.touched',\n        '[class._readonly]': '!control',\n        '[class._icons]': 'showIcons',\n    },\n})\nexport class TuiToggleComponent {\n    @Input()\n    size = this.options.size;\n\n    @Input()\n    showIcons = this.options.showIcons;\n\n    constructor(\n        @Inject(TUI_ICON_RESOLVER) private readonly resolver: TuiStringHandler<string>,\n        @Inject(TUI_TOGGLE_OPTIONS) private readonly options: TuiToggleOptions,\n        @Optional() @Inject(NgControl) readonly control: NgControl | null,\n    ) {}\n\n    @HostBinding('style.--t-mask')\n    get icon(): string {\n        const {options, resolver, size} = this;\n        const icon = tuiIsString(options.icon) ? options.icon : options.icon(size);\n\n        return `url(${resolver(icon)})`;\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiToggleComponent} from './toggle.component';\n\n@NgModule({\n    declarations: [TuiToggleComponent],\n    exports: [TuiToggleComponent],\n})\nexport class TuiToggleModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
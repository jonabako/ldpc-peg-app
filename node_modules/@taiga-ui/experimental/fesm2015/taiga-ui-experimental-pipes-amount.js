import * as i0 from '@angular/core';
import { Pipe, Inject, NgModule } from '@angular/core';
import { tuiFormatSignSymbol, tuiFormatCurrency } from '@taiga-ui/addon-commerce';
import { tuiCreateToken, tuiProvideOptions, CHAR_NO_BREAK_SPACE } from '@taiga-ui/cdk';
import { tuiFormatNumber, TUI_NUMBER_FORMAT_OBSERVABLE } from '@taiga-ui/core';
import { map } from 'rxjs/operators';
import * as i1 from 'rxjs';

const TUI_AMOUNT_DEFAULT_OPTIONS = {
    currency: null,
    currencyAlign: 'right',
    sign: 'negative-only',
};
const TUI_AMOUNT_OPTIONS = tuiCreateToken(TUI_AMOUNT_DEFAULT_OPTIONS);
function tuiAmountOptionsProvider(options) {
    return tuiProvideOptions(TUI_AMOUNT_OPTIONS, options, TUI_AMOUNT_DEFAULT_OPTIONS);
}

const DEFAULT_DECIMAL_LIMIT = 2;
class TuiAmountPipePipe {
    constructor(options, format) {
        this.options = options;
        this.format = format;
    }
    transform(value, currency = this.options.currency, currencyAlign = this.options.currencyAlign) {
        return this.format.pipe(map(format => {
            const sign = tuiFormatSignSymbol(value, this.options.sign);
            const currencySymbol = tuiFormatCurrency(currency);
            const formatted = tuiFormatNumber(Math.abs(value), Object.assign(Object.assign({}, format), { decimalLimit: this.getDecimalLimit(value, Number.isNaN(format.decimalLimit)
                    ? DEFAULT_DECIMAL_LIMIT
                    : format.decimalLimit, (format === null || format === void 0 ? void 0 : format.decimal) || 'not-zero') }));
            const space = (currencySymbol === null || currencySymbol === void 0 ? void 0 : currencySymbol.length) > 1 || currencyAlign === 'right'
                ? CHAR_NO_BREAK_SPACE
                : '';
            return currencyAlign === 'right'
                ? `${sign}${formatted}${space}${currencySymbol}`
                : `${sign}${currencySymbol}${space}${formatted}`;
        }));
    }
    getDecimalLimit(value, limit, decimal) {
        return decimal === 'always' || (decimal === 'not-zero' && value % 1) ? limit : 0;
    }
}
TuiAmountPipePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAmountPipePipe, deps: [{ token: TUI_AMOUNT_OPTIONS }, { token: TUI_NUMBER_FORMAT_OBSERVABLE }], target: i0.ɵɵFactoryTarget.Pipe });
TuiAmountPipePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAmountPipePipe, name: "tuiAmount" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAmountPipePipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'tuiAmount',
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_AMOUNT_OPTIONS]
                }] }, { type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_NUMBER_FORMAT_OBSERVABLE]
                }] }]; } });

class TuiAmountPipeModule {
}
TuiAmountPipeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAmountPipeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiAmountPipeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAmountPipeModule, declarations: [TuiAmountPipePipe], exports: [TuiAmountPipePipe] });
TuiAmountPipeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAmountPipeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAmountPipeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiAmountPipePipe],
                    exports: [TuiAmountPipePipe],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_AMOUNT_DEFAULT_OPTIONS, TUI_AMOUNT_OPTIONS, TuiAmountPipeModule, TuiAmountPipePipe, tuiAmountOptionsProvider };
//# sourceMappingURL=taiga-ui-experimental-pipes-amount.js.map

import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Inject, Input, HostListener, ViewEncapsulation, Directive, NgModule } from '@angular/core';
import * as i2 from '@taiga-ui/cdk';
import { tuiCreateToken, tuiProvideOptions, tuiIsString, TuiDirectiveStylesService } from '@taiga-ui/cdk';
import * as i1 from '@taiga-ui/core';
import { tuiSizeBigger, TUI_MODE, MODE_PROVIDER, TuiSvgModule, TuiLoaderModule } from '@taiga-ui/core';
import * as i1$1 from 'rxjs';
import { CommonModule } from '@angular/common';
import { TuiIconsModule, TuiIconsDirective } from '@taiga-ui/experimental/directives/icons';

const TUI_BUTTON_DEFAULT_OPTIONS = {
    size: 'l',
    appearance: 'primary',
};
const TUI_BUTTON_OPTIONS = tuiCreateToken(TUI_BUTTON_DEFAULT_OPTIONS);
function tuiButtonOptionsProvider(options) {
    return tuiProvideOptions(TUI_BUTTON_OPTIONS, options, TUI_BUTTON_DEFAULT_OPTIONS);
}

class TuiButtonComponent {
    constructor(options) {
        this.options = options;
        this.size = this.options.size;
        this.loading = false;
    }
    get loaderSize() {
        return tuiSizeBigger(this.size) ? 'm' : 's';
    }
    get label() {
        return tuiIsString(this.loading) ? this.loading : '';
    }
    onClick(event) {
        if (this.loading) {
            event.stopPropagation();
        }
    }
}
TuiButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiButtonComponent, deps: [{ token: TUI_BUTTON_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });
TuiButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiButtonComponent, selector: "[tuiButton][loading],[tuiIconButton][loading]", inputs: { size: "size", loading: "loading" }, host: { listeners: { "click.capture": "onClick($event)" }, properties: { "attr.aria-disabled": "loading", "class._loading": "loading" } }, ngImport: i0, template: "<ng-content></ng-content>\n<tui-loader\n    aria-live=\"polite\"\n    role=\"status\"\n    class=\"t-loader\"\n    [inheritColor]=\"true\"\n    [showLoader]=\"!!loading\"\n    [size]=\"loaderSize\"\n    [textContent]=\"label\"\n></tui-loader>\n", components: [{ type: i1.TuiLoaderComponent, selector: "tui-loader", inputs: ["size", "inheritColor", "overlay", "textContent", "showLoader"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiButtonComponent, decorators: [{
            type: Component,
            args: [{
                    selector: '[tuiButton][loading],[tuiIconButton][loading]',
                    templateUrl: './button.template.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[attr.aria-disabled]': 'loading',
                        '[class._loading]': 'loading',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_BUTTON_OPTIONS]
                }] }]; }, propDecorators: { size: [{
                type: Input
            }], loading: [{
                type: Input
            }], onClick: [{
                type: HostListener,
                args: ['click.capture', ['$event']]
            }] } });

class TuiButtonStylesComponent {
}
TuiButtonStylesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiButtonStylesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TuiButtonStylesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiButtonStylesComponent, selector: "ng-component", host: { classAttribute: "tui-button-styles" }, ngImport: i0, template: '', isInline: true, styles: ["[tuiButtonNew]{--t-gap: .125rem;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;text-decoration:none;position:relative;display:inline-flex;align-items:center;flex-shrink:0;box-sizing:border-box;white-space:nowrap;overflow:hidden;vertical-align:middle;max-width:100%;grid-gap:calc(var(--t-gap) - 2 * var(--t-margin));gap:calc(var(--t-gap) - 2 * var(--t-margin));height:var(--t-size);justify-content:center;border-radius:var(--t-radius);padding:var(--t-padding);-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer}[tuiButtonNew]>img,[tuiButtonNew]>tui-svg,[tuiButtonNew]>tui-icon,[tuiButtonNew]>tui-avatar,[tuiButtonNew]>tui-badge,[tuiButtonNew]>[tuiBadge],[tuiButtonNew]>[tuiRadio],[tuiButtonNew]>[tuiToggle],[tuiButtonNew]>[tuiCheckbox],[tuiButtonNew]._icon-left:before,[tuiButtonNew]._icon-right:after{margin:var(--t-margin)}[tuiButtonNew]>.t-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}[tuiButtonNew]>.t-loader .t-text{position:absolute}[tuiButtonNew][data-size=xs]{--t-size: var(--tui-height-xs);--t-radius: var(--tui-radius-xs);--t-padding: 0 .375rem;--t-margin: -.125rem;font:var(--tui-font-text-s)}[tuiButtonNew][data-size=xs] tui-svg,[tuiButtonNew][data-size=xs] tui-icon,[tuiButtonNew][data-size=xs]:before{font-size:1rem}[tuiButtonNew][data-size=s]{--t-size: var(--tui-height-s);--t-radius: var(--tui-radius-s);--t-padding: 0 .625rem;--t-margin: -.125rem;font:var(--tui-font-text-s)}[tuiButtonNew][data-size=s] tui-svg,[tuiButtonNew][data-size=s] tui-icon,[tuiButtonNew][data-size=s]:not([tuiIconButton][data-appearance=\"icon\"]):before{font-size:1rem}[tuiButtonNew][data-size=m]{--t-size: var(--tui-height-m);--t-radius: var(--tui-radius-m);--t-padding: 0 1rem;--t-margin: -.375rem;font:var(--tui-font-text-m);font-weight:bold}[tuiButtonNew][data-size=m]:after{-webkit-margin-end:-.125rem;margin-inline-end:-.125rem}[tuiButtonNew][data-size=l]{--t-size: var(--tui-height-l);--t-radius: var(--tui-radius-l);--t-padding: 0 1.25rem;--t-gap: .25rem;--t-margin: -.25rem;font:var(--tui-font-text-m);font-weight:bold}[tuiButtonNew][data-size=l]:after{-webkit-margin-start:.25rem;margin-inline-start:.25rem;-webkit-margin-end:-.25rem;margin-inline-end:-.25rem}[tuiButtonNew]._loading{--tui-disabled-opacity: 1;-webkit-text-fill-color:transparent}[tuiButtonNew]._loading>*,[tuiButtonNew]._loading:before,[tuiButtonNew]._loading:after{opacity:0}[tuiButtonNew]._loading>.t-loader{opacity:1}[tuiButtonNew][tuiIcons]:after{font-size:1rem}[tuiIconButton][tuiButtonNew]{--t-gap: 0;width:var(--t-size);font-size:0;padding:0}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiButtonStylesComponent, decorators: [{
            type: Component,
            args: [{
                    template: '',
                    styleUrls: ['./button.style.less'],
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        class: 'tui-button-styles',
                    },
                }]
        }] });
class TuiButtonDirective {
    constructor(options, mode$, directiveStyles) {
        this.options = options;
        this.mode$ = mode$;
        this.size = this.options.size;
        this.appearance = this.options.appearance;
        directiveStyles.addComponent(TuiButtonStylesComponent);
    }
}
TuiButtonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiButtonDirective, deps: [{ token: TUI_BUTTON_OPTIONS }, { token: TUI_MODE }, { token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiButtonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiButtonDirective, selector: "a[tuiButton],button[tuiButton],a[tuiIconButton],button[tuiIconButton]", inputs: { size: "size", appearance: "appearance" }, host: { attributes: { "tuiButtonNew": "", "tuiAppearance": "" }, listeners: { "$.data-mode.attr": "mode$" }, properties: { "attr.data-size": "size", "attr.data-appearance": "appearance" } }, providers: [MODE_PROVIDER], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiButtonDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'a[tuiButton],button[tuiButton],a[tuiIconButton],button[tuiIconButton]',
                    providers: [MODE_PROVIDER],
                    host: {
                        tuiButtonNew: '',
                        tuiAppearance: '',
                        '[attr.data-size]': 'size',
                        '[attr.data-appearance]': 'appearance',
                        '($.data-mode.attr)': 'mode$',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_BUTTON_OPTIONS]
                }] }, { type: i1$1.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }, { type: i2.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { size: [{
                type: Input
            }], appearance: [{
                type: Input
            }] } });

class TuiButtonModule {
}
TuiButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiButtonModule, declarations: [TuiButtonComponent, TuiButtonDirective, TuiButtonStylesComponent], imports: [CommonModule, TuiSvgModule, TuiLoaderModule, TuiIconsModule], exports: [TuiButtonComponent, TuiButtonDirective, TuiIconsDirective] });
TuiButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiButtonModule, imports: [[CommonModule, TuiSvgModule, TuiLoaderModule, TuiIconsModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiButtonModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, TuiSvgModule, TuiLoaderModule, TuiIconsModule],
                    declarations: [TuiButtonComponent, TuiButtonDirective, TuiButtonStylesComponent],
                    exports: [TuiButtonComponent, TuiButtonDirective, TuiIconsDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_BUTTON_DEFAULT_OPTIONS, TUI_BUTTON_OPTIONS, TuiButtonComponent, TuiButtonDirective, TuiButtonModule, TuiButtonStylesComponent, tuiButtonOptionsProvider };
//# sourceMappingURL=taiga-ui-experimental-components-button.js.map

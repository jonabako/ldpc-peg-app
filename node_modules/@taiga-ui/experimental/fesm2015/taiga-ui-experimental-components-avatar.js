import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Inject, Input, NgModule } from '@angular/core';
import { tuiCreateToken, tuiProvideOptions, tuiIsString } from '@taiga-ui/cdk';
import { TUI_ICON_RESOLVER } from '@taiga-ui/experimental/tokens';
import * as i1 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i2 from '@taiga-ui/kit';
import { TuiLazyLoadingModule } from '@taiga-ui/kit';
import { TuiIconModule } from '@taiga-ui/experimental/components/icon';

const TUI_AVATAR_DEFAULT_OPTIONS = {
    appearance: '',
    round: true,
    size: 'l',
};
const TUI_AVATAR_OPTIONS = tuiCreateToken(TUI_AVATAR_DEFAULT_OPTIONS);
function tuiAvatarOptionsProvider(options) {
    return tuiProvideOptions(TUI_AVATAR_OPTIONS, options, TUI_AVATAR_DEFAULT_OPTIONS);
}

class TuiAvatarComponent {
    constructor(options, resolver) {
        this.options = options;
        this.resolver = resolver;
        this.size = this.options.size;
        this.round = this.options.round;
        this.src = null;
        this.appearance = this.options.appearance;
    }
    get safeSrc() {
        var _a, _b;
        return (_b = (_a = this.src) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '';
    }
    get value() {
        return this.src || '';
    }
    get type() {
        if (this.value && !tuiIsString(this.value)) {
            return 'img';
        }
        if (this.value.startsWith('tuiIcon') || this.value.endsWith('.svg')) {
            return 'icon';
        }
        if (this.value.length > 0 && this.value.length < 3) {
            return 'text';
        }
        return this.value.length ? 'img' : 'content';
    }
}
TuiAvatarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAvatarComponent, deps: [{ token: TUI_AVATAR_OPTIONS }, { token: TUI_ICON_RESOLVER }], target: i0.ɵɵFactoryTarget.Component });
TuiAvatarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiAvatarComponent, selector: "tui-avatar", inputs: { size: "size", round: "round", src: "src", appearance: "appearance" }, host: { attributes: { "tuiAppearance": "" }, properties: { "attr.data-appearance": "appearance", "attr.data-size": "size", "attr.data-type": "type", "style.--t-mask": "\"url(\" + resolver(safeSrc) + \")\"", "class._round": "round" } }, ngImport: i0, template: "<ng-container [ngSwitch]=\"type\">\n    <img\n        *ngSwitchCase=\"'img'\"\n        alt=\"\"\n        loading=\"lazy\"\n        [src]=\"value\"\n    />\n    <ng-container *ngSwitchCase=\"'text'\">{{ value }}</ng-container>\n    <ng-container *ngSwitchDefault>\n        <ng-content></ng-content>\n    </ng-container>\n</ng-container>\n", styles: [":host{--t-size: 3.5rem;--t-radius: .75rem;position:relative;display:inline-flex;flex-shrink:0;width:var(--t-size);height:var(--t-size);align-items:center;justify-content:center;overflow:hidden;white-space:nowrap;border-radius:var(--t-radius);background:var(--tui-secondary);color:var(--tui-text-02);vertical-align:middle;box-sizing:border-box;padding:.25rem;opacity:.999}:host:before{position:absolute;top:0;left:0;width:100%;height:100%;background:currentColor;-webkit-mask:var(--t-mask) no-repeat center / 60%;mask:var(--t-mask) no-repeat center / 60%}:host[data-size=xs]{--t-size: var(--tui-height-xs);--t-radius: .5rem;font:var(--tui-font-text-xs);font-weight:bold}:host[data-size=xs][data-type=content]{font:var(--tui-font-text-m);font-size:.5625rem}:host[data-size=s]{--t-size: var(--tui-height-s);--t-radius: .5rem;font:var(--tui-font-text-s);font-weight:bold}:host[data-size=s][data-type=content]{font:var(--tui-font-text-xs);font-weight:bold}:host[data-size=m]{--t-size: calc(var(--tui-height-m) - .25rem);--t-radius: .75rem;font:var(--tui-font-text-l);font-weight:bold}:host[data-size=m][data-type=content]{font:var(--tui-font-text-m);font-weight:bold}:host[data-size=l]{--t-size: var(--tui-height-l);--t-radius: .75rem;font:var(--tui-font-heading-5)}:host[data-size=l][data-type=content]{font:var(--tui-font-text-l);font-weight:bold}:host[data-size=xl]{--t-size: 5rem;--t-radius: .75rem;font:var(--tui-font-heading-3)}:host[data-size=xl][data-type=content]{font:var(--tui-font-heading-4)}:host[data-size=xxl]{--t-size: 6rem;--t-radius: 1rem;font:var(--tui-font-heading-3)}:host[data-size=xxl][data-type=content]{font:var(--tui-font-heading-3)}:host[data-size=xxxl]{--t-size: 8rem;--t-radius: 1.25rem;font:var(--tui-font-heading-2)}:host[data-size=xxxl][data-type=content]{font:var(--tui-font-heading-3)}:host[data-type=img]{background:transparent}:host[data-type=icon]:before{content:\"\"}:host._round{--t-radius: calc(var(--t-size) / 2)}:host ::ng-deep img,:host ::ng-deep picture,:host ::ng-deep video{position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover}\n"], directives: [{ type: i1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i2.TuiLazyLoadingDirective, selector: "img[loading=\"lazy\"]", inputs: ["src"] }, { type: i1.NgSwitchDefault, selector: "[ngSwitchDefault]" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAvatarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-avatar',
                    templateUrl: './avatar.template.html',
                    styleUrls: ['./avatar.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        tuiAppearance: '',
                        '[attr.data-appearance]': 'appearance',
                        '[attr.data-size]': 'size',
                        '[attr.data-type]': 'type',
                        '[style.--t-mask]': '"url(" + resolver(safeSrc) + ")"',
                        '[class._round]': 'round',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_AVATAR_OPTIONS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ICON_RESOLVER]
                }] }]; }, propDecorators: { size: [{
                type: Input
            }], round: [{
                type: Input
            }], src: [{
                type: Input
            }], appearance: [{
                type: Input
            }] } });

class TuiAvatarModule {
}
TuiAvatarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAvatarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiAvatarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAvatarModule, declarations: [TuiAvatarComponent], imports: [CommonModule, TuiIconModule, TuiLazyLoadingModule], exports: [TuiAvatarComponent] });
TuiAvatarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAvatarModule, imports: [[CommonModule, TuiIconModule, TuiLazyLoadingModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAvatarModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, TuiIconModule, TuiLazyLoadingModule],
                    declarations: [TuiAvatarComponent],
                    exports: [TuiAvatarComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_AVATAR_DEFAULT_OPTIONS, TUI_AVATAR_OPTIONS, TuiAvatarComponent, TuiAvatarModule, tuiAvatarOptionsProvider };
//# sourceMappingURL=taiga-ui-experimental-components-avatar.js.map

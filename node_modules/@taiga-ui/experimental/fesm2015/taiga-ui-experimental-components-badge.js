import * as i0 from '@angular/core';
import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Inject, Input, NgModule } from '@angular/core';
import * as i1 from '@taiga-ui/cdk';
import { tuiCreateToken, tuiProvideOptions, TuiDirectiveStylesService } from '@taiga-ui/cdk';
import { TuiIconsModule, TuiIconsDirective } from '@taiga-ui/experimental/directives/icons';

class TuiBadgeComponent {
}
TuiBadgeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TuiBadgeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiBadgeComponent, selector: "ng-component", host: { classAttribute: "tui-badge" }, ngImport: i0, template: '', isInline: true, styles: ["[tuiBadgeNew]{--t-gap: 0rem;--t-dot: currentColor;--t-icon-size: 1rem;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;text-decoration:none;position:relative;display:inline-flex;align-items:center;flex-shrink:0;box-sizing:border-box;white-space:nowrap;overflow:hidden;vertical-align:middle;max-width:100%;grid-gap:calc(var(--t-gap) - 2 * var(--t-margin));gap:calc(var(--t-gap) - 2 * var(--t-margin));border-radius:6rem;background:#959595;color:var(--tui-base-01);padding:var(--t-padding);height:var(--t-size);min-width:var(--t-size);width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;font:var(--tui-font-text-s)}[tuiBadgeNew]>img,[tuiBadgeNew]>tui-svg,[tuiBadgeNew]>tui-icon,[tuiBadgeNew]>tui-avatar,[tuiBadgeNew]>tui-badge,[tuiBadgeNew]>[tuiBadge],[tuiBadgeNew]>[tuiRadio],[tuiBadgeNew]>[tuiToggle],[tuiBadgeNew]>[tuiCheckbox],[tuiBadgeNew]._icon-left:before,[tuiBadgeNew]._icon-right:after{margin:var(--t-margin)}[tuiBadgeNew]._dot:before{content:\"\";display:block;width:.375rem;height:.375rem;background:var(--t-dot);border-radius:100%}[tuiBadgeNew]>tui-icon,[tuiBadgeNew][tuiIcons]:before,[tuiBadgeNew][tuiIcons]:after{font-size:var(--t-icon-size)!important}[tuiBadgeNew][data-appearance=error]{--t-dot: var(--tui-error-fill)}[tuiBadgeNew][data-appearance=success]{--t-dot: var(--tui-success-fill)}[tuiBadgeNew][data-appearance=warning]{--t-dot: var(--tui-warning-fill)}[tuiBadgeNew][data-appearance=info]{--t-dot: var(--tui-info-fill)}[tuiBadgeNew][data-appearance=neutral]{--t-dot: var(--tui-neutral-fill)}[tuiBadgeNew][data-size=s]{--t-padding: 0 .3125rem;--t-size: 1rem;--t-icon-size: .625rem;--t-margin: -.125rem}[tuiBadgeNew][data-size=s]._dot:before{width:.25rem;height:.25rem;-webkit-margin-end:-.125rem;margin-inline-end:-.125rem}[tuiBadgeNew][data-size=m]{--t-padding: 0 .375rem;--t-size: 1.25rem;--t-icon-size: .75rem;--t-margin: -.125rem}[tuiBadgeNew][data-size=l]{--t-padding: 0 .5rem;--t-size: var(--tui-height-xs);--t-margin: -.25rem}[tuiBadgeNew][data-size=l]._dot:before{-webkit-margin-end:-.25rem;margin-inline-end:-.25rem}[tuiBadgeNew][data-size=xl]{--t-margin: -.25rem;--t-padding: 0 .75rem;--t-size: var(--tui-height-s);font:var(--tui-font-text-m)}[tuiBadgeNew][data-size=xl]._dot:before{width:.5rem;height:.5rem;-webkit-margin-end:-.125rem;margin-inline-end:-.125rem}img[tuiBadge]{padding:0}tui-icon[tuiBadge]{--t-margin: 0 !important;-webkit-mask:none;mask:none;height:var(--t-size);width:var(--t-size)}tui-icon[tuiBadge][data-size=s]:after{-webkit-mask-size:.625rem;mask-size:.625rem}tui-icon[tuiBadge][data-size=m]:after{-webkit-mask-size:.75rem;mask-size:.75rem}tui-icon[tuiBadge][data-size=l]:after,tui-icon[tuiBadge][data-size=xl]:after{-webkit-mask-size:1rem;mask-size:1rem}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeComponent, decorators: [{
            type: Component,
            args: [{
                    template: '',
                    styleUrls: ['./badge.style.less'],
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        class: 'tui-badge',
                    },
                }]
        }] });

const TUI_BADGE_DEFAULT_OPTIONS = {
    size: 'l',
    appearance: 'default',
    dot: false,
};
const TUI_BADGE_OPTIONS = tuiCreateToken(TUI_BADGE_DEFAULT_OPTIONS);
function tuiBadgeOptionsProvider(options) {
    return tuiProvideOptions(TUI_BADGE_OPTIONS, options, TUI_BADGE_DEFAULT_OPTIONS);
}

class TuiBadgeDirective {
    constructor(options, directiveStyles) {
        this.options = options;
        this.size = this.options.size;
        this.appearance = this.options.appearance;
        this.dot = this.options.dot;
        directiveStyles.addComponent(TuiBadgeComponent);
    }
}
TuiBadgeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeDirective, deps: [{ token: TUI_BADGE_OPTIONS }, { token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiBadgeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiBadgeDirective, selector: "tui-badge,[tuiBadge]", inputs: { size: "size", appearance: "appearance", dot: "dot" }, host: { attributes: { "tuiBadgeNew": "", "tuiAppearance": "" }, properties: { "class._dot": "dot", "attr.data-appearance": "appearance", "attr.data-size": "size" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'tui-badge,[tuiBadge]',
                    host: {
                        tuiBadgeNew: '',
                        tuiAppearance: '',
                        '[class._dot]': 'dot',
                        '[attr.data-appearance]': 'appearance',
                        '[attr.data-size]': 'size',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_BADGE_OPTIONS]
                }] }, { type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { size: [{
                type: Input
            }], appearance: [{
                type: Input
            }], dot: [{
                type: Input
            }] } });

class TuiBadgeModule {
}
TuiBadgeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiBadgeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeModule, declarations: [TuiBadgeComponent, TuiBadgeDirective], imports: [TuiIconsModule], exports: [TuiBadgeDirective, TuiIconsDirective] });
TuiBadgeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeModule, imports: [[TuiIconsModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgeModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [TuiIconsModule],
                    declarations: [TuiBadgeComponent, TuiBadgeDirective],
                    exports: [TuiBadgeDirective, TuiIconsDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_BADGE_DEFAULT_OPTIONS, TUI_BADGE_OPTIONS, TuiBadgeComponent, TuiBadgeDirective, TuiBadgeModule, tuiBadgeOptionsProvider };
//# sourceMappingURL=taiga-ui-experimental-components-badge.js.map

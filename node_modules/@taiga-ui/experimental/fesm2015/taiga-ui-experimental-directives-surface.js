import * as i0 from '@angular/core';
import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Inject, Input, NgModule } from '@angular/core';
import * as i1 from '@taiga-ui/cdk';
import { TuiDirectiveStylesService } from '@taiga-ui/cdk';

class TuiSurfaceComponent {
}
TuiSurfaceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSurfaceComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TuiSurfaceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiSurfaceComponent, selector: "ng-component", host: { classAttribute: "tui-surface-styles" }, ngImport: i0, template: '', isInline: true, styles: ["[data-surface]{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;--tui-gap: .25rem;position:relative;box-sizing:border-box;background:none no-repeat;background-size:cover;overflow:hidden;isolation:isolate;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:0;font-size:inherit;line-height:inherit;text-decoration:none;transition-property:background,border-radius,box-shadow,transform,-webkit-backdrop-filter,-webkit-mask!important;transition-property:backdrop-filter,background,border-radius,box-shadow,mask,transform!important;transition-property:backdrop-filter,background,border-radius,box-shadow,mask,transform,-webkit-backdrop-filter,-webkit-mask!important}[data-surface]:focus-visible{outline-color:var(--tui-focus)}@supports (not (-moz-appearance: none)) and (not (-webkit-hyphens: none)){[data-surface]:before{mix-blend-mode:multiply}}button[data-surface]{cursor:pointer}[data-surface]:before,[data-surface]:after,[tuiSurfaceLayer]:before,[tuiSurfaceLayer]:after{position:absolute;top:0;left:0;width:100%;height:100%;transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;content:\"\";z-index:-1;border-radius:inherit;pointer-events:none;background-size:cover;background-repeat:no-repeat;transition-property:opacity,transform,-webkit-backdrop-filter;transition-property:opacity,backdrop-filter,transform;transition-property:opacity,backdrop-filter,transform,-webkit-backdrop-filter}[tuiSurfaceLayer]{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;top:0;left:0;width:100%;height:100%;position:absolute!important;z-index:-1;object-fit:cover;border-radius:inherit;box-sizing:border-box;transition-property:box-shadow,filter,padding}input[tuiSurfaceLayer]+[tuiSurfaceLayer]{will-change:padding;background-clip:content-box;overflow:clip;overflow-clip-margin:content-box}input[tuiSurfaceLayer]:checked+[tuiSurfaceLayer]{padding:var(--tui-gap)}input[tuiSurfaceLayer]:focus-visible+[tuiSurfaceLayer]{padding:var(--tui-gap)}@media (hover: hover) and (pointer: fine){[data-surface]:hover input[tuiSurfaceLayer]+[tuiSurfaceLayer]{padding:var(--tui-gap)}}input[tuiSurfaceLayer]{color:var(--tui-accent);-webkit-appearance:none;-moz-appearance:none;appearance:none;margin:0;border-radius:inherit;outline:none;box-shadow:inset 0 0,inset 0 0 var(--tui-base-03)}input[tuiSurfaceLayer]:checked{box-shadow:inset 0 0 0 calc(var(--tui-gap) / 2),inset 0 0 var(--tui-base-03)}input[tuiSurfaceLayer]:focus-visible{box-shadow:inset 0 0,inset 0 0 0 calc(var(--tui-gap) / 2) var(--tui-base-03)}input[tuiSurfaceLayer]:checked:focus-visible{filter:brightness(.7);box-shadow:inset 0 0 0 calc(var(--tui-gap) / 2),inset 0 0 0 calc(var(--tui-gap) / 2) var(--tui-base-03)}@media (hover: hover) and (pointer: fine){[data-surface]:hover input[tuiSurfaceLayer]{box-shadow:inset 0 0,inset 0 0 0 calc(var(--tui-gap) / 2) var(--tui-base-03)}[data-surface]:hover input[tuiSurfaceLayer]:checked{filter:brightness(.9);box-shadow:inset 0 0 0 calc(var(--tui-gap) / 2),inset 0 0 0 calc(var(--tui-gap) / 2) var(--tui-base-03)}}[tuiSurface][data-surface=elevated]{box-shadow:var(--tui-shadow);background-color:var(--tui-elevation-01)}button[tuiSurface][data-surface=elevated]:active,a[tuiSurface][data-surface=elevated]:active{box-shadow:var(--tui-shadow);transform:scale(.95)}@media (hover: hover) and (pointer: fine){button[tuiSurface][data-surface=elevated]:hover,a[tuiSurface][data-surface=elevated]:hover{box-shadow:var(--tui-shadow-hover);transform:translateY(-.25rem);background:var(--tui-elevation-01)}}[tuiSurface][data-surface=flat]{background-color:var(--tui-clear)}button[tuiSurface][data-surface=flat]:active,a[tuiSurface][data-surface=flat]:active{transform:scale(.95)}@media (hover: hover) and (pointer: fine){button[tuiSurface][data-surface=flat]:hover,a[tuiSurface][data-surface=flat]:hover{transform:scale(1.15)}}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSurfaceComponent, decorators: [{
            type: Component,
            args: [{
                    template: '',
                    styleUrls: ['./surface.style.less'],
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        class: 'tui-surface-styles',
                    },
                }]
        }] });

class TuiSurfaceDirective {
    constructor(directiveStyles) {
        this.tuiSurface = '';
        directiveStyles.addComponent(TuiSurfaceComponent);
    }
}
TuiSurfaceDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSurfaceDirective, deps: [{ token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiSurfaceDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiSurfaceDirective, selector: "[tuiSurface]", inputs: { tuiSurface: "tuiSurface" }, host: { attributes: { "tuiSurface": "" }, properties: { "attr.data-surface": "tuiSurface" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSurfaceDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiSurface]',
                    host: {
                        tuiSurface: '',
                        '[attr.data-surface]': 'tuiSurface',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { tuiSurface: [{
                type: Input
            }] } });

class TuiSurfaceModule {
}
TuiSurfaceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSurfaceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiSurfaceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSurfaceModule, declarations: [TuiSurfaceComponent, TuiSurfaceDirective], exports: [TuiSurfaceDirective] });
TuiSurfaceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSurfaceModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSurfaceModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiSurfaceComponent, TuiSurfaceDirective],
                    exports: [TuiSurfaceDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiSurfaceComponent, TuiSurfaceDirective, TuiSurfaceModule };
//# sourceMappingURL=taiga-ui-experimental-directives-surface.js.map

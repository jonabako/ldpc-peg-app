import * as i0 from '@angular/core';
import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, Inject, Input, NgModule } from '@angular/core';
import { __decorate } from 'tslib';
import * as i1 from '@taiga-ui/cdk';
import { CHAR_NO_BREAK_SPACE, TuiDirectiveStylesService, tuiPure } from '@taiga-ui/cdk';
import { TUI_ANIMATIONS_DURATION } from '@taiga-ui/core';

class TuiSkeletonComponent {
}
TuiSkeletonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSkeletonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TuiSkeletonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiSkeletonComponent, selector: "ng-component", host: { classAttribute: "tui-skeleton-styles" }, ngImport: i0, template: '', isInline: true, styles: ["@keyframes tuiSkeleton{0%{opacity:.03}to{opacity:.06}}[tuiSkeleton]._skeleton{color:transparent;background:var(--tui-base-01)!important;box-shadow:none!important;filter:contrast(0) brightness(0);animation:tuiSkeleton ease-in-out 1s infinite alternate}[tuiSkeleton]._skeleton[data-tui-skeleton]{background:transparent!important}[tuiSkeleton]._skeleton[data-tui-skeleton]:before{content:attr(data-tui-skeleton);background:var(--tui-base-01);font-size:smaller;-webkit-box-decoration-break:clone;box-decoration-break:clone;border-radius:.25rem}[tuiTheme=night] [tuiSkeleton]._skeleton{filter:contrast(0) brightness(0) invert(1)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSkeletonComponent, decorators: [{
            type: Component,
            args: [{
                    template: '',
                    styleUrls: ['./skeleton.style.less'],
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        class: 'tui-skeleton-styles',
                    },
                }]
        }] });

const FADE = [{ opacity: 0.06 }, { opacity: 1 }];
class TuiSkeletonDirective {
    constructor(el, duration, directiveStyles) {
        this.el = el;
        this.duration = duration;
        this.tuiSkeleton = false;
        directiveStyles.addComponent(TuiSkeletonComponent);
    }
    getPlaceholder(value) {
        switch (typeof value) {
            case 'number':
                return Array.from({ length: value })
                    .map(() => CHAR_NO_BREAK_SPACE.repeat(getLength()))
                    .join(' ');
            case 'string':
                return value;
            default:
                return null;
        }
    }
    ngOnChanges({ tuiSkeleton }) {
        var _a;
        (_a = this.animation) === null || _a === void 0 ? void 0 : _a.cancel();
        if (!tuiSkeleton.currentValue && !tuiSkeleton.firstChange) {
            this.animation = this.el.nativeElement.animate(FADE, this.duration * 2);
        }
    }
}
TuiSkeletonDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSkeletonDirective, deps: [{ token: ElementRef }, { token: TUI_ANIMATIONS_DURATION }, { token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiSkeletonDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiSkeletonDirective, selector: "[tuiSkeleton]", inputs: { tuiSkeleton: "tuiSkeleton" }, host: { attributes: { "tuiSkeleton": "" }, properties: { "class._skeleton": "tuiSkeleton", "attr.data-tui-skeleton": "getPlaceholder(tuiSkeleton)" } }, usesOnChanges: true, ngImport: i0 });
__decorate([
    tuiPure
], TuiSkeletonDirective.prototype, "getPlaceholder", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSkeletonDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiSkeleton]',
                    host: {
                        tuiSkeleton: '',
                        '[class._skeleton]': 'tuiSkeleton',
                        '[attr.data-tui-skeleton]': 'getPlaceholder(tuiSkeleton)',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ANIMATIONS_DURATION]
                }] }, { type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { tuiSkeleton: [{
                type: Input
            }], getPlaceholder: [] } });
function getLength() {
    return Math.floor(Math.random() * (15 - 5 + 1)) + 5;
}

class TuiSkeletonModule {
}
TuiSkeletonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSkeletonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiSkeletonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSkeletonModule, declarations: [TuiSkeletonComponent, TuiSkeletonDirective], exports: [TuiSkeletonDirective] });
TuiSkeletonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSkeletonModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSkeletonModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiSkeletonComponent, TuiSkeletonDirective],
                    exports: [TuiSkeletonDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiSkeletonComponent, TuiSkeletonDirective, TuiSkeletonModule };
//# sourceMappingURL=taiga-ui-experimental-directives-skeleton.js.map

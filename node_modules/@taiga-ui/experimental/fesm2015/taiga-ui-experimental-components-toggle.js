import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Inject, Optional, Input, HostBinding, NgModule } from '@angular/core';
import * as i1 from '@angular/forms';
import { NgControl } from '@angular/forms';
import { tuiCreateToken, tuiProvideOptions, tuiIsString } from '@taiga-ui/cdk';
import { TUI_ICON_RESOLVER } from '@taiga-ui/experimental/tokens';

const TUI_TOGGLE_DEFAULT_OPTIONS = {
    showIcons: true,
    size: 'm',
    icon: 'tuiIconCheck',
};
const TUI_TOGGLE_OPTIONS = tuiCreateToken(TUI_TOGGLE_DEFAULT_OPTIONS);
function tuiToggleOptionsProvider(options) {
    return tuiProvideOptions(TUI_TOGGLE_OPTIONS, options, TUI_TOGGLE_DEFAULT_OPTIONS);
}

class TuiToggleComponent {
    constructor(resolver, options, control) {
        this.resolver = resolver;
        this.options = options;
        this.control = control;
        this.size = this.options.size;
        this.showIcons = this.options.showIcons;
    }
    get icon() {
        const { options, resolver, size } = this;
        const icon = tuiIsString(options.icon) ? options.icon : options.icon(size);
        return `url(${resolver(icon)})`;
    }
}
TuiToggleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiToggleComponent, deps: [{ token: TUI_ICON_RESOLVER }, { token: TUI_TOGGLE_OPTIONS }, { token: NgControl, optional: true }], target: i0.ɵɵFactoryTarget.Component });
TuiToggleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiToggleComponent, selector: "input[type=\"checkbox\"][tuiToggle]", inputs: { size: "size", showIcons: "showIcons" }, host: { attributes: { "tuiAppearance": "" }, properties: { "disabled": "!control || control.disabled", "attr.data-size": "size", "class._invalid": "control?.invalid && control?.touched", "class._readonly": "!control", "class._icons": "showIcons", "style.--t-mask": "this.icon" } }, ngImport: i0, template: '', isInline: true, styles: [":host{transition-property:background,box-shadow;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;width:3rem;height:1.5rem;border-radius:2rem;color:var(--tui-primary-text);overflow:hidden;cursor:pointer;margin:0;background:var(--tui-secondary)}:host[data-size=s]{height:1rem;width:2rem}:host[data-size=s]:before{width:1rem;transform:translate(-1rem);-webkit-mask-size:.75rem;mask-size:.75rem}:host[data-size=s]:after{width:1rem;box-shadow:-2rem 0 0 .25rem var(--tui-text-01-night)}:host[data-size=s]:checked:after{transform:scale(.5) translate(2rem)}:host:hover{background:var(--tui-secondary-hover)}:host:active{background:var(--tui-secondary-active)}:host:checked{background:var(--tui-primary)}:host:checked:hover{background:var(--tui-primary-hover)}:host:checked:active{background:var(--tui-primary-active)}:host:checked:before{transform:none}:host:checked:after{transform:scale(.5) translate(3rem)}:host:disabled._readonly{opacity:1}:host:before,:host:after{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;content:\"\";position:absolute;height:100%;width:1.5rem}:host:before{display:none;background:currentColor;-webkit-mask:var(--t-mask) no-repeat center;mask:var(--t-mask) no-repeat center;-webkit-mask-size:1rem;mask-size:1rem;transform:translate(-1.5rem)}:host:after{right:0;border-radius:100%;transform:scale(.5);box-shadow:-3rem 0 0 .25rem var(--tui-text-01-night)}:host._icons:before{display:block}:host._icons:after{box-shadow:inset 0 0 0 .25rem var(--tui-clear-active),-3rem 0 0 .25rem var(--tui-text-01-night)}:host._icons[data-size=s]:after{box-shadow:inset 0 0 0 .125rem var(--tui-clear-active),-2rem 0 0 .25rem var(--tui-text-01-night)}:host._invalid{background:var(--tui-error-bg)}:host._invalid:hover,:host._invalid:active{background:var(--tui-error-bg-hover)}:host._invalid:checked{background:var(--tui-error-fill)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiToggleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'input[type="checkbox"][tuiToggle]',
                    template: '',
                    styleUrls: ['./toggle.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        tuiAppearance: '',
                        '[disabled]': '!control || control.disabled',
                        '[attr.data-size]': 'size',
                        '[class._invalid]': 'control?.invalid && control?.touched',
                        '[class._readonly]': '!control',
                        '[class._icons]': 'showIcons',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ICON_RESOLVER]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_TOGGLE_OPTIONS]
                }] }, { type: i1.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }]; }, propDecorators: { size: [{
                type: Input
            }], showIcons: [{
                type: Input
            }], icon: [{
                type: HostBinding,
                args: ['style.--t-mask']
            }] } });

class TuiToggleModule {
}
TuiToggleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiToggleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiToggleModule, declarations: [TuiToggleComponent], exports: [TuiToggleComponent] });
TuiToggleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiToggleModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiToggleModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiToggleComponent],
                    exports: [TuiToggleComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_TOGGLE_DEFAULT_OPTIONS, TUI_TOGGLE_OPTIONS, TuiToggleComponent, TuiToggleModule, tuiToggleOptionsProvider };
//# sourceMappingURL=taiga-ui-experimental-components-toggle.js.map

import * as i0 from '@angular/core';
import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Inject, Input, NgModule } from '@angular/core';
import * as i1 from '@taiga-ui/cdk';
import { TuiDirectiveStylesService } from '@taiga-ui/cdk';
import { tuiAvatarOptionsProvider, tuiButtonOptionsProvider, tuiBadgeOptionsProvider } from '@taiga-ui/experimental/components';

class TuiHeaderStylesComponent {
}
TuiHeaderStylesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHeaderStylesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TuiHeaderStylesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiHeaderStylesComponent, selector: "ng-component", host: { classAttribute: "tui-header" }, ngImport: i0, template: '', isInline: true, styles: ["[tuiHeader]{position:relative;display:flex;align-items:flex-start;box-sizing:content-box;color:var(--tui-text-01)}[tuiHeader] [tuiTitle]{flex-grow:2}[tuiHeader] [tuiAccessories]{display:flex;align-items:center;grid-gap:.75rem;gap:.75rem}[tuiHeader] [tuiAccessories]:before{content:\"\\200b\";visibility:hidden}[tuiHeader] [tuiSubtitle]{font:var(--tui-font-text-m);color:var(--tui-text-02)}[tuiHeader] [tuiCaption]{font:var(--tui-font-text-s);color:var(--tui-text-02);font-weight:500;text-transform:uppercase}[tuiHeader][data-size=xxl] [tuiTitle],[tuiHeader][data-size=xxl] [tuiAccessories]{font:var(--tui-font-heading-1)}[tuiHeader][data-size=xl] [tuiTitle],[tuiHeader][data-size=xl] [tuiAccessories]{font:var(--tui-font-heading-2)}[tuiHeader][data-size=l] [tuiTitle],[tuiHeader][data-size=l] [tuiAccessories]{font:var(--tui-font-heading-3)}[tuiHeader][data-size=m] [tuiTitle],[tuiHeader][data-size=m] [tuiAccessories]{font:var(--tui-font-heading-4)}[tuiHeader][data-size=s] [tuiTitle],[tuiHeader][data-size=s] [tuiAccessories]{font:var(--tui-font-heading-5)}[tuiHeader][data-size=xs] [tuiTitle],[tuiHeader][data-size=xs] [tuiAccessories]{font:var(--tui-font-heading-6)}[tuiHeader][data-size=xxs] [tuiTitle],[tuiHeader][data-size=xxs] [tuiAccessories]{font:var(--tui-font-text-xl)}[tuiHeader][data-size=xxl] [tuiSubtitle],[tuiHeader][data-size=xl] [tuiSubtitle],[tuiHeader][data-size=l] [tuiSubtitle]{font:var(--tui-font-text-l)}tui-root._mobile [tuiHeader] [tuiAccessories]{grid-gap:1rem;gap:1rem}tui-root._mobile [tuiHeader][data-size=xxs] [tuiTitle],tui-root._mobile [tuiHeader][data-size=xxs] [tuiAccessories]{font:var(--tui-font-heading-6)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHeaderStylesComponent, decorators: [{
            type: Component,
            args: [{
                    template: '',
                    styleUrls: ['./header.styles.less'],
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        class: 'tui-header',
                    },
                }]
        }] });

class TuiHeaderDirective {
    constructor(directiveStyles) {
        this.size = 's';
        directiveStyles.addComponent(TuiHeaderStylesComponent);
    }
}
TuiHeaderDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHeaderDirective, deps: [{ token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiHeaderDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHeaderDirective, selector: "[tuiHeader]", inputs: { size: ["tuiHeader", "size"] }, host: { attributes: { "tuiHeader": "" }, properties: { "attr.data-size": "size || \"s\"" } }, providers: [
        tuiAvatarOptionsProvider({ size: 's' }),
        tuiButtonOptionsProvider({ size: 's' }),
        tuiBadgeOptionsProvider({ size: 'm' }),
    ], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHeaderDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiHeader]',
                    providers: [
                        tuiAvatarOptionsProvider({ size: 's' }),
                        tuiButtonOptionsProvider({ size: 's' }),
                        tuiBadgeOptionsProvider({ size: 'm' }),
                    ],
                    host: {
                        tuiHeader: '',
                        '[attr.data-size]': 'size || "s"',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { size: [{
                type: Input,
                args: ['tuiHeader']
            }] } });

class TuiHeaderModule {
}
TuiHeaderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHeaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiHeaderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHeaderModule, declarations: [TuiHeaderStylesComponent, TuiHeaderDirective], exports: [TuiHeaderDirective] });
TuiHeaderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHeaderModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHeaderModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiHeaderStylesComponent, TuiHeaderDirective],
                    exports: [TuiHeaderDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiHeaderDirective, TuiHeaderModule, TuiHeaderStylesComponent };
//# sourceMappingURL=taiga-ui-experimental-directives-header.js.map

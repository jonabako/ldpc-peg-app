import * as i0 from '@angular/core';
import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Inject, Input, NgModule } from '@angular/core';
import * as i1 from '@taiga-ui/cdk';
import { TuiDirectiveStylesService } from '@taiga-ui/cdk';
import { tuiAvatarOptionsProvider, tuiButtonOptionsProvider } from '@taiga-ui/experimental/components';

class TuiCellComponent {
}
TuiCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TuiCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiCellComponent, selector: "ng-component", host: { classAttribute: "tui-cell" }, ngImport: i0, template: '', isInline: true, styles: ["[tuiCell]{--tui-height: calc(var(--tui-height-s) - .5rem);--t-padding: .125rem 1rem;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;text-decoration:none;position:relative;display:flex;align-items:center;box-sizing:content-box;isolation:isolate;color:var(--tui-text-01);padding:var(--t-padding);min-height:var(--t-height)}[tuiCell] [tuiAccessories]{position:relative;display:flex;max-height:var(--t-height);align-items:center;align-self:stretch}[tuiCell] [tuiCellActions]{position:absolute;right:0;z-index:1;padding-right:inherit}[tuiCell] [tuiCellActions]~*{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}[tuiCell] [tuiCellActions] button,[tuiCell] [tuiCellActions] a{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;opacity:0}[tuiCell] [tuiCellActions] button:focus-visible,[tuiCell] [tuiCellActions] a:focus-visible{opacity:1}[tuiCell] [tuiSubtitle]{display:flex;align-items:center;grid-gap:.25rem;gap:.25rem;color:var(--tui-text-02)}[tuiCell] [tuiTitle]{flex-shrink:7;-webkit-margin-end:auto;margin-inline-end:auto;align-items:normal;text-align:left}[tuiCell] [tuiTitle]~[tuiTitle]{flex-shrink:3;-webkit-margin-end:0;margin-inline-end:0;text-align:right;align-items:flex-end}[tuiCell] tui-badge-notification[data-size=xs]{position:absolute;top:50%;transform:translateY(-50%);left:-.625rem}[tuiCell][data-size=s]{--t-height: calc(var(--tui-height-s) - .5rem);--t-padding: .125rem 1rem}[tuiCell][data-size=s] [tuiTitle]{max-height:100%;font:var(--tui-font-text-s-2);grid-gap:0;gap:0}[tuiCell][data-size=s] [tuiSubtitle]{font:var(--tui-font-text-xs-s)}[tuiCell][data-size=s]>*:not(:first-child),[tuiCell][data-size=s]>[tuiAccessories]>*:not(:first-child){-webkit-margin-start:.5rem;margin-inline-start:.5rem}[tuiCell][data-size=s]>tui-avatar,[tuiCell][data-size=s]>tui-avatar-stack tui-avatar,[tuiCell][data-size=s]>[tuiAccessories] tui-avatar,[tuiCell][data-size=s]>[tuiAccessories] tui-avatar-stack tui-avatar{--t-size: 1.5rem}[tuiCell][data-size=m]{--t-height: calc(var(--tui-height-m) - .75rem);--t-padding: .375rem 1rem}[tuiCell][data-size=m] [tuiTitle]{font:var(--tui-font-text-s-2);grid-gap:.125rem;gap:.125rem}[tuiCell][data-size=m] [tuiSubtitle]{font:var(--tui-font-text-xs-2)}[tuiCell][data-size=m]>*:not(:first-child),[tuiCell][data-size=m]>[tuiAccessories]>*:not(:first-child){-webkit-margin-start:.75rem;margin-inline-start:.75rem}[tuiCell][data-size=m]>tui-avatar,[tuiCell][data-size=m]>tui-avatar-stack tui-avatar,[tuiCell][data-size=m]>[tuiAccessories] tui-avatar,[tuiCell][data-size=m]>[tuiAccessories] tui-avatar-stack tui-avatar{--t-size: 2rem}[tuiCell][data-size=l]{--t-height: calc(var(--tui-height-l) - 1rem);--t-padding: .5rem 1rem}[tuiCell][data-size=l]>*:not(:first-child),[tuiCell][data-size=l]>[tuiAccessories]>*:not(:first-child){-webkit-margin-start:1rem;margin-inline-start:1rem}[tuiCell][data-size=l]>tui-avatar,[tuiCell][data-size=l]>tui-avatar-stack tui-avatar,[tuiCell][data-size=l]>[tuiAccessories] tui-avatar,[tuiCell][data-size=l]>[tuiAccessories] tui-avatar-stack tui-avatar{--t-size: 2.5rem}[tuiCell]:hover [tuiCellActions]~*{opacity:0}[tuiCell]:hover [tuiCellActions] button,[tuiCell]:hover [tuiCellActions] a{opacity:1}[tuiOption] [tuiCell],tui-primitive-textfield [tuiCell]{padding:0}@media (hover: hover) and (pointer: fine){a[tuiCell]:not([tuiSurface]):hover,button[tuiCell]:not([tuiSurface]):hover{background:var(--tui-clear);cursor:pointer}}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCellComponent, decorators: [{
            type: Component,
            args: [{
                    template: '',
                    styleUrls: ['./cell.styles.less'],
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        class: 'tui-cell',
                    },
                }]
        }] });

class TuiCellDirective {
    constructor(directiveStyles) {
        this.size = 'l';
        directiveStyles.addComponent(TuiCellComponent);
    }
}
TuiCellDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCellDirective, deps: [{ token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiCellDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiCellDirective, selector: "[tuiCell]", inputs: { size: ["tuiCell", "size"] }, host: { attributes: { "tuiCell": "" }, properties: { "attr.data-size": "size || \"l\"" } }, providers: [
        tuiAvatarOptionsProvider({ size: 's' }),
        tuiButtonOptionsProvider({ size: 's' }),
    ], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCellDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiCell]',
                    providers: [
                        tuiAvatarOptionsProvider({ size: 's' }),
                        tuiButtonOptionsProvider({ size: 's' }),
                    ],
                    host: {
                        tuiCell: '',
                        '[attr.data-size]': 'size || "l"',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { size: [{
                type: Input,
                args: ['tuiCell']
            }] } });

class TuiCellModule {
}
TuiCellModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCellModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiCellModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCellModule, declarations: [TuiCellComponent, TuiCellDirective], exports: [TuiCellComponent, TuiCellDirective] });
TuiCellModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCellModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCellModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiCellComponent, TuiCellDirective],
                    exports: [TuiCellComponent, TuiCellDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiCellComponent, TuiCellDirective, TuiCellModule };
//# sourceMappingURL=taiga-ui-experimental-directives-cell.js.map

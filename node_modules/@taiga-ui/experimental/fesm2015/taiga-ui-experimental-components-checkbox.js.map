{"version":3,"file":"taiga-ui-experimental-components-checkbox.js","sources":["../../../projects/experimental/components/checkbox/checkbox.options.ts","../../../projects/experimental/components/checkbox/checkbox.component.ts","../../../projects/experimental/components/checkbox/checkbox.module.ts","../../../projects/experimental/components/checkbox/taiga-ui-experimental-components-checkbox.ts"],"sourcesContent":["import {Provider} from '@angular/core';\nimport {tuiCreateToken, TuiMapper, tuiProvideOptions} from '@taiga-ui/cdk';\nimport {TuiSizeS} from '@taiga-ui/core';\n\nexport interface TuiCheckboxOptions {\n    readonly size: TuiSizeS;\n    readonly icons: Readonly<{\n        checked: TuiMapper<TuiSizeS, string> | string;\n        indeterminate: TuiMapper<TuiSizeS, string> | string;\n    }>;\n}\n\nexport const TUI_CHECKBOX_DEFAULT_OPTIONS: TuiCheckboxOptions = {\n    size: 'm',\n    icons: {\n        checked: size => (size === 'm' ? 'tuiIconCheckLarge' : 'tuiIconCheck'),\n        indeterminate: size => (size === 'm' ? 'tuiIconMinusLarge' : 'tuiIconMinus'),\n    },\n};\n\nexport const TUI_CHECKBOX_OPTIONS = tuiCreateToken(TUI_CHECKBOX_DEFAULT_OPTIONS);\n\nexport function tuiCheckboxOptionsProvider(\n    options: Partial<TuiCheckboxOptions>,\n): Provider {\n    return tuiProvideOptions(TUI_CHECKBOX_OPTIONS, options, TUI_CHECKBOX_DEFAULT_OPTIONS);\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Inject,\n    Input,\n    OnInit,\n    Optional,\n    Self,\n} from '@angular/core';\nimport {NgControl, NgModel} from '@angular/forms';\nimport {\n    tuiControlValue,\n    TuiDestroyService,\n    tuiIsString,\n    TuiStringHandler,\n    tuiWatch,\n} from '@taiga-ui/cdk';\nimport {TUI_ICON_RESOLVER} from '@taiga-ui/experimental/tokens';\nimport {Observable} from 'rxjs';\nimport {distinctUntilChanged, takeUntil} from 'rxjs/operators';\n\nimport {TUI_CHECKBOX_OPTIONS, TuiCheckboxOptions} from './checkbox.options';\n\n@Component({\n    selector: 'input[type=\"checkbox\"][tuiCheckbox]',\n    template: '',\n    styleUrls: ['./checkbox.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TuiDestroyService],\n    host: {\n        tuiAppearance: '', // Apply base appearance\n        '[disabled]': '!control || control.disabled',\n        '[attr.data-size]': 'size',\n        '[class._invalid]': 'control?.invalid && control?.touched',\n        '[class._readonly]': '!control',\n        '[style.--t-mask]': 'icon',\n    },\n})\nexport class TuiCheckboxComponent implements OnInit {\n    @Input()\n    size = this.options.size;\n\n    constructor(\n        @Inject(ChangeDetectorRef) private readonly cdr: ChangeDetectorRef,\n        @Inject(TUI_ICON_RESOLVER) private readonly resolver: TuiStringHandler<string>,\n        @Inject(TUI_CHECKBOX_OPTIONS) private readonly options: TuiCheckboxOptions,\n        @Self() @Inject(TuiDestroyService) private readonly destroy$: Observable<unknown>,\n        @Inject(ElementRef) private readonly el: ElementRef<HTMLInputElement>,\n        @Optional() @Inject(NgControl) readonly control: NgControl | null,\n    ) {}\n\n    get icon(): string {\n        const option = this.el.nativeElement.indeterminate\n            ? this.options.icons.indeterminate\n            : this.options.icons.checked;\n        const icon = tuiIsString(option) ? option : option(this.size);\n\n        return `url(${this.resolver(icon)})`;\n    }\n\n    ngOnInit(): void {\n        if (!this.control?.valueChanges) {\n            return;\n        }\n\n        tuiControlValue(this.control)\n            .pipe(distinctUntilChanged(), tuiWatch(this.cdr), takeUntil(this.destroy$))\n            .subscribe(value => {\n                // https://github.com/angular/angular/issues/14988\n                const fix = this.control instanceof NgModel ? this.control.model : value;\n\n                this.el.nativeElement.indeterminate = fix === null;\n            });\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiCheckboxComponent} from './checkbox.component';\n\n@NgModule({\n    declarations: [TuiCheckboxComponent],\n    exports: [TuiCheckboxComponent],\n})\nexport class TuiCheckboxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
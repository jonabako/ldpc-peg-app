import * as i0 from '@angular/core';
import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, NgZone, Directive, Self, Inject, Input, HostBinding, NgModule } from '@angular/core';
import { MutationObserverService, MUTATION_OBSERVER_INIT } from '@ng-web-apis/mutation-observer';
import * as i2 from '@taiga-ui/cdk';
import { tuiZonefree, TuiDestroyService, TuiResizeService, TuiDirectiveStylesService } from '@taiga-ui/cdk';
import * as i1 from 'rxjs';
import { merge, fromEvent } from 'rxjs';
import { takeUntil } from 'rxjs/operators';

class TuiFadeComponent {
}
TuiFadeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFadeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TuiFadeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiFadeComponent, selector: "ng-component", host: { classAttribute: "tui-fade-styles" }, ngImport: i0, template: '', isInline: true, styles: ["[tuiFade]{scrollbar-width:none;-ms-overflow-style:none;transition-property:-webkit-mask-position;transition-property:mask-position;transition-property:mask-position,-webkit-mask-position;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;overflow:auto;text-overflow:unset!important;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat}[tuiFade]::-webkit-scrollbar,[tuiFade]::-webkit-scrollbar-thumb{display:none}[tuiFade]:not([data-orientation=\"vertical\"]){overflow-y:hidden;-webkit-mask-image:linear-gradient(to right,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset))),linear-gradient(to left,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset))),linear-gradient(#000,#000);mask-image:linear-gradient(to right,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset))),linear-gradient(to left,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset))),linear-gradient(#000,#000);-webkit-mask-position:calc(-1 * var(--fade-size) - var(--fade-offset)) bottom,calc(100% + var(--fade-size) + var(--fade-offset)) bottom,top;mask-position:calc(-1 * var(--fade-size) - var(--fade-offset)) bottom,calc(100% + var(--fade-size) + var(--fade-offset)) bottom,top;-webkit-mask-size:calc(50% + var(--fade-size) + var(--fade-offset)) var(--line-height, 100%),calc(50% + var(--fade-size) + var(--fade-offset)) var(--line-height, 100%),100% calc(100% - var(--line-height, 100%));mask-size:calc(50% + var(--fade-size) + var(--fade-offset)) var(--line-height, 100%),calc(50% + var(--fade-size) + var(--fade-offset)) var(--line-height, 100%),100% calc(100% - var(--line-height, 100%))}[tuiFade]:not([data-orientation=\"vertical\"])._start{-webkit-mask-position:left bottom,calc(100% + var(--fade-size) + var(--fade-offset)) bottom,top;mask-position:left bottom,calc(100% + var(--fade-size) + var(--fade-offset)) bottom,top}[tuiFade]:not([data-orientation=\"vertical\"])._end{-webkit-mask-position:calc(-1 * var(--fade-size) - var(--fade-offset)) bottom,right bottom,top;mask-position:calc(-1 * var(--fade-size) - var(--fade-offset)) bottom,right bottom,top}[tuiFade]:not([data-orientation=\"vertical\"])._start._end{-webkit-mask-position:left bottom,right bottom,top;mask-position:left bottom,right bottom,top}[tuiFade][data-orientation=vertical]{overflow-x:hidden;-webkit-mask-image:linear-gradient(to bottom,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset))),linear-gradient(to top,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset)));mask-image:linear-gradient(to bottom,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset))),linear-gradient(to top,transparent var(--fade-offset),#000 calc(var(--fade-size) + var(--fade-offset)));-webkit-mask-position:left calc(-1 * var(--fade-size) - var(--fade-offset)),left calc(100% + var(--fade-size) + var(--fade-offset));mask-position:left calc(-1 * var(--fade-size) - var(--fade-offset)),left calc(100% + var(--fade-size) + var(--fade-offset));-webkit-mask-size:100% calc(51% + var(--fade-size) + var(--fade-offset));mask-size:100% calc(51% + var(--fade-size) + var(--fade-offset))}[tuiFade][data-orientation=vertical]._start{-webkit-mask-position:left top,left calc(100% + var(--fade-size) + var(--fade-offset));mask-position:left top,left calc(100% + var(--fade-size) + var(--fade-offset))}[tuiFade][data-orientation=vertical]._end{-webkit-mask-position:left calc(-1 * var(--fade-size) - var(--fade-offset)),left bottom;mask-position:left calc(-1 * var(--fade-size) - var(--fade-offset)),left bottom}[tuiFade][data-orientation=vertical]._start._end{-webkit-mask-position:left top,left bottom;mask-position:left top,left bottom}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFadeComponent, decorators: [{
            type: Component,
            args: [{
                    template: '',
                    styleUrls: ['./fade.style.less'],
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        class: 'tui-fade-styles',
                    },
                }]
        }] });

const BUFFER = 1; // buffer for rounding issues
class TuiFadeDirective {
    constructor(destroy$, resize$, mutate$, element, zone, directiveStyles) {
        // TODO: Remove when lh CSS units are supported: https://caniuse.com/mdn-css_types_length_lh
        this.lineHeight = null;
        this.size = '1.5em';
        this.offset = '0em';
        this.orientation = 'horizontal';
        const el = element.nativeElement;
        directiveStyles.addComponent(TuiFadeComponent);
        merge(resize$, mutate$, fromEvent(el, 'scroll'))
            .pipe(tuiZonefree(zone), takeUntil(destroy$))
            .subscribe(() => {
            el.classList.toggle('_start', !!el.scrollLeft || !!el.scrollTop);
            el.classList.toggle('_end', this.isEnd(el));
        });
    }
    isEnd(el) {
        if (this.orientation === 'vertical') {
            return Math.round(el.scrollTop) < el.scrollHeight - el.clientHeight - BUFFER;
        }
        return (Math.round(el.scrollLeft) < el.scrollWidth - el.clientWidth - BUFFER ||
            // horizontal multiline fade can kick in early due to hanging elements of fonts so using bigger buffer
            el.scrollHeight > el.clientHeight + 4 * BUFFER);
    }
}
TuiFadeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFadeDirective, deps: [{ token: TuiDestroyService, self: true }, { token: TuiResizeService }, { token: MutationObserverService }, { token: ElementRef }, { token: NgZone }, { token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiFadeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiFadeDirective, selector: "[tuiFade]", inputs: { lineHeight: ["tuiFadeHeight", "lineHeight"], size: ["tuiFadeSize", "size"], offset: ["tuiFadeOffset", "offset"], orientation: ["tuiFade", "orientation"] }, host: { properties: { "style.line-height": "this.lineHeight", "style.--line-height": "this.lineHeight", "style.--fade-size": "this.size", "style.--fade-offset": "this.offset", "attr.data-orientation": "this.orientation" } }, providers: [
        TuiDestroyService,
        TuiResizeService,
        MutationObserverService,
        {
            provide: MUTATION_OBSERVER_INIT,
            useValue: { characterData: true, subtree: true },
        },
    ], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFadeDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiFade]',
                    providers: [
                        TuiDestroyService,
                        TuiResizeService,
                        MutationObserverService,
                        {
                            provide: MUTATION_OBSERVER_INIT,
                            useValue: { characterData: true, subtree: true },
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i1.Observable, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDestroyService]
                }] }, { type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [TuiResizeService]
                }] }, { type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [MutationObserverService]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i0.NgZone, decorators: [{
                    type: Inject,
                    args: [NgZone]
                }] }, { type: i2.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { lineHeight: [{
                type: Input,
                args: ['tuiFadeHeight']
            }, {
                type: HostBinding,
                args: ['style.line-height']
            }, {
                type: HostBinding,
                args: ['style.--line-height']
            }], size: [{
                type: Input,
                args: ['tuiFadeSize']
            }, {
                type: HostBinding,
                args: ['style.--fade-size']
            }], offset: [{
                type: Input,
                args: ['tuiFadeOffset']
            }, {
                type: HostBinding,
                args: ['style.--fade-offset']
            }], orientation: [{
                type: Input,
                args: ['tuiFade']
            }, {
                type: HostBinding,
                args: ['attr.data-orientation']
            }] } });

class TuiFadeModule {
}
TuiFadeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFadeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiFadeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFadeModule, declarations: [TuiFadeComponent, TuiFadeDirective], exports: [TuiFadeDirective] });
TuiFadeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFadeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFadeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiFadeComponent, TuiFadeDirective],
                    exports: [TuiFadeDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiFadeComponent, TuiFadeDirective, TuiFadeModule };
//# sourceMappingURL=taiga-ui-experimental-directives-fade.js.map

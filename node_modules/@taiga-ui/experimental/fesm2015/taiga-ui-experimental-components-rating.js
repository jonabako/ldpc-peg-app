import * as i0 from '@angular/core';
import { ChangeDetectorRef, ElementRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, HostListener, NgModule } from '@angular/core';
import * as i4 from '@angular/forms';
import { NgControl, FormsModule } from '@angular/forms';
import * as i2 from '@taiga-ui/cdk';
import { tuiCreateToken, tuiProvideOptions, AbstractTuiControl, tuiIsNativeFocused, tuiClamp, TuiRepeatTimesModule } from '@taiga-ui/cdk';
import * as i1 from '@taiga-ui/experimental/components/icon';
import { TuiIconModule } from '@taiga-ui/experimental/components/icon';
import * as i3 from '@tinkoff/ng-polymorpheus';
import { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';
import { CommonModule } from '@angular/common';

const TUI_RATING_DEFAULT_OPTIONS = {
    icon: 'tuiIconStarLarge',
    max: 5,
};
const TUI_RATING_OPTIONS = tuiCreateToken(TUI_RATING_DEFAULT_OPTIONS);
function tuiRatingOptionsProvider(options) {
    return tuiProvideOptions(TUI_RATING_OPTIONS, options, TUI_RATING_DEFAULT_OPTIONS);
}

class TuiRatingComponent extends AbstractTuiControl {
    constructor(control, cdr, options) {
        super(control, cdr);
        this.options = options;
        this.icon = this.options.icon;
        this.max = this.options.max;
        this.active = 0;
    }
    get nativeFocusableElement() {
        var _a;
        return this.computedDisabled ? null : ((_a = this.input) === null || _a === void 0 ? void 0 : _a.nativeElement) || null;
    }
    get focused() {
        return tuiIsNativeFocused(this.nativeFocusableElement);
    }
    onKeyDown(event) {
        if (this.readOnly) {
            event.preventDefault();
        }
    }
    onPointer(delta) {
        this.active = tuiClamp(this.active + delta, 0, 1);
    }
    onClick(value) {
        if (this.active) {
            this.value = value;
        }
    }
    isActive(index) {
        return Math.ceil(this.value) >= this.max - index;
    }
    isFraction(index) {
        return this.value > this.max - index - 1 && this.value < this.max - index;
    }
    getCut(index) {
        return this.isFraction(index)
            ? 100 * Math.max(this.max - index - this.value, 0)
            : 0;
    }
    getFallbackValue() {
        return 0;
    }
}
TuiRatingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRatingComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TUI_RATING_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });
TuiRatingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiRatingComponent, selector: "tui-rating", inputs: { icon: "icon", max: "max" }, host: { listeners: { "keydown.capture": "onKeyDown($event)", "pointerdown": "onPointer(1)", "pointercancel": "onPointer(-1)", "document:pointerup": "onPointer(-1)" }, properties: { "class._active": "this.active" } }, viewQueries: [{ propertyName: "input", first: true, predicate: NgControl, descendants: true, read: ElementRef, static: true }], usesInheritance: true, ngImport: i0, template: "<div class=\"t-items\">\n    <div\n        *tuiRepeatTimes=\"let index of max\"\n        class=\"t-item\"\n        [class.t-item_active]=\"isActive(index)\"\n        (pointerup)=\"onClick(max - index)\"\n    >\n        <tui-icon\n            *polymorpheusOutlet=\"icon as src; context: {$implicit: max - index}\"\n            class=\"t-icon t-icon_blank\"\n            [class.t-icon_fraction]=\"isFraction(index)\"\n            [icon]=\"src.toString()\"\n            [style.--t-cut.%]=\"100 - getCut(index)\"\n        ></tui-icon>\n        <tui-icon\n            *polymorpheusOutlet=\"icon as src; context: {$implicit: max - index}\"\n            class=\"t-icon\"\n            [icon]=\"src.toString()\"\n            [style.--t-cut.%]=\"getCut(index)\"\n        ></tui-icon>\n    </div>\n</div>\n<input\n    min=\"1\"\n    type=\"range\"\n    class=\"t-range\"\n    [attr.aria-disabled]=\"readOnly\"\n    [disabled]=\"computedDisabled\"\n    [max]=\"max\"\n    [(ngModel)]=\"value\"\n/>\n", styles: [":host{position:relative;display:block;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;min-width:-webkit-fit-content;min-width:-moz-fit-content;min-width:fit-content;font-size:1rem;color:var(--tui-support-12);cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none}:host._readonly{pointer-events:none}:host._disabled{pointer-events:none;opacity:var(--tui-disabled-opacity)}.t-range{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;box-sizing:border-box;padding:0 .75em;pointer-events:none}.t-range:focus-visible+.t-items{box-shadow:inset 0 0 0 .125rem var(--tui-focus)}.t-items{position:relative;display:flex;flex-direction:row-reverse}.t-items:hover .t-icon{-webkit-clip-path:inset(0 0 0 0);clip-path:inset(0 0 0 0)}.t-items:hover .t-icon_blank{-webkit-clip-path:inset(0 0 0 100%);clip-path:inset(0 0 0 100%)}.t-item{position:relative;flex:1 0 0;color:var(--tui-base-06);transition-property:color,transform;transition-duration:var(--tui-duration);transition-timing-function:ease-in-out,cubic-bezier(.35,1.5,.4,2.5)}.t-item:first-child{max-width:2.5em}.t-item:hover,.t-item:hover~.t-item,.t-items:not(:hover) .t-item_active{color:currentColor}.t-items:active .t-item:hover,.t-items:active .t-item:hover~.t-item{transform:scale(.85);transition-duration:var(--tui-duration),calc(var(--tui-duration) / 3);transition-timing-function:ease-in-out}.t-icon{transition-property:-webkit-clip-path;transition-property:clip-path;transition-property:clip-path,-webkit-clip-path;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;width:2.5em;height:2.5em;font-size:inherit;-webkit-clip-path:inset(0 var(--t-cut) 0 0);clip-path:inset(0 var(--t-cut) 0 0)}.t-icon ::ng-deep>*{font-size:1rem}.t-icon_blank{position:absolute;top:0;left:0;display:none;color:var(--tui-base-06);-webkit-clip-path:inset(0 0 0 var(--t-cut));clip-path:inset(0 0 0 var(--t-cut))}.t-icon_fraction{display:block}@media (any-pointer: coarse){:host._active .t-item_active{transform:scale(.85);transition-timing-function:ease-in-out}.t-range{pointer-events:auto}.t-icon{transition:none}}\n"], components: [{ type: i1.TuiIconComponent, selector: "tui-icon", inputs: ["icon", "background"] }], directives: [{ type: i2.TuiRepeatTimesDirective, selector: "[tuiRepeatTimes][tuiRepeatTimesOf]", inputs: ["tuiRepeatTimesOf"] }, { type: i3.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i4.RangeValueAccessor, selector: "input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]" }, { type: i4.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRatingComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-rating',
                    templateUrl: './rating.template.html',
                    styleUrls: ['./rating.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i4.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_RATING_OPTIONS]
                }] }]; }, propDecorators: { input: [{
                type: ViewChild,
                args: [NgControl, { read: ElementRef, static: true }]
            }], icon: [{
                type: Input
            }], max: [{
                type: Input
            }], active: [{
                type: HostBinding,
                args: ['class._active']
            }], onKeyDown: [{
                type: HostListener,
                args: ['keydown.capture', ['$event']]
            }], onPointer: [{
                type: HostListener,
                args: ['pointerdown', ['1']]
            }, {
                type: HostListener,
                args: ['pointercancel', ['-1']]
            }, {
                type: HostListener,
                args: ['document:pointerup', ['-1']]
            }] } });

class TuiRatingModule {
}
TuiRatingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRatingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiRatingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRatingModule, declarations: [TuiRatingComponent], imports: [CommonModule,
        FormsModule,
        TuiIconModule,
        TuiRepeatTimesModule,
        PolymorpheusModule], exports: [TuiRatingComponent] });
TuiRatingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRatingModule, imports: [[
            CommonModule,
            FormsModule,
            TuiIconModule,
            TuiRepeatTimesModule,
            PolymorpheusModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRatingModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        TuiIconModule,
                        TuiRepeatTimesModule,
                        PolymorpheusModule,
                    ],
                    declarations: [TuiRatingComponent],
                    exports: [TuiRatingComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_RATING_DEFAULT_OPTIONS, TUI_RATING_OPTIONS, TuiRatingComponent, TuiRatingModule, tuiRatingOptionsProvider };
//# sourceMappingURL=taiga-ui-experimental-components-rating.js.map

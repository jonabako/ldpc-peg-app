import { EventEmitter } from '@angular/core';
import { TuiPreviewIcons } from '@taiga-ui/addon-preview/tokens';
import { TuiLanguagePreview } from '@taiga-ui/i18n';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class TuiPreviewZoomComponent {
    readonly icons: TuiPreviewIcons;
    readonly zoomTexts$: Observable<TuiLanguagePreview['zoomTexts']>;
    min: number;
    max: number;
    value: number;
    readonly valueChange: EventEmitter<number>;
    readonly reset: EventEmitter<void>;
    readonly hintShow$: Observable<boolean>;
    constructor(icons: TuiPreviewIcons, zoomTexts$: Observable<TuiLanguagePreview['zoomTexts']>);
    get leftButtonDisabled(): boolean;
    get rightButtonDisabled(): boolean;
    get collapseVisible(): boolean;
    onModelChange(value: number): void;
    onReset(): void;
    onMinus(): void;
    onPlus(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiPreviewZoomComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiPreviewZoomComponent, "tui-preview-zoom", never, { "min": "min"; "max": "max"; "value": "value"; }, { "valueChange": "valueChange"; "reset": "reset"; }, never, never>;
}

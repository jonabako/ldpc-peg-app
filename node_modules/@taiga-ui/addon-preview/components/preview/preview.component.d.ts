import { ElementRef } from '@angular/core';
import { TuiPreviewIcons } from '@taiga-ui/addon-preview/tokens';
import { TuiZoom } from '@taiga-ui/cdk';
import { TuiLanguagePreview } from '@taiga-ui/i18n';
import { BehaviorSubject, Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class TuiPreviewComponent {
    private readonly el;
    readonly icons: TuiPreviewIcons;
    readonly texts$: Observable<TuiLanguagePreview['previewTexts']>;
    zoomable: boolean;
    rotatable: boolean;
    minZoom: number;
    width: number;
    height: number;
    readonly zoom$: BehaviorSubject<number>;
    readonly rotation$: BehaviorSubject<number>;
    readonly coordinates$: BehaviorSubject<readonly [number, number]>;
    readonly transitioned$: Observable<boolean>;
    readonly cursor$: Observable<string>;
    readonly wrapperTransform$: Observable<string>;
    constructor(el: ElementRef<HTMLElement>, icons: TuiPreviewIcons, texts$: Observable<TuiLanguagePreview['previewTexts']>);
    rotate(): void;
    onPan(delta: readonly [number, number]): void;
    onMutation(contentWrapper: HTMLElement): void;
    onZoom({ clientX, clientY, delta }: TuiZoom): void;
    onResize(contentResizeEntries: readonly ResizeObserverEntry[]): void;
    reset(): void;
    setZoom(zoom: number): void;
    private get offsets();
    private calculateMinZoom;
    private refresh;
    private processZoom;
    private getGuardedCoordinates;
    private getScaleCenter;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiPreviewComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiPreviewComponent, "tui-preview", never, { "zoomable": "zoomable"; "rotatable": "rotatable"; }, {}, never, ["*", "tui-preview-title", "tui-preview-pagination", "[tuiPreviewAction]"]>;
}

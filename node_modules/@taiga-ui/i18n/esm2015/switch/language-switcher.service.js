import { Inject, Injectable, Optional } from '@angular/core';
import { LOCAL_STORAGE } from '@ng-web-apis/common';
import { TUI_DEFAULT_LANGUAGE, TUI_LANGUAGE_LOADER, TUI_LANGUAGE_STORAGE_KEY, } from '@taiga-ui/i18n/tokens';
import { BehaviorSubject, of } from 'rxjs';
import { tuiAsyncLoadLanguage } from './utils';
import * as i0 from "@angular/core";
export class TuiLanguageSwitcher extends BehaviorSubject {
    constructor(fallback, key, storage, loader) {
        super(tuiAsyncLoadLanguage(storage.getItem(key), loader, fallback));
        this.fallback = fallback;
        this.key = key;
        this.storage = storage;
        this.loader = loader;
    }
    get language() {
        return this.storage.getItem(this.key) || this.fallback.name;
    }
    setLanguage(language) {
        this.storage.setItem(this.key, language);
        this.next(tuiAsyncLoadLanguage(language, this.loader, this.fallback));
    }
    clear() {
        this.storage.removeItem(this.key);
        this.next(of(this.fallback));
    }
}
TuiLanguageSwitcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLanguageSwitcher, deps: [{ token: TUI_DEFAULT_LANGUAGE }, { token: TUI_LANGUAGE_STORAGE_KEY }, { token: LOCAL_STORAGE }, { token: TUI_LANGUAGE_LOADER, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
TuiLanguageSwitcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLanguageSwitcher, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiLanguageSwitcher, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_DEFAULT_LANGUAGE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_LANGUAGE_STORAGE_KEY]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [LOCAL_STORAGE]
                }] }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TUI_LANGUAGE_LOADER]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2Utc3dpdGNoZXIuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2kxOG4vc3dpdGNoL2xhbmd1YWdlLXN3aXRjaGVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQU9sRCxPQUFPLEVBQ0gsb0JBQW9CLEVBQ3BCLG1CQUFtQixFQUNuQix3QkFBd0IsR0FDM0IsTUFBTSx1QkFBdUIsQ0FBQztBQUMvQixPQUFPLEVBQUMsZUFBZSxFQUFjLEVBQUUsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUVyRCxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxTQUFTLENBQUM7O0FBRzdDLE1BQU0sT0FBTyxtQkFBb0IsU0FBUSxlQUF3QztJQUM3RSxZQUVxQixRQUFxQixFQUVyQixHQUFXLEVBRVgsT0FBMkIsRUFHM0IsTUFBZ0M7UUFFakQsS0FBSyxDQUFDLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFUbkQsYUFBUSxHQUFSLFFBQVEsQ0FBYTtRQUVyQixRQUFHLEdBQUgsR0FBRyxDQUFRO1FBRVgsWUFBTyxHQUFQLE9BQU8sQ0FBb0I7UUFHM0IsV0FBTSxHQUFOLE1BQU0sQ0FBMEI7SUFHckQsQ0FBQztJQUVELElBQUksUUFBUTtRQUNSLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDO0lBQ2hFLENBQUM7SUFFRCxXQUFXLENBQUMsUUFBeUI7UUFDakMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUV6QyxJQUFJLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQzFFLENBQUM7SUFFRCxLQUFLO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRWxDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7O2lIQTdCUSxtQkFBbUIsa0JBRWhCLG9CQUFvQixhQUVwQix3QkFBd0IsYUFFeEIsYUFBYSxhQUdiLG1CQUFtQjtxSEFUdEIsbUJBQW1CLGNBRFAsTUFBTTs0RkFDbEIsbUJBQW1CO2tCQUQvQixVQUFVO21CQUFDLEVBQUMsVUFBVSxFQUFFLE1BQU0sRUFBQzs7MEJBR3ZCLE1BQU07MkJBQUMsb0JBQW9COzswQkFFM0IsTUFBTTsyQkFBQyx3QkFBd0I7OzBCQUUvQixNQUFNOzJCQUFDLGFBQWE7OzBCQUVwQixRQUFROzswQkFDUixNQUFNOzJCQUFDLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBJbmplY3RhYmxlLCBPcHRpb25hbH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0xPQ0FMX1NUT1JBR0V9IGZyb20gJ0BuZy13ZWItYXBpcy9jb21tb24nO1xuaW1wb3J0IHtcbiAgICBUdWlMYW5ndWFnZSxcbiAgICBUdWlMYW5ndWFnZUxvYWRlcixcbiAgICBUdWlMYW5ndWFnZU5hbWUsXG4gICAgVHVpTGFuZ3VhZ2VTdG9yYWdlLFxufSBmcm9tICdAdGFpZ2EtdWkvaTE4bi9pbnRlcmZhY2VzJztcbmltcG9ydCB7XG4gICAgVFVJX0RFRkFVTFRfTEFOR1VBR0UsXG4gICAgVFVJX0xBTkdVQUdFX0xPQURFUixcbiAgICBUVUlfTEFOR1VBR0VfU1RPUkFHRV9LRVksXG59IGZyb20gJ0B0YWlnYS11aS9pMThuL3Rva2Vucyc7XG5pbXBvcnQge0JlaGF2aW9yU3ViamVjdCwgT2JzZXJ2YWJsZSwgb2Z9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQge3R1aUFzeW5jTG9hZExhbmd1YWdlfSBmcm9tICcuL3V0aWxzJztcblxuQEluamVjdGFibGUoe3Byb3ZpZGVkSW46ICdyb290J30pXG5leHBvcnQgY2xhc3MgVHVpTGFuZ3VhZ2VTd2l0Y2hlciBleHRlbmRzIEJlaGF2aW9yU3ViamVjdDxPYnNlcnZhYmxlPFR1aUxhbmd1YWdlPj4ge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFRVSV9ERUZBVUxUX0xBTkdVQUdFKVxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGZhbGxiYWNrOiBUdWlMYW5ndWFnZSxcbiAgICAgICAgQEluamVjdChUVUlfTEFOR1VBR0VfU1RPUkFHRV9LRVkpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkga2V5OiBzdHJpbmcsXG4gICAgICAgIEBJbmplY3QoTE9DQUxfU1RPUkFHRSlcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBzdG9yYWdlOiBUdWlMYW5ndWFnZVN0b3JhZ2UsXG4gICAgICAgIEBPcHRpb25hbCgpXG4gICAgICAgIEBJbmplY3QoVFVJX0xBTkdVQUdFX0xPQURFUilcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBsb2FkZXI6IFR1aUxhbmd1YWdlTG9hZGVyIHwgbnVsbCxcbiAgICApIHtcbiAgICAgICAgc3VwZXIodHVpQXN5bmNMb2FkTGFuZ3VhZ2Uoc3RvcmFnZS5nZXRJdGVtKGtleSksIGxvYWRlciwgZmFsbGJhY2spKTtcbiAgICB9XG5cbiAgICBnZXQgbGFuZ3VhZ2UoKTogVHVpTGFuZ3VhZ2VOYW1lIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RvcmFnZS5nZXRJdGVtKHRoaXMua2V5KSB8fCB0aGlzLmZhbGxiYWNrLm5hbWU7XG4gICAgfVxuXG4gICAgc2V0TGFuZ3VhZ2UobGFuZ3VhZ2U6IFR1aUxhbmd1YWdlTmFtZSk6IHZvaWQge1xuICAgICAgICB0aGlzLnN0b3JhZ2Uuc2V0SXRlbSh0aGlzLmtleSwgbGFuZ3VhZ2UpO1xuXG4gICAgICAgIHRoaXMubmV4dCh0dWlBc3luY0xvYWRMYW5ndWFnZShsYW5ndWFnZSwgdGhpcy5sb2FkZXIsIHRoaXMuZmFsbGJhY2spKTtcbiAgICB9XG5cbiAgICBjbGVhcigpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5rZXkpO1xuXG4gICAgICAgIHRoaXMubmV4dChvZih0aGlzLmZhbGxiYWNrKSk7XG4gICAgfVxufVxuIl19
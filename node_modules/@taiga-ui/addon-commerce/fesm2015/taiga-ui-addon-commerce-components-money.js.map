{"version":3,"file":"taiga-ui-addon-commerce-components-money.js","sources":["../../../projects/addon-commerce/components/money/money.options.ts","../../../projects/addon-commerce/components/money/utils/format-sign-symbol.ts","../../../projects/addon-commerce/components/money/pipes/sign-symbol.pipe.ts","../../../projects/addon-commerce/components/money/pipes/integer-part.pipe.ts","../../../projects/addon-commerce/components/money/utils/format-fraction-part.ts","../../../projects/addon-commerce/components/money/pipes/fraction-part.pipe.ts","../../../projects/addon-commerce/components/money/money.component.ts","../../../projects/addon-commerce/components/money/money.template.html","../../../projects/addon-commerce/components/money/money.module.ts","../../../projects/addon-commerce/components/money/taiga-ui-addon-commerce-components-money.ts"],"sourcesContent":["import {Provider} from '@angular/core';\nimport {TuiCurrency} from '@taiga-ui/addon-commerce/enums';\nimport {TuiCurrencyVariants, TuiMoneySign} from '@taiga-ui/addon-commerce/types';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk';\nimport {TuiDecimal, TuiHorizontalDirection} from '@taiga-ui/core';\n\nexport interface TuiMoneyOptions {\n    readonly colored: boolean;\n    readonly currency: TuiCurrencyVariants;\n    readonly currencyAlign: TuiHorizontalDirection;\n    readonly decimal: TuiDecimal;\n    readonly precision: number;\n    readonly sign: TuiMoneySign;\n    readonly singleColor: boolean;\n}\n\nexport const TUI_MONEY_DEFAULT_OPTIONS: TuiMoneyOptions = {\n    decimal: 'not-zero',\n    currency: TuiCurrency.Ruble,\n    currencyAlign: 'right',\n    sign: 'negative-only',\n    colored: false,\n    precision: 2,\n    singleColor: false,\n};\n\n/**\n * @deprecated TODO: remove in 4.0\n */\nexport const TUI_MONEY_DEFAULT_DEFAULT_OPTIONS = TUI_MONEY_DEFAULT_OPTIONS;\n\nexport const TUI_MONEY_OPTIONS = tuiCreateToken(TUI_MONEY_DEFAULT_OPTIONS);\n\nexport function tuiMoneyOptionsProvider(options: Partial<TuiMoneyOptions>): Provider {\n    return tuiProvideOptions(TUI_MONEY_OPTIONS, options, TUI_MONEY_DEFAULT_OPTIONS);\n}\n","import {TuiMoneySign, TuiMoneySignSymbol} from '@taiga-ui/addon-commerce/types';\nimport {CHAR_MINUS, CHAR_PLUS} from '@taiga-ui/cdk';\n\nexport function tuiFormatSignSymbol(\n    value: number,\n    sign: TuiMoneySign,\n): TuiMoneySignSymbol {\n    if (sign === 'never' || !value || (sign === 'negative-only' && value > 0)) {\n        return '';\n    }\n\n    if (sign === 'force-negative' || (value < 0 && sign !== 'force-positive')) {\n        return CHAR_MINUS;\n    }\n\n    return CHAR_PLUS;\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {TuiMoneySign, TuiMoneySignSymbol} from '@taiga-ui/addon-commerce/types';\n\nimport {tuiFormatSignSymbol} from '../utils/format-sign-symbol';\n\n@Pipe({name: 'tuiSignSymbol'})\nexport class TuiSignSymbolPipe implements PipeTransform {\n    transform(value: number, sign: TuiMoneySign): TuiMoneySignSymbol {\n        return tuiFormatSignSymbol(value, sign);\n    }\n}\n","import {Inject, Pipe, PipeTransform} from '@angular/core';\nimport {tuiRoundWith} from '@taiga-ui/cdk';\nimport {\n    TUI_NUMBER_FORMAT,\n    tuiFormatNumber,\n    TuiNumberFormatSettings,\n} from '@taiga-ui/core';\n\n@Pipe({name: 'tuiIntegerPart'})\nexport class TuiIntegerPartPipe implements PipeTransform {\n    constructor(\n        @Inject(TUI_NUMBER_FORMAT) private readonly numberFormat: TuiNumberFormatSettings,\n    ) {}\n\n    transform(value: number, precision = 2): string {\n        const rounded = tuiRoundWith({\n            value: Math.abs(Number(value)),\n            precision,\n            method: this.numberFormat.rounding,\n        });\n\n        return tuiFormatNumber(rounded, {\n            ...this.numberFormat,\n            decimalLimit: 0,\n            rounding: 'truncate',\n        });\n    }\n}\n","import {TuiDecimal, tuiFormatNumber, TuiNumberFormatSettings} from '@taiga-ui/core';\n\nexport function tuiFormatFractionPart(options: {\n    decimal: TuiDecimal;\n    numberFormat: TuiNumberFormatSettings;\n    precision: number;\n    value: number;\n}): string {\n    const {value, decimal, numberFormat, precision} = options;\n    const fraction = tuiFormatNumber(value, {\n        ...numberFormat,\n        decimalLimit: precision,\n    }).split(numberFormat.decimalSeparator)[1];\n    const shouldShow =\n        decimal !== 'never' && (decimal === 'always' || !!parseInt(fraction, 10));\n\n    return shouldShow ? `${numberFormat.decimalSeparator}${fraction}` : '';\n}\n","import {Inject, Pipe, PipeTransform} from '@angular/core';\nimport {TUI_NUMBER_FORMAT, TuiDecimal, TuiNumberFormatSettings} from '@taiga-ui/core';\n\nimport {tuiFormatFractionPart} from '../utils/format-fraction-part';\n\n@Pipe({name: 'tuiFractionPart'})\nexport class TuiFractionPartPipe implements PipeTransform {\n    constructor(\n        @Inject(TUI_NUMBER_FORMAT) private readonly numberFormat: TuiNumberFormatSettings,\n    ) {}\n\n    transform(value: number, decimal: TuiDecimal, precision: number): string {\n        return tuiFormatFractionPart({\n            value,\n            decimal,\n            precision,\n            numberFormat: this.numberFormat,\n        });\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    Inject,\n    Input,\n} from '@angular/core';\nimport {\n    TuiCurrencyVariants,\n    TuiMoneySign,\n    TuiMoneySignSymbol,\n} from '@taiga-ui/addon-commerce/types';\nimport {CHAR_MINUS, CHAR_PLUS} from '@taiga-ui/cdk';\nimport {TuiDecimal} from '@taiga-ui/core';\n\nimport {TUI_MONEY_OPTIONS, TuiMoneyOptions} from './money.options';\nimport {tuiFormatSignSymbol} from './utils/format-sign-symbol';\n\n@Component({\n    selector: 'tui-money',\n    templateUrl: './money.template.html',\n    styleUrls: ['./money.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiMoneyComponent {\n    @Input()\n    value = NaN;\n\n    @Input()\n    decimal: TuiDecimal = this.options.decimal;\n\n    @Input()\n    currency: TuiCurrencyVariants = this.options.currency;\n\n    @Input()\n    currencyAlign = this.options.currencyAlign;\n\n    @Input()\n    sign: TuiMoneySign = this.options.sign;\n\n    @Input()\n    colored = this.options.colored;\n\n    @Input()\n    precision = this.options.precision;\n\n    @Input()\n    singleColor = this.options.singleColor;\n\n    get signSymbol(): TuiMoneySignSymbol {\n        return tuiFormatSignSymbol(this.value, this.sign);\n    }\n\n    @HostBinding('class._red')\n    get red(): boolean {\n        return (\n            this.colored &&\n            (this.signSymbol === CHAR_MINUS ||\n                (this.value < 0 && this.sign !== 'force-positive'))\n        );\n    }\n\n    @HostBinding('class._green')\n    get green(): boolean {\n        return (\n            this.colored &&\n            (this.signSymbol === CHAR_PLUS ||\n                (this.value > 0 && this.sign !== 'force-negative'))\n        );\n    }\n\n    get alignRight(): boolean {\n        return this.currencyAlign === 'right';\n    }\n\n    @HostBinding('class._inherit-color')\n    get inheritColor(): boolean {\n        return this.singleColor || (this.value === 0 && this.colored);\n    }\n\n    constructor(@Inject(TUI_MONEY_OPTIONS) private readonly options: TuiMoneyOptions) {}\n}\n","<span\n    automation-id=\"tui-money__sign\"\n    [textContent]=\"value | tuiSignSymbol: sign\"\n></span>\n\n<span\n    *tuiLet=\"currency | tuiCurrency as currencySymbol\"\n    class=\"t-container\"\n    [class.t-container_reverse]=\"!alignRight\"\n>\n    <span>\n        <span\n            automation-id=\"tui-money__integer-part\"\n            [textContent]=\"value | tuiIntegerPart: precision\"\n        ></span>\n        <span\n            automation-id=\"tui-money__fraction-part\"\n            class=\"t-lighter\"\n            [textContent]=\"value | tuiFractionPart: decimal : precision\"\n        ></span>\n    </span>\n    <span *ngIf=\"(alignRight && currencySymbol) || currencySymbol.length > 1\">&nbsp;</span>\n    <span\n        automation-id=\"tui-money__currency\"\n        class=\"t-lighter\"\n        [textContent]=\"currencySymbol\"\n    ></span>\n</span>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiCurrencyPipeModule} from '@taiga-ui/addon-commerce/pipes';\nimport {TuiLetModule} from '@taiga-ui/cdk';\n\nimport {TuiMoneyComponent} from './money.component';\nimport {TuiFractionPartPipe} from './pipes/fraction-part.pipe';\nimport {TuiIntegerPartPipe} from './pipes/integer-part.pipe';\nimport {TuiSignSymbolPipe} from './pipes/sign-symbol.pipe';\n\n@NgModule({\n    imports: [CommonModule, TuiCurrencyPipeModule, TuiLetModule],\n    declarations: [\n        TuiMoneyComponent,\n        TuiFractionPartPipe,\n        TuiIntegerPartPipe,\n        TuiSignSymbolPipe,\n    ],\n    exports: [TuiMoneyComponent],\n})\nexport class TuiMoneyModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i3.TuiSignSymbolPipe","i5.TuiIntegerPartPipe","i6.TuiFractionPartPipe"],"mappings":"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"}
{"version":3,"file":"taiga-ui-addon-commerce-components-input-card-grouped.js","sources":["../../../projects/addon-commerce/components/input-card-grouped/input-card-grouped.options.ts","../../../projects/addon-commerce/components/input-card-grouped/input-card-grouped.providers.ts","../../../projects/addon-commerce/components/input-card-grouped/input-card-grouped.component.ts","../../../projects/addon-commerce/components/input-card-grouped/input-card-grouped.template.html","../../../projects/addon-commerce/components/input-card-grouped/input-card-grouped.module.ts","../../../projects/addon-commerce/components/input-card-grouped/taiga-ui-addon-commerce-components-input-card-grouped.ts"],"sourcesContent":["import {Provider} from '@angular/core';\nimport {\n    TUI_INPUT_CARD_DEFAULT_OPTIONS,\n    TuiInputCardOptions,\n} from '@taiga-ui/addon-commerce/components/input-card';\nimport {tuiDefaultCardValidator} from '@taiga-ui/addon-commerce/constants';\nimport {TuiBooleanHandler, tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk';\n\nexport interface TuiInputCardGroupedOptions extends TuiInputCardOptions {\n    readonly cardValidator: TuiBooleanHandler<string>;\n    readonly exampleText: string;\n    readonly exampleTextCVC: string;\n    readonly cvcHidden: boolean;\n}\n\nexport const TUI_INPUT_CARD_GROUPED_DEFAULT_OPTIONS: TuiInputCardGroupedOptions = {\n    ...TUI_INPUT_CARD_DEFAULT_OPTIONS,\n    cardValidator: tuiDefaultCardValidator,\n    exampleText: '0000 0000 0000 0000',\n    exampleTextCVC: '000',\n    cvcHidden: false,\n};\n\nexport const TUI_INPUT_CARD_GROUPED_OPTIONS = tuiCreateToken(\n    TUI_INPUT_CARD_GROUPED_DEFAULT_OPTIONS,\n);\n\nexport function tuiInputCardGroupedOptionsProvider(\n    options: Partial<TuiInputCardGroupedOptions>,\n): Provider {\n    return tuiProvideOptions(\n        TUI_INPUT_CARD_GROUPED_OPTIONS,\n        options,\n        TUI_INPUT_CARD_GROUPED_DEFAULT_OPTIONS,\n    );\n}\n","import {inject} from '@angular/core';\nimport {WINDOW} from '@ng-web-apis/common';\nimport {\n    TUI_CARD_CVC_TEXTS,\n    TUI_CARD_EXPIRY_TEXTS,\n    TUI_CARD_NUMBER_TEXTS,\n} from '@taiga-ui/addon-commerce/tokens';\nimport {tuiCreateTokenFromFactory, tuiTypedFromEvent} from '@taiga-ui/cdk';\nimport {TUI_MEDIA} from '@taiga-ui/core';\nimport {combineLatest, Observable, of} from 'rxjs';\nimport {map, startWith, switchMap} from 'rxjs/operators';\n\nexport interface TuiCardGroupedTexts {\n    readonly cardNumberText: string;\n    readonly cvcText: string;\n    readonly expiryText: string;\n}\n\n/**\n * InputCardGrouped texts\n */\nexport const TUI_INPUT_CARD_GROUPED_TEXTS = tuiCreateTokenFromFactory<\n    Observable<TuiCardGroupedTexts>\n>(() => {\n    const win = inject(WINDOW);\n    const cardNumberTexts = inject(TUI_CARD_NUMBER_TEXTS);\n    const expiryTexts = inject(TUI_CARD_EXPIRY_TEXTS);\n    const cvcTexts = inject(TUI_CARD_CVC_TEXTS);\n    const {desktopSmall} = inject(TUI_MEDIA);\n\n    const media = win.matchMedia(`screen and (min-width: ${(desktopSmall - 1) / 16}em)`);\n\n    return tuiTypedFromEvent(media, 'change').pipe(\n        startWith(null),\n        switchMap(() =>\n            combineLatest([\n                of(Number(media.matches)),\n                cardNumberTexts,\n                expiryTexts,\n                cvcTexts,\n            ]),\n        ),\n        map(([index, cardNumber, expiry, cvcTexts]) => ({\n            cardNumberText: cardNumber[index],\n            expiryText: expiry[index],\n            cvcText: cvcTexts[index],\n        })),\n    );\n});\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    Self,\n    TemplateRef,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {MaskitoOptions} from '@maskito/core';\nimport {maskitoDateOptionsGenerator} from '@maskito/kit';\nimport {AbstractTuiInputCard} from '@taiga-ui/addon-commerce/components/input-card';\nimport {TUI_CARD_MASK} from '@taiga-ui/addon-commerce/constants';\nimport {TuiCard} from '@taiga-ui/addon-commerce/interfaces';\nimport {TuiCodeCVCLength} from '@taiga-ui/addon-commerce/types';\nimport {\n    tuiAsControl,\n    tuiAsFocusableItemAccessor,\n    TuiAutofillFieldName,\n    TuiAutoFocusDirective,\n    TuiFocusableElementAccessor,\n    tuiIsElement,\n    tuiIsInput,\n    tuiIsNativeFocused,\n    tuiIsNativeFocusedIn,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {\n    MODE_PROVIDER,\n    TEXTFIELD_CONTROLLER_PROVIDER,\n    TUI_COMMON_ICONS,\n    TUI_DIGIT_REGEXP,\n    TUI_MODE,\n    TUI_NON_DIGIT_REGEXP,\n    TUI_TEXTFIELD_WATCHED_CONTROLLER,\n    tuiAsDataListHost,\n    TuiBrightness,\n    TuiCommonIcons,\n    TuiDataListComponent,\n    TuiDataListDirective,\n    TuiDataListHost,\n    TuiTextfieldController,\n} from '@taiga-ui/core';\nimport {TUI_ARROW_OPTIONS, TuiArrowOptions} from '@taiga-ui/kit';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Observable} from 'rxjs';\n\nimport {\n    TUI_INPUT_CARD_GROUPED_OPTIONS,\n    TuiInputCardGroupedOptions,\n} from './input-card-grouped.options';\nimport {\n    TUI_INPUT_CARD_GROUPED_TEXTS,\n    TuiCardGroupedTexts,\n} from './input-card-grouped.providers';\n\nconst EXPIRE_COMPLETE_LENGTH = 5; // MM/YY\n\n@Component({\n    selector: 'tui-input-card-grouped',\n    templateUrl: './input-card-grouped.template.html',\n    styleUrls: ['./input-card-grouped.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiInputCardGroupedComponent),\n        tuiAsControl(TuiInputCardGroupedComponent),\n        tuiAsDataListHost(TuiInputCardGroupedComponent),\n        MODE_PROVIDER,\n        TEXTFIELD_CONTROLLER_PROVIDER,\n    ],\n    host: {\n        '($.data-mode.attr)': 'mode$',\n        'data-size': 'l',\n    },\n})\nexport class TuiInputCardGroupedComponent\n    extends AbstractTuiInputCard<TuiCard, TuiInputCardGroupedOptions>\n    implements TuiFocusableElementAccessor, TuiDataListHost<Partial<TuiCard>>\n{\n    @ViewChild('inputCard')\n    private readonly inputCard?: ElementRef<HTMLInputElement>;\n\n    @ViewChild('inputCard', {read: TuiAutoFocusDirective})\n    private readonly cardNumberAutofocusRef?: TuiAutoFocusDirective;\n\n    @ViewChild('inputExpire')\n    private readonly inputExpire?: ElementRef<HTMLInputElement>;\n\n    @ViewChild('inputExpire', {read: TuiAutoFocusDirective})\n    private readonly expireCardAutofocusRef?: TuiAutoFocusDirective;\n\n    @ViewChild('inputCVC')\n    private readonly inputCVC?: ElementRef<HTMLInputElement>;\n\n    @ViewChild('inputCVC', {read: TuiAutoFocusDirective})\n    private readonly cvcCardAutofocusRef?: TuiAutoFocusDirective;\n\n    private expireInert = false;\n\n    @Input()\n    exampleText = this.options.exampleText;\n\n    @Input()\n    cardValidator = this.options.cardValidator;\n\n    @Input()\n    set codeLength(length: TuiCodeCVCLength) {\n        this.exampleTextCVC = '0'.repeat(length);\n        this.maskCVC = {\n            mask: new Array(length).fill(TUI_DIGIT_REGEXP),\n        };\n    }\n\n    @Output()\n    readonly autofilledChange = new EventEmitter<boolean>();\n\n    @ContentChild(TuiDataListDirective, {read: TemplateRef})\n    readonly dropdown: PolymorpheusContent;\n\n    @ContentChild(TuiDataListComponent)\n    readonly datalist?: TuiDataListComponent<TuiCard>;\n\n    exampleTextCVC = this.options.exampleTextCVC;\n\n    cvcHidden = this.options.cvcHidden;\n\n    maskCVC: MaskitoOptions = {\n        mask: new Array(3).fill(TUI_DIGIT_REGEXP),\n    };\n\n    readonly maskCard: MaskitoOptions = {\n        mask: TUI_CARD_MASK,\n    };\n\n    readonly maskExpire: MaskitoOptions = maskitoDateOptionsGenerator({\n        mode: 'mm/yy',\n        separator: '/',\n    });\n\n    open = false;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Inject(ElementRef) private readonly el: ElementRef<HTMLElement>,\n        @Inject(TUI_MODE) readonly mode$: Observable<TuiBrightness | null>,\n        @Inject(TUI_INPUT_CARD_GROUPED_TEXTS)\n        readonly cardGroupedTexts$: Observable<TuiCardGroupedTexts>,\n        @Inject(TUI_TEXTFIELD_WATCHED_CONTROLLER)\n        readonly controller: TuiTextfieldController,\n        @Inject(TUI_COMMON_ICONS) readonly icons: TuiCommonIcons,\n        @Inject(TUI_ARROW_OPTIONS) readonly arrowOptions: TuiArrowOptions,\n        @Inject(TUI_INPUT_CARD_GROUPED_OPTIONS) options: TuiInputCardGroupedOptions,\n    ) {\n        super(control, cdr, options);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return this.inputCard?.nativeElement ?? null;\n    }\n\n    get focused(): boolean {\n        return this.open || tuiIsNativeFocusedIn(this.el.nativeElement);\n    }\n\n    get appearance(): string {\n        return this.controller.appearance;\n    }\n\n    get card(): string {\n        return this.value?.card || '';\n    }\n\n    get expire(): string {\n        return this.value?.expire || '';\n    }\n\n    get cvc(): string {\n        return this.value?.cvc || '';\n    }\n\n    get hasCleaner(): boolean {\n        return !!this.value?.card?.trim() && !this.readOnly && !this.computedDisabled;\n    }\n\n    get hasDropdown(): boolean {\n        return !!this.dropdown;\n    }\n\n    get placeholderRaised(): boolean {\n        return (this.computedFocused && !this.readOnly) || this.hasCardNumber;\n    }\n\n    get hasCardNumber(): boolean {\n        return !!this.value?.card?.trim();\n    }\n\n    get idCard(): string {\n        return `${this.id}_card`;\n    }\n\n    get idExpire(): string {\n        return `${this.id}_expire`;\n    }\n\n    get idCVC(): string {\n        return `${this.id}_cvc`;\n    }\n\n    get isCardCollapsed(): boolean {\n        return this.isFocusable(this.card) && !this.cardFocused;\n    }\n\n    get autocompleteExpire(): TuiAutofillFieldName {\n        return this.autocompleteEnabled ? 'cc-exp' : 'off';\n    }\n\n    get autocompleteCVC(): TuiAutofillFieldName {\n        return this.autocompleteEnabled ? 'cc-csc' : 'off';\n    }\n\n    get tailLength(): number {\n        return this.hasExtraSpace ? 5 : 4;\n    }\n\n    // Safari expiration date autofill workaround\n    get name(): 'ccexpiryyear' | null {\n        return this.autocompleteEnabled ? 'ccexpiryyear' : null;\n    }\n\n    get cardPrefilled(): boolean {\n        return !!this.card.match(TUI_NON_DIGIT_REGEXP);\n    }\n\n    get cvcPrefilled(): boolean {\n        return !!this.cvc.match(TUI_NON_DIGIT_REGEXP);\n    }\n\n    get cardFocusable(): boolean {\n        return this.focusable && !this.cardPrefilled;\n    }\n\n    get expireFocusable(): boolean {\n        return this.isFocusable(this.card) && !this.expireInert;\n    }\n\n    get cvcFocusable(): boolean {\n        return this.isFocusable(this.card);\n    }\n\n    get masked(): string {\n        return this.cardPrefilled ? `*${this.card.slice(-4)}` : '*';\n    }\n\n    private get expireSelectionStart(): number {\n        return this.inputExpire?.nativeElement.selectionStart || 0;\n    }\n\n    @HostListener('keydown.esc')\n    onEsc(): void {\n        this.open = false;\n    }\n\n    @HostListener('keydown.arrowDown.prevent', ['$event.target', '1'])\n    @HostListener('keydown.arrowUp.prevent', ['$event.target', '-1'])\n    onArrow(element: HTMLElement, step: number): void {\n        this.open = this.hasDropdown;\n        this.cdr.detectChanges();\n        this.datalist?.onKeyDownArrow(element, step);\n    }\n\n    handleOption(option: Partial<TuiCard>): void {\n        const {card = '', expire = '', cvc = ''} = option;\n        const {bin} = this;\n        const element =\n            (!expire && this.inputExpire?.nativeElement) || this.inputCVC?.nativeElement;\n\n        this.value = {card, expire, cvc};\n        this.updateBin(bin);\n        this.open = false;\n        this.expireInert = !!expire;\n\n        element?.focus();\n    }\n\n    onCardChange(card: string): void {\n        const {value, bin} = this;\n        const parsed = card.split(' ').join('');\n\n        if (value && value.card === parsed) {\n            return;\n        }\n\n        this.updateProperty(parsed, 'card');\n        this.updateBin(bin);\n\n        if (this.cardValidator(this.card) && !this.expire && this.inputExpire) {\n            this.focusExpire();\n        }\n    }\n\n    onExpireChange(expire: string): void {\n        this.updateProperty(expire, 'expire');\n\n        if (\n            expire.length === EXPIRE_COMPLETE_LENGTH &&\n            this.expireSelectionStart >= EXPIRE_COMPLETE_LENGTH\n        ) {\n            this.focusCVC();\n        }\n    }\n\n    onCVCChange(cvc: string): void {\n        this.updateProperty(cvc, 'cvc');\n    }\n\n    transform({offsetWidth}: HTMLSpanElement): string {\n        return this.isCardCollapsed ? `translate3d(${offsetWidth}px, 0, 0)` : '';\n    }\n\n    onActiveZoneChange(active: boolean): void {\n        this.updateFocused(active);\n        this.open = active && this.open;\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        if (tuiIsElement(event.target) && tuiIsInput(event.target)) {\n            return;\n        }\n\n        event.preventDefault();\n        this.focusInput();\n    }\n\n    onScroll({currentTarget}: Event): void {\n        if (tuiIsElement(currentTarget)) {\n            currentTarget.scrollLeft = 0;\n        }\n    }\n\n    clear(): void {\n        this.expireInert = false;\n        this.value = null;\n        this.focusCard();\n    }\n\n    toggle(): void {\n        this.open = !this.open;\n    }\n\n    override writeValue(value: TuiCard | null): void {\n        const {bin} = this;\n\n        super.writeValue(value);\n        this.updateBin(bin);\n        this.expireInert = !!this.expire && this.cardPrefilled;\n    }\n\n    /** Public API for manual focus management */\n    focusCard(): void {\n        this.cardNumberAutofocusRef?.focus();\n    }\n\n    focusExpire(): void {\n        this.expireCardAutofocusRef?.focus();\n    }\n\n    focusCVC(): void {\n        this.cvcCardAutofocusRef?.focus();\n    }\n\n    private get cardFocused(): boolean {\n        return !!this.inputCard && tuiIsNativeFocused(this.inputCard.nativeElement);\n    }\n\n    private get hasExtraSpace(): boolean {\n        return this.card.length % 4 > 0;\n    }\n\n    @tuiPure\n    private isFocusable(card: string): boolean {\n        return this.focusable && (this.cardValidator(card) || this.cardPrefilled);\n    }\n\n    private updateBin(oldBin: string | null): void {\n        const {bin} = this;\n\n        if (bin !== oldBin && !this.cardPrefilled) {\n            this.binChange.emit(bin);\n        }\n    }\n\n    private updateProperty(value: string, propName: 'card' | 'cvc' | 'expire'): void {\n        const {card = '', expire = '', cvc = ''} = this.value || {};\n        const newValue: TuiCard = {card, expire, cvc};\n\n        newValue[propName] = value;\n\n        this.value = newValue.expire || newValue.cvc || newValue.card ? newValue : null;\n    }\n\n    private focusInput(): void {\n        const element =\n            (this.cardFocusable && this.inputCard?.nativeElement) ||\n            (this.expireFocusable && this.inputExpire?.nativeElement) ||\n            this.inputCVC?.nativeElement;\n\n        element?.focus();\n    }\n}\n","<div\n    *ngIf=\"cardGroupedTexts$ | async as texts\"\n    tuiDropdownLimitWidth=\"fixed\"\n    tuiWrapper\n    class=\"t-common-wrapper\"\n    [appearance]=\"appearance\"\n    [disabled]=\"computedDisabled\"\n    [focus]=\"computedFocused\"\n    [hover]=\"pseudoHover\"\n    [invalid]=\"computedInvalid\"\n    [readOnly]=\"readOnly\"\n    [tuiDropdown]=\"dropdown || ''\"\n    [tuiDropdownManual]=\"open\"\n    (mousedown)=\"onMouseDown($event)\"\n    (scroll)=\"onScroll($event)\"\n    (tuiActiveZoneChange)=\"onActiveZoneChange($event)\"\n>\n    <div class=\"t-wrapper\">\n        <label\n            *tuiLet=\"value?.card | tuiFormatCard: cardPrefilled as formattedCard\"\n            tuiPreventDefault=\"click\"\n        >\n            <input\n                #inputCard\n                automation-id=\"tui-input-card-grouped__card\"\n                inputmode=\"numeric\"\n                translate=\"no\"\n                type=\"text\"\n                class=\"t-input t-input_card\"\n                [attr.aria-invalid]=\"!cardPrefilled && !(this.card | tuiMapper: cardValidator)\"\n                [attr.id]=\"idCard\"\n                [autocomplete]=\"autocompleteCard\"\n                [class.t-input_hidden]=\"!card.length && focused\"\n                [class.t-input_inert]=\"cardPrefilled\"\n                [disabled]=\"computedDisabled\"\n                [maskito]=\"maskCard\"\n                [ngModel]=\"formattedCard\"\n                [placeholder]=\"cardPrefilled ? '' : exampleText\"\n                [readOnly]=\"readOnly\"\n                [tuiAutoFocus]=\"false\"\n                [tuiFocusable]=\"cardFocusable\"\n                (focus)=\"(0)\"\n                (ngModelChange)=\"onCardChange($event)\"\n            />\n            <span\n                aria-hidden=\"true\"\n                translate=\"no\"\n                class=\"t-collapsed\"\n                [attr.data-before]=\"masked\"\n                [class.t-collapsed_enable-mask]=\"isCardCollapsed\"\n                (tuiResize)=\"(0)\"\n            >\n                <span\n                    #ghost\n                    class=\"t-ghost\"\n                    [textContent]=\"formattedCard.slice(-tailLength)\"\n                ></span>\n\n                <span class=\"t-collapsed-wrapper\">\n                    <span\n                        class=\"t-value\"\n                        [style.transform]=\"transform(ghost)\"\n                    >\n                        {{ formattedCard }}\n                    </span>\n                </span>\n            </span>\n            <span\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n            >\n                {{ texts.cardNumberText }}\n            </span>\n        </label>\n    </div>\n    <div\n        class=\"t-wrapper t-wrapper_expire\"\n        [class.t-wrapper_active]=\"isCardCollapsed\"\n    >\n        <label tuiPreventDefault=\"click\">\n            <input\n                #inputExpire\n                automation-id=\"tui-input-card-grouped__expire\"\n                inputmode=\"numeric\"\n                placeholder=\"00/00\"\n                translate=\"no\"\n                class=\"t-input\"\n                [attr.id]=\"idExpire\"\n                [attr.name]=\"name\"\n                [autocomplete]=\"autocompleteExpire\"\n                [class.t-input_inert]=\"!expireFocusable\"\n                [disabled]=\"computedDisabled\"\n                [maskito]=\"maskExpire\"\n                [ngModel]=\"expire\"\n                [readOnly]=\"readOnly\"\n                [tuiAutoFocus]=\"false\"\n                [tuiFocusable]=\"expireFocusable\"\n                (focus)=\"(0)\"\n                (ngModelChange)=\"onExpireChange($event)\"\n            />\n            <span\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n            >\n                {{ texts.expiryText }}\n            </span>\n        </label>\n    </div>\n    <div\n        class=\"t-wrapper t-wrapper_cvc\"\n        [class.t-wrapper_active]=\"isCardCollapsed\"\n    >\n        <label tuiPreventDefault=\"click\">\n            <input\n                #inputCVC\n                automation-id=\"tui-input-card-grouped__cvc\"\n                inputmode=\"numeric\"\n                translate=\"no\"\n                type=\"text\"\n                class=\"t-input\"\n                [attr.id]=\"idCVC\"\n                [autocomplete]=\"autocompleteCVC\"\n                [class.t-input_hidden]=\"cvcHidden\"\n                [class.t-input_prefilled]=\"cvcPrefilled\"\n                [disabled]=\"computedDisabled\"\n                [maskito]=\"maskCVC\"\n                [ngModel]=\"cvc\"\n                [placeholder]=\"cvcPrefilled ? '•••' : exampleTextCVC\"\n                [readOnly]=\"readOnly || cvcPrefilled\"\n                [tuiAutoFocus]=\"false\"\n                [tuiFocusable]=\"cvcFocusable\"\n                (focus)=\"(0)\"\n                (ngModelChange)=\"onCVCChange($event)\"\n            />\n            <span\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n            >\n                {{ texts.cvcText }}\n            </span>\n        </label>\n    </div>\n    <div class=\"t-icons\">\n        <div\n            *ngIf=\"icon\"\n            class=\"t-icon-outlet\"\n        >\n            <tui-svg\n                *polymorpheusOutlet=\"icon as text\"\n                automation-id=\"tui-input-card-grouped__icon\"\n                class=\"t-card\"\n                [src]=\"text\"\n            ></tui-svg>\n        </div>\n        <tui-svg\n            *ngIf=\"hasCleaner\"\n            appearance=\"icon\"\n            automation-id=\"tui-input-card-grouped__cleaner\"\n            tuiWrapper\n            class=\"t-icon\"\n            [src]=\"icons.close\"\n            (click)=\"clear()\"\n        ></tui-svg>\n        <tui-svg\n            *ngIf=\"hasDropdown\"\n            appearance=\"icon\"\n            automation-id=\"tui-input-card-grouped__dropdown\"\n            tuiWrapper\n            class=\"t-icon\"\n            [class.t-icon_rotated]=\"open\"\n            [src]=\"arrowOptions.iconLarge\"\n            (click)=\"toggle()\"\n        ></tui-svg>\n    </div>\n</div>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MaskitoModule} from '@maskito/angular';\nimport {TuiFormatCardModule} from '@taiga-ui/addon-commerce/pipes';\nimport {\n    TuiActiveZoneModule,\n    TuiAutoFocusModule,\n    TuiFocusableModule,\n    TuiLetModule,\n    TuiMapperPipeModule,\n    TuiPreventDefaultModule,\n    TuiResizeModule,\n} from '@taiga-ui/cdk';\nimport {TuiDropdownModule, TuiSvgModule, TuiWrapperModule} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiInputCardGroupedComponent} from './input-card-grouped.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        MaskitoModule,\n        TuiFocusableModule,\n        TuiSvgModule,\n        TuiWrapperModule,\n        TuiActiveZoneModule,\n        TuiMapperPipeModule,\n        TuiDropdownModule,\n        TuiPreventDefaultModule,\n        PolymorpheusModule,\n        TuiLetModule,\n        TuiResizeModule,\n        TuiFormatCardModule,\n        TuiAutoFocusModule,\n    ],\n    declarations: [TuiInputCardGroupedComponent],\n    exports: [TuiInputCardGroupedComponent],\n})\nexport class TuiInputCardGroupedModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
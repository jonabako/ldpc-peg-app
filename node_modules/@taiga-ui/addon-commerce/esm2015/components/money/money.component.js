import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input, } from '@angular/core';
import { CHAR_MINUS, CHAR_PLUS } from '@taiga-ui/cdk';
import { TUI_MONEY_OPTIONS } from './money.options';
import { tuiFormatSignSymbol } from './utils/format-sign-symbol';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
import * as i2 from "@angular/common";
import * as i3 from "./pipes/sign-symbol.pipe";
import * as i4 from "@taiga-ui/addon-commerce/pipes";
import * as i5 from "./pipes/integer-part.pipe";
import * as i6 from "./pipes/fraction-part.pipe";
export class TuiMoneyComponent {
    constructor(options) {
        this.options = options;
        this.value = NaN;
        this.decimal = this.options.decimal;
        this.currency = this.options.currency;
        this.currencyAlign = this.options.currencyAlign;
        this.sign = this.options.sign;
        this.colored = this.options.colored;
        this.precision = this.options.precision;
        this.singleColor = this.options.singleColor;
    }
    get signSymbol() {
        return tuiFormatSignSymbol(this.value, this.sign);
    }
    get red() {
        return (this.colored &&
            (this.signSymbol === CHAR_MINUS ||
                (this.value < 0 && this.sign !== 'force-positive')));
    }
    get green() {
        return (this.colored &&
            (this.signSymbol === CHAR_PLUS ||
                (this.value > 0 && this.sign !== 'force-negative')));
    }
    get alignRight() {
        return this.currencyAlign === 'right';
    }
    get inheritColor() {
        return this.singleColor || (this.value === 0 && this.colored);
    }
}
TuiMoneyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMoneyComponent, deps: [{ token: TUI_MONEY_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });
TuiMoneyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiMoneyComponent, selector: "tui-money", inputs: { value: "value", decimal: "decimal", currency: "currency", currencyAlign: "currencyAlign", sign: "sign", colored: "colored", precision: "precision", singleColor: "singleColor" }, host: { properties: { "class._red": "this.red", "class._green": "this.green", "class._inherit-color": "this.inheritColor" } }, ngImport: i0, template: "<span\n    automation-id=\"tui-money__sign\"\n    [textContent]=\"value | tuiSignSymbol: sign\"\n></span>\n\n<span\n    *tuiLet=\"currency | tuiCurrency as currencySymbol\"\n    class=\"t-container\"\n    [class.t-container_reverse]=\"!alignRight\"\n>\n    <span>\n        <span\n            automation-id=\"tui-money__integer-part\"\n            [textContent]=\"value | tuiIntegerPart: precision\"\n        ></span>\n        <span\n            automation-id=\"tui-money__fraction-part\"\n            class=\"t-lighter\"\n            [textContent]=\"value | tuiFractionPart: decimal : precision\"\n        ></span>\n    </span>\n    <span *ngIf=\"(alignRight && currencySymbol) || currencySymbol.length > 1\">&nbsp;</span>\n    <span\n        automation-id=\"tui-money__currency\"\n        class=\"t-lighter\"\n        [textContent]=\"currencySymbol\"\n    ></span>\n</span>\n", styles: [":host{white-space:nowrap}:host._red{color:var(--tui-negative)}:host._green{color:var(--tui-positive)}:host:not(._inherit-color) .t-lighter{opacity:var(--tui-disabled-opacity)}.t-container_reverse{display:inline-flex;flex-direction:row-reverse}\n"], directives: [{ type: i1.TuiLetDirective, selector: "[tuiLet]", inputs: ["tuiLet"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "tuiSignSymbol": i3.TuiSignSymbolPipe, "tuiCurrency": i4.TuiCurrencyPipe, "tuiIntegerPart": i5.TuiIntegerPartPipe, "tuiFractionPart": i6.TuiFractionPartPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMoneyComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-money',
                    templateUrl: './money.template.html',
                    styleUrls: ['./money.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_MONEY_OPTIONS]
                }] }]; }, propDecorators: { value: [{
                type: Input
            }], decimal: [{
                type: Input
            }], currency: [{
                type: Input
            }], currencyAlign: [{
                type: Input
            }], sign: [{
                type: Input
            }], colored: [{
                type: Input
            }], precision: [{
                type: Input
            }], singleColor: [{
                type: Input
            }], red: [{
                type: HostBinding,
                args: ['class._red']
            }], green: [{
                type: HostBinding,
                args: ['class._green']
            }], inheritColor: [{
                type: HostBinding,
                args: ['class._inherit-color']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9uZXkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tY29tbWVyY2UvY29tcG9uZW50cy9tb25leS9tb25leS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hZGRvbi1jb21tZXJjZS9jb21wb25lbnRzL21vbmV5L21vbmV5LnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsV0FBVyxFQUNYLE1BQU0sRUFDTixLQUFLLEdBQ1IsTUFBTSxlQUFlLENBQUM7QUFNdkIsT0FBTyxFQUFDLFVBQVUsRUFBRSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFHcEQsT0FBTyxFQUFDLGlCQUFpQixFQUFrQixNQUFNLGlCQUFpQixDQUFDO0FBQ25FLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxNQUFNLDRCQUE0QixDQUFDOzs7Ozs7OztBQVEvRCxNQUFNLE9BQU8saUJBQWlCO0lBd0QxQixZQUF3RCxPQUF3QjtRQUF4QixZQUFPLEdBQVAsT0FBTyxDQUFpQjtRQXREaEYsVUFBSyxHQUFHLEdBQUcsQ0FBQztRQUdaLFlBQU8sR0FBZSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUczQyxhQUFRLEdBQXdCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDO1FBR3RELGtCQUFhLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUM7UUFHM0MsU0FBSSxHQUFpQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQUd2QyxZQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFHL0IsY0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO1FBR25DLGdCQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUM7SUFpQzRDLENBQUM7SUEvQnBGLElBQUksVUFBVTtRQUNWLE9BQU8sbUJBQW1CLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVELElBQ0ksR0FBRztRQUNILE9BQU8sQ0FDSCxJQUFJLENBQUMsT0FBTztZQUNaLENBQUMsSUFBSSxDQUFDLFVBQVUsS0FBSyxVQUFVO2dCQUMzQixDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssZ0JBQWdCLENBQUMsQ0FBQyxDQUMxRCxDQUFDO0lBQ04sQ0FBQztJQUVELElBQ0ksS0FBSztRQUNMLE9BQU8sQ0FDSCxJQUFJLENBQUMsT0FBTztZQUNaLENBQUMsSUFBSSxDQUFDLFVBQVUsS0FBSyxTQUFTO2dCQUMxQixDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssZ0JBQWdCLENBQUMsQ0FBQyxDQUMxRCxDQUFDO0lBQ04sQ0FBQztJQUVELElBQUksVUFBVTtRQUNWLE9BQU8sSUFBSSxDQUFDLGFBQWEsS0FBSyxPQUFPLENBQUM7SUFDMUMsQ0FBQztJQUVELElBQ0ksWUFBWTtRQUNaLE9BQU8sSUFBSSxDQUFDLFdBQVcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEtBQUssQ0FBQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNsRSxDQUFDOzsrR0F0RFEsaUJBQWlCLGtCQXdETixpQkFBaUI7bUdBeEQ1QixpQkFBaUIsNFdDeEI5Qiw4MkJBNEJBOzRGREphLGlCQUFpQjtrQkFON0IsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsV0FBVztvQkFDckIsV0FBVyxFQUFFLHVCQUF1QjtvQkFDcEMsU0FBUyxFQUFFLENBQUMsb0JBQW9CLENBQUM7b0JBQ2pDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNsRDs7MEJBeURnQixNQUFNOzJCQUFDLGlCQUFpQjs0Q0F0RHJDLEtBQUs7c0JBREosS0FBSztnQkFJTixPQUFPO3NCQUROLEtBQUs7Z0JBSU4sUUFBUTtzQkFEUCxLQUFLO2dCQUlOLGFBQWE7c0JBRFosS0FBSztnQkFJTixJQUFJO3NCQURILEtBQUs7Z0JBSU4sT0FBTztzQkFETixLQUFLO2dCQUlOLFNBQVM7c0JBRFIsS0FBSztnQkFJTixXQUFXO3NCQURWLEtBQUs7Z0JBUUYsR0FBRztzQkFETixXQUFXO3VCQUFDLFlBQVk7Z0JBVXJCLEtBQUs7c0JBRFIsV0FBVzt1QkFBQyxjQUFjO2dCQWN2QixZQUFZO3NCQURmLFdBQVc7dUJBQUMsc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gICAgVHVpQ3VycmVuY3lWYXJpYW50cyxcbiAgICBUdWlNb25leVNpZ24sXG4gICAgVHVpTW9uZXlTaWduU3ltYm9sLFxufSBmcm9tICdAdGFpZ2EtdWkvYWRkb24tY29tbWVyY2UvdHlwZXMnO1xuaW1wb3J0IHtDSEFSX01JTlVTLCBDSEFSX1BMVVN9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlEZWNpbWFsfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5cbmltcG9ydCB7VFVJX01PTkVZX09QVElPTlMsIFR1aU1vbmV5T3B0aW9uc30gZnJvbSAnLi9tb25leS5vcHRpb25zJztcbmltcG9ydCB7dHVpRm9ybWF0U2lnblN5bWJvbH0gZnJvbSAnLi91dGlscy9mb3JtYXQtc2lnbi1zeW1ib2wnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1tb25leScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL21vbmV5LnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL21vbmV5LnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVHVpTW9uZXlDb21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgdmFsdWUgPSBOYU47XG5cbiAgICBASW5wdXQoKVxuICAgIGRlY2ltYWw6IFR1aURlY2ltYWwgPSB0aGlzLm9wdGlvbnMuZGVjaW1hbDtcblxuICAgIEBJbnB1dCgpXG4gICAgY3VycmVuY3k6IFR1aUN1cnJlbmN5VmFyaWFudHMgPSB0aGlzLm9wdGlvbnMuY3VycmVuY3k7XG5cbiAgICBASW5wdXQoKVxuICAgIGN1cnJlbmN5QWxpZ24gPSB0aGlzLm9wdGlvbnMuY3VycmVuY3lBbGlnbjtcblxuICAgIEBJbnB1dCgpXG4gICAgc2lnbjogVHVpTW9uZXlTaWduID0gdGhpcy5vcHRpb25zLnNpZ247XG5cbiAgICBASW5wdXQoKVxuICAgIGNvbG9yZWQgPSB0aGlzLm9wdGlvbnMuY29sb3JlZDtcblxuICAgIEBJbnB1dCgpXG4gICAgcHJlY2lzaW9uID0gdGhpcy5vcHRpb25zLnByZWNpc2lvbjtcblxuICAgIEBJbnB1dCgpXG4gICAgc2luZ2xlQ29sb3IgPSB0aGlzLm9wdGlvbnMuc2luZ2xlQ29sb3I7XG5cbiAgICBnZXQgc2lnblN5bWJvbCgpOiBUdWlNb25leVNpZ25TeW1ib2wge1xuICAgICAgICByZXR1cm4gdHVpRm9ybWF0U2lnblN5bWJvbCh0aGlzLnZhbHVlLCB0aGlzLnNpZ24pO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX3JlZCcpXG4gICAgZ2V0IHJlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIHRoaXMuY29sb3JlZCAmJlxuICAgICAgICAgICAgKHRoaXMuc2lnblN5bWJvbCA9PT0gQ0hBUl9NSU5VUyB8fFxuICAgICAgICAgICAgICAgICh0aGlzLnZhbHVlIDwgMCAmJiB0aGlzLnNpZ24gIT09ICdmb3JjZS1wb3NpdGl2ZScpKVxuICAgICAgICApO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX2dyZWVuJylcbiAgICBnZXQgZ3JlZW4oKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICB0aGlzLmNvbG9yZWQgJiZcbiAgICAgICAgICAgICh0aGlzLnNpZ25TeW1ib2wgPT09IENIQVJfUExVUyB8fFxuICAgICAgICAgICAgICAgICh0aGlzLnZhbHVlID4gMCAmJiB0aGlzLnNpZ24gIT09ICdmb3JjZS1uZWdhdGl2ZScpKVxuICAgICAgICApO1xuICAgIH1cblxuICAgIGdldCBhbGlnblJpZ2h0KCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5jdXJyZW5jeUFsaWduID09PSAncmlnaHQnO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX2luaGVyaXQtY29sb3InKVxuICAgIGdldCBpbmhlcml0Q29sb3IoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnNpbmdsZUNvbG9yIHx8ICh0aGlzLnZhbHVlID09PSAwICYmIHRoaXMuY29sb3JlZCk7XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChUVUlfTU9ORVlfT1BUSU9OUykgcHJpdmF0ZSByZWFkb25seSBvcHRpb25zOiBUdWlNb25leU9wdGlvbnMpIHt9XG59XG4iLCI8c3BhblxuICAgIGF1dG9tYXRpb24taWQ9XCJ0dWktbW9uZXlfX3NpZ25cIlxuICAgIFt0ZXh0Q29udGVudF09XCJ2YWx1ZSB8IHR1aVNpZ25TeW1ib2w6IHNpZ25cIlxuPjwvc3Bhbj5cblxuPHNwYW5cbiAgICAqdHVpTGV0PVwiY3VycmVuY3kgfCB0dWlDdXJyZW5jeSBhcyBjdXJyZW5jeVN5bWJvbFwiXG4gICAgY2xhc3M9XCJ0LWNvbnRhaW5lclwiXG4gICAgW2NsYXNzLnQtY29udGFpbmVyX3JldmVyc2VdPVwiIWFsaWduUmlnaHRcIlxuPlxuICAgIDxzcGFuPlxuICAgICAgICA8c3BhblxuICAgICAgICAgICAgYXV0b21hdGlvbi1pZD1cInR1aS1tb25leV9faW50ZWdlci1wYXJ0XCJcbiAgICAgICAgICAgIFt0ZXh0Q29udGVudF09XCJ2YWx1ZSB8IHR1aUludGVnZXJQYXJ0OiBwcmVjaXNpb25cIlxuICAgICAgICA+PC9zcGFuPlxuICAgICAgICA8c3BhblxuICAgICAgICAgICAgYXV0b21hdGlvbi1pZD1cInR1aS1tb25leV9fZnJhY3Rpb24tcGFydFwiXG4gICAgICAgICAgICBjbGFzcz1cInQtbGlnaHRlclwiXG4gICAgICAgICAgICBbdGV4dENvbnRlbnRdPVwidmFsdWUgfCB0dWlGcmFjdGlvblBhcnQ6IGRlY2ltYWwgOiBwcmVjaXNpb25cIlxuICAgICAgICA+PC9zcGFuPlxuICAgIDwvc3Bhbj5cbiAgICA8c3BhbiAqbmdJZj1cIihhbGlnblJpZ2h0ICYmIGN1cnJlbmN5U3ltYm9sKSB8fCBjdXJyZW5jeVN5bWJvbC5sZW5ndGggPiAxXCI+Jm5ic3A7PC9zcGFuPlxuICAgIDxzcGFuXG4gICAgICAgIGF1dG9tYXRpb24taWQ9XCJ0dWktbW9uZXlfX2N1cnJlbmN5XCJcbiAgICAgICAgY2xhc3M9XCJ0LWxpZ2h0ZXJcIlxuICAgICAgICBbdGV4dENvbnRlbnRdPVwiY3VycmVuY3lTeW1ib2xcIlxuICAgID48L3NwYW4+XG48L3NwYW4+XG4iXX0=
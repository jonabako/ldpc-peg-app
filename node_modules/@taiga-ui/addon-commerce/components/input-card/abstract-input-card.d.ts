import { ChangeDetectorRef, EventEmitter } from '@angular/core';
import { NgControl } from '@angular/forms';
import { TuiPaymentSystem } from '@taiga-ui/addon-commerce/types';
import { AbstractTuiNullableControl, TuiAutofillFieldName, TuiFocusableElementAccessor, TuiNativeFocusableElement } from '@taiga-ui/cdk';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { TuiInputCardOptions } from './input-card.options';
import * as i0 from "@angular/core";
export declare abstract class AbstractTuiInputCard<T, Options extends TuiInputCardOptions = TuiInputCardOptions> extends AbstractTuiNullableControl<T> implements TuiFocusableElementAccessor {
    protected readonly options: Options;
    cardSrc: PolymorpheusContent;
    autocompleteEnabled: boolean;
    readonly binChange: EventEmitter<string | null>;
    constructor(control: NgControl | null, cdr: ChangeDetectorRef, options: Options);
    abstract get card(): string;
    abstract get nativeFocusableElement(): TuiNativeFocusableElement | null;
    get defaultIcon(): string | null;
    get paymentSystem(): TuiPaymentSystem | null;
    /** @deprecated remove in 4.0 */
    get icon(): PolymorpheusContent;
    get autocomplete(): TuiAutofillFieldName;
    /**
     * @deprecated: drop in v4.0
     * use {@link autocomplete}
     */
    get autocompleteCard(): TuiAutofillFieldName;
    get bin(): string | null;
    protected getPaymentSystem(cardNumber?: string | null): TuiPaymentSystem | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<AbstractTuiInputCard<any, any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AbstractTuiInputCard<any, any>, never, never, { "cardSrc": "cardSrc"; "autocompleteEnabled": "autocompleteEnabled"; }, { "binChange": "binChange"; }, never>;
}

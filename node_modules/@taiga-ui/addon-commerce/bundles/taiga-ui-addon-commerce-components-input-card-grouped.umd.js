(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@maskito/kit'), require('@taiga-ui/addon-commerce/components/input-card'), require('@taiga-ui/addon-commerce/constants'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@taiga-ui/kit'), require('@ng-web-apis/common'), require('@taiga-ui/addon-commerce/tokens'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@maskito/angular'), require('@tinkoff/ng-polymorpheus'), require('@taiga-ui/addon-commerce/pipes')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/addon-commerce/components/input-card-grouped', ['exports', '@angular/core', '@angular/forms', '@maskito/kit', '@taiga-ui/addon-commerce/components/input-card', '@taiga-ui/addon-commerce/constants', '@taiga-ui/cdk', '@taiga-ui/core', '@taiga-ui/kit', '@ng-web-apis/common', '@taiga-ui/addon-commerce/tokens', 'rxjs', 'rxjs/operators', '@angular/common', '@maskito/angular', '@tinkoff/ng-polymorpheus', '@taiga-ui/addon-commerce/pipes'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"]["addon-commerce"] = global["taiga-ui"]["addon-commerce"] || {}, global["taiga-ui"]["addon-commerce"].components = global["taiga-ui"]["addon-commerce"].components || {}, global["taiga-ui"]["addon-commerce"].components["input-card-grouped"] = {}), global.ng.core, global.ng.forms, global.kit, global["taiga-ui"]["addon-commerce"].components["input-card"], global["taiga-ui"]["addon-commerce"].constants, global.i3, global.i1, global.kit$1, global.common, global["taiga-ui"]["addon-commerce"].tokens, global.rxjs, global.rxjs.operators, global.ng.common, global.i4, global.i6, global["taiga-ui"]["addon-commerce"].pipes));
})(this, (function (exports, i0, i5, kit, inputCard, constants, i3, i1, kit$1, common, tokens, i8, operators, i2, i4, i6, i7) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var TUI_INPUT_CARD_GROUPED_DEFAULT_OPTIONS = Object.assign(Object.assign({}, inputCard.TUI_INPUT_CARD_DEFAULT_OPTIONS), { cardValidator: constants.tuiDefaultCardValidator, exampleText: '0000 0000 0000 0000', exampleTextCVC: '000', cvcHidden: false });
    var TUI_INPUT_CARD_GROUPED_OPTIONS = i3.tuiCreateToken(TUI_INPUT_CARD_GROUPED_DEFAULT_OPTIONS);
    function tuiInputCardGroupedOptionsProvider(options) {
        return i3.tuiProvideOptions(TUI_INPUT_CARD_GROUPED_OPTIONS, options, TUI_INPUT_CARD_GROUPED_DEFAULT_OPTIONS);
    }

    /**
     * InputCardGrouped texts
     */
    var TUI_INPUT_CARD_GROUPED_TEXTS = i3.tuiCreateTokenFromFactory(function () {
        var win = i0.inject(common.WINDOW);
        var cardNumberTexts = i0.inject(tokens.TUI_CARD_NUMBER_TEXTS);
        var expiryTexts = i0.inject(tokens.TUI_CARD_EXPIRY_TEXTS);
        var cvcTexts = i0.inject(tokens.TUI_CARD_CVC_TEXTS);
        var desktopSmall = i0.inject(i1.TUI_MEDIA).desktopSmall;
        var media = win.matchMedia("screen and (min-width: " + (desktopSmall - 1) / 16 + "em)");
        return i3.tuiTypedFromEvent(media, 'change').pipe(operators.startWith(null), operators.switchMap(function () { return i8.combineLatest([
            i8.of(Number(media.matches)),
            cardNumberTexts,
            expiryTexts,
            cvcTexts,
        ]); }), operators.map(function (_a) {
            var _b = __read(_a, 4), index = _b[0], cardNumber = _b[1], expiry = _b[2], cvcTexts = _b[3];
            return ({
                cardNumberText: cardNumber[index],
                expiryText: expiry[index],
                cvcText: cvcTexts[index],
            });
        }));
    });

    var EXPIRE_COMPLETE_LENGTH = 5; // MM/YY
    var TuiInputCardGroupedComponent = /** @class */ (function (_super) {
        __extends(TuiInputCardGroupedComponent, _super);
        function TuiInputCardGroupedComponent(control, cdr, el, mode$, cardGroupedTexts$, controller, icons, arrowOptions, options) {
            var _this = _super.call(this, control, cdr, options) || this;
            _this.el = el;
            _this.mode$ = mode$;
            _this.cardGroupedTexts$ = cardGroupedTexts$;
            _this.controller = controller;
            _this.icons = icons;
            _this.arrowOptions = arrowOptions;
            _this.expireInert = false;
            _this.exampleText = _this.options.exampleText;
            _this.cardValidator = _this.options.cardValidator;
            _this.autofilledChange = new i0.EventEmitter();
            _this.exampleTextCVC = _this.options.exampleTextCVC;
            _this.cvcHidden = _this.options.cvcHidden;
            _this.maskCVC = {
                mask: new Array(3).fill(i1.TUI_DIGIT_REGEXP),
            };
            _this.maskCard = {
                mask: constants.TUI_CARD_MASK,
            };
            _this.maskExpire = kit.maskitoDateOptionsGenerator({
                mode: 'mm/yy',
                separator: '/',
            });
            _this.open = false;
            return _this;
        }
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "codeLength", {
            set: function (length) {
                this.exampleTextCVC = '0'.repeat(length);
                this.maskCVC = {
                    mask: new Array(length).fill(i1.TUI_DIGIT_REGEXP),
                };
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "nativeFocusableElement", {
            get: function () {
                var _a, _b;
                return (_b = (_a = this.inputCard) === null || _a === void 0 ? void 0 : _a.nativeElement) !== null && _b !== void 0 ? _b : null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "focused", {
            get: function () {
                return this.open || i3.tuiIsNativeFocusedIn(this.el.nativeElement);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "appearance", {
            get: function () {
                return this.controller.appearance;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "card", {
            get: function () {
                var _a;
                return ((_a = this.value) === null || _a === void 0 ? void 0 : _a.card) || '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "expire", {
            get: function () {
                var _a;
                return ((_a = this.value) === null || _a === void 0 ? void 0 : _a.expire) || '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "cvc", {
            get: function () {
                var _a;
                return ((_a = this.value) === null || _a === void 0 ? void 0 : _a.cvc) || '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "hasCleaner", {
            get: function () {
                var _a, _b;
                return !!((_b = (_a = this.value) === null || _a === void 0 ? void 0 : _a.card) === null || _b === void 0 ? void 0 : _b.trim()) && !this.readOnly && !this.computedDisabled;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "hasDropdown", {
            get: function () {
                return !!this.dropdown;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "placeholderRaised", {
            get: function () {
                return (this.computedFocused && !this.readOnly) || this.hasCardNumber;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "hasCardNumber", {
            get: function () {
                var _a, _b;
                return !!((_b = (_a = this.value) === null || _a === void 0 ? void 0 : _a.card) === null || _b === void 0 ? void 0 : _b.trim());
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "idCard", {
            get: function () {
                return this.id + "_card";
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "idExpire", {
            get: function () {
                return this.id + "_expire";
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "idCVC", {
            get: function () {
                return this.id + "_cvc";
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "isCardCollapsed", {
            get: function () {
                return this.isFocusable(this.card) && !this.cardFocused;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "autocompleteExpire", {
            get: function () {
                return this.autocompleteEnabled ? 'cc-exp' : 'off';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "autocompleteCVC", {
            get: function () {
                return this.autocompleteEnabled ? 'cc-csc' : 'off';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "tailLength", {
            get: function () {
                return this.hasExtraSpace ? 5 : 4;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "name", {
            // Safari expiration date autofill workaround
            get: function () {
                return this.autocompleteEnabled ? 'ccexpiryyear' : null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "cardPrefilled", {
            get: function () {
                return !!this.card.match(i1.TUI_NON_DIGIT_REGEXP);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "cvcPrefilled", {
            get: function () {
                return !!this.cvc.match(i1.TUI_NON_DIGIT_REGEXP);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "cardFocusable", {
            get: function () {
                return this.focusable && !this.cardPrefilled;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "expireFocusable", {
            get: function () {
                return this.isFocusable(this.card) && !this.expireInert;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "cvcFocusable", {
            get: function () {
                return this.isFocusable(this.card);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "masked", {
            get: function () {
                return this.cardPrefilled ? "*" + this.card.slice(-4) : '*';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "expireSelectionStart", {
            get: function () {
                var _a;
                return ((_a = this.inputExpire) === null || _a === void 0 ? void 0 : _a.nativeElement.selectionStart) || 0;
            },
            enumerable: false,
            configurable: true
        });
        TuiInputCardGroupedComponent.prototype.onEsc = function () {
            this.open = false;
        };
        TuiInputCardGroupedComponent.prototype.onArrow = function (element, step) {
            var _a;
            this.open = this.hasDropdown;
            this.cdr.detectChanges();
            (_a = this.datalist) === null || _a === void 0 ? void 0 : _a.onKeyDownArrow(element, step);
        };
        TuiInputCardGroupedComponent.prototype.handleOption = function (option) {
            var _a, _b;
            var _d = option.card, card = _d === void 0 ? '' : _d, _e = option.expire, expire = _e === void 0 ? '' : _e, _f = option.cvc, cvc = _f === void 0 ? '' : _f;
            var bin = this.bin;
            var element = (!expire && ((_a = this.inputExpire) === null || _a === void 0 ? void 0 : _a.nativeElement)) || ((_b = this.inputCVC) === null || _b === void 0 ? void 0 : _b.nativeElement);
            this.value = { card: card, expire: expire, cvc: cvc };
            this.updateBin(bin);
            this.open = false;
            this.expireInert = !!expire;
            element === null || element === void 0 ? void 0 : element.focus();
        };
        TuiInputCardGroupedComponent.prototype.onCardChange = function (card) {
            var _d = this, value = _d.value, bin = _d.bin;
            var parsed = card.split(' ').join('');
            if (value && value.card === parsed) {
                return;
            }
            this.updateProperty(parsed, 'card');
            this.updateBin(bin);
            if (this.cardValidator(this.card) && !this.expire && this.inputExpire) {
                this.focusExpire();
            }
        };
        TuiInputCardGroupedComponent.prototype.onExpireChange = function (expire) {
            this.updateProperty(expire, 'expire');
            if (expire.length === EXPIRE_COMPLETE_LENGTH &&
                this.expireSelectionStart >= EXPIRE_COMPLETE_LENGTH) {
                this.focusCVC();
            }
        };
        TuiInputCardGroupedComponent.prototype.onCVCChange = function (cvc) {
            this.updateProperty(cvc, 'cvc');
        };
        TuiInputCardGroupedComponent.prototype.transform = function (_d) {
            var offsetWidth = _d.offsetWidth;
            return this.isCardCollapsed ? "translate3d(" + offsetWidth + "px, 0, 0)" : '';
        };
        TuiInputCardGroupedComponent.prototype.onActiveZoneChange = function (active) {
            this.updateFocused(active);
            this.open = active && this.open;
        };
        TuiInputCardGroupedComponent.prototype.onMouseDown = function (event) {
            if (i3.tuiIsElement(event.target) && i3.tuiIsInput(event.target)) {
                return;
            }
            event.preventDefault();
            this.focusInput();
        };
        TuiInputCardGroupedComponent.prototype.onScroll = function (_d) {
            var currentTarget = _d.currentTarget;
            if (i3.tuiIsElement(currentTarget)) {
                currentTarget.scrollLeft = 0;
            }
        };
        TuiInputCardGroupedComponent.prototype.clear = function () {
            this.expireInert = false;
            this.value = null;
            this.focusCard();
        };
        TuiInputCardGroupedComponent.prototype.toggle = function () {
            this.open = !this.open;
        };
        TuiInputCardGroupedComponent.prototype.writeValue = function (value) {
            var bin = this.bin;
            _super.prototype.writeValue.call(this, value);
            this.updateBin(bin);
            this.expireInert = !!this.expire && this.cardPrefilled;
        };
        /** Public API for manual focus management */
        TuiInputCardGroupedComponent.prototype.focusCard = function () {
            var _a;
            (_a = this.cardNumberAutofocusRef) === null || _a === void 0 ? void 0 : _a.focus();
        };
        TuiInputCardGroupedComponent.prototype.focusExpire = function () {
            var _a;
            (_a = this.expireCardAutofocusRef) === null || _a === void 0 ? void 0 : _a.focus();
        };
        TuiInputCardGroupedComponent.prototype.focusCVC = function () {
            var _a;
            (_a = this.cvcCardAutofocusRef) === null || _a === void 0 ? void 0 : _a.focus();
        };
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "cardFocused", {
            get: function () {
                return !!this.inputCard && i3.tuiIsNativeFocused(this.inputCard.nativeElement);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputCardGroupedComponent.prototype, "hasExtraSpace", {
            get: function () {
                return this.card.length % 4 > 0;
            },
            enumerable: false,
            configurable: true
        });
        TuiInputCardGroupedComponent.prototype.isFocusable = function (card) {
            return this.focusable && (this.cardValidator(card) || this.cardPrefilled);
        };
        TuiInputCardGroupedComponent.prototype.updateBin = function (oldBin) {
            var bin = this.bin;
            if (bin !== oldBin && !this.cardPrefilled) {
                this.binChange.emit(bin);
            }
        };
        TuiInputCardGroupedComponent.prototype.updateProperty = function (value, propName) {
            var _d = this.value || {}, _e = _d.card, card = _e === void 0 ? '' : _e, _f = _d.expire, expire = _f === void 0 ? '' : _f, _g = _d.cvc, cvc = _g === void 0 ? '' : _g;
            var newValue = { card: card, expire: expire, cvc: cvc };
            newValue[propName] = value;
            this.value = newValue.expire || newValue.cvc || newValue.card ? newValue : null;
        };
        TuiInputCardGroupedComponent.prototype.focusInput = function () {
            var _a, _b, _c;
            var element = (this.cardFocusable && ((_a = this.inputCard) === null || _a === void 0 ? void 0 : _a.nativeElement)) ||
                (this.expireFocusable && ((_b = this.inputExpire) === null || _b === void 0 ? void 0 : _b.nativeElement)) ||
                ((_c = this.inputCVC) === null || _c === void 0 ? void 0 : _c.nativeElement);
            element === null || element === void 0 ? void 0 : element.focus();
        };
        return TuiInputCardGroupedComponent;
    }(inputCard.AbstractTuiInputCard));
    TuiInputCardGroupedComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputCardGroupedComponent, deps: [{ token: i5.NgControl, optional: true, self: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.TUI_MODE }, { token: TUI_INPUT_CARD_GROUPED_TEXTS }, { token: i1.TUI_TEXTFIELD_WATCHED_CONTROLLER }, { token: i1.TUI_COMMON_ICONS }, { token: kit$1.TUI_ARROW_OPTIONS }, { token: TUI_INPUT_CARD_GROUPED_OPTIONS }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiInputCardGroupedComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputCardGroupedComponent, selector: "tui-input-card-grouped", inputs: { exampleText: "exampleText", cardValidator: "cardValidator", codeLength: "codeLength" }, outputs: { autofilledChange: "autofilledChange" }, host: { attributes: { "data-size": "l" }, listeners: { "$.data-mode.attr": "mode$", "keydown.esc": "onEsc()", "keydown.arrowDown.prevent": "onArrow($event.target,1)", "keydown.arrowUp.prevent": "onArrow($event.target,-1)" } }, providers: [
            i3.tuiAsFocusableItemAccessor(TuiInputCardGroupedComponent),
            i3.tuiAsControl(TuiInputCardGroupedComponent),
            i1.tuiAsDataListHost(TuiInputCardGroupedComponent),
            i1.MODE_PROVIDER,
            i1.TEXTFIELD_CONTROLLER_PROVIDER,
        ], queries: [{ propertyName: "dropdown", first: true, predicate: i1.TuiDataListDirective, descendants: true, read: i0.TemplateRef }, { propertyName: "datalist", first: true, predicate: i1.TuiDataListComponent, descendants: true }], viewQueries: [{ propertyName: "inputCard", first: true, predicate: ["inputCard"], descendants: true }, { propertyName: "cardNumberAutofocusRef", first: true, predicate: ["inputCard"], descendants: true, read: i3.TuiAutoFocusDirective }, { propertyName: "inputExpire", first: true, predicate: ["inputExpire"], descendants: true }, { propertyName: "expireCardAutofocusRef", first: true, predicate: ["inputExpire"], descendants: true, read: i3.TuiAutoFocusDirective }, { propertyName: "inputCVC", first: true, predicate: ["inputCVC"], descendants: true }, { propertyName: "cvcCardAutofocusRef", first: true, predicate: ["inputCVC"], descendants: true, read: i3.TuiAutoFocusDirective }], usesInheritance: true, ngImport: i0__namespace, template: "<div\n    *ngIf=\"cardGroupedTexts$ | async as texts\"\n    tuiDropdownLimitWidth=\"fixed\"\n    tuiWrapper\n    class=\"t-common-wrapper\"\n    [appearance]=\"appearance\"\n    [disabled]=\"computedDisabled\"\n    [focus]=\"computedFocused\"\n    [hover]=\"pseudoHover\"\n    [invalid]=\"computedInvalid\"\n    [readOnly]=\"readOnly\"\n    [tuiDropdown]=\"dropdown || ''\"\n    [tuiDropdownManual]=\"open\"\n    (mousedown)=\"onMouseDown($event)\"\n    (scroll)=\"onScroll($event)\"\n    (tuiActiveZoneChange)=\"onActiveZoneChange($event)\"\n>\n    <div class=\"t-wrapper\">\n        <label\n            *tuiLet=\"value?.card | tuiFormatCard: cardPrefilled as formattedCard\"\n            tuiPreventDefault=\"click\"\n        >\n            <input\n                #inputCard\n                automation-id=\"tui-input-card-grouped__card\"\n                inputmode=\"numeric\"\n                translate=\"no\"\n                type=\"text\"\n                class=\"t-input t-input_card\"\n                [attr.aria-invalid]=\"!cardPrefilled && !(this.card | tuiMapper: cardValidator)\"\n                [attr.id]=\"idCard\"\n                [autocomplete]=\"autocompleteCard\"\n                [class.t-input_hidden]=\"!card.length && focused\"\n                [class.t-input_inert]=\"cardPrefilled\"\n                [disabled]=\"computedDisabled\"\n                [maskito]=\"maskCard\"\n                [ngModel]=\"formattedCard\"\n                [placeholder]=\"cardPrefilled ? '' : exampleText\"\n                [readOnly]=\"readOnly\"\n                [tuiAutoFocus]=\"false\"\n                [tuiFocusable]=\"cardFocusable\"\n                (focus)=\"(0)\"\n                (ngModelChange)=\"onCardChange($event)\"\n            />\n            <span\n                aria-hidden=\"true\"\n                translate=\"no\"\n                class=\"t-collapsed\"\n                [attr.data-before]=\"masked\"\n                [class.t-collapsed_enable-mask]=\"isCardCollapsed\"\n                (tuiResize)=\"(0)\"\n            >\n                <span\n                    #ghost\n                    class=\"t-ghost\"\n                    [textContent]=\"formattedCard.slice(-tailLength)\"\n                ></span>\n\n                <span class=\"t-collapsed-wrapper\">\n                    <span\n                        class=\"t-value\"\n                        [style.transform]=\"transform(ghost)\"\n                    >\n                        {{ formattedCard }}\n                    </span>\n                </span>\n            </span>\n            <span\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n            >\n                {{ texts.cardNumberText }}\n            </span>\n        </label>\n    </div>\n    <div\n        class=\"t-wrapper t-wrapper_expire\"\n        [class.t-wrapper_active]=\"isCardCollapsed\"\n    >\n        <label tuiPreventDefault=\"click\">\n            <input\n                #inputExpire\n                automation-id=\"tui-input-card-grouped__expire\"\n                inputmode=\"numeric\"\n                placeholder=\"00/00\"\n                translate=\"no\"\n                class=\"t-input\"\n                [attr.id]=\"idExpire\"\n                [attr.name]=\"name\"\n                [autocomplete]=\"autocompleteExpire\"\n                [class.t-input_inert]=\"!expireFocusable\"\n                [disabled]=\"computedDisabled\"\n                [maskito]=\"maskExpire\"\n                [ngModel]=\"expire\"\n                [readOnly]=\"readOnly\"\n                [tuiAutoFocus]=\"false\"\n                [tuiFocusable]=\"expireFocusable\"\n                (focus)=\"(0)\"\n                (ngModelChange)=\"onExpireChange($event)\"\n            />\n            <span\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n            >\n                {{ texts.expiryText }}\n            </span>\n        </label>\n    </div>\n    <div\n        class=\"t-wrapper t-wrapper_cvc\"\n        [class.t-wrapper_active]=\"isCardCollapsed\"\n    >\n        <label tuiPreventDefault=\"click\">\n            <input\n                #inputCVC\n                automation-id=\"tui-input-card-grouped__cvc\"\n                inputmode=\"numeric\"\n                translate=\"no\"\n                type=\"text\"\n                class=\"t-input\"\n                [attr.id]=\"idCVC\"\n                [autocomplete]=\"autocompleteCVC\"\n                [class.t-input_hidden]=\"cvcHidden\"\n                [class.t-input_prefilled]=\"cvcPrefilled\"\n                [disabled]=\"computedDisabled\"\n                [maskito]=\"maskCVC\"\n                [ngModel]=\"cvc\"\n                [placeholder]=\"cvcPrefilled ? '\u2022\u2022\u2022' : exampleTextCVC\"\n                [readOnly]=\"readOnly || cvcPrefilled\"\n                [tuiAutoFocus]=\"false\"\n                [tuiFocusable]=\"cvcFocusable\"\n                (focus)=\"(0)\"\n                (ngModelChange)=\"onCVCChange($event)\"\n            />\n            <span\n                class=\"t-placeholder\"\n                [class.t-placeholder_raised]=\"placeholderRaised\"\n            >\n                {{ texts.cvcText }}\n            </span>\n        </label>\n    </div>\n    <div class=\"t-icons\">\n        <div\n            *ngIf=\"icon\"\n            class=\"t-icon-outlet\"\n        >\n            <tui-svg\n                *polymorpheusOutlet=\"icon as text\"\n                automation-id=\"tui-input-card-grouped__icon\"\n                class=\"t-card\"\n                [src]=\"text\"\n            ></tui-svg>\n        </div>\n        <tui-svg\n            *ngIf=\"hasCleaner\"\n            appearance=\"icon\"\n            automation-id=\"tui-input-card-grouped__cleaner\"\n            tuiWrapper\n            class=\"t-icon\"\n            [src]=\"icons.close\"\n            (click)=\"clear()\"\n        ></tui-svg>\n        <tui-svg\n            *ngIf=\"hasDropdown\"\n            appearance=\"icon\"\n            automation-id=\"tui-input-card-grouped__dropdown\"\n            tuiWrapper\n            class=\"t-icon\"\n            [class.t-icon_rotated]=\"open\"\n            [src]=\"arrowOptions.iconLarge\"\n            (click)=\"toggle()\"\n        ></tui-svg>\n    </div>\n</div>\n", styles: [":host{display:block;height:var(--tui-height-l);width:29.5rem;border-radius:var(--tui-radius-m)}:host[data-mode=onDark]{--tui-autofill: var(--tui-autofill-night)}:host :host-context(tui-root._mobile){width:18rem}.t-outline{height:100%;width:100%}.t-common-wrapper{position:relative;height:100%;width:100%;overflow:hidden}.t-wrapper{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;width:100%;height:100%}.t-wrapper_cvc{margin-left:7.1875rem;transform:translate(100%)}:host-context(tui-root._mobile) .t-wrapper_cvc{margin-left:4.0625rem}.t-wrapper_expire{transform:translate(100%)}.t-wrapper_active{transform:translate(6.5625rem)}:host-context(tui-root._mobile) .t-wrapper_active{transform:translate(4.125rem)}.t-card{width:2rem;height:2rem;margin-right:.5rem;color:#1434cb}.t-collapsed{font:var(--tui-font-text-s);color:var(--tui-text-01);margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;border-style:solid;border-color:transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0);text-indent:var(--text-indent);text-align:inherit;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit;resize:none;border:0;padding:0 0 0 1rem;line-height:2.25rem;pointer-events:none}.t-collapsed:-webkit-autofill,.t-collapsed:-webkit-autofill:hover,.t-collapsed:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}.t-collapsed:-webkit-autofill,.t-collapsed:-webkit-autofill:first-line{font-size:inherit;line-height:inherit}.t-collapsed::-webkit-caps-lock-indicator,.t-collapsed::-webkit-contacts-auto-fill-button,.t-collapsed::-webkit-credit-card-auto-fill-button,.t-collapsed::-webkit-credentials-auto-fill-button,.t-collapsed::-webkit-strong-password-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:transparent!important;pointer-events:none!important}.t-collapsed::placeholder{color:var(--tui-text-03);opacity:0}:host._focused:not(._readonly) .t-collapsed::placeholder,:host-context(tui-primitive-textfield._focused:not(._readonly)) .t-collapsed::placeholder,:host-context(tui-textarea._focused:not(._readonly)) .t-collapsed::placeholder,:host-context(tui-text-area._focused:not(._readonly)) .t-collapsed::placeholder{opacity:1}[tuiWrapper][data-mode=onDark] .t-collapsed:-webkit-autofill,.t-collapsed :host-context([tuiWrapper][data-mode=\"onDark\"]):-webkit-autofill,[tuiWrapper][data-mode=onDark] .t-collapsed:-webkit-autofill:hover,.t-collapsed :host-context([tuiWrapper][data-mode=\"onDark\"]):-webkit-autofill:hover,[tuiWrapper][data-mode=onDark] .t-collapsed:-webkit-autofill:focus,.t-collapsed :host-context([tuiWrapper][data-mode=\"onDark\"]):-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01-night)!important;border-color:var(--tui-autofill-night);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill-night) inset!important}[tuiWrapper][data-mode=onDark] .t-collapsed::placeholder,.t-collapsed :host-context([tuiWrapper][data-mode=\"onDark\"])::placeholder{color:var(--tui-text-03-night)}:host[data-size=s] .t-collapsed,.t-collapsed :host-context(tui-primitive-textfield[data-size=\"s\"]):not(tui-primitive-textfield),.t-collapsed :host-context(tui-textarea[data-size=\"s\"]):not(tui-textarea),.t-collapsed :host-context(tui-text-area[data-size=\"s\"]):not(tui-text-area){padding:0 var(--tui-padding-s)}:host[data-size=m] .t-collapsed,.t-collapsed :host-context(tui-primitive-textfield[data-size=\"m\"]):not(tui-primitive-textfield),.t-collapsed :host-context(tui-textarea[data-size=\"m\"]):not(tui-textarea),.t-collapsed :host-context(tui-text-area[data-size=\"m\"]):not(tui-text-area){padding:0 var(--tui-padding-m)}:host[data-size=l] .t-collapsed,.t-collapsed :host-context(tui-primitive-textfield[data-size=\"l\"]):not(tui-primitive-textfield),.t-collapsed :host-context(tui-textarea[data-size=\"l\"]):not(tui-textarea),.t-collapsed :host-context(tui-text-area[data-size=\"l\"]):not(tui-text-area){padding:0 var(--tui-padding-l)}:host._disabled .t-collapsed,.t-collapsed :host-context(tui-primitive-textfield._disabled),.t-collapsed :host-context(tui-textarea._disabled),.t-collapsed :host-context(tui-text-area._disabled){pointer-events:none}:host[data-size=l]:not(._label-outside) .t-collapsed,.t-collapsed :host-context(tui-primitive-textfield[data-size=\"l\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1.25rem}:host[data-size=m]:not(._label-outside) .t-collapsed,.t-collapsed :host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1rem}:host[data-size=l]:not(._label-outside) .t-collapsed{padding-top:1.25rem}:host[data-size=l]:not(._label-outside) .t-collapsed:-webkit-autofill+.t-content .t-placeholder{font-size:.8156rem;transform:translateY(-.625rem)}:host[data-size=m]:not(._label-outside) .t-collapsed:-webkit-autofill+.t-content .t-placeholder{font-size:.69rem;transform:translateY(-.5rem)}:host._hidden input.t-collapsed,.t-collapsed :host-context(tui-primitive-textfield._hidden){opacity:0;text-indent:-10em;-webkit-user-select:none}.t-collapsed_enable-mask:before{content:attr(data-before)}.t-collapsed_enable-mask .t-collapsed-wrapper{left:1.375rem}.t-collapsed-wrapper{position:absolute;top:0;display:block;width:100%;height:100%;overflow:hidden}.t-value{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;bottom:0;right:100%;display:block;transform:translate(100%)}.t-input{font:var(--tui-font-text-s);color:var(--tui-text-01);margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;border-style:solid;border-color:transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0);text-indent:var(--text-indent);text-align:inherit;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit;resize:none;transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;border:0;padding:0 1rem}.t-input:-webkit-autofill,.t-input:-webkit-autofill:hover,.t-input:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}.t-input:-webkit-autofill,.t-input:-webkit-autofill:first-line{font-size:inherit;line-height:inherit}.t-input::-webkit-caps-lock-indicator,.t-input::-webkit-contacts-auto-fill-button,.t-input::-webkit-credit-card-auto-fill-button,.t-input::-webkit-credentials-auto-fill-button,.t-input::-webkit-strong-password-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:transparent!important;pointer-events:none!important}.t-input::placeholder{color:var(--tui-text-03);opacity:0}:host._focused:not(._readonly) .t-input::placeholder,:host-context(tui-primitive-textfield._focused:not(._readonly)) .t-input::placeholder,:host-context(tui-textarea._focused:not(._readonly)) .t-input::placeholder,:host-context(tui-text-area._focused:not(._readonly)) .t-input::placeholder{opacity:1}[tuiWrapper][data-mode=onDark] .t-input:-webkit-autofill,.t-input :host-context([tuiWrapper][data-mode=\"onDark\"]):-webkit-autofill,[tuiWrapper][data-mode=onDark] .t-input:-webkit-autofill:hover,.t-input :host-context([tuiWrapper][data-mode=\"onDark\"]):-webkit-autofill:hover,[tuiWrapper][data-mode=onDark] .t-input:-webkit-autofill:focus,.t-input :host-context([tuiWrapper][data-mode=\"onDark\"]):-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01-night)!important;border-color:var(--tui-autofill-night);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill-night) inset!important}[tuiWrapper][data-mode=onDark] .t-input::placeholder,.t-input :host-context([tuiWrapper][data-mode=\"onDark\"])::placeholder{color:var(--tui-text-03-night)}:host[data-size=s] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"s\"]):not(tui-primitive-textfield),.t-input :host-context(tui-textarea[data-size=\"s\"]):not(tui-textarea),.t-input :host-context(tui-text-area[data-size=\"s\"]):not(tui-text-area){padding:0 var(--tui-padding-s)}:host[data-size=m] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"m\"]):not(tui-primitive-textfield),.t-input :host-context(tui-textarea[data-size=\"m\"]):not(tui-textarea),.t-input :host-context(tui-text-area[data-size=\"m\"]):not(tui-text-area){padding:0 var(--tui-padding-m)}:host[data-size=l] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"l\"]):not(tui-primitive-textfield),.t-input :host-context(tui-textarea[data-size=\"l\"]):not(tui-textarea),.t-input :host-context(tui-text-area[data-size=\"l\"]):not(tui-text-area){padding:0 var(--tui-padding-l)}:host._disabled .t-input,.t-input :host-context(tui-primitive-textfield._disabled),.t-input :host-context(tui-textarea._disabled),.t-input :host-context(tui-text-area._disabled){pointer-events:none}:host[data-size=l]:not(._label-outside) .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"l\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1.25rem}:host[data-size=m]:not(._label-outside) .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1rem}:host[data-size=l]:not(._label-outside) .t-input{padding-top:1.25rem}:host[data-size=l]:not(._label-outside) .t-input:-webkit-autofill+.t-content .t-placeholder{font-size:.8156rem;transform:translateY(-.625rem)}:host[data-size=m]:not(._label-outside) .t-input:-webkit-autofill+.t-content .t-placeholder{font-size:.69rem;transform:translateY(-.5rem)}:host._hidden input.t-input,.t-input :host-context(tui-primitive-textfield._hidden){opacity:0;text-indent:-10em;-webkit-user-select:none}.t-input::placeholder{color:var(--tui-text-03);opacity:1}:host[data-mode=onDark] .t-input::placeholder{color:var(--tui-text-03-night)}.t-input.t-input.t-input_card:not(.t-input_hidden),:host[data-mode=onDark] .t-input.t-input.t-input_card:not(.t-input_hidden),.t-input.t-input.t-input_card:not(.t-input_hidden)::placeholder,:host[data-mode=onDark] .t-input.t-input.t-input_card:not(.t-input_hidden)::placeholder,.t-input.t-input.t-input_card:not(.t-input_hidden):-webkit-autofill,:host[data-mode=onDark] .t-input.t-input.t-input_card:not(.t-input_hidden):-webkit-autofill{caret-color:var(--tui-base-09);color:transparent!important;-webkit-text-fill-color:transparent!important}.t-input.t-input.t-input_card::-webkit-credit-card-auto-fill-button,:host[data-mode=onDark] .t-input.t-input.t-input_card::-webkit-credit-card-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:transparent!important;pointer-events:none!important}.t-input_inert{pointer-events:none}.t-input_hidden{-webkit-text-security:disc}.t-icons{position:absolute;right:.75rem;display:flex;align-items:center;height:100%}.t-icon-outlet{display:flex}.t-icon{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:relative;display:flex;width:1.5rem;height:1.5rem;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none;pointer-events:auto}:host._readonly .t-icon,:host._disabled .t-icon{pointer-events:none}.t-icon_rotated{transform:rotate(180deg)}.t-placeholder{transition-property:transform,font-size,color,letter-spacing;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;width:100%;-webkit-user-select:none;-moz-user-select:none;user-select:none;font:var(--tui-font-text-s);color:var(--tui-text-02);pointer-events:none;will-change:transform;transform:translateY(0);margin:1.125rem 1rem;line-height:1.25rem}@supports (-webkit-hyphens: none){.t-placeholder{will-change:unset;transition-property:transform,color,letter-spacing}}.t-placeholder_raised{transform:translateY(-.625rem)}:host[data-size=m] .t-placeholder_raised{font:var(--tui-font-text-xs);line-height:1.25rem;transform:translateY(-.5rem);letter-spacing:.025rem}:host._invalid:not(._focused) .t-placeholder_raised,:host._invalid:not(._focused):hover .t-placeholder_raised{color:var(--tui-error-fill)}:host._invalid:not(._focused) [tuiWrapper][data-mode=onDark] .t-placeholder_raised,:host._invalid:not(._focused):hover [tuiWrapper][data-mode=onDark] .t-placeholder_raised{color:var(--tui-error-fill-night)}:host._focused .t-placeholder,:host[data-size=m]._focused._label-outside .t-placeholder,:host[data-size=l]._focused._label-outside .t-placeholder{color:var(--tui-text-03)}:host[data-size=l] .t-placeholder{font:var(--tui-font-text-m);line-height:1.25rem}:host[data-size=l] .t-placeholder_raised{font-size:.8156rem}:host[data-size=m]._focused:not(._label-outside) .t-placeholder,:host[data-size=l]._focused:not(._label-outside) .t-placeholder{color:var(--tui-text-01)}[tuiWrapper][data-mode=onDark] .t-placeholder{color:var(--tui-text-02-night)}:host[data-size=m]._focused:not(._label-outside) [tuiWrapper][data-mode=onDark] .t-placeholder,:host[data-size=l]._focused:not(._label-outside) [tuiWrapper][data-mode=onDark] .t-placeholder{color:var(--tui-text-01-night)}:host._focused [tuiWrapper][data-mode=onDark] .t-placeholder,:host[data-size=m]._focused._label-outside [tuiWrapper][data-mode=onDark] .t-placeholder,:host[data-size=l]._focused._label-outside [tuiWrapper][data-mode=onDark] .t-placeholder{color:var(--tui-text-02-night)}.t-ghost{visibility:hidden}\n"], components: [{ type: i1__namespace.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace.TuiDropdownOptionsDirective, selector: "[tuiDropdownAlign], [tuiDropdownAppearance], [tuiDropdownDirection], [tuiDropdownLimitWidth], [tuiDropdownMinHeight], [tuiDropdownMaxHeight], [tuiDropdownOffset]", inputs: ["tuiDropdownAlign", "tuiDropdownAppearance", "tuiDropdownDirection", "tuiDropdownLimitWidth", "tuiDropdownMinHeight", "tuiDropdownMaxHeight", "tuiDropdownOffset"] }, { type: i1__namespace.TuiWrapperDirective, selector: "[tuiWrapper]", inputs: ["disabled", "readOnly", "hover", "active", "focus", "invalid", "appearance"] }, { type: i1__namespace.TuiDropdownDirective, selector: "[tuiDropdown]:not(ng-container)", inputs: ["tuiDropdown"], exportAs: ["tuiDropdown"] }, { type: i1__namespace.TuiDropdownDriverDirective, selector: "[tuiDropdown]" }, { type: i1__namespace.TuiDropdownPositionDirective, selector: "[tuiDropdown]:not([tuiDropdownCustomPosition]):not([tuiDropdownSided])" }, { type: i1__namespace.TuiDropdownManualDirective, selector: "[tuiDropdown][tuiDropdownManual]", inputs: ["tuiDropdownManual"] }, { type: i3__namespace.TuiActiveZoneDirective, selector: "[tuiActiveZone]:not(ng-container), [tuiActiveZoneChange]:not(ng-container), [tuiActiveZoneParent]:not(ng-container)", inputs: ["tuiActiveZoneParent"], outputs: ["tuiActiveZoneChange"], exportAs: ["tuiActiveZone"] }, { type: i3__namespace.TuiLetDirective, selector: "[tuiLet]", inputs: ["tuiLet"] }, { type: i3__namespace.TuiPreventDefaultDirective, selector: "[tuiPreventDefault]", inputs: ["tuiPreventDefault"] }, { type: i4__namespace.MaskitoCva, selector: "input[maskito], textarea[maskito]", inputs: ["maskito"] }, { type: i5__namespace.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i4__namespace.MaskitoDirective, selector: "[maskito]", inputs: ["maskito", "maskitoElement"] }, { type: i5__namespace.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5__namespace.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i3__namespace.TuiAutoFocusDirective, selector: "[tuiAutoFocus]", inputs: ["tuiAutoFocus"] }, { type: i3__namespace.TuiFocusableDirective, selector: "[tuiFocusable]", inputs: ["tuiFocusable"] }, { type: i3__namespace.TuiResizeDirective, selector: "[tuiResize]", outputs: ["tuiResize"] }, { type: i6__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i2__namespace.AsyncPipe, "tuiFormatCard": i7__namespace.TuiFormatCardPipe, "tuiMapper": i3__namespace.TuiMapperPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i3.tuiPure
    ], TuiInputCardGroupedComponent.prototype, "isFocusable", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputCardGroupedComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-input-card-grouped',
                        templateUrl: './input-card-grouped.template.html',
                        styleUrls: ['./input-card-grouped.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            i3.tuiAsFocusableItemAccessor(TuiInputCardGroupedComponent),
                            i3.tuiAsControl(TuiInputCardGroupedComponent),
                            i1.tuiAsDataListHost(TuiInputCardGroupedComponent),
                            i1.MODE_PROVIDER,
                            i1.TEXTFIELD_CONTROLLER_PROVIDER,
                        ],
                        host: {
                            '($.data-mode.attr)': 'mode$',
                            'data-size': 'l',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: i5__namespace.NgControl, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [i5.NgControl]
                        }] }, { type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i8__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_MODE]
                        }] }, { type: i8__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [TUI_INPUT_CARD_GROUPED_TEXTS]
                        }] }, { type: i1__namespace.TuiTextfieldController, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_TEXTFIELD_WATCHED_CONTROLLER]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_COMMON_ICONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [kit$1.TUI_ARROW_OPTIONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_INPUT_CARD_GROUPED_OPTIONS]
                        }] }];
        }, propDecorators: { inputCard: [{
                    type: i0.ViewChild,
                    args: ['inputCard']
                }], cardNumberAutofocusRef: [{
                    type: i0.ViewChild,
                    args: ['inputCard', { read: i3.TuiAutoFocusDirective }]
                }], inputExpire: [{
                    type: i0.ViewChild,
                    args: ['inputExpire']
                }], expireCardAutofocusRef: [{
                    type: i0.ViewChild,
                    args: ['inputExpire', { read: i3.TuiAutoFocusDirective }]
                }], inputCVC: [{
                    type: i0.ViewChild,
                    args: ['inputCVC']
                }], cvcCardAutofocusRef: [{
                    type: i0.ViewChild,
                    args: ['inputCVC', { read: i3.TuiAutoFocusDirective }]
                }], exampleText: [{
                    type: i0.Input
                }], cardValidator: [{
                    type: i0.Input
                }], codeLength: [{
                    type: i0.Input
                }], autofilledChange: [{
                    type: i0.Output
                }], dropdown: [{
                    type: i0.ContentChild,
                    args: [i1.TuiDataListDirective, { read: i0.TemplateRef }]
                }], datalist: [{
                    type: i0.ContentChild,
                    args: [i1.TuiDataListComponent]
                }], onEsc: [{
                    type: i0.HostListener,
                    args: ['keydown.esc']
                }], onArrow: [{
                    type: i0.HostListener,
                    args: ['keydown.arrowDown.prevent', ['$event.target', '1']]
                }, {
                    type: i0.HostListener,
                    args: ['keydown.arrowUp.prevent', ['$event.target', '-1']]
                }], isFocusable: [] } });

    var TuiInputCardGroupedModule = /** @class */ (function () {
        function TuiInputCardGroupedModule() {
        }
        return TuiInputCardGroupedModule;
    }());
    TuiInputCardGroupedModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputCardGroupedModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiInputCardGroupedModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputCardGroupedModule, declarations: [TuiInputCardGroupedComponent], imports: [i2.CommonModule,
            i5.FormsModule,
            i4.MaskitoModule,
            i3.TuiFocusableModule,
            i1.TuiSvgModule,
            i1.TuiWrapperModule,
            i3.TuiActiveZoneModule,
            i3.TuiMapperPipeModule,
            i1.TuiDropdownModule,
            i3.TuiPreventDefaultModule,
            i6.PolymorpheusModule,
            i3.TuiLetModule,
            i3.TuiResizeModule,
            i7.TuiFormatCardModule,
            i3.TuiAutoFocusModule], exports: [TuiInputCardGroupedComponent] });
    TuiInputCardGroupedModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputCardGroupedModule, imports: [[
                i2.CommonModule,
                i5.FormsModule,
                i4.MaskitoModule,
                i3.TuiFocusableModule,
                i1.TuiSvgModule,
                i1.TuiWrapperModule,
                i3.TuiActiveZoneModule,
                i3.TuiMapperPipeModule,
                i1.TuiDropdownModule,
                i3.TuiPreventDefaultModule,
                i6.PolymorpheusModule,
                i3.TuiLetModule,
                i3.TuiResizeModule,
                i7.TuiFormatCardModule,
                i3.TuiAutoFocusModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputCardGroupedModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i2.CommonModule,
                            i5.FormsModule,
                            i4.MaskitoModule,
                            i3.TuiFocusableModule,
                            i1.TuiSvgModule,
                            i1.TuiWrapperModule,
                            i3.TuiActiveZoneModule,
                            i3.TuiMapperPipeModule,
                            i1.TuiDropdownModule,
                            i3.TuiPreventDefaultModule,
                            i6.PolymorpheusModule,
                            i3.TuiLetModule,
                            i3.TuiResizeModule,
                            i7.TuiFormatCardModule,
                            i3.TuiAutoFocusModule,
                        ],
                        declarations: [TuiInputCardGroupedComponent],
                        exports: [TuiInputCardGroupedComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_INPUT_CARD_GROUPED_DEFAULT_OPTIONS = TUI_INPUT_CARD_GROUPED_DEFAULT_OPTIONS;
    exports.TUI_INPUT_CARD_GROUPED_OPTIONS = TUI_INPUT_CARD_GROUPED_OPTIONS;
    exports.TUI_INPUT_CARD_GROUPED_TEXTS = TUI_INPUT_CARD_GROUPED_TEXTS;
    exports.TuiInputCardGroupedComponent = TuiInputCardGroupedComponent;
    exports.TuiInputCardGroupedModule = TuiInputCardGroupedModule;
    exports.tuiInputCardGroupedOptionsProvider = tuiInputCardGroupedOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-addon-commerce-components-input-card-grouped.umd.js.map

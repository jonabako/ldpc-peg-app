(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@taiga-ui/core'), require('@taiga-ui/addon-commerce/utils')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/addon-commerce/constants', ['exports', '@taiga-ui/core', '@taiga-ui/addon-commerce/utils'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"]["addon-commerce"] = global["taiga-ui"]["addon-commerce"] || {}, global["taiga-ui"]["addon-commerce"].constants = {}), global.core, global["taiga-ui"]["addon-commerce"].utils));
})(this, (function (exports, core, utils) { 'use strict';

    var ALLOWED_REGEXP = /[A-Z]| /;
    var MAP = {
        А: 'F',
        В: 'D',
        Г: 'U',
        Д: 'L',
        Е: 'T',
        З: 'P',
        И: 'B',
        Й: 'Q',
        К: 'R',
        Л: 'K',
        М: 'V',
        Н: 'Y',
        О: 'J',
        П: 'G',
        Р: 'H',
        С: 'C',
        Т: 'N',
        У: 'E',
        Ф: 'A',
        Ц: 'W',
        Ч: 'X',
        Ш: 'I',
        Щ: 'O',
        Ы: 'S',
        Ь: 'M',
        Я: 'Z',
    };
    // TODO: delete in v4.0
    function toEnglishUppercaseLegacy(char) {
        var uppercase = char.toUpperCase();
        var result = ALLOWED_REGEXP.test(uppercase) ? uppercase : MAP[uppercase];
        return result || null;
    }
    function toEnglishUppercase(value) {
        return value
            .toUpperCase()
            .split('')
            .map(function (char) { return MAP[char] || char; })
            .join('');
    }
    var TUI_CARD_HOLDER_MASK = {
        mask: /^[a-z\s]+$/i,
        preprocessors: [
            function (_a) {
                var elementState = _a.elementState, data = _a.data;
                var value = elementState.value, selection = elementState.selection;
                return {
                    elementState: {
                        selection: selection,
                        value: toEnglishUppercase(value),
                    },
                    data: toEnglishUppercase(data),
                };
            },
        ],
    };
    /**
     * @deprecated Use {@link TUI_CARD_HOLDER_MASK} with {@link https://github.com/taiga-family/maskito Maskito}
     * TODO: delete in v4.0
     */
    var cardHolderMask = core.tuiCreateCorrectionMask(ALLOWED_REGEXP, toEnglishUppercaseLegacy);

    /**
     * @internal
     */
    var TUI_CARD_MASK = [
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        ' ',
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        ' ',
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        ' ',
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        ' ',
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
        core.TUI_DIGIT_REGEXP,
    ];

    var tuiDefaultCardValidator = function (card) { return card.length > 11 && utils.tuiIsCardLengthValid(card) && utils.tuiIsCardNumberValid(card); };

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_CARD_HOLDER_MASK = TUI_CARD_HOLDER_MASK;
    exports.TUI_CARD_MASK = TUI_CARD_MASK;
    exports.cardHolderMask = cardHolderMask;
    exports.tuiDefaultCardValidator = tuiDefaultCardValidator;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-addon-commerce-constants.umd.js.map

(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@taiga-ui/core'), require('@taiga-ui/cdk'), require('@taiga-ui/addon-commerce/enums')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/addon-commerce/utils', ['exports', '@taiga-ui/core', '@taiga-ui/cdk', '@taiga-ui/addon-commerce/enums'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"]["addon-commerce"] = global["taiga-ui"]["addon-commerce"] || {}, global["taiga-ui"]["addon-commerce"].utils = {}), global.core, global.cdk, global["taiga-ui"]["addon-commerce"].enums));
})(this, (function (exports, core, cdk, enums) { 'use strict';

    var TUI_EXP_YEAR_MONTH = /^\d{2}[/|.]\d{4}$/;
    var TUI_EXP_SAFARI = /^\d{1,4}.\d{1,2}.\d{1,4}$/;
    /**
     * @deprecated Use {@link https://maskito.dev/kit/date Date} from {@link https://github.com/taiga-family/maskito Maskito} instead
     * TODO: delete in v4.0
     * Correct expiration date text allowing only valid months
     * @internal
     *
     * @returns MM/YY
     */
    function tuiCreateAutoCorrectedExpirePipe() {
        return function (conformedValue, _a) {
            var rawValue = _a.rawValue;
            // Autofilled with MM/YYYY format
            if (TUI_EXP_YEAR_MONTH.test(rawValue)) {
                conformedValue = rawValue.slice(0, 2) + "/" + rawValue.slice(5);
            }
            // Autofilled with Safari crazy format
            if (rawValue.length > 7 &&
                rawValue.length < 11 &&
                TUI_EXP_SAFARI.test(rawValue)) {
                var array = rawValue.split(core.TUI_NON_DIGIT_REGEXP);
                // TODO: investigate why the month is sometimes more than 2-length in safari
                var month = array[1].slice(2);
                var year = array.find(function (_a) {
                    var length = _a.length;
                    return length === 4;
                });
                conformedValue = "" + '0'.repeat(2 - month.length) + month + "/" + (year ? year.slice(2) : '');
            }
            var indexesOfPipedChars = [];
            var conformedValueArr = conformedValue.split('');
            if (parseInt(conformedValueArr[0], 10) > 1) {
                conformedValueArr[2] = '/';
                conformedValueArr[1] = conformedValueArr[0];
                conformedValueArr[0] = '0';
                indexesOfPipedChars.push(0);
            }
            return {
                value: conformedValueArr.join(''),
                indexesOfPipedChars: indexesOfPipedChars,
            };
        };
    }

    function tuiGetCurrencySymbol(currency) {
        switch (currency) {
            case enums.TuiCurrency.Ruble:
            case enums.TuiCurrencyCode.Ruble:
                return '₽';
            case enums.TuiCurrency.Dollar:
            case enums.TuiCurrencyCode.Dollar:
            case enums.TuiCurrency.MexicanPeso:
            case enums.TuiCurrencyCode.MexicanPeso:
                return '$';
            case enums.TuiCurrency.SingaporeDollar:
            case enums.TuiCurrencyCode.SingaporeDollar:
                return 'S$';
            case enums.TuiCurrency.AustralianDollar:
            case enums.TuiCurrencyCode.AustralianDollar:
                return 'A$';
            case enums.TuiCurrency.HongKongDollar:
            case enums.TuiCurrencyCode.HongKongDollar:
                return 'HK$';
            case enums.TuiCurrency.CanadianDollar:
            case enums.TuiCurrencyCode.CanadianDollar:
                return 'C$';
            case enums.TuiCurrency.Euro:
            case enums.TuiCurrencyCode.Euro:
                return '€';
            case enums.TuiCurrency.Pound:
            case enums.TuiCurrencyCode.Pound:
                return '£';
            case enums.TuiCurrency.Baht:
            case enums.TuiCurrencyCode.Baht:
                return '฿';
            case enums.TuiCurrency.TurkishLira:
            case enums.TuiCurrencyCode.TurkishLira:
                return '₺';
            case enums.TuiCurrency.YuanRenminbi:
            case enums.TuiCurrencyCode.YuanRenminbi:
                return 'CN¥';
            case enums.TuiCurrency.Yen:
            case enums.TuiCurrencyCode.Yen:
                return '¥';
            case enums.TuiCurrency.IsraeliShekel:
            case enums.TuiCurrencyCode.IsraeliShekel:
                return '₪';
            case enums.TuiCurrency.IndianRupee:
            case enums.TuiCurrencyCode.IndianRupee:
                return '₹';
            case enums.TuiCurrency.SwissFranc:
            case enums.TuiCurrencyCode.SwissFranc:
                return '₣';
            case enums.TuiCurrency.ArmenianDram:
            case enums.TuiCurrencyCode.ArmenianDram:
                return '֏';
            case enums.TuiCurrency.Won:
            case enums.TuiCurrencyCode.Won:
                return '₩';
            case enums.TuiCurrency.Tenge:
            case enums.TuiCurrencyCode.Tenge:
                return '₸';
            case enums.TuiCurrency.Hryvnia:
            case enums.TuiCurrencyCode.Hryvnia:
                return '₴';
            case enums.TuiCurrency.UzbekSum:
            case enums.TuiCurrencyCode.UzbekSum:
                return "So'm";
            case enums.TuiCurrency.KyrgyzstanSom:
            case enums.TuiCurrencyCode.KyrgyzstanSom:
                return 'c';
            case enums.TuiCurrency.Dirham:
            case enums.TuiCurrencyCode.Dirham:
                return 'Dh';
            case enums.TuiCurrency.TajikistaniSomoni:
            case enums.TuiCurrencyCode.TajikistaniSomoni:
                return 'SM';
            case enums.TuiCurrency.MalaysianRinggit:
            case enums.TuiCurrencyCode.MalaysianRinggit:
                return 'RM';
            case enums.TuiCurrency.BelarusianRuble:
            case enums.TuiCurrencyCode.BelarusianRuble:
                return 'Br';
            case enums.TuiCurrency.GeorgianLari:
            case enums.TuiCurrencyCode.GeorgianLari:
                return '₾';
            case enums.TuiCurrency.AzerbaijaniManat:
            case enums.TuiCurrencyCode.AzerbaijaniManat:
                return '₼';
            case enums.TuiCurrency.SriLankanRupee:
            case enums.TuiCurrencyCode.SriLankanRupee:
                return 'Rs.';
            case enums.TuiCurrency.SerbianDinar:
            case enums.TuiCurrencyCode.SerbianDinar:
                return 'DIN';
            case enums.TuiCurrency.SaudiRiyal:
            case enums.TuiCurrencyCode.SaudiRiyal:
                return 'SR';
            case enums.TuiCurrency.MongolianTugrik:
            case enums.TuiCurrencyCode.MongolianTugrik:
                return '₮';
            case enums.TuiCurrency.SouthAfricanRand:
            case enums.TuiCurrencyCode.SouthAfricanRand:
                return 'R';
            case enums.TuiCurrency.IranianRial:
            case enums.TuiCurrencyCode.IranianRial:
                return 'IR';
            case enums.TuiCurrency.IndonesianRupiah:
            case enums.TuiCurrencyCode.IndonesianRupiah:
                return 'Rp';
            case enums.TuiCurrency.VietnameseDong:
            case enums.TuiCurrencyCode.VietnameseDong:
                return 'đ';
            case enums.TuiCurrency.NewTurkmenManat:
            case enums.TuiCurrencyCode.NewTurkmenManat:
                return 'TMT';
            case enums.TuiCurrency.BrazilianReal:
            case enums.TuiCurrencyCode.BrazilianReal:
                return 'R$';
            default:
                return null;
        }
    }

    function stringifyCurrency(currency) {
        return currency === null || cdk.tuiIsString(currency)
            ? currency || ''
            : String(currency).padStart(3, '0');
    }
    function tuiFormatCurrency(currency) {
        var stringifiedCurrency = stringifyCurrency(currency);
        return tuiGetCurrencySymbol(stringifiedCurrency) || stringifiedCurrency;
    }

    var _b$1;
    var TUI_CODE_DICTIONARY = (_b$1 = {},
        _b$1[enums.TuiCurrency.Ruble] = enums.TuiCurrencyCode.Ruble,
        _b$1[enums.TuiCurrency.Dollar] = enums.TuiCurrencyCode.Dollar,
        _b$1[enums.TuiCurrency.MexicanPeso] = enums.TuiCurrencyCode.MexicanPeso,
        _b$1[enums.TuiCurrency.SingaporeDollar] = enums.TuiCurrencyCode.SingaporeDollar,
        _b$1[enums.TuiCurrency.AustralianDollar] = enums.TuiCurrencyCode.AustralianDollar,
        _b$1[enums.TuiCurrency.HongKongDollar] = enums.TuiCurrencyCode.HongKongDollar,
        _b$1[enums.TuiCurrency.CanadianDollar] = enums.TuiCurrencyCode.CanadianDollar,
        _b$1[enums.TuiCurrency.Euro] = enums.TuiCurrencyCode.Euro,
        _b$1[enums.TuiCurrency.Pound] = enums.TuiCurrencyCode.Pound,
        _b$1[enums.TuiCurrency.Baht] = enums.TuiCurrencyCode.Baht,
        _b$1[enums.TuiCurrency.TurkishLira] = enums.TuiCurrencyCode.TurkishLira,
        _b$1[enums.TuiCurrency.YuanRenminbi] = enums.TuiCurrencyCode.YuanRenminbi,
        _b$1[enums.TuiCurrency.Yen] = enums.TuiCurrencyCode.Yen,
        _b$1[enums.TuiCurrency.IsraeliShekel] = enums.TuiCurrencyCode.IsraeliShekel,
        _b$1[enums.TuiCurrency.IndianRupee] = enums.TuiCurrencyCode.IndianRupee,
        _b$1[enums.TuiCurrency.SwissFranc] = enums.TuiCurrencyCode.SwissFranc,
        _b$1[enums.TuiCurrency.ArmenianDram] = enums.TuiCurrencyCode.ArmenianDram,
        _b$1[enums.TuiCurrency.Won] = enums.TuiCurrencyCode.Won,
        _b$1[enums.TuiCurrency.Tenge] = enums.TuiCurrencyCode.Tenge,
        _b$1[enums.TuiCurrency.Hryvnia] = enums.TuiCurrencyCode.Hryvnia,
        _b$1[enums.TuiCurrency.UzbekSum] = enums.TuiCurrencyCode.UzbekSum,
        _b$1[enums.TuiCurrency.KyrgyzstanSom] = enums.TuiCurrencyCode.KyrgyzstanSom,
        _b$1[enums.TuiCurrency.Dirham] = enums.TuiCurrencyCode.Dirham,
        _b$1[enums.TuiCurrency.TajikistaniSomoni] = enums.TuiCurrencyCode.TajikistaniSomoni,
        _b$1[enums.TuiCurrency.MalaysianRinggit] = enums.TuiCurrencyCode.MalaysianRinggit,
        _b$1[enums.TuiCurrency.BelarusianRuble] = enums.TuiCurrencyCode.BelarusianRuble,
        _b$1[enums.TuiCurrency.GeorgianLari] = enums.TuiCurrencyCode.GeorgianLari,
        _b$1[enums.TuiCurrency.AzerbaijaniManat] = enums.TuiCurrencyCode.AzerbaijaniManat,
        _b$1[enums.TuiCurrency.SriLankanRupee] = enums.TuiCurrencyCode.SriLankanRupee,
        _b$1[enums.TuiCurrency.SerbianDinar] = enums.TuiCurrencyCode.SerbianDinar,
        _b$1[enums.TuiCurrency.SaudiRiyal] = enums.TuiCurrencyCode.SaudiRiyal,
        _b$1[enums.TuiCurrency.MongolianTugrik] = enums.TuiCurrencyCode.MongolianTugrik,
        _b$1[enums.TuiCurrency.SouthAfricanRand] = enums.TuiCurrencyCode.SouthAfricanRand,
        _b$1[enums.TuiCurrency.IranianRial] = enums.TuiCurrencyCode.IranianRial,
        _b$1[enums.TuiCurrency.IndonesianRupiah] = enums.TuiCurrencyCode.IndonesianRupiah,
        _b$1[enums.TuiCurrency.VietnameseDong] = enums.TuiCurrencyCode.VietnameseDong,
        _b$1[enums.TuiCurrency.NewTurkmenManat] = enums.TuiCurrencyCode.NewTurkmenManat,
        _b$1[enums.TuiCurrency.BrazilianReal] = enums.TuiCurrencyCode.BrazilianReal,
        _b$1);
    function tuiGetCodeByCurrency(code) {
        var _a;
        return (_a = TUI_CODE_DICTIONARY[code]) !== null && _a !== void 0 ? _a : null;
    }

    var _b;
    var TUI_CURRENCY_DICTIONARY = (_b = {},
        _b[enums.TuiCurrencyCode.Ruble] = enums.TuiCurrency.Ruble,
        _b[enums.TuiCurrencyCode.Dollar] = enums.TuiCurrency.Dollar,
        _b[enums.TuiCurrencyCode.MexicanPeso] = enums.TuiCurrency.MexicanPeso,
        _b[enums.TuiCurrencyCode.SingaporeDollar] = enums.TuiCurrency.SingaporeDollar,
        _b[enums.TuiCurrencyCode.SingaporeDollar] = enums.TuiCurrency.SingaporeDollar,
        _b[enums.TuiCurrencyCode.AustralianDollar] = enums.TuiCurrency.AustralianDollar,
        _b[enums.TuiCurrencyCode.HongKongDollar] = enums.TuiCurrency.HongKongDollar,
        _b[enums.TuiCurrencyCode.CanadianDollar] = enums.TuiCurrency.CanadianDollar,
        _b[enums.TuiCurrencyCode.Euro] = enums.TuiCurrency.Euro,
        _b[enums.TuiCurrencyCode.Pound] = enums.TuiCurrency.Pound,
        _b[enums.TuiCurrencyCode.Baht] = enums.TuiCurrency.Baht,
        _b[enums.TuiCurrencyCode.TurkishLira] = enums.TuiCurrency.TurkishLira,
        _b[enums.TuiCurrencyCode.YuanRenminbi] = enums.TuiCurrency.YuanRenminbi,
        _b[enums.TuiCurrencyCode.Yen] = enums.TuiCurrency.Yen,
        _b[enums.TuiCurrencyCode.IsraeliShekel] = enums.TuiCurrency.IsraeliShekel,
        _b[enums.TuiCurrencyCode.IsraeliShekel] = enums.TuiCurrency.IsraeliShekel,
        _b[enums.TuiCurrencyCode.IndianRupee] = enums.TuiCurrency.IndianRupee,
        _b[enums.TuiCurrencyCode.SwissFranc] = enums.TuiCurrency.SwissFranc,
        _b[enums.TuiCurrencyCode.ArmenianDram] = enums.TuiCurrency.ArmenianDram,
        _b[enums.TuiCurrencyCode.Won] = enums.TuiCurrency.Won,
        _b[enums.TuiCurrencyCode.Tenge] = enums.TuiCurrency.Tenge,
        _b[enums.TuiCurrencyCode.Hryvnia] = enums.TuiCurrency.Hryvnia,
        _b[enums.TuiCurrencyCode.UzbekSum] = enums.TuiCurrency.UzbekSum,
        _b[enums.TuiCurrencyCode.KyrgyzstanSom] = enums.TuiCurrency.KyrgyzstanSom,
        _b[enums.TuiCurrencyCode.Dirham] = enums.TuiCurrency.Dirham,
        _b[enums.TuiCurrencyCode.TajikistaniSomoni] = enums.TuiCurrency.TajikistaniSomoni,
        _b[enums.TuiCurrencyCode.MalaysianRinggit] = enums.TuiCurrency.MalaysianRinggit,
        _b[enums.TuiCurrencyCode.BelarusianRuble] = enums.TuiCurrency.BelarusianRuble,
        _b[enums.TuiCurrencyCode.GeorgianLari] = enums.TuiCurrency.GeorgianLari,
        _b[enums.TuiCurrencyCode.AzerbaijaniManat] = enums.TuiCurrency.AzerbaijaniManat,
        _b[enums.TuiCurrencyCode.SriLankanRupee] = enums.TuiCurrency.SriLankanRupee,
        _b[enums.TuiCurrencyCode.SerbianDinar] = enums.TuiCurrency.SerbianDinar,
        _b[enums.TuiCurrencyCode.SaudiRiyal] = enums.TuiCurrency.SaudiRiyal,
        _b[enums.TuiCurrencyCode.MongolianTugrik] = enums.TuiCurrency.MongolianTugrik,
        _b[enums.TuiCurrencyCode.SouthAfricanRand] = enums.TuiCurrency.SouthAfricanRand,
        _b[enums.TuiCurrencyCode.IranianRial] = enums.TuiCurrency.IranianRial,
        _b[enums.TuiCurrencyCode.IndonesianRupiah] = enums.TuiCurrency.IndonesianRupiah,
        _b[enums.TuiCurrencyCode.VietnameseDong] = enums.TuiCurrency.VietnameseDong,
        _b[enums.TuiCurrencyCode.NewTurkmenManat] = enums.TuiCurrency.NewTurkmenManat,
        _b[enums.TuiCurrencyCode.BrazilianReal] = enums.TuiCurrency.BrazilianReal,
        _b);
    function tuiGetCurrencyByCode(currency) {
        var _a;
        return (_a = TUI_CURRENCY_DICTIONARY[currency]) !== null && _a !== void 0 ? _a : null;
    }

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    // https://en.wikipedia.org/wiki/Payment_card_number#Issuer_identification_number_(IIN)
    var TUI_BIN_TABLE = [
        ['mir', 2200, 2204],
        ['mastercard', 2221, 2720],
        ['jcb', 3528, 3589],
        ['amex', 34],
        ['amex', 37],
        ['dinersclub', 36],
        ['electron', 4026],
        ['electron', 4175],
        ['electron', 4405],
        ['electron', 4508],
        ['electron', 4844],
        ['electron', 4913],
        ['electron', 4917],
        ['visa', 4],
        ['verve', 506099, 506198],
        ['verve', 507865, 507964],
        ['maestro', 5018],
        ['maestro', 5020],
        ['maestro', 5038],
        ['maestro', 5090],
        ['maestro', 5890],
        ['maestro', 5893],
        ['rupay', 508],
        ['maestro', 50],
        ['mastercard', 51, 55],
        ['maestro', 56],
        ['maestro', 58],
        ['mastercard', 5],
        ['maestro', 6000],
        ['maestro', 6304],
        ['maestro', 6759, 6763],
        ['verve', 650002, 650027],
        ['maestro', 676770],
        ['maestro', 676774],
        ['discover', 644, 649],
        ['discover', 6011],
        ['rupay', 60],
        ['unionpay', 62],
        ['discover', 65],
        ['maestro', 6],
        ['rupay', 81, 82],
        ['uzcard', 8600],
        ['humo', 9860],
    ];
    function tuiGetPaymentSystem(cardNumber, supported) {
        var _a;
        if (!cardNumber) {
            return null;
        }
        var row = TUI_BIN_TABLE.find(function (_b) {
            var _c = __read(_b, 3), paymentSystem = _c[0], start = _c[1], _d = _c[2], end = _d === void 0 ? start : _d;
            var cardNumberNumeric = Number.parseInt(cardNumber.slice(0, String(start).length), 10);
            var match = cardNumberNumeric >= start && cardNumberNumeric <= end;
            return match && (!(supported === null || supported === void 0 ? void 0 : supported.length) || supported.includes(paymentSystem));
        });
        return (_a = row === null || row === void 0 ? void 0 : row[0]) !== null && _a !== void 0 ? _a : null;
    }
    function tuiIsMaestro(three, two, one) {
        if (one === 6) {
            return true;
        }
        if (two === 50 || (two > 55 && two < 59)) {
            return true;
        }
        if (three < 500) {
            return false;
        }
        return three < 510;
    }
    function tuiIsMastercard(four, two, one) {
        if (one === 5) {
            return true;
        }
        if (two < 10) {
            return false;
        }
        if (two > 50 && two < 56) {
            return true;
        }
        if (four < 1000) {
            return false;
        }
        return four > 2220 && four < 2721;
    }
    function tuiIsMir(four) {
        return four > 2199 && four < 2205;
    }
    function tuiIsElectron(four) {
        switch (four) {
            case 4026:
            case 4175:
            case 4405:
            case 4508:
            case 4844:
            case 4913:
            case 4917:
                return true;
            default:
                return false;
        }
    }
    function tuiIsVisa(one) {
        return one === 4;
    }

    /**
     * Validates card number length using payment system dictionary
     */
    function tuiIsCardLengthValid(cardNumber) {
        var length = cardNumber.length;
        var paymentSystem = tuiGetPaymentSystem(cardNumber);
        switch (paymentSystem) {
            case 'electron':
                return length === 16;
            case 'maestro':
                return length > 11 && length < 20;
            case 'mastercard':
            case 'mir':
                return length > 15 && length < 20;
            case 'visa':
                return length > 12 && length < 20;
            default:
                return length > 8 && length < 20;
        }
    }

    /**
     * Validates card number using Luhn algorithm
     */
    function tuiIsCardNumberValid(value) {
        var cardNumber = String(value).replace(core.TUI_NON_DIGITS_REGEXP, '');
        var length = cardNumber.length;
        var arr = cardNumber.split('').map(function (char, index) {
            var digit = parseInt(char, 10);
            if ((index + length) % 2 === 0) {
                var digitX2 = digit * 2;
                return digitX2 > 9 ? digitX2 - 9 : digitX2;
            }
            return digit;
        });
        return !(arr.reduce(function (a, b) { return a + b; }, 0) % 10);
    }

    function tuiIsExpireValid(expire, today) {
        if (today === void 0) { today = new Date(); }
        var currentMonth = today.getMonth() + 1;
        var currentYear = today.getFullYear() - 2000;
        var expireMonth = cdk.tuiClamp(parseInt(expire.slice(0, 2), 10), 1, 12);
        var expireYear = cdk.tuiClamp(parseInt(expire.slice(-2), 10), 0, 99);
        return (expireYear > currentYear ||
            (currentYear === expireYear && expireMonth >= currentMonth));
    }

    // TODO: Make it a token in 4.0, think about mono icons for card component
    var TUI_PAYMENT_SYSTEM_ICONS = {
        mir: 'tuiIconMirMono',
        visa: 'tuiIconVisaMono',
        electron: 'tuiIconElectronMono',
        mastercard: 'tuiIconMastercard',
        maestro: 'tuiIconMaestro',
        amex: 'tuiIconAmex',
        dinersclub: 'tuiIconDinersClub',
        discover: 'tuiIconDiscover',
        humo: 'tuiIconHumo',
        jcb: 'tuiIconJCB',
        rupay: 'tuiIconRuPay',
        unionpay: 'tuiIconUnionPay',
        uzcard: 'tuiIconUzcard',
        verve: 'tuiIconVerve',
    };

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_BIN_TABLE = TUI_BIN_TABLE;
    exports.TUI_CODE_DICTIONARY = TUI_CODE_DICTIONARY;
    exports.TUI_CURRENCY_DICTIONARY = TUI_CURRENCY_DICTIONARY;
    exports.TUI_PAYMENT_SYSTEM_ICONS = TUI_PAYMENT_SYSTEM_ICONS;
    exports.tuiCreateAutoCorrectedExpirePipe = tuiCreateAutoCorrectedExpirePipe;
    exports.tuiFormatCurrency = tuiFormatCurrency;
    exports.tuiGetCodeByCurrency = tuiGetCodeByCurrency;
    exports.tuiGetCurrencyByCode = tuiGetCurrencyByCode;
    exports.tuiGetCurrencySymbol = tuiGetCurrencySymbol;
    exports.tuiGetPaymentSystem = tuiGetPaymentSystem;
    exports.tuiIsCardLengthValid = tuiIsCardLengthValid;
    exports.tuiIsCardNumberValid = tuiIsCardNumberValid;
    exports.tuiIsElectron = tuiIsElectron;
    exports.tuiIsExpireValid = tuiIsExpireValid;
    exports.tuiIsMaestro = tuiIsMaestro;
    exports.tuiIsMastercard = tuiIsMastercard;
    exports.tuiIsMir = tuiIsMir;
    exports.tuiIsVisa = tuiIsVisa;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-addon-commerce-utils.umd.js.map

{"version":3,"file":"taiga-ui-addon-commerce-components-money.umd.js","sources":["../../../projects/addon-commerce/components/money/money.options.ts","../../../projects/addon-commerce/components/money/utils/format-sign-symbol.ts","../../../projects/addon-commerce/components/money/pipes/sign-symbol.pipe.ts","../../../projects/addon-commerce/components/money/pipes/integer-part.pipe.ts","../../../projects/addon-commerce/components/money/utils/format-fraction-part.ts","../../../projects/addon-commerce/components/money/pipes/fraction-part.pipe.ts","../../../projects/addon-commerce/components/money/money.component.ts","../../../projects/addon-commerce/components/money/money.template.html","../../../projects/addon-commerce/components/money/money.module.ts","../../../projects/addon-commerce/components/money/taiga-ui-addon-commerce-components-money.ts"],"sourcesContent":["import {Provider} from '@angular/core';\nimport {TuiCurrency} from '@taiga-ui/addon-commerce/enums';\nimport {TuiCurrencyVariants, TuiMoneySign} from '@taiga-ui/addon-commerce/types';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk';\nimport {TuiDecimal, TuiHorizontalDirection} from '@taiga-ui/core';\n\nexport interface TuiMoneyOptions {\n    readonly colored: boolean;\n    readonly currency: TuiCurrencyVariants;\n    readonly currencyAlign: TuiHorizontalDirection;\n    readonly decimal: TuiDecimal;\n    readonly precision: number;\n    readonly sign: TuiMoneySign;\n    readonly singleColor: boolean;\n}\n\nexport const TUI_MONEY_DEFAULT_OPTIONS: TuiMoneyOptions = {\n    decimal: 'not-zero',\n    currency: TuiCurrency.Ruble,\n    currencyAlign: 'right',\n    sign: 'negative-only',\n    colored: false,\n    precision: 2,\n    singleColor: false,\n};\n\n/**\n * @deprecated TODO: remove in 4.0\n */\nexport const TUI_MONEY_DEFAULT_DEFAULT_OPTIONS = TUI_MONEY_DEFAULT_OPTIONS;\n\nexport const TUI_MONEY_OPTIONS = tuiCreateToken(TUI_MONEY_DEFAULT_OPTIONS);\n\nexport function tuiMoneyOptionsProvider(options: Partial<TuiMoneyOptions>): Provider {\n    return tuiProvideOptions(TUI_MONEY_OPTIONS, options, TUI_MONEY_DEFAULT_OPTIONS);\n}\n","import {TuiMoneySign, TuiMoneySignSymbol} from '@taiga-ui/addon-commerce/types';\nimport {CHAR_MINUS, CHAR_PLUS} from '@taiga-ui/cdk';\n\nexport function tuiFormatSignSymbol(\n    value: number,\n    sign: TuiMoneySign,\n): TuiMoneySignSymbol {\n    if (sign === 'never' || !value || (sign === 'negative-only' && value > 0)) {\n        return '';\n    }\n\n    if (sign === 'force-negative' || (value < 0 && sign !== 'force-positive')) {\n        return CHAR_MINUS;\n    }\n\n    return CHAR_PLUS;\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {TuiMoneySign, TuiMoneySignSymbol} from '@taiga-ui/addon-commerce/types';\n\nimport {tuiFormatSignSymbol} from '../utils/format-sign-symbol';\n\n@Pipe({name: 'tuiSignSymbol'})\nexport class TuiSignSymbolPipe implements PipeTransform {\n    transform(value: number, sign: TuiMoneySign): TuiMoneySignSymbol {\n        return tuiFormatSignSymbol(value, sign);\n    }\n}\n","import {Inject, Pipe, PipeTransform} from '@angular/core';\nimport {tuiRoundWith} from '@taiga-ui/cdk';\nimport {\n    TUI_NUMBER_FORMAT,\n    tuiFormatNumber,\n    TuiNumberFormatSettings,\n} from '@taiga-ui/core';\n\n@Pipe({name: 'tuiIntegerPart'})\nexport class TuiIntegerPartPipe implements PipeTransform {\n    constructor(\n        @Inject(TUI_NUMBER_FORMAT) private readonly numberFormat: TuiNumberFormatSettings,\n    ) {}\n\n    transform(value: number, precision = 2): string {\n        const rounded = tuiRoundWith({\n            value: Math.abs(Number(value)),\n            precision,\n            method: this.numberFormat.rounding,\n        });\n\n        return tuiFormatNumber(rounded, {\n            ...this.numberFormat,\n            decimalLimit: 0,\n            rounding: 'truncate',\n        });\n    }\n}\n","import {TuiDecimal, tuiFormatNumber, TuiNumberFormatSettings} from '@taiga-ui/core';\n\nexport function tuiFormatFractionPart(options: {\n    decimal: TuiDecimal;\n    numberFormat: TuiNumberFormatSettings;\n    precision: number;\n    value: number;\n}): string {\n    const {value, decimal, numberFormat, precision} = options;\n    const fraction = tuiFormatNumber(value, {\n        ...numberFormat,\n        decimalLimit: precision,\n    }).split(numberFormat.decimalSeparator)[1];\n    const shouldShow =\n        decimal !== 'never' && (decimal === 'always' || !!parseInt(fraction, 10));\n\n    return shouldShow ? `${numberFormat.decimalSeparator}${fraction}` : '';\n}\n","import {Inject, Pipe, PipeTransform} from '@angular/core';\nimport {TUI_NUMBER_FORMAT, TuiDecimal, TuiNumberFormatSettings} from '@taiga-ui/core';\n\nimport {tuiFormatFractionPart} from '../utils/format-fraction-part';\n\n@Pipe({name: 'tuiFractionPart'})\nexport class TuiFractionPartPipe implements PipeTransform {\n    constructor(\n        @Inject(TUI_NUMBER_FORMAT) private readonly numberFormat: TuiNumberFormatSettings,\n    ) {}\n\n    transform(value: number, decimal: TuiDecimal, precision: number): string {\n        return tuiFormatFractionPart({\n            value,\n            decimal,\n            precision,\n            numberFormat: this.numberFormat,\n        });\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    HostBinding,\n    Inject,\n    Input,\n} from '@angular/core';\nimport {\n    TuiCurrencyVariants,\n    TuiMoneySign,\n    TuiMoneySignSymbol,\n} from '@taiga-ui/addon-commerce/types';\nimport {CHAR_MINUS, CHAR_PLUS} from '@taiga-ui/cdk';\nimport {TuiDecimal} from '@taiga-ui/core';\n\nimport {TUI_MONEY_OPTIONS, TuiMoneyOptions} from './money.options';\nimport {tuiFormatSignSymbol} from './utils/format-sign-symbol';\n\n@Component({\n    selector: 'tui-money',\n    templateUrl: './money.template.html',\n    styleUrls: ['./money.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiMoneyComponent {\n    @Input()\n    value = NaN;\n\n    @Input()\n    decimal: TuiDecimal = this.options.decimal;\n\n    @Input()\n    currency: TuiCurrencyVariants = this.options.currency;\n\n    @Input()\n    currencyAlign = this.options.currencyAlign;\n\n    @Input()\n    sign: TuiMoneySign = this.options.sign;\n\n    @Input()\n    colored = this.options.colored;\n\n    @Input()\n    precision = this.options.precision;\n\n    @Input()\n    singleColor = this.options.singleColor;\n\n    get signSymbol(): TuiMoneySignSymbol {\n        return tuiFormatSignSymbol(this.value, this.sign);\n    }\n\n    @HostBinding('class._red')\n    get red(): boolean {\n        return (\n            this.colored &&\n            (this.signSymbol === CHAR_MINUS ||\n                (this.value < 0 && this.sign !== 'force-positive'))\n        );\n    }\n\n    @HostBinding('class._green')\n    get green(): boolean {\n        return (\n            this.colored &&\n            (this.signSymbol === CHAR_PLUS ||\n                (this.value > 0 && this.sign !== 'force-negative'))\n        );\n    }\n\n    get alignRight(): boolean {\n        return this.currencyAlign === 'right';\n    }\n\n    @HostBinding('class._inherit-color')\n    get inheritColor(): boolean {\n        return this.singleColor || (this.value === 0 && this.colored);\n    }\n\n    constructor(@Inject(TUI_MONEY_OPTIONS) private readonly options: TuiMoneyOptions) {}\n}\n","<span\n    automation-id=\"tui-money__sign\"\n    [textContent]=\"value | tuiSignSymbol: sign\"\n></span>\n\n<span\n    *tuiLet=\"currency | tuiCurrency as currencySymbol\"\n    class=\"t-container\"\n    [class.t-container_reverse]=\"!alignRight\"\n>\n    <span>\n        <span\n            automation-id=\"tui-money__integer-part\"\n            [textContent]=\"value | tuiIntegerPart: precision\"\n        ></span>\n        <span\n            automation-id=\"tui-money__fraction-part\"\n            class=\"t-lighter\"\n            [textContent]=\"value | tuiFractionPart: decimal : precision\"\n        ></span>\n    </span>\n    <span *ngIf=\"(alignRight && currencySymbol) || currencySymbol.length > 1\">&nbsp;</span>\n    <span\n        automation-id=\"tui-money__currency\"\n        class=\"t-lighter\"\n        [textContent]=\"currencySymbol\"\n    ></span>\n</span>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiCurrencyPipeModule} from '@taiga-ui/addon-commerce/pipes';\nimport {TuiLetModule} from '@taiga-ui/cdk';\n\nimport {TuiMoneyComponent} from './money.component';\nimport {TuiFractionPartPipe} from './pipes/fraction-part.pipe';\nimport {TuiIntegerPartPipe} from './pipes/integer-part.pipe';\nimport {TuiSignSymbolPipe} from './pipes/sign-symbol.pipe';\n\n@NgModule({\n    imports: [CommonModule, TuiCurrencyPipeModule, TuiLetModule],\n    declarations: [\n        TuiMoneyComponent,\n        TuiFractionPartPipe,\n        TuiIntegerPartPipe,\n        TuiSignSymbolPipe,\n    ],\n    exports: [TuiMoneyComponent],\n})\nexport class TuiMoneyModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["TuiCurrency","tuiCreateToken","tuiProvideOptions","CHAR_MINUS","CHAR_PLUS","i0","Pipe","tuiRoundWith","tuiFormatNumber","TUI_NUMBER_FORMAT","Inject","i1","i2","i3.TuiSignSymbolPipe","i4","i5.TuiIntegerPartPipe","i6.TuiFractionPartPipe","Component","ChangeDetectionStrategy","Input","HostBinding","CommonModule","TuiCurrencyPipeModule","TuiLetModule","NgModule"],"mappings":"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"}
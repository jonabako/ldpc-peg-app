{"version":3,"file":"taiga-ui-addon-commerce-pipes.umd.js","sources":["../../../projects/addon-commerce/pipes/currency/currency.pipe.ts","../../../projects/addon-commerce/pipes/currency/currency.module.ts","../../../projects/addon-commerce/pipes/format-card/format-card.pipe.ts","../../../projects/addon-commerce/pipes/format-card/format-card.module.ts","../../../projects/addon-commerce/pipes/taiga-ui-addon-commerce-pipes.ts"],"sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\nimport {TuiCurrencyVariants} from '@taiga-ui/addon-commerce/types';\nimport {tuiFormatCurrency} from '@taiga-ui/addon-commerce/utils';\n\n@Pipe({\n    name: 'tuiCurrency',\n})\nexport class TuiCurrencyPipe implements PipeTransform {\n    transform(currency: TuiCurrencyVariants): string {\n        return tuiFormatCurrency(currency);\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiCurrencyPipe} from './currency.pipe';\n\n@NgModule({\n    declarations: [TuiCurrencyPipe],\n    exports: [TuiCurrencyPipe],\n})\nexport class TuiCurrencyPipeModule {}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'tuiFormatCard'})\nexport class TuiFormatCardPipe implements PipeTransform {\n    transform(value: string | null = '', cardPrefilled: boolean = false): string {\n        return value && !cardPrefilled\n            ? value\n                  .split('')\n                  .map((char, index) => (index && index % 4 === 0 ? ` ${char}` : char))\n                  .join('')\n            : '';\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiFormatCardPipe} from './format-card.pipe';\n\n@NgModule({\n    declarations: [TuiFormatCardPipe],\n    exports: [TuiFormatCardPipe],\n})\nexport class TuiFormatCardModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tuiFormatCurrency","i0","Pipe","NgModule"],"mappings":"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"}
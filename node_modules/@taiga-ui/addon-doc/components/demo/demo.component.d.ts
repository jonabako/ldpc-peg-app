import { Location } from '@angular/common';
import { ElementRef, OnInit, TemplateRef } from '@angular/core';
import { AbstractControl, FormGroup } from '@angular/forms';
import { UrlSerializer, UrlTree } from '@angular/router';
import { TuiStringHandler } from '@taiga-ui/cdk';
import { TuiBrightness } from '@taiga-ui/core';
import { TuiArrowOptions } from '@taiga-ui/kit';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export declare class TuiDocDemoComponent implements OnInit {
    readonly options: TuiArrowOptions;
    readonly isMobile: boolean;
    private readonly el;
    private readonly locationRef;
    private readonly urlSerializer;
    readonly texts: [string, string, string];
    private readonly urlStateHandler;
    private readonly resizeable?;
    private readonly content?;
    private readonly resizer?;
    control: AbstractControl | null;
    sticky: boolean;
    readonly template: TemplateRef<Record<string, unknown>> | null;
    testForm?: FormGroup;
    readonly updateOnVariants: readonly ["change", "blur", "submit"];
    updateOn: 'blur' | 'change' | 'submit';
    opaque: boolean;
    expanded: boolean;
    mode: TuiBrightness | null;
    sandboxWidth: number;
    readonly change$: Subject<void>;
    readonly items: readonly TuiBrightness[];
    constructor(options: TuiArrowOptions, isMobile: boolean, el: ElementRef<HTMLElement>, locationRef: Location, urlSerializer: UrlSerializer, texts: [string, string, string], urlStateHandler: TuiStringHandler<UrlTree>);
    onResize(): void;
    onMouseUp(): void;
    ngOnInit(): void;
    onModeChange(mode: TuiBrightness | null): void;
    toggleDetails(): void;
    changeOpaque(opaque: boolean): void;
    updateOnChange(updateOn: 'blur' | 'change' | 'submit'): void;
    updateWidth(width?: number): void;
    private get delta();
    private updateUrl;
    private createForm;
    private getUrlTree;
    private get params();
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiDocDemoComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiDocDemoComponent, "tui-doc-demo", never, { "control": "control"; "sticky": "sticky"; }, {}, ["template"], ["*"]>;
}

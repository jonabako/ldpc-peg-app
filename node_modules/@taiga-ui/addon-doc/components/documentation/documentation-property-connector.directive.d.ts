import { Location } from '@angular/common';
import { EventEmitter, OnChanges, OnInit, TemplateRef } from '@angular/core';
import { ActivatedRoute, UrlSerializer, UrlTree } from '@angular/router';
import { TuiStringHandler } from '@taiga-ui/cdk';
import { TuiAlertService } from '@taiga-ui/core';
import { BehaviorSubject, Subject } from 'rxjs';
import * as i0 from "@angular/core";
export declare type TuiDocumentationPropertyType = 'input-output' | 'input' | 'output' | null;
/**
 * @deprecated: use {@link TuiDocumentationPropertyType}
 * TODO: remove in v4.0
 */
export declare type DocumentationPropertyType = TuiDocumentationPropertyType;
export declare class TuiDocDocumentationPropertyConnectorDirective<T> implements OnInit, OnChanges {
    readonly template: TemplateRef<Record<string, unknown>>;
    private readonly locationRef;
    private readonly activatedRoute;
    private readonly urlSerializer;
    private readonly urlStateHandler;
    private readonly alerts;
    documentationPropertyName: string;
    documentationPropertyMode: TuiDocumentationPropertyType;
    documentationPropertyType: string;
    documentationPropertyValue: T;
    documentationPropertyDeprecated: boolean;
    documentationPropertyValues: readonly T[] | null;
    readonly documentationPropertyValueChange: EventEmitter<T>;
    readonly changed$: Subject<void>;
    readonly emits$: BehaviorSubject<number>;
    constructor(template: TemplateRef<Record<string, unknown>>, locationRef: Location, activatedRoute: ActivatedRoute, urlSerializer: UrlSerializer, urlStateHandler: TuiStringHandler<UrlTree>, alerts: TuiAlertService);
    ngOnInit(): void;
    get attrName(): string;
    get hasItems(): boolean;
    get shouldShowValues(): boolean;
    ngOnChanges(): void;
    onValueChange(value: T): void;
    emitEvent(event: unknown): void;
    private parseParams;
    private setQueryParam;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiDocDocumentationPropertyConnectorDirective<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TuiDocDocumentationPropertyConnectorDirective<any>, "ng-template[documentationPropertyName]", ["documentationProperty"], { "documentationPropertyName": "documentationPropertyName"; "documentationPropertyMode": "documentationPropertyMode"; "documentationPropertyType": "documentationPropertyType"; "documentationPropertyValue": "documentationPropertyValue"; "documentationPropertyDeprecated": "documentationPropertyDeprecated"; "documentationPropertyValues": "documentationPropertyValues"; }, { "documentationPropertyValueChange": "documentationPropertyValueChange"; }, never>;
}

import { AfterContentInit, ChangeDetectorRef, QueryList } from '@angular/core';
import { TuiDestroyService, TuiTypedMatcher } from '@taiga-ui/cdk';
import { TuiDocDocumentationPropertyConnectorDirective } from './documentation-property-connector.directive';
import { TuiGetColorPipe } from './pipes/color.pipe';
import { TuiGetOpacityPipe } from './pipes/opacity.pipe';
import * as i0 from "@angular/core";
export declare class TuiDocDocumentationComponent implements AfterContentInit {
    private readonly cdr;
    readonly texts: [string, string, string, string, string];
    readonly excludedProperties: Set<string>;
    private readonly destroy$;
    private readonly getColor;
    private readonly getOpacity;
    heading: string;
    showValues: boolean;
    isAPI: boolean;
    propertiesConnectors: QueryList<TuiDocDocumentationPropertyConnectorDirective<any>>;
    activeItemIndex: number;
    constructor(cdr: ChangeDetectorRef, texts: [string, string, string, string, string], excludedProperties: Set<string>, destroy$: TuiDestroyService, getColor: TuiGetColorPipe, getOpacity: TuiGetOpacityPipe);
    ngAfterContentInit(): void;
    get type(): string;
    matcher: TuiTypedMatcher<[
        TuiDocDocumentationPropertyConnectorDirective<any>,
        Set<string>
    ]>;
    onColorChange(connector: TuiDocDocumentationPropertyConnectorDirective<string>, color: string): void;
    onOpacityChange(connector: TuiDocDocumentationPropertyConnectorDirective<string>, opacity: number | null): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiDocDocumentationComponent, [null, null, null, { self: true; }, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiDocDocumentationComponent, "tui-doc-documentation", never, { "heading": "heading"; "showValues": "showValues"; "isAPI": "isAPI"; }, {}, ["propertiesConnectors"], ["*"]>;
}

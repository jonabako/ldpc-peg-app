import { Inject, Injectable } from '@angular/core';
import { LOCAL_STORAGE, WINDOW } from '@ng-web-apis/common';
import { BehaviorSubject } from 'rxjs';
import { TUI_THEME_NIGHT_STORAGE_KEY, TUI_USE_DEFAULT_NIGHT_THEME, } from './theme-night.options';
import * as i0 from "@angular/core";
export class TuiThemeNightService extends BehaviorSubject {
    constructor(win, storage, key, useDefaultNightTheme) {
        super(storage.getItem(key) === 'true' ||
            (storage.getItem(key) === null &&
                win.matchMedia('(prefers-color-scheme: dark)').matches));
        this.win = win;
        this.storage = storage;
        this.key = key;
        this.useDefaultNightTheme = useDefaultNightTheme;
    }
    next(night) {
        this.storage.setItem(this.key, String(night));
        super.next(night);
    }
    toggle() {
        this.next(!this.value);
    }
}
TuiThemeNightService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiThemeNightService, deps: [{ token: WINDOW }, { token: LOCAL_STORAGE }, { token: TUI_THEME_NIGHT_STORAGE_KEY }, { token: TUI_USE_DEFAULT_NIGHT_THEME }], target: i0.ɵɵFactoryTarget.Injectable });
TuiThemeNightService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiThemeNightService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiThemeNightService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: Window, decorators: [{
                    type: Inject,
                    args: [WINDOW]
                }] }, { type: Storage, decorators: [{
                    type: Inject,
                    args: [LOCAL_STORAGE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_THEME_NIGHT_STORAGE_KEY]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_USE_DEFAULT_NIGHT_THEME]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtbmlnaHQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2FkZG9uLWRvYy9zZXJ2aWNlcy90aGVtZS1uaWdodC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxNQUFNLEVBQUUsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBQyxhQUFhLEVBQUUsTUFBTSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDMUQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUVyQyxPQUFPLEVBQ0gsMkJBQTJCLEVBQzNCLDJCQUEyQixHQUM5QixNQUFNLHVCQUF1QixDQUFDOztBQUsvQixNQUFNLE9BQU8sb0JBQXFCLFNBQVEsZUFBd0I7SUFDOUQsWUFDNkIsR0FBVyxFQUNKLE9BQWdCLEVBQ0YsR0FBVyxFQUNYLG9CQUE2QjtRQUUzRSxLQUFLLENBQ0QsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxNQUFNO1lBQzNCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxJQUFJO2dCQUMxQixHQUFHLENBQUMsVUFBVSxDQUFDLDhCQUE4QixDQUFDLENBQUMsT0FBTyxDQUFDLENBQ2xFLENBQUM7UUFUdUIsUUFBRyxHQUFILEdBQUcsQ0FBUTtRQUNKLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDRixRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQ1gseUJBQW9CLEdBQXBCLG9CQUFvQixDQUFTO0lBTy9FLENBQUM7SUFFUSxJQUFJLENBQUMsS0FBYztRQUN4QixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzlDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEIsQ0FBQztJQUVELE1BQU07UUFDRixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNCLENBQUM7O2tIQXJCUSxvQkFBb0Isa0JBRWpCLE1BQU0sYUFDTixhQUFhLGFBQ2IsMkJBQTJCLGFBQzNCLDJCQUEyQjtzSEFMOUIsb0JBQW9CLGNBRmpCLE1BQU07NEZBRVQsb0JBQW9CO2tCQUhoQyxVQUFVO21CQUFDO29CQUNSLFVBQVUsRUFBRSxNQUFNO2lCQUNyQjswREFHcUMsTUFBTTswQkFBbkMsTUFBTTsyQkFBQyxNQUFNOzhCQUMyQixPQUFPOzBCQUEvQyxNQUFNOzJCQUFDLGFBQWE7OzBCQUNwQixNQUFNOzJCQUFDLDJCQUEyQjs7MEJBQ2xDLE1BQU07MkJBQUMsMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3QsIEluamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtMT0NBTF9TVE9SQUdFLCBXSU5ET1d9IGZyb20gJ0BuZy13ZWItYXBpcy9jb21tb24nO1xuaW1wb3J0IHtCZWhhdmlvclN1YmplY3R9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQge1xuICAgIFRVSV9USEVNRV9OSUdIVF9TVE9SQUdFX0tFWSxcbiAgICBUVUlfVVNFX0RFRkFVTFRfTklHSFRfVEhFTUUsXG59IGZyb20gJy4vdGhlbWUtbmlnaHQub3B0aW9ucyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIFR1aVRoZW1lTmlnaHRTZXJ2aWNlIGV4dGVuZHMgQmVoYXZpb3JTdWJqZWN0PGJvb2xlYW4+IHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChXSU5ET1cpIHJlYWRvbmx5IHdpbjogV2luZG93LFxuICAgICAgICBASW5qZWN0KExPQ0FMX1NUT1JBR0UpIHJlYWRvbmx5IHN0b3JhZ2U6IFN0b3JhZ2UsXG4gICAgICAgIEBJbmplY3QoVFVJX1RIRU1FX05JR0hUX1NUT1JBR0VfS0VZKSByZWFkb25seSBrZXk6IHN0cmluZyxcbiAgICAgICAgQEluamVjdChUVUlfVVNFX0RFRkFVTFRfTklHSFRfVEhFTUUpIHJlYWRvbmx5IHVzZURlZmF1bHROaWdodFRoZW1lOiBib29sZWFuLFxuICAgICkge1xuICAgICAgICBzdXBlcihcbiAgICAgICAgICAgIHN0b3JhZ2UuZ2V0SXRlbShrZXkpID09PSAndHJ1ZScgfHxcbiAgICAgICAgICAgICAgICAoc3RvcmFnZS5nZXRJdGVtKGtleSkgPT09IG51bGwgJiZcbiAgICAgICAgICAgICAgICAgICAgd2luLm1hdGNoTWVkaWEoJyhwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyayknKS5tYXRjaGVzKSxcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBvdmVycmlkZSBuZXh0KG5pZ2h0OiBib29sZWFuKTogdm9pZCB7XG4gICAgICAgIHRoaXMuc3RvcmFnZS5zZXRJdGVtKHRoaXMua2V5LCBTdHJpbmcobmlnaHQpKTtcbiAgICAgICAgc3VwZXIubmV4dChuaWdodCk7XG4gICAgfVxuXG4gICAgdG9nZ2xlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLm5leHQoIXRoaXMudmFsdWUpO1xuICAgIH1cbn1cbiJdfQ==
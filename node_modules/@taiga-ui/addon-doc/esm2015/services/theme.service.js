import { Inject, Injectable } from '@angular/core';
import { LOCAL_STORAGE } from '@ng-web-apis/common';
import { BehaviorSubject } from 'rxjs';
import { TUI_THEME_DEFAULT_NAME, TUI_THEME_NAME, TUI_THEME_STORAGE_KEY, } from './theme.options';
import * as i0 from "@angular/core";
export class TuiThemeService extends BehaviorSubject {
    constructor(initialTheme, key, storage) {
        super(storage.getItem(key) || initialTheme);
        this.initialTheme = initialTheme;
        this.key = key;
        this.storage = storage;
    }
    next(theme) {
        this.storage.setItem(this.key, theme);
        super.next(theme);
    }
    get isDefaultTheme() {
        return this.value === TUI_THEME_DEFAULT_NAME;
    }
}
TuiThemeService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiThemeService, deps: [{ token: TUI_THEME_NAME }, { token: TUI_THEME_STORAGE_KEY }, { token: LOCAL_STORAGE }], target: i0.ɵɵFactoryTarget.Injectable });
TuiThemeService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiThemeService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiThemeService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_THEME_NAME]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_THEME_STORAGE_KEY]
                }] }, { type: Storage, decorators: [{
                    type: Inject,
                    args: [LOCAL_STORAGE]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2FkZG9uLWRvYy9zZXJ2aWNlcy90aGVtZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxNQUFNLEVBQUUsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBRXJDLE9BQU8sRUFDSCxzQkFBc0IsRUFDdEIsY0FBYyxFQUNkLHFCQUFxQixHQUN4QixNQUFNLGlCQUFpQixDQUFDOztBQUt6QixNQUFNLE9BQU8sZUFBZ0IsU0FBUSxlQUF1QjtJQUN4RCxZQUNxQyxZQUFvQixFQUNiLEdBQVcsRUFDWCxPQUFnQjtRQUV4RCxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxZQUFZLENBQUMsQ0FBQztRQUpYLGlCQUFZLEdBQVosWUFBWSxDQUFRO1FBQ2IsUUFBRyxHQUFILEdBQUcsQ0FBUTtRQUNYLFlBQU8sR0FBUCxPQUFPLENBQVM7SUFHNUQsQ0FBQztJQUVRLElBQUksQ0FBQyxLQUFhO1FBQ3ZCLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDdEMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBRUQsSUFBSSxjQUFjO1FBQ2QsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLHNCQUFzQixDQUFDO0lBQ2pELENBQUM7OzZHQWhCUSxlQUFlLGtCQUVaLGNBQWMsYUFDZCxxQkFBcUIsYUFDckIsYUFBYTtpSEFKaEIsZUFBZSxjQUZaLE1BQU07NEZBRVQsZUFBZTtrQkFIM0IsVUFBVTttQkFBQztvQkFDUixVQUFVLEVBQUUsTUFBTTtpQkFDckI7OzBCQUdRLE1BQU07MkJBQUMsY0FBYzs7MEJBQ3JCLE1BQU07MkJBQUMscUJBQXFCOzhCQUNvQixPQUFPOzBCQUF2RCxNQUFNOzJCQUFDLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdCwgSW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0xPQ0FMX1NUT1JBR0V9IGZyb20gJ0BuZy13ZWItYXBpcy9jb21tb24nO1xuaW1wb3J0IHtCZWhhdmlvclN1YmplY3R9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQge1xuICAgIFRVSV9USEVNRV9ERUZBVUxUX05BTUUsXG4gICAgVFVJX1RIRU1FX05BTUUsXG4gICAgVFVJX1RIRU1FX1NUT1JBR0VfS0VZLFxufSBmcm9tICcuL3RoZW1lLm9wdGlvbnMnO1xuXG5ASW5qZWN0YWJsZSh7XG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlUaGVtZVNlcnZpY2UgZXh0ZW5kcyBCZWhhdmlvclN1YmplY3Q8c3RyaW5nPiB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVFVJX1RIRU1FX05BTUUpIHJlYWRvbmx5IGluaXRpYWxUaGVtZTogc3RyaW5nLFxuICAgICAgICBASW5qZWN0KFRVSV9USEVNRV9TVE9SQUdFX0tFWSkgcmVhZG9ubHkga2V5OiBzdHJpbmcsXG4gICAgICAgIEBJbmplY3QoTE9DQUxfU1RPUkFHRSkgcHJpdmF0ZSByZWFkb25seSBzdG9yYWdlOiBTdG9yYWdlLFxuICAgICkge1xuICAgICAgICBzdXBlcihzdG9yYWdlLmdldEl0ZW0oa2V5KSB8fCBpbml0aWFsVGhlbWUpO1xuICAgIH1cblxuICAgIG92ZXJyaWRlIG5leHQodGhlbWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLnN0b3JhZ2Uuc2V0SXRlbSh0aGlzLmtleSwgdGhlbWUpO1xuICAgICAgICBzdXBlci5uZXh0KHRoZW1lKTtcbiAgICB9XG5cbiAgICBnZXQgaXNEZWZhdWx0VGhlbWUoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlID09PSBUVUlfVEhFTUVfREVGQVVMVF9OQU1FO1xuICAgIH1cbn1cbiJdfQ==
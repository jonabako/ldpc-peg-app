import { Inject, Pipe } from '@angular/core';
import { tuiInspectAny } from '@taiga-ui/addon-doc/utils';
import { TUI_IS_E2E } from '@taiga-ui/cdk';
import * as i0 from "@angular/core";
export class TuiInspectPipe {
    constructor(isE2E) {
        this.isE2E = isE2E;
    }
    transform(value, depth = 2) {
        if (this.isE2E && typeof value === 'function') {
            /**
             * @description:
             * When developing in production mode the webpack bundler minify
             * functions in different ways, then due to which the string content
             * of the function may differ from build to build, which can be to
             * various problems when screenshot testing on e2e.
             */
            return 'λ(x) => y';
        }
        return tuiInspectAny(value, depth);
    }
}
TuiInspectPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInspectPipe, deps: [{ token: TUI_IS_E2E }], target: i0.ɵɵFactoryTarget.Pipe });
TuiInspectPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInspectPipe, name: "tuiInspectAny" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInspectPipe, decorators: [{
            type: Pipe,
            args: [{ name: 'tuiInspectAny' }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_E2E]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zcGVjdC5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tZG9jL2NvbXBvbmVudHMvZG9jdW1lbnRhdGlvbi9waXBlcy9pbnNwZWN0LnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLE1BQU0sRUFBRSxJQUFJLEVBQWdCLE1BQU0sZUFBZSxDQUFDO0FBQzFELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUN4RCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDOztBQUd6QyxNQUFNLE9BQU8sY0FBYztJQUN2QixZQUFpRCxLQUFjO1FBQWQsVUFBSyxHQUFMLEtBQUssQ0FBUztJQUFHLENBQUM7SUFFbkUsU0FBUyxDQUFDLEtBQWMsRUFBRSxRQUFnQixDQUFDO1FBQ3ZDLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxPQUFPLEtBQUssS0FBSyxVQUFVLEVBQUU7WUFDM0M7Ozs7OztlQU1HO1lBQ0gsT0FBTyxXQUFXLENBQUM7U0FDdEI7UUFFRCxPQUFPLGFBQWEsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDdkMsQ0FBQzs7NEdBaEJRLGNBQWMsa0JBQ0gsVUFBVTswR0FEckIsY0FBYzs0RkFBZCxjQUFjO2tCQUQxQixJQUFJO21CQUFDLEVBQUMsSUFBSSxFQUFFLGVBQWUsRUFBQzs7MEJBRVosTUFBTTsyQkFBQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3QsIFBpcGUsIFBpcGVUcmFuc2Zvcm19IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0dWlJbnNwZWN0QW55fSBmcm9tICdAdGFpZ2EtdWkvYWRkb24tZG9jL3V0aWxzJztcbmltcG9ydCB7VFVJX0lTX0UyRX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5cbkBQaXBlKHtuYW1lOiAndHVpSW5zcGVjdEFueSd9KVxuZXhwb3J0IGNsYXNzIFR1aUluc3BlY3RQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gICAgY29uc3RydWN0b3IoQEluamVjdChUVUlfSVNfRTJFKSBwcml2YXRlIHJlYWRvbmx5IGlzRTJFOiBib29sZWFuKSB7fVxuXG4gICAgdHJhbnNmb3JtKHZhbHVlOiB1bmtub3duLCBkZXB0aDogbnVtYmVyID0gMik6IHN0cmluZyB7XG4gICAgICAgIGlmICh0aGlzLmlzRTJFICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb246XG4gICAgICAgICAgICAgKiBXaGVuIGRldmVsb3BpbmcgaW4gcHJvZHVjdGlvbiBtb2RlIHRoZSB3ZWJwYWNrIGJ1bmRsZXIgbWluaWZ5XG4gICAgICAgICAgICAgKiBmdW5jdGlvbnMgaW4gZGlmZmVyZW50IHdheXMsIHRoZW4gZHVlIHRvIHdoaWNoIHRoZSBzdHJpbmcgY29udGVudFxuICAgICAgICAgICAgICogb2YgdGhlIGZ1bmN0aW9uIG1heSBkaWZmZXIgZnJvbSBidWlsZCB0byBidWlsZCwgd2hpY2ggY2FuIGJlIHRvXG4gICAgICAgICAgICAgKiB2YXJpb3VzIHByb2JsZW1zIHdoZW4gc2NyZWVuc2hvdCB0ZXN0aW5nIG9uIGUyZS5cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgcmV0dXJuICfOuyh4KSA9PiB5JztcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0dWlJbnNwZWN0QW55KHZhbHVlLCBkZXB0aCk7XG4gICAgfVxufVxuIl19
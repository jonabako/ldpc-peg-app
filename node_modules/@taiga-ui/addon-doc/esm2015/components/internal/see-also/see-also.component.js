import { ChangeDetectionStrategy, Component, Inject, Input } from '@angular/core';
import { TUI_DOC_MAP_PAGES, TUI_DOC_SEE_ALSO_TEXT } from '@taiga-ui/addon-doc/tokens';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@angular/common";
import * as i3 from "@angular/router";
export class TuiDocSeeAlsoComponent {
    constructor(text, pages) {
        this.text = text;
        this.pages = pages;
        this.seeAlso = [];
    }
    getRouterLink(pageTitle) {
        var _a, _b;
        return (_b = (_a = this.pages.get(pageTitle)) === null || _a === void 0 ? void 0 : _a.route) !== null && _b !== void 0 ? _b : '';
    }
}
TuiDocSeeAlsoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDocSeeAlsoComponent, deps: [{ token: TUI_DOC_SEE_ALSO_TEXT }, { token: TUI_DOC_MAP_PAGES }], target: i0.ɵɵFactoryTarget.Component });
TuiDocSeeAlsoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocSeeAlsoComponent, selector: "tui-doc-see-also", inputs: { seeAlso: "seeAlso" }, ngImport: i0, template: "<h5 class=\"t-header\">{{ text }}</h5>\n<ng-container *ngFor=\"let item of seeAlso; last as last\">\n    <a\n        tuiLink\n        [innerText]=\"item\"\n        [routerLink]=\"getRouterLink(item)\"\n    ></a>\n    <ng-container *ngIf=\"!last\">{{ ', ' }}</ng-container>\n</ng-container>\n", styles: [":host{display:block}.t-header{font-size:.6875rem;line-height:1rem;text-transform:uppercase;letter-spacing:.075em;color:var(--tui-text-02);margin:0 0 .5rem;white-space:nowrap}\n"], components: [{ type: i1.TuiLinkComponent, selector: "a[tuiLink], button[tuiLink]", inputs: ["pseudo", "icon", "iconAlign", "iconRotated", "mode"], exportAs: ["tuiLink"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDocSeeAlsoComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-doc-see-also',
                    templateUrl: './see-also.template.html',
                    styleUrls: ['./see-also.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_DOC_SEE_ALSO_TEXT]
                }] }, { type: Map, decorators: [{
                    type: Inject,
                    args: [TUI_DOC_MAP_PAGES]
                }] }]; }, propDecorators: { seeAlso: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VlLWFsc28uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tZG9jL2NvbXBvbmVudHMvaW50ZXJuYWwvc2VlLWFsc28vc2VlLWFsc28uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tZG9jL2NvbXBvbmVudHMvaW50ZXJuYWwvc2VlLWFsc28vc2VlLWFsc28udGVtcGxhdGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFaEYsT0FBTyxFQUFDLGlCQUFpQixFQUFFLHFCQUFxQixFQUFDLE1BQU0sNEJBQTRCLENBQUM7Ozs7O0FBUXBGLE1BQU0sT0FBTyxzQkFBc0I7SUFJL0IsWUFDNEMsSUFBWSxFQUNSLEtBQThCO1FBRGxDLFNBQUksR0FBSixJQUFJLENBQVE7UUFDUixVQUFLLEdBQUwsS0FBSyxDQUF5QjtRQUo5RSxZQUFPLEdBQXNCLEVBQUUsQ0FBQztJQUs3QixDQUFDO0lBRUosYUFBYSxDQUFDLFNBQWlCOztRQUMzQixPQUFPLE1BQUEsTUFBQSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsMENBQUUsS0FBSyxtQ0FBSSxFQUFFLENBQUM7SUFDbEQsQ0FBQzs7b0hBWFEsc0JBQXNCLGtCQUtuQixxQkFBcUIsYUFDckIsaUJBQWlCO3dHQU5wQixzQkFBc0Isd0ZDVm5DLHFTQVNBOzRGRENhLHNCQUFzQjtrQkFObEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixXQUFXLEVBQUUsMEJBQTBCO29CQUN2QyxTQUFTLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQztvQkFDcEMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2xEOzswQkFNUSxNQUFNOzJCQUFDLHFCQUFxQjs4QkFDc0IsR0FBRzswQkFBckQsTUFBTTsyQkFBQyxpQkFBaUI7NENBSjdCLE9BQU87c0JBRE4sS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5qZWN0LCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgdHlwZSB7VHVpRG9jUGFnZX0gZnJvbSAnQHRhaWdhLXVpL2FkZG9uLWRvYy9pbnRlcmZhY2VzJztcbmltcG9ydCB7VFVJX0RPQ19NQVBfUEFHRVMsIFRVSV9ET0NfU0VFX0FMU09fVEVYVH0gZnJvbSAnQHRhaWdhLXVpL2FkZG9uLWRvYy90b2tlbnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1kb2Mtc2VlLWFsc28nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9zZWUtYWxzby50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9zZWUtYWxzby5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFR1aURvY1NlZUFsc29Db21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgc2VlQWxzbzogcmVhZG9ubHkgc3RyaW5nW10gPSBbXTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFRVSV9ET0NfU0VFX0FMU09fVEVYVCkgcmVhZG9ubHkgdGV4dDogc3RyaW5nLFxuICAgICAgICBASW5qZWN0KFRVSV9ET0NfTUFQX1BBR0VTKSBwcml2YXRlIHJlYWRvbmx5IHBhZ2VzOiBNYXA8c3RyaW5nLCBUdWlEb2NQYWdlPixcbiAgICApIHt9XG5cbiAgICBnZXRSb3V0ZXJMaW5rKHBhZ2VUaXRsZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFnZXMuZ2V0KHBhZ2VUaXRsZSk/LnJvdXRlID8/ICcnO1xuICAgIH1cbn1cbiIsIjxoNSBjbGFzcz1cInQtaGVhZGVyXCI+e3sgdGV4dCB9fTwvaDU+XG48bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBpdGVtIG9mIHNlZUFsc287IGxhc3QgYXMgbGFzdFwiPlxuICAgIDxhXG4gICAgICAgIHR1aUxpbmtcbiAgICAgICAgW2lubmVyVGV4dF09XCJpdGVtXCJcbiAgICAgICAgW3JvdXRlckxpbmtdPVwiZ2V0Um91dGVyTGluayhpdGVtKVwiXG4gICAgPjwvYT5cbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiIWxhc3RcIj57eyAnLCAnIH19PC9uZy1jb250YWluZXI+XG48L25nLWNvbnRhaW5lcj5cbiJdfQ==
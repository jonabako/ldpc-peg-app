const MAP = {
    а: 'f',
    б: ',',
    в: 'd',
    г: 'u',
    д: 'l',
    е: 't',
    ё: '`',
    ж: ';',
    з: 'p',
    и: 'b',
    й: 'q',
    к: 'r',
    л: 'k',
    м: 'v',
    н: 'y',
    о: 'j',
    п: 'g',
    р: 'h',
    с: 'c',
    т: 'n',
    у: 'e',
    ф: 'a',
    х: '[',
    ц: 'w',
    ч: 'x',
    ш: 'i',
    щ: 'o',
    ъ: ']',
    ы: 's',
    ь: 'm',
    ю: '.',
    я: 'z',
};
/**
 * Translates text mistakenly typed in the Russian layout into English
 * @param string string with Russian layout characters
 * @return string with English layout characters
 */
export function tuiTransliterateKeyboardLayout(string) {
    let newStr = '';
    for (let i = 0; i < string.length; i++) {
        newStr += string.charAt(i) in MAP ? MAP[string.charAt(i)] : string.charAt(i);
    }
    return newStr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsaXRlcmF0ZS1rZXlib2FyZC1sYXlvdXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9hZGRvbi1kb2MvdXRpbHMvdHJhbnNsaXRlcmF0ZS1rZXlib2FyZC1sYXlvdXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxHQUFHLEdBQTJCO0lBQ2hDLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sQ0FBQyxFQUFFLEdBQUc7Q0FDVCxDQUFDO0FBRUY7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSw4QkFBOEIsQ0FBQyxNQUFjO0lBQ3pELElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUVoQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNwQyxNQUFNLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDaEY7SUFFRCxPQUFPLE1BQU0sQ0FBQztBQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTUFQOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge1xuICAgINCwOiAnZicsXG4gICAg0LE6ICcsJyxcbiAgICDQsjogJ2QnLFxuICAgINCzOiAndScsXG4gICAg0LQ6ICdsJyxcbiAgICDQtTogJ3QnLFxuICAgINGROiAnYCcsXG4gICAg0LY6ICc7JyxcbiAgICDQtzogJ3AnLFxuICAgINC4OiAnYicsXG4gICAg0Lk6ICdxJyxcbiAgICDQujogJ3InLFxuICAgINC7OiAnaycsXG4gICAg0Lw6ICd2JyxcbiAgICDQvTogJ3knLFxuICAgINC+OiAnaicsXG4gICAg0L86ICdnJyxcbiAgICDRgDogJ2gnLFxuICAgINGBOiAnYycsXG4gICAg0YI6ICduJyxcbiAgICDRgzogJ2UnLFxuICAgINGEOiAnYScsXG4gICAg0YU6ICdbJyxcbiAgICDRhjogJ3cnLFxuICAgINGHOiAneCcsXG4gICAg0Yg6ICdpJyxcbiAgICDRiTogJ28nLFxuICAgINGKOiAnXScsXG4gICAg0Ys6ICdzJyxcbiAgICDRjDogJ20nLFxuICAgINGOOiAnLicsXG4gICAg0Y86ICd6Jyxcbn07XG5cbi8qKlxuICogVHJhbnNsYXRlcyB0ZXh0IG1pc3Rha2VubHkgdHlwZWQgaW4gdGhlIFJ1c3NpYW4gbGF5b3V0IGludG8gRW5nbGlzaFxuICogQHBhcmFtIHN0cmluZyBzdHJpbmcgd2l0aCBSdXNzaWFuIGxheW91dCBjaGFyYWN0ZXJzXG4gKiBAcmV0dXJuIHN0cmluZyB3aXRoIEVuZ2xpc2ggbGF5b3V0IGNoYXJhY3RlcnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHR1aVRyYW5zbGl0ZXJhdGVLZXlib2FyZExheW91dChzdHJpbmc6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgbGV0IG5ld1N0ciA9ICcnO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHJpbmcubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbmV3U3RyICs9IHN0cmluZy5jaGFyQXQoaSkgaW4gTUFQID8gTUFQW3N0cmluZy5jaGFyQXQoaSldIDogc3RyaW5nLmNoYXJBdChpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3U3RyO1xufVxuIl19
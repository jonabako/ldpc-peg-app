(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/addon-doc/tokens'), require('@taiga-ui/addon-doc/utils'), require('rxjs'), require('rxjs/operators'), require('@taiga-ui/core'), require('@angular/common'), require('ngx-highlightjs'), require('@angular/cdk/clipboard'), require('@taiga-ui/cdk'), require('@taiga-ui/kit'), require('@angular/forms'), require('@angular/router'), require('@angular/animations'), require('@ng-web-apis/common'), require('@taiga-ui/addon-doc/interfaces'), require('@tinkoff/ng-polymorpheus'), require('@angular/platform-browser'), require('@taiga-ui/addon-mobile'), require('@taiga-ui/addon-doc/directives'), require('@taiga-ui/i18n'), require('@taiga-ui/addon-doc/services')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/addon-doc/components', ['exports', '@angular/core', '@taiga-ui/addon-doc/tokens', '@taiga-ui/addon-doc/utils', 'rxjs', 'rxjs/operators', '@taiga-ui/core', '@angular/common', 'ngx-highlightjs', '@angular/cdk/clipboard', '@taiga-ui/cdk', '@taiga-ui/kit', '@angular/forms', '@angular/router', '@angular/animations', '@ng-web-apis/common', '@taiga-ui/addon-doc/interfaces', '@tinkoff/ng-polymorpheus', '@angular/platform-browser', '@taiga-ui/addon-mobile', '@taiga-ui/addon-doc/directives', '@taiga-ui/i18n', '@taiga-ui/addon-doc/services'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"]["addon-doc"] = global["taiga-ui"]["addon-doc"] || {}, global["taiga-ui"]["addon-doc"].components = {}), global.ng.core, global["taiga-ui"]["addon-doc"].tokens, global["taiga-ui"]["addon-doc"].utils, global.rxjs, global.rxjs.operators, global.i2, global.ng.common, global.i3, global.ng.cdk.clipboard, global.i6, global.i1, global.ng.forms, global.ng.router, global.ng.animations, global.common, global["taiga-ui"]["addon-doc"].interfaces, global.i5$1, global.ng.platformBrowser, global.i4$2, global["taiga-ui"]["addon-doc"].directives, global.i5$2, global["taiga-ui"]["addon-doc"].services));
})(this, (function (exports, i0, tokens, utils, i10, operators, i2, i4, i3, i4$1, i6, i1, i5, i7, animations, common, interfaces, i5$1, i9, i4$2, i8, i5$2, i6$1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i10__namespace = /*#__PURE__*/_interopNamespace(i10);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace$1 = /*#__PURE__*/_interopNamespace(i4$1);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i5__namespace$1 = /*#__PURE__*/_interopNamespace(i5$1);
    var i9__namespace = /*#__PURE__*/_interopNamespace(i9);
    var i4__namespace$2 = /*#__PURE__*/_interopNamespace(i4$2);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);
    var i5__namespace$2 = /*#__PURE__*/_interopNamespace(i5$2);
    var i6__namespace$1 = /*#__PURE__*/_interopNamespace(i6$1);

    var TuiDocCodeComponent = /** @class */ (function () {
        function TuiDocCodeComponent(markdownCodeProcessor) {
            var _this = this;
            this.markdownCodeProcessor = markdownCodeProcessor;
            this.rawLoader$$ = new i10.BehaviorSubject('');
            this.filename = '';
            this.copy$ = new i10.Subject();
            this.icon$ = this.copy$.pipe(operators.switchMap(function () { return i10.timer(2000).pipe(operators.map(function () { return 'tuiIconCopyLarge'; }), operators.startWith('tuiIconCheckLarge')); }));
            this.processor$ = this.rawLoader$$.pipe(operators.switchMap(utils.tuiRawLoad), operators.map(function (value) { return _this.markdownCodeProcessor(value); }));
        }
        Object.defineProperty(TuiDocCodeComponent.prototype, "code", {
            set: function (code) {
                this.rawLoader$$.next(code);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiDocCodeComponent.prototype, "hasFilename", {
            get: function () {
                return !!this.filename;
            },
            enumerable: false,
            configurable: true
        });
        return TuiDocCodeComponent;
    }());
    TuiDocCodeComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocCodeComponent, deps: [{ token: tokens.TUI_DOC_EXAMPLE_MARKDOWN_CODE_PROCESSOR }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiDocCodeComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocCodeComponent, selector: "tui-doc-code", inputs: { filename: "filename", code: "code" }, host: { properties: { "class._has-filename": "this.hasFilename" } }, ngImport: i0__namespace, template: "<p\n    *ngIf=\"filename\"\n    class=\"t-header\"\n>\n    {{ filename }}\n</p>\n<pre\n    *ngFor=\"let content of processor$ | async\"\n    class=\"t-code\"\n>\n    <code [lineNumbers]=\"true\" [highlight]=\"content\"></code>\n    <div class=\"t-code-actions\">\n        <button\n            tuiIconButton\n            appearance=\"icon\"\n            size=\"xs\"\n            class=\"t-copy-button\"\n            [icon]=\"(icon$ | async) || 'tuiIconCopyLarge'\"\n            [cdkCopyToClipboard]=\"content\"\n            (click)=\"copy$.next()\"\n        >\n        </button>\n        <ng-content></ng-content>\n    </div>\n</pre>\n", styles: [":host{display:block}.t-header{font:var(--tui-font-text-s);font-weight:bold}.t-header+.t-code{border-radius:.25rem}.t-code{position:relative;margin:0;white-space:normal;outline:1px solid var(--tui-base-03)}.t-code ::ng-deep .hljs-ln{width:-webkit-max-content;width:max-content}.t-code+.t-code{margin-top:1rem}.t-code-actions{position:absolute;top:.75rem;right:.75rem;display:flex;justify-content:center;align-items:center;flex-direction:row-reverse}:host-context(tui-root._mobile) .t-code-actions{padding:.3125rem;border-radius:.25rem;border:1px solid var(--tui-base-04)}.t-copy-button::ng-deep+*:not(:empty){margin-right:.375rem}.hljs:not(:empty){font:var(--tui-font-text-m);font-size:.875rem;padding:1.5rem 2rem;font-family:monospace;word-wrap:break-word;white-space:pre-wrap}@media all and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: .001dpcm){.hljs:not(:empty)::-webkit-scrollbar,.hljs:not(:empty)::-webkit-scrollbar-thumb{width:1rem;height:1rem;border-radius:6.25rem;background-clip:padding-box;border:.375rem solid transparent}.hljs:not(:empty)::-webkit-scrollbar{background-color:transparent}.hljs:not(:empty)::-webkit-scrollbar-thumb{background-color:var(--tui-clear-hover)}.hljs:not(:empty)::-webkit-scrollbar-thumb:hover{background-color:var(--tui-clear-active)}.hljs:not(:empty)::-webkit-scrollbar-thumb:active{background-color:var(--tui-text-03)}}:host-context(tui-root._mobile) .hljs:not(:empty){padding:1rem}.t-code-actions,.hljs:not(:empty){background:var(--tui-base-01)}@supports (background: color-mix(in srgb,var(--tui-base-01),#222 2%)){.t-code-actions,.hljs:not(:empty){background:color-mix(in srgb,var(--tui-base-01),#222 2%)}}\n"], components: [{ type: i2__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3__namespace.Highlight, selector: "[highlight]", inputs: ["highlight", "languages", "lineNumbers"], outputs: ["highlighted"] }, { type: i4__namespace$1.CdkCopyToClipboard, selector: "[cdkCopyToClipboard]", inputs: ["cdkCopyToClipboard", "cdkCopyToClipboardAttempts"], outputs: ["cdkCopyToClipboardCopied"] }], pipes: { "async": i4__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocCodeComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-doc-code',
                        templateUrl: './code.template.html',
                        styleUrls: ['./code.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_EXAMPLE_MARKDOWN_CODE_PROCESSOR]
                        }] }];
        }, propDecorators: { filename: [{
                    type: i0.Input
                }], code: [{
                    type: i0.Input
                }], hasFilename: [{
                    type: i0.HostBinding,
                    args: ['class._has-filename']
                }] } });

    var TuiDocCodeModule = /** @class */ (function () {
        function TuiDocCodeModule() {
        }
        return TuiDocCodeModule;
    }());
    TuiDocCodeModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocCodeModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiDocCodeModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocCodeModule, declarations: [TuiDocCodeComponent], imports: [i4.CommonModule,
            i2.TuiSvgModule,
            i3.HighlightModule,
            i2.TuiButtonModule,
            i4$1.ClipboardModule], exports: [TuiDocCodeComponent] });
    TuiDocCodeModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocCodeModule, imports: [[
                i4.CommonModule,
                i2.TuiSvgModule,
                i3.HighlightModule,
                i2.TuiButtonModule,
                i4$1.ClipboardModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocCodeModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4.CommonModule,
                            i2.TuiSvgModule,
                            i3.HighlightModule,
                            i2.TuiButtonModule,
                            i4$1.ClipboardModule,
                        ],
                        declarations: [TuiDocCodeComponent],
                        exports: [TuiDocCodeComponent],
                    }]
            }] });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var COPIED_TIMEOUT = 1500;
    var TuiDocCopyComponent = /** @class */ (function () {
        function TuiDocCopyComponent(texts$) {
            this.texts$ = texts$;
            this.copy$ = new i10.Subject();
        }
        Object.defineProperty(TuiDocCopyComponent.prototype, "copied$", {
            get: function () {
                return this.copy$.pipe(operators.switchMap(function () { return i10.timer(COPIED_TIMEOUT).pipe(operators.map(i6.ALWAYS_FALSE_HANDLER), operators.startWith(true)); }));
            },
            enumerable: false,
            configurable: true
        });
        TuiDocCopyComponent.prototype.onClick = function () {
            this.copy$.next();
        };
        return TuiDocCopyComponent;
    }());
    TuiDocCopyComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocCopyComponent, deps: [{ token: i1.TUI_COPY_TEXTS }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiDocCopyComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocCopyComponent, selector: "tui-doc-copy", providers: [i6.TuiDestroyService], ngImport: i0__namespace, template: "<button\n    *ngIf=\"texts$ | async as texts\"\n    appearance=\"\"\n    size=\"s\"\n    tuiButton\n    type=\"button\"\n    class=\"t-copy\"\n    [title]=\"texts[0]\"\n    (click)=\"onClick()\"\n>\n    <span\n        class=\"t-content\"\n        [class.t-content_moved]=\"copied$ | async\"\n    >\n        <span\n            class=\"t-initial\"\n            [attr.data-text]=\"texts[0]\"\n        >\n            <ng-content></ng-content>\n        </span>\n        {{ texts[1] }}\n    </span>\n</button>\n", styles: [":host{position:relative;display:inline-block;vertical-align:middle;border-radius:var(--tui-radius-m)}.t-copy{transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;width:100%;color:var(--tui-text-01);background:var(--tui-base-01);overflow:hidden}.t-copy:hover{background:var(--tui-base-02)}.t-initial{white-space:nowrap}.t-initial:empty:before{content:attr(data-text)}.t-content{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:flex;flex-direction:column;transform:translateY(1rem);text-align:center;line-height:2rem}.t-content_moved{transform:translateY(-1rem)}\n"], components: [{ type: i2__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i4__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i6.tuiPure
    ], TuiDocCopyComponent.prototype, "copied$", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocCopyComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-doc-copy',
                        templateUrl: './copy.template.html',
                        styleUrls: ['./copy.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [i6.TuiDestroyService],
                    }]
            }], ctorParameters: function () {
            return [{ type: i10__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_COPY_TEXTS]
                        }] }];
        }, propDecorators: { copied$: [] } });

    var TuiDocCopyModule = /** @class */ (function () {
        function TuiDocCopyModule() {
        }
        return TuiDocCopyModule;
    }());
    TuiDocCopyModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocCopyModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiDocCopyModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocCopyModule, declarations: [TuiDocCopyComponent], imports: [i4.CommonModule, i2.TuiButtonModule], exports: [TuiDocCopyComponent] });
    TuiDocCopyModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocCopyModule, imports: [[i4.CommonModule, i2.TuiButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocCopyModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4.CommonModule, i2.TuiButtonModule],
                        declarations: [TuiDocCopyComponent],
                        exports: [TuiDocCopyComponent],
                    }]
            }] });

    var MIN_WIDTH = 160;
    var TuiDocDemoComponent = /** @class */ (function () {
        function TuiDocDemoComponent(options, isMobile, el, locationRef, urlSerializer, texts, urlStateHandler) {
            var _a, _b;
            this.options = options;
            this.isMobile = isMobile;
            this.el = el;
            this.locationRef = locationRef;
            this.urlSerializer = urlSerializer;
            this.texts = texts;
            this.urlStateHandler = urlStateHandler;
            this.control = null;
            this.sticky = true;
            this.template = null;
            this.updateOnVariants = ['change', 'blur', 'submit'];
            this.updateOn = this.params.updateOn || this.updateOnVariants[0];
            this.opaque = utils.tuiCoerceValueIsTrue((_a = this.params.sandboxOpaque) !== null && _a !== void 0 ? _a : true);
            this.expanded = utils.tuiCoerceValueIsTrue((_b = this.params.sandboxExpanded) !== null && _b !== void 0 ? _b : false);
            this.mode = this.params.tuiMode || null;
            this.sandboxWidth = i6.tuiToInteger(this.params.sandboxWidth);
            this.change$ = new i10.Subject();
            this.items = ['onLight', 'onDark'];
        }
        TuiDocDemoComponent.prototype.onResize = function () {
            this.updateWidth();
            this.onMouseUp();
        };
        TuiDocDemoComponent.prototype.onMouseUp = function () {
            this.updateUrl({ sandboxWidth: this.sandboxWidth });
        };
        TuiDocDemoComponent.prototype.ngOnInit = function () {
            this.createForm();
            this.updateWidth(this.sandboxWidth + this.delta);
        };
        TuiDocDemoComponent.prototype.onModeChange = function (mode) {
            this.mode = mode;
            this.updateUrl({ sandboxWidth: this.sandboxWidth });
            this.change$.next();
        };
        TuiDocDemoComponent.prototype.toggleDetails = function () {
            this.expanded = !this.expanded;
            this.updateUrl({ sandboxExpanded: this.expanded });
        };
        TuiDocDemoComponent.prototype.changeOpaque = function (opaque) {
            this.opaque = opaque;
            this.updateUrl({ sandboxOpaque: this.opaque });
        };
        TuiDocDemoComponent.prototype.updateOnChange = function (updateOn) {
            this.updateOn = updateOn;
            this.updateUrl({ updateOn: updateOn });
            this.createForm();
        };
        TuiDocDemoComponent.prototype.updateWidth = function (width) {
            if (width === void 0) { width = NaN; }
            if (!this.resizer || !this.resizeable || !this.content) {
                return;
            }
            var safe = width || this.resizeable.nativeElement.clientWidth;
            var total = this.el.nativeElement.clientWidth;
            var clamped = Math.round(i6.tuiClamp(safe, MIN_WIDTH, total)) - this.delta;
            var validated = safe < total ? clamped : NaN;
            this.resizer.nativeElement.textContent = String(clamped || '-');
            this.resizeable.nativeElement.style.width = validated ? i6.tuiPx(safe) : '';
            this.sandboxWidth = validated;
        };
        Object.defineProperty(TuiDocDemoComponent.prototype, "delta", {
            get: function () {
                return this.resizeable && this.content
                    ? this.resizeable.nativeElement.clientWidth -
                        this.content.nativeElement.clientWidth
                    : 0;
            },
            enumerable: false,
            configurable: true
        });
        TuiDocDemoComponent.prototype.updateUrl = function (params) {
            var tree = this.getUrlTree();
            var queryParams = tree.queryParams;
            delete queryParams.sandboxWidth;
            delete queryParams.tuiMode;
            tree.queryParams = Object.assign(Object.assign({}, queryParams), i6.tuiCleanObject(Object.assign({ tuiMode: this.mode }, params)));
            this.locationRef.go(this.urlStateHandler(tree));
        };
        TuiDocDemoComponent.prototype.createForm = function () {
            var _c = this, control = _c.control, updateOn = _c.updateOn;
            if (control) {
                this.testForm = new i5.FormGroup({ testValue: control }, { updateOn: updateOn });
            }
        };
        TuiDocDemoComponent.prototype.getUrlTree = function () {
            return this.urlSerializer.parse(this.locationRef.path());
        };
        Object.defineProperty(TuiDocDemoComponent.prototype, "params", {
            get: function () {
                return this.getUrlTree().queryParams;
            },
            enumerable: false,
            configurable: true
        });
        return TuiDocDemoComponent;
    }());
    TuiDocDemoComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDemoComponent, deps: [{ token: i1.TUI_ARROW_OPTIONS }, { token: i6.TUI_IS_MOBILE }, { token: i0.ElementRef }, { token: i4.Location }, { token: i7.UrlSerializer }, { token: tokens.TUI_DOC_DEMO_TEXTS }, { token: tokens.TUI_DOC_URL_STATE_HANDLER }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiDocDemoComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocDemoComponent, selector: "tui-doc-demo", inputs: { control: "control", sticky: "sticky" }, host: { listeners: { "window:resize": "onResize()", "document:mouseup.silent": "onMouseUp()" }, properties: { "class._sticky": "this.sticky" } }, providers: [
            i6.TuiDestroyService,
            {
                provide: i2.TuiModeDirective,
                useExisting: i0.forwardRef(function () { return TuiDocDemoComponent; }),
            },
        ], queries: [{ propertyName: "template", first: true, predicate: i0.TemplateRef, descendants: true }], viewQueries: [{ propertyName: "resizeable", first: true, predicate: i6.TuiResizeableDirective, descendants: true, static: true }, { propertyName: "content", first: true, predicate: ["content"], descendants: true, static: true }, { propertyName: "resizer", first: true, predicate: ["resizer"], descendants: true, static: true }], ngImport: i0__namespace, template: "<div\n    class=\"t-bg-toggle\"\n    [tuiMode]=\"null\"\n>\n    <ng-template #tooltip>\n        {{ texts[0] }}\n        <a\n            routerLink=\"/directives/mode\"\n            tuiLink\n            tuiMode=\"onDark\"\n        >\n            <code>tuiMode</code>\n        </a>\n    </ng-template>\n    <ng-container *ngIf=\"isMobile; else desktop\">\n        <tui-select\n            tuiTextfieldSize=\"s\"\n            class=\"t-mode\"\n            [ngModel]=\"mode\"\n            [tuiHintContent]=\"tooltip\"\n            [tuiTextfieldCleaner]=\"true\"\n            (ngModelChange)=\"onModeChange($event)\"\n        >\n            tuiMode\n            <tui-data-list-wrapper\n                *tuiDataList\n                [items]=\"items\"\n            ></tui-data-list-wrapper>\n        </tui-select>\n    </ng-container>\n    <ng-template #desktop>\n        tuiMode:\n        <tui-tooltip\n            describeId=\"form\"\n            [content]=\"tooltip\"\n        ></tui-tooltip>\n        <div\n            tuiGroup\n            class=\"t-group\"\n            [collapsed]=\"true\"\n        >\n            <tui-radio-block\n                nativeId=\"form\"\n                size=\"s\"\n                class=\"tui-group__auto-width-item\"\n                [hideRadio]=\"true\"\n                [item]=\"null\"\n                [ngModel]=\"mode\"\n                (ngModelChange)=\"onModeChange($event)\"\n            >\n                null\n            </tui-radio-block>\n            <tui-radio-block\n                item=\"onDark\"\n                nativeId=\"form\"\n                size=\"s\"\n                class=\"tui-group__auto-width-item\"\n                [hideRadio]=\"true\"\n                [ngModel]=\"mode\"\n                (ngModelChange)=\"onModeChange($event)\"\n            >\n                onDark\n            </tui-radio-block>\n            <tui-radio-block\n                item=\"onLight\"\n                nativeId=\"form\"\n                size=\"s\"\n                class=\"tui-group__auto-width-item\"\n                [hideRadio]=\"true\"\n                [ngModel]=\"mode\"\n                (ngModelChange)=\"onModeChange($event)\"\n            >\n                onLight\n            </tui-radio-block>\n        </div>\n    </ng-template>\n    <tui-checkbox-labeled\n        size=\"m\"\n        class=\"t-checkbox\"\n        [ngModel]=\"opaque\"\n        (ngModelChange)=\"changeOpaque($event)\"\n    >\n        {{ texts[1] }}\n    </tui-checkbox-labeled>\n</div>\n<div\n    tuiResizeable\n    class=\"t-wrapper\"\n    [class.t-wrapper_dark]=\"mode === 'onDark'\"\n    [class.t-wrapper_gray]=\"mode === 'onLight'\"\n    [class.t-wrapper_transparent]=\"!opaque\"\n>\n    <div\n        id=\"demo-content\"\n        class=\"t-content\"\n    >\n        <div #content>\n            <form\n                *ngIf=\"testForm\"\n                class=\"t-form\"\n                [formGroup]=\"testForm\"\n            >\n                <div class=\"t-input-wrapper\">\n                    <ng-container [ngTemplateOutlet]=\"template\"></ng-container>\n                </div>\n                <button\n                    automation-id=\"tui-demo-button__toggle-details\"\n                    size=\"s\"\n                    tuiButton\n                    type=\"button\"\n                    class=\"t-button\"\n                    [iconRight]=\"icon\"\n                    (click)=\"toggleDetails()\"\n                >\n                    {{ texts[2] }}\n                </button>\n                <ng-template #icon>\n                    <tui-svg\n                        class=\"t-icon\"\n                        [class.t-icon_rotated]=\"expanded\"\n                        [src]=\"options.iconSmall\"\n                    ></tui-svg>\n                </ng-template>\n                <tui-expand\n                    class=\"t-expand\"\n                    [expanded]=\"expanded\"\n                >\n                    <ng-template tuiExpandContent>\n                        <pre class=\"t-value\">Form data: {{ testForm.value | json }}</pre>\n                        <div\n                            tuiGroup\n                            class=\"t-form-controls\"\n                        >\n                            <tui-select\n                                automation-id=\"tui-demo-select__expand-update-on\"\n                                tuiTextfieldSize=\"s\"\n                                class=\"t-select\"\n                                [ngModel]=\"updateOn\"\n                                [ngModelOptions]=\"{standalone: true}\"\n                                (ngModelChange)=\"updateOnChange($event)\"\n                            >\n                                updateOn\n                                <tui-data-list-wrapper\n                                    *tuiDataList\n                                    [items]=\"updateOnVariants\"\n                                ></tui-data-list-wrapper>\n                            </tui-select>\n                            <button\n                                automation-id=\"tui-demo-button__reset-state\"\n                                size=\"s\"\n                                tuiButton\n                                type=\"reset\"\n                                class=\"tui-group__auto-width-item\"\n                            >\n                                Reset\n                            </button>\n                            <button\n                                automation-id=\"tui-demo-button__submit-state\"\n                                size=\"s\"\n                                tuiButton\n                                type=\"submit\"\n                                class=\"tui-group__auto-width-item\"\n                            >\n                                Submit\n                            </button>\n                        </div>\n                    </ng-template>\n                </tui-expand>\n            </form>\n            <ng-content></ng-content>\n        </div>\n    </div>\n    <div\n        #resizer\n        class=\"t-resizer\"\n        [tuiResizer]=\"[1, 0]\"\n        (tuiSizeChange)=\"updateWidth($event[0])\"\n    ></div>\n</div>\n", styles: [":host{position:relative;display:block;min-width:100%;margin:1.5rem 0}.t-bg-toggle{position:absolute;bottom:calc(100% + .75rem);display:flex;align-items:center;justify-content:flex-end;pointer-events:none;width:100%}.t-bg-toggle>*{pointer-events:auto}.t-wrapper{box-shadow:var(--tui-shadow-dropdown);display:flex;border:1px solid var(--tui-base-03);border-radius:var(--tui-radius-m);max-width:100%;min-height:6rem;width:100%;min-width:10rem;background-color:var(--tui-base-01);overflow:hidden}.t-wrapper.t-wrapper_transparent{background-image:linear-gradient(45deg,var(--tui-base-02) 25%,transparent 25%),linear-gradient(-45deg,var(--tui-base-02) 25%,transparent 25%),linear-gradient(45deg,transparent 75%,var(--tui-base-02) 75%),linear-gradient(-45deg,transparent 75%,var(--tui-base-02) 75%);background-size:1.25rem 1.25rem;background-position:0 0,0 .625rem,.625rem -.625rem,-.625rem 0}.t-wrapper.t-wrapper_dark{background-color:#454e58;color:var(--tui-base-01)}.t-wrapper.t-wrapper_gray{background-color:#e5e7ea}.t-wrapper.t-wrapper_dark.t-wrapper_transparent{background-image:linear-gradient(45deg,var(--tui-focus) 25%,transparent 25%),linear-gradient(-45deg,var(--tui-focus) 25%,transparent 25%),linear-gradient(45deg,transparent 75%,var(--tui-focus) 75%),linear-gradient(-45deg,transparent 75%,var(--tui-focus) 75%)}.t-wrapper.t-wrapper_gray.t-wrapper_transparent{background-image:linear-gradient(45deg,var(--tui-base-05) 25%,transparent 25%),linear-gradient(-45deg,var(--tui-base-05) 25%,transparent 25%),linear-gradient(45deg,transparent 75%,var(--tui-base-05) 75%),linear-gradient(-45deg,transparent 75%,var(--tui-base-05) 75%)}:host-context(tui-root._mobile) .t-wrapper{min-height:auto}.t-content{flex:1 1 0;min-width:0;padding:1.5rem;box-sizing:border-box;overflow:hidden}:host-context(tui-root._mobile) .t-content{padding:1rem}.t-form{display:flex;flex-wrap:wrap;align-items:flex-start}.t-input-wrapper{width:100%;margin-bottom:.5rem}.t-expand{width:100%}.t-icon{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}.t-icon_rotated{transform:rotate(180deg)}.t-value{flex:1;background:var(--tui-clear-inverse);padding:.75rem;border-radius:.25rem}.t-mode{width:12.5rem}.t-select{max-width:15rem}.t-resizer{box-shadow:var(--tui-shadow-dropdown);position:relative;width:3.5rem;min-height:inherit;display:flex;align-items:center;justify-content:center;flex-shrink:0;border-left:1px solid var(--tui-base-03);outline:none;background:var(--tui-base-01);color:var(--tui-text-01)}.t-resizer:before,.t-resizer:after{content:\"\";position:absolute;top:.75rem;left:50%;bottom:calc(50% + 1rem);width:1px;background:var(--tui-base-04);box-shadow:-.25rem 0 var(--tui-base-04);transform:translate(0)}.t-resizer:after{bottom:.75rem;top:calc(50% + 1rem)}:host-context(tui-root._mobile) .t-resizer{display:none}.t-resizer-text{font:var(--tui-font-text-s);position:relative;z-index:1;padding:.75rem;background:var(--tui-base-01)}.wrapper_light .t-resizer-text{background:#3e464e}.t-group,.t-checkbox{margin-left:.75rem}.t-button,.t-form-controls{margin-top:.75rem}@supports ((position: -webkit-sticky) or (position: sticky)){@media screen and (min-height: 37.5rem){:host._sticky{position:-webkit-sticky;position:sticky;top:4.625rem;z-index:2}}}\n"], components: [{ type: i2__namespace.TuiLinkComponent, selector: "a[tuiLink], button[tuiLink]", inputs: ["pseudo", "icon", "iconAlign", "iconRotated", "mode"], exportAs: ["tuiLink"] }, { type: i1__namespace.TuiSelectComponent, selector: "tui-select", inputs: ["stringify", "identityMatcher", "valueContent"] }, { type: i1__namespace.TuiDataListWrapperComponent, selector: "tui-data-list-wrapper:not([labels])", inputs: ["items"] }, { type: i2__namespace.TuiTooltipComponent, selector: "tui-tooltip", inputs: ["content", "direction", "appearance", "showDelay", "hideDelay", "describeId", "context"] }, { type: i1__namespace.TuiRadioBlockComponent, selector: "tui-radio-block", inputs: ["item", "identityMatcher", "contentAlign", "size", "hideRadio", "pseudoDisabled"] }, { type: i1__namespace.TuiCheckboxLabeledComponent, selector: "tui-checkbox-labeled", inputs: ["size"] }, { type: i2__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }, { type: i2__namespace.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: i2__namespace.TuiExpandComponent, selector: "tui-expand", inputs: ["async", "expanded"] }], directives: [{ type: i2__namespace.TuiModeDirective, selector: "[tuiMode]", inputs: ["tuiMode"] }, { type: i7__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1__namespace.TuiSelectDirective, selector: "tui-select" }, { type: i2__namespace.TuiTextfieldSizeDirective, selector: "[tuiTextfieldSize]", inputs: ["tuiTextfieldSize"] }, { type: i5__namespace.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5__namespace.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i2__namespace.TuiHintOptionsDirective, selector: "[tuiHintContent]", inputs: ["tuiHintContent", "tuiHintDirection", "tuiHintAppearance", "tuiHintShowDelay", "tuiHintHideDelay"] }, { type: i2__namespace.TuiTextfieldCleanerDirective, selector: "[tuiTextfieldCleaner]", inputs: ["tuiTextfieldCleaner"] }, { type: i2__namespace.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { type: i2__namespace.TuiGroupDirective, selector: "[tuiGroup]:not(ng-container)", inputs: ["orientation", "adaptive", "collapsed", "rounded", "size"] }, { type: i6__namespace.TuiResizeableDirective, selector: "[tuiResizeable]" }, { type: i5__namespace.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i5__namespace.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i5__namespace.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i2__namespace.TuiExpandContentDirective, selector: "[tuiExpandContent]" }, { type: i6__namespace.TuiResizerDirective, selector: "[tuiResizer]", inputs: ["tuiResizer"], outputs: ["tuiSizeChange"] }], pipes: { "json": i4__namespace.JsonPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i6.tuiPure
    ], TuiDocDemoComponent.prototype, "updateUrl", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDemoComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-doc-demo',
                        templateUrl: './demo.template.html',
                        styleUrls: ['./demo.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            i6.TuiDestroyService,
                            {
                                provide: i2.TuiModeDirective,
                                useExisting: i0.forwardRef(function () { return TuiDocDemoComponent; }),
                            },
                        ],
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_ARROW_OPTIONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i6.TUI_IS_MOBILE]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i4__namespace.Location, decorators: [{
                            type: i0.Inject,
                            args: [i4.Location]
                        }] }, { type: i7__namespace.UrlSerializer, decorators: [{
                            type: i0.Inject,
                            args: [i7.UrlSerializer]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_DEMO_TEXTS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_URL_STATE_HANDLER]
                        }] }];
        }, propDecorators: { resizeable: [{
                    type: i0.ViewChild,
                    args: [i6.TuiResizeableDirective, { static: true }]
                }], content: [{
                    type: i0.ViewChild,
                    args: ['content', { static: true }]
                }], resizer: [{
                    type: i0.ViewChild,
                    args: ['resizer', { static: true }]
                }], control: [{
                    type: i0.Input
                }], sticky: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class._sticky']
                }], template: [{
                    type: i0.ContentChild,
                    args: [i0.TemplateRef]
                }], onResize: [{
                    type: i0.HostListener,
                    args: ['window:resize']
                }], onMouseUp: [{
                    type: i0.HostListener,
                    args: ['document:mouseup.silent']
                }], updateUrl: [] } });

    var TuiDocDemoModule = /** @class */ (function () {
        function TuiDocDemoModule() {
        }
        return TuiDocDemoModule;
    }());
    TuiDocDemoModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDemoModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiDocDemoModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDemoModule, declarations: [TuiDocDemoComponent], imports: [i4.CommonModule,
            i5.ReactiveFormsModule,
            i5.FormsModule,
            i7.RouterModule,
            i2.TuiLinkModule,
            i2.TuiButtonModule,
            i1.TuiSelectModule,
            i2.TuiExpandModule,
            i2.TuiGroupModule,
            i2.TuiTooltipModule,
            i2.TuiModeModule,
            i1.TuiRadioBlockModule,
            i1.TuiCheckboxLabeledModule,
            i2.TuiSvgModule,
            i1.TuiDataListWrapperModule,
            i2.TuiDataListModule,
            i2.TuiTextfieldControllerModule,
            i2.TuiHintModule,
            i6.TuiResizerModule], exports: [TuiDocDemoComponent] });
    TuiDocDemoModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDemoModule, imports: [[
                i4.CommonModule,
                i5.ReactiveFormsModule,
                i5.FormsModule,
                i7.RouterModule,
                i2.TuiLinkModule,
                i2.TuiButtonModule,
                i1.TuiSelectModule,
                i2.TuiExpandModule,
                i2.TuiGroupModule,
                i2.TuiTooltipModule,
                i2.TuiModeModule,
                i1.TuiRadioBlockModule,
                i1.TuiCheckboxLabeledModule,
                i2.TuiSvgModule,
                i1.TuiDataListWrapperModule,
                i2.TuiDataListModule,
                i2.TuiTextfieldControllerModule,
                i2.TuiHintModule,
                i6.TuiResizerModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDemoModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4.CommonModule,
                            i5.ReactiveFormsModule,
                            i5.FormsModule,
                            i7.RouterModule,
                            i2.TuiLinkModule,
                            i2.TuiButtonModule,
                            i1.TuiSelectModule,
                            i2.TuiExpandModule,
                            i2.TuiGroupModule,
                            i2.TuiTooltipModule,
                            i2.TuiModeModule,
                            i1.TuiRadioBlockModule,
                            i1.TuiCheckboxLabeledModule,
                            i2.TuiSvgModule,
                            i1.TuiDataListWrapperModule,
                            i2.TuiDataListModule,
                            i2.TuiTextfieldControllerModule,
                            i2.TuiHintModule,
                            i6.TuiResizerModule,
                        ],
                        declarations: [TuiDocDemoComponent],
                        exports: [TuiDocDemoComponent],
                    }]
            }] });

    var TuiDocTabComponent = /** @class */ (function () {
        function TuiDocTabComponent() {
            this.src = '';
        }
        return TuiDocTabComponent;
    }());
    TuiDocTabComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocTabComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiDocTabComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocTabComponent, selector: "tui-doc-tab", inputs: { src: "src" }, ngImport: i0__namespace, template: "<div class=\"t-tab\">\n    <tui-svg\n        class=\"t-icon\"\n        [src]=\"src\"\n    ></tui-svg>\n    <ng-content></ng-content>\n</div>\n", styles: [".t-tab{display:flex;align-items:center;justify-content:center;padding:0 .5rem;grid-gap:.5rem;gap:.5rem;color:var(--tui-text-01)}.t-tab .t-icon{width:1rem;height:1rem;color:var(--tui-text-01)}\n"], components: [{ type: i2__namespace.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocTabComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-doc-tab',
                        templateUrl: './doc-tab.component.html',
                        styleUrls: ['./doc-tab.component.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { src: [{
                    type: i0.Input
                }] } });

    var TuiDocTabModule = /** @class */ (function () {
        function TuiDocTabModule() {
        }
        return TuiDocTabModule;
    }());
    TuiDocTabModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocTabModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiDocTabModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocTabModule, declarations: [TuiDocTabComponent], imports: [i2.TuiSvgModule], exports: [TuiDocTabComponent] });
    TuiDocTabModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocTabModule, imports: [[i2.TuiSvgModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocTabModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i2.TuiSvgModule],
                        declarations: [TuiDocTabComponent],
                        exports: [TuiDocTabComponent],
                    }]
            }] });

    var SERIALIZED_SUFFIX = '$';
    // @bad TODO: refactor output and value sync
    var TuiDocDocumentationPropertyConnectorDirective = /** @class */ (function () {
        function TuiDocDocumentationPropertyConnectorDirective(template, locationRef, activatedRoute, urlSerializer, urlStateHandler, alerts) {
            this.template = template;
            this.locationRef = locationRef;
            this.activatedRoute = activatedRoute;
            this.urlSerializer = urlSerializer;
            this.urlStateHandler = urlStateHandler;
            this.alerts = alerts;
            this.documentationPropertyName = '';
            this.documentationPropertyMode = null;
            this.documentationPropertyType = '';
            this.documentationPropertyDeprecated = false;
            this.documentationPropertyValues = null;
            this.documentationPropertyValueChange = new i0.EventEmitter();
            this.changed$ = new i10.Subject();
            this.emits$ = new i10.BehaviorSubject(1);
        }
        TuiDocDocumentationPropertyConnectorDirective.prototype.ngOnInit = function () {
            this.parseParams(this.activatedRoute.snapshot.queryParams);
        };
        Object.defineProperty(TuiDocDocumentationPropertyConnectorDirective.prototype, "attrName", {
            get: function () {
                switch (this.documentationPropertyMode) {
                    case 'input':
                        return "[" + this.documentationPropertyName + "]";
                    case 'output':
                        return "(" + this.documentationPropertyName + ")";
                    case 'input-output':
                        return "[(" + this.documentationPropertyName + ")]";
                    default:
                        return this.documentationPropertyName;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiDocDocumentationPropertyConnectorDirective.prototype, "hasItems", {
            get: function () {
                return !!this.documentationPropertyValues;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiDocDocumentationPropertyConnectorDirective.prototype, "shouldShowValues", {
            get: function () {
                return this.documentationPropertyMode !== 'output';
            },
            enumerable: false,
            configurable: true
        });
        TuiDocDocumentationPropertyConnectorDirective.prototype.ngOnChanges = function () {
            this.changed$.next();
        };
        TuiDocDocumentationPropertyConnectorDirective.prototype.onValueChange = function (value) {
            this.documentationPropertyValue = value;
            this.documentationPropertyValueChange.emit(value);
            this.setQueryParam(value);
        };
        TuiDocDocumentationPropertyConnectorDirective.prototype.emitEvent = function (event) {
            // For more convenient debugging
            console.info(this.attrName, event);
            this.emits$.next(this.emits$.value + 1);
            var content;
            if (event !== undefined) {
                content = utils.tuiInspectAny(event, 2);
            }
            this.alerts.open(content, { label: this.attrName }).subscribe();
        };
        TuiDocDocumentationPropertyConnectorDirective.prototype.parseParams = function (params) {
            var propertyValue = params[this.documentationPropertyName];
            var propertyValueWithSuffix = params["" + this.documentationPropertyName + SERIALIZED_SUFFIX];
            if (!propertyValue && !propertyValueWithSuffix) {
                return;
            }
            var value = !!propertyValueWithSuffix && this.documentationPropertyValues
                ? this.documentationPropertyValues[propertyValueWithSuffix]
                : utils.tuiCoerceValue(propertyValue);
            if (this.documentationPropertyType === 'string' && i6.tuiIsNumber(value)) {
                value = value.toString();
            }
            this.onValueChange(value);
        };
        TuiDocDocumentationPropertyConnectorDirective.prototype.setQueryParam = function (value) {
            var _a;
            var tree = this.urlSerializer.parse(this.locationRef.path());
            var isValueAvailableByKey = value instanceof Object;
            var computedValue = isValueAvailableByKey && this.documentationPropertyValues
                ? this.documentationPropertyValues.indexOf(value)
                : value;
            var suffix = isValueAvailableByKey ? SERIALIZED_SUFFIX : '';
            var propName = this.documentationPropertyName + suffix;
            tree.queryParams = Object.assign(Object.assign({}, tree.queryParams), (_a = {}, _a[propName] = computedValue, _a));
            this.locationRef.go(this.urlStateHandler(tree));
        };
        return TuiDocDocumentationPropertyConnectorDirective;
    }());
    TuiDocDocumentationPropertyConnectorDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDocumentationPropertyConnectorDirective, deps: [{ token: i0.TemplateRef }, { token: i4.Location }, { token: i7.ActivatedRoute }, { token: i7.UrlSerializer }, { token: tokens.TUI_DOC_URL_STATE_HANDLER }, { token: i2.TuiAlertService }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiDocDocumentationPropertyConnectorDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocDocumentationPropertyConnectorDirective, selector: "ng-template[documentationPropertyName]", inputs: { documentationPropertyName: "documentationPropertyName", documentationPropertyMode: "documentationPropertyMode", documentationPropertyType: "documentationPropertyType", documentationPropertyValue: "documentationPropertyValue", documentationPropertyDeprecated: "documentationPropertyDeprecated", documentationPropertyValues: "documentationPropertyValues" }, outputs: { documentationPropertyValueChange: "documentationPropertyValueChange" }, exportAs: ["documentationProperty"], usesOnChanges: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDocumentationPropertyConnectorDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ng-template[documentationPropertyName]',
                        exportAs: 'documentationProperty',
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.TemplateRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.TemplateRef]
                        }] }, { type: i4__namespace.Location, decorators: [{
                            type: i0.Inject,
                            args: [i4.Location]
                        }] }, { type: i7__namespace.ActivatedRoute, decorators: [{
                            type: i0.Inject,
                            args: [i7.ActivatedRoute]
                        }] }, { type: i7__namespace.UrlSerializer, decorators: [{
                            type: i0.Inject,
                            args: [i7.UrlSerializer]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_URL_STATE_HANDLER]
                        }] }, { type: i2__namespace.TuiAlertService, decorators: [{
                            type: i0.Inject,
                            args: [i2.TuiAlertService]
                        }] }];
        }, propDecorators: { documentationPropertyName: [{
                    type: i0.Input
                }], documentationPropertyMode: [{
                    type: i0.Input
                }], documentationPropertyType: [{
                    type: i0.Input
                }], documentationPropertyValue: [{
                    type: i0.Input
                }], documentationPropertyDeprecated: [{
                    type: i0.Input
                }], documentationPropertyValues: [{
                    type: i0.Input
                }], documentationPropertyValueChange: [{
                    type: i0.Output
                }] } });

    var TuiGetColorPipe = /** @class */ (function () {
        function TuiGetColorPipe() {
        }
        TuiGetColorPipe.prototype.transform = function (color) {
            if (color.length === 4) {
                return color
                    .split('')
                    .reduce(function (result, current) { return __spreadArray(__spreadArray([], __read(result)), [current, current]); }, [])
                    .join('')
                    .replace('#', '');
            }
            if (color.startsWith('#')) {
                return color;
            }
            if (color === 'transparent') {
                return '#000000';
            }
            var parsed = color
                .replace('rgb(', '')
                .replace('rgba(', '')
                .replace(')', '')
                .replace(' ', '')
                .split(',')
                .map(function (v) { return Number.parseInt(v, 10); });
            return i6.tuiRgbToHex.apply(void 0, __spreadArray([], __read(parsed)));
        };
        return TuiGetColorPipe;
    }());
    TuiGetColorPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiGetColorPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiGetColorPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiGetColorPipe, name: "tuiGetColorPipe" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiGetColorPipe, decorators: [{
                type: i0.Pipe,
                args: [{ name: 'tuiGetColorPipe' }]
            }] });

    var TuiGetOpacityPipe = /** @class */ (function () {
        function TuiGetOpacityPipe() {
        }
        TuiGetOpacityPipe.prototype.transform = function (color) {
            if (color.startsWith('#') || color.startsWith('rgb(')) {
                return 100;
            }
            if (color === 'transparent') {
                return 0;
            }
            var lastComma = color.lastIndexOf(',');
            var parsed = color
                .slice(lastComma)
                .replace(')', '')
                .replace(' ', '')
                .replace(',', '');
            return Math.round(Number.parseFloat(parsed) * 100);
        };
        return TuiGetOpacityPipe;
    }());
    TuiGetOpacityPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiGetOpacityPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiGetOpacityPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiGetOpacityPipe, name: "tuiGetOpacity" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiGetOpacityPipe, decorators: [{
                type: i0.Pipe,
                args: [{ name: 'tuiGetOpacity' }]
            }] });

    var TuiInputOpacityDirective = /** @class */ (function () {
        function TuiInputOpacityDirective(renderer, focusable) {
            this.renderer = renderer;
            this.focusable = focusable;
        }
        Object.defineProperty(TuiInputOpacityDirective.prototype, "tuiInputOpacity", {
            set: function (opacity) {
                var nativeFocusableElement = this.focusable.nativeFocusableElement;
                if (nativeFocusableElement) {
                    this.renderer.setStyle(nativeFocusableElement, 'opacity', opacity / 100);
                }
            },
            enumerable: false,
            configurable: true
        });
        return TuiInputOpacityDirective;
    }());
    TuiInputOpacityDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputOpacityDirective, deps: [{ token: i0.Renderer2 }, { token: i6.TUI_FOCUSABLE_ITEM_ACCESSOR }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiInputOpacityDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputOpacityDirective, selector: "[tuiInputOpacity]", inputs: { tuiInputOpacity: "tuiInputOpacity" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputOpacityDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiInputOpacity]',
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.Renderer2, decorators: [{
                            type: i0.Inject,
                            args: [i0.Renderer2]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i6.TUI_FOCUSABLE_ITEM_ACCESSOR]
                        }] }];
        }, propDecorators: { tuiInputOpacity: [{
                    type: i0.Input
                }] } });

    var TuiStripOptionalPipe = /** @class */ (function () {
        function TuiStripOptionalPipe() {
        }
        TuiStripOptionalPipe.prototype.transform = function (name) {
            return name.replace('?', '');
        };
        return TuiStripOptionalPipe;
    }());
    TuiStripOptionalPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiStripOptionalPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiStripOptionalPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiStripOptionalPipe, name: "tuiStripOptionalPipe" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiStripOptionalPipe, decorators: [{
                type: i0.Pipe,
                args: [{ name: 'tuiStripOptionalPipe' }]
            }] });

    var TuiIsOptionalPipe = /** @class */ (function () {
        function TuiIsOptionalPipe() {
        }
        TuiIsOptionalPipe.prototype.transform = function (name) {
            return name.includes('?');
        };
        return TuiIsOptionalPipe;
    }());
    TuiIsOptionalPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIsOptionalPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiIsOptionalPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIsOptionalPipe, name: "tuiIsOptionalPipe" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIsOptionalPipe, decorators: [{
                type: i0.Pipe,
                args: [{ name: 'tuiIsOptionalPipe' }]
            }] });

    var TuiDocTypeReferencePipe = /** @class */ (function () {
        function TuiDocTypeReferencePipe(parser, linkHandler) {
            this.parser = parser;
            this.linkHandler = linkHandler;
        }
        TuiDocTypeReferencePipe.prototype.transform = function (original) {
            var _this = this;
            return this.parser(original)
                .map(function (_d) {
                var type = _d.type, extracted = _d.extracted;
                var _a, _b;
                return ({
                    type: type,
                    extracted: extracted,
                    reference: (_b = (_a = _this.linkHandler) === null || _a === void 0 ? void 0 : _a.call(_this, extracted)) !== null && _b !== void 0 ? _b : null,
                });
            })
                .sort(function (a, b) { var _a, _b, _c; return (_c = (_a = b.reference) === null || _a === void 0 ? void 0 : _a.localeCompare((_b = a.reference) !== null && _b !== void 0 ? _b : '')) !== null && _c !== void 0 ? _c : -1; });
        };
        return TuiDocTypeReferencePipe;
    }());
    TuiDocTypeReferencePipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocTypeReferencePipe, deps: [{ token: tokens.TUI_DOC_TYPE_REFERENCE_PARSER }, { token: tokens.TUI_DOC_TYPE_REFERENCE_HANDLER }], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiDocTypeReferencePipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocTypeReferencePipe, name: "tuiDocTypeReference" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocTypeReferencePipe, decorators: [{
                type: i0.Pipe,
                args: [{ name: 'tuiDocTypeReference' }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_TYPE_REFERENCE_PARSER]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_TYPE_REFERENCE_HANDLER]
                        }] }];
        } });

    var TuiShowCleanerPipe = /** @class */ (function () {
        function TuiShowCleanerPipe() {
        }
        TuiShowCleanerPipe.prototype.transform = function (type) {
            return type.includes('null');
        };
        return TuiShowCleanerPipe;
    }());
    TuiShowCleanerPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiShowCleanerPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiShowCleanerPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiShowCleanerPipe, name: "tuiShowCleanerPipe" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiShowCleanerPipe, decorators: [{
                type: i0.Pipe,
                args: [{ name: 'tuiShowCleanerPipe' }]
            }] });

    var TuiInspectPipe = /** @class */ (function () {
        function TuiInspectPipe(isE2E) {
            this.isE2E = isE2E;
        }
        TuiInspectPipe.prototype.transform = function (value, depth) {
            if (depth === void 0) { depth = 2; }
            if (this.isE2E && typeof value === 'function') {
                /**
                 * @description:
                 * When developing in production mode the webpack bundler minify
                 * functions in different ways, then due to which the string content
                 * of the function may differ from build to build, which can be to
                 * various problems when screenshot testing on e2e.
                 */
                return 'λ(x) => y';
            }
            return utils.tuiInspectAny(value, depth);
        };
        return TuiInspectPipe;
    }());
    TuiInspectPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInspectPipe, deps: [{ token: i6.TUI_IS_E2E }], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiInspectPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInspectPipe, name: "tuiInspectAny" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInspectPipe, decorators: [{
                type: i0.Pipe,
                args: [{ name: 'tuiInspectAny' }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i6.TUI_IS_E2E]
                        }] }];
        } });

    var TuiIsPrimitivePolymorpheusContentPipe = /** @class */ (function () {
        function TuiIsPrimitivePolymorpheusContentPipe() {
        }
        TuiIsPrimitivePolymorpheusContentPipe.prototype.transform = function (value) {
            return i6.tuiIsString(value) || i6.tuiIsNumber(value);
        };
        return TuiIsPrimitivePolymorpheusContentPipe;
    }());
    TuiIsPrimitivePolymorpheusContentPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIsPrimitivePolymorpheusContentPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiIsPrimitivePolymorpheusContentPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIsPrimitivePolymorpheusContentPipe, name: "tuiIsPrimitivePolymorpheusContentPipe" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiIsPrimitivePolymorpheusContentPipe, decorators: [{
                type: i0.Pipe,
                args: [{ name: 'tuiIsPrimitivePolymorpheusContentPipe' }]
            }] });

    // @bad TODO subscribe propertiesConnectors changes
    // @bad TODO refactor to make more flexible
    var TuiDocDocumentationComponent = /** @class */ (function () {
        function TuiDocDocumentationComponent(cdr, texts, excludedProperties, destroy$, getColor, getOpacity) {
            this.cdr = cdr;
            this.texts = texts;
            this.excludedProperties = excludedProperties;
            this.destroy$ = destroy$;
            this.getColor = getColor;
            this.getOpacity = getOpacity;
            this.heading = '';
            this.showValues = true;
            this.isAPI = false;
            this.propertiesConnectors = i6.EMPTY_QUERY;
            this.activeItemIndex = 0;
            this.matcher = function (item, exclusions) { return !exclusions.has(item.documentationPropertyName); };
        }
        TuiDocDocumentationComponent.prototype.ngAfterContentInit = function () {
            i6.tuiQueryListChanges(this.propertiesConnectors)
                .pipe(operators.switchMap(function (items) { return i10.merge.apply(void 0, __spreadArray([], __read(items.map(function (_a) {
                var changed$ = _a.changed$;
                return changed$;
            })))); }), i6.tuiWatch(this.cdr), operators.takeUntil(this.destroy$))
                .subscribe();
        };
        Object.defineProperty(TuiDocDocumentationComponent.prototype, "type", {
            get: function () {
                return this.isAPI ? this.texts[0] : this.texts[1];
            },
            enumerable: false,
            configurable: true
        });
        TuiDocDocumentationComponent.prototype.onColorChange = function (connector, color) {
            var opacity = this.getOpacity.transform(connector.documentationPropertyValue || '');
            if (opacity === 100) {
                connector.onValueChange(color);
                return;
            }
            var rgb = i6.tuiHexToRgb(color).join(', ');
            var result = "rgba(" + rgb + ", " + opacity / 100 + ")";
            connector.onValueChange(result);
        };
        TuiDocDocumentationComponent.prototype.onOpacityChange = function (connector, opacity) {
            var hex = this.getColor.transform(connector.documentationPropertyValue || '');
            var rgb = i6.tuiHexToRgb(hex);
            var result = "rgba(" + rgb + ", " + (opacity || 0) / 100 + ")";
            connector.onValueChange(result);
        };
        return TuiDocDocumentationComponent;
    }());
    TuiDocDocumentationComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDocumentationComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: tokens.TUI_DOC_DOCUMENTATION_TEXTS }, { token: tokens.TUI_DOC_EXCLUDED_PROPERTIES }, { token: i6.TuiDestroyService, self: true }, { token: TuiGetColorPipe }, { token: TuiGetOpacityPipe }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiDocDocumentationComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocDocumentationComponent, selector: "tui-doc-documentation", inputs: { heading: "heading", showValues: "showValues", isAPI: "isAPI" }, providers: [TuiGetColorPipe, TuiGetOpacityPipe, i6.TuiDestroyService], queries: [{ propertyName: "propertiesConnectors", predicate: TuiDocDocumentationPropertyConnectorDirective }], ngImport: i0__namespace, template: "<h1\n    *ngIf=\"heading\"\n    class=\"t-heading\"\n>\n    {{ heading }}\n</h1>\n<ng-content></ng-content>\n<ng-container *ngIf=\"$any(propertiesConnectors) | tuiFilter: matcher : excludedProperties as properties\">\n    <table\n        *ngIf=\"properties.length\"\n        class=\"t-table\"\n    >\n        <tr class=\"t-row t-row_header\">\n            <th class=\"t-th t-cell t-cell_prop\">{{ texts[2] }}</th>\n            <th class=\"t-th\">{{ type }}</th>\n            <th\n                *ngIf=\"showValues && !isAPI\"\n                class=\"t-th t-cell t-th_value\"\n            >\n                {{ texts[3] }}\n            </th>\n        </tr>\n        <tr\n            *ngFor=\"let propertyConnector of properties\"\n            class=\"t-row\"\n            [class.t-deprecated]=\"propertyConnector.documentationPropertyDeprecated\"\n        >\n            <td class=\"t-cell\">\n                <div\n                    automation-id=\"tui-documentation__property-name\"\n                    class=\"t-property t-additional-info\"\n                >\n                    <code\n                        class=\"t-property-code\"\n                        [style.color]=\"'var(--tui-accent-active)'\"\n                    >\n                        {{ propertyConnector.attrName | tuiStripOptionalPipe }}\n                    </code>\n                    <tui-badge\n                        *ngIf=\"propertyConnector.attrName | tuiIsOptionalPipe\"\n                        size=\"s\"\n                        status=\"neutral\"\n                        value=\"Optional\"\n                    ></tui-badge>\n                    <tui-badge\n                        *ngIf=\"propertyConnector.documentationPropertyDeprecated\"\n                        size=\"s\"\n                        status=\"error\"\n                        value=\"Deprecated\"\n                    ></tui-badge>\n                </div>\n                <ng-container [ngTemplateOutlet]=\"propertyConnector.template\"></ng-container>\n            </td>\n            <td class=\"t-cell\">\n                <span class=\"type\">\n                    <code class=\"t-code-type\">\n                        <ng-container\n                            *ngFor=\"\n                                let item of propertyConnector.documentationPropertyType | tuiDocTypeReference;\n                                let last = last\n                            \"\n                        >\n                            <a\n                                *ngIf=\"item.reference; else default\"\n                                target=\"_blank\"\n                                class=\"t-code-reference\"\n                                [attr.href]=\"item.reference\"\n                            >\n                                {{ item.type }}\n                            </a>\n                            <ng-template #default>\n                                {{ item.type }}\n                            </ng-template>\n                            <span *ngIf=\"!last\">&nbsp;|&nbsp;</span>\n                        </ng-container>\n                    </code>\n                </span>\n            </td>\n            <td\n                *ngIf=\"showValues\"\n                class=\"t-cell t-cell_value\"\n            >\n                <ng-container *ngIf=\"propertyConnector.shouldShowValues; else elseEmitter\">\n                    <tui-select\n                        *ngIf=\"propertyConnector.hasItems; else noItems\"\n                        tuiDropdownLimitWidth=\"min\"\n                        tuiTextfieldSize=\"m\"\n                        [nativeId]=\"propertyConnector.attrName\"\n                        [ngModel]=\"propertyConnector.documentationPropertyValue\"\n                        [tuiTextfieldCleaner]=\"propertyConnector.documentationPropertyType | tuiShowCleanerPipe\"\n                        [tuiTextfieldLabelOutside]=\"true\"\n                        [valueContent]=\"selectContent\"\n                        (ngModelChange)=\"propertyConnector.onValueChange($event)\"\n                    >\n                        <code class=\"t-exception\">null</code>\n                        <tui-data-list-wrapper\n                            *tuiDataList\n                            [itemContent]=\"selectContent\"\n                            [items]=\"propertyConnector.documentationPropertyValues\"\n                        ></tui-data-list-wrapper>\n                    </tui-select>\n                    <ng-template\n                        #selectContent\n                        let-data\n                    >\n                        <code>{{ data | tuiInspectAny }}</code>\n                    </ng-template>\n\n                    <ng-template #noItems>\n                        <ng-container [ngSwitch]=\"propertyConnector.documentationPropertyType\">\n                            <tui-toggle\n                                *ngSwitchCase=\"'boolean'\"\n                                size=\"l\"\n                                [nativeId]=\"propertyConnector.attrName\"\n                                [ngModel]=\"propertyConnector.documentationPropertyValue\"\n                                [showIcons]=\"true\"\n                                (ngModelChange)=\"propertyConnector.onValueChange($event)\"\n                            ></tui-toggle>\n\n                            <tui-primitive-textfield\n                                *ngSwitchCase=\"'string'\"\n                                tuiTextfieldSize=\"m\"\n                                [nativeId]=\"propertyConnector.attrName\"\n                                [tuiTextfieldCleaner]=\"true\"\n                                [tuiTextfieldLabelOutside]=\"true\"\n                                [value]=\"propertyConnector.documentationPropertyValue || ''\"\n                                (valueChange)=\"propertyConnector.onValueChange($event)\"\n                            ></tui-primitive-textfield>\n\n                            <div\n                                *ngSwitchCase=\"'color'\"\n                                tuiGroup\n                            >\n                                <tui-primitive-textfield\n                                    tuiTextfieldSize=\"m\"\n                                    [attr.id]=\"propertyConnector.attrName\"\n                                    [tuiInputOpacity]=\"propertyConnector.documentationPropertyValue | tuiGetOpacity\"\n                                    [tuiTextfieldLabelOutside]=\"true\"\n                                    [value]=\"propertyConnector.documentationPropertyValue | tuiGetColorPipe\"\n                                    (valueChange)=\"onColorChange(propertyConnector, $event)\"\n                                >\n                                    <input\n                                        tuiTextfield\n                                        type=\"text\"\n                                    />\n                                </tui-primitive-textfield>\n                                <tui-input-number\n                                    tuiTextfieldSize=\"m\"\n                                    [max]=\"100\"\n                                    [min]=\"0\"\n                                    [ngModel]=\"propertyConnector.documentationPropertyValue | tuiGetOpacity\"\n                                    [step]=\"1\"\n                                    (ngModelChange)=\"onOpacityChange(propertyConnector, $event)\"\n                                >\n                                    Opacity\n                                </tui-input-number>\n                            </div>\n\n                            <tui-input-number\n                                *ngSwitchCase=\"'number'\"\n                                tuiTextfieldSize=\"m\"\n                                [nativeId]=\"propertyConnector.attrName\"\n                                [ngModel]=\"propertyConnector.documentationPropertyValue\"\n                                [step]=\"1\"\n                                [tuiTextfieldLabelOutside]=\"true\"\n                                (ngModelChange)=\"propertyConnector.onValueChange($event || 0)\"\n                            ></tui-input-number>\n\n                            <ng-container *ngSwitchCase=\"'PolymorpheusContent'\">\n                                <tui-primitive-textfield\n                                    *ngIf=\"\n                                        propertyConnector.documentationPropertyValue\n                                            | tuiIsPrimitivePolymorpheusContentPipe\n                                    \"\n                                    tuiTextfieldSize=\"m\"\n                                    [nativeId]=\"propertyConnector.attrName\"\n                                    [tuiTextfieldCleaner]=\"true\"\n                                    [tuiTextfieldLabelOutside]=\"true\"\n                                    [value]=\"propertyConnector.documentationPropertyValue.toString()\"\n                                    (valueChange)=\"propertyConnector.onValueChange($event)\"\n                                >\n                                    Default content\n                                </tui-primitive-textfield>\n                            </ng-container>\n                        </ng-container>\n                    </ng-template>\n                </ng-container>\n\n                <ng-template #elseEmitter>\n                    <tui-notification\n                        class=\"t-output\"\n                        [@emitEvent]=\"propertyConnector.emits$ | async\"\n                    >\n                        Emit!\n                    </tui-notification>\n                </ng-template>\n            </td>\n        </tr>\n    </table>\n</ng-container>\n", styles: [":host{display:block;min-width:100%}.t-table{width:100%;table-layout:fixed}.t-row:not(:last-child){border-bottom:1px solid var(--tui-base-03)}:host-context(tui-root._mobile) .t-row{display:flex;flex-wrap:wrap}:host-context(tui-root._mobile) .t-row_header{display:none}.t-cell{padding:1rem 1rem .875rem}.t-cell:first-child{padding-left:0}.t-cell:last-child{padding-right:0}.t-cell_prop{width:40%}.t-cell_value{text-align:right}:host-context(tui-root._mobile) .t-cell{width:100%;height:auto;padding:.5rem 0;text-align:left}.t-th{padding:.5rem 1rem;color:var(--tui-text-02);font-weight:normal;text-align:left}.t-th_value{max-width:20rem;text-align:right}:host-context(tui-root._mobile) .t-th_value{width:9.375rem}.t-property{font:var(--tui-font-text-m);margin-bottom:.25rem;font-family:monospace;color:#8f75d1}:host-context(tui-root._mobile) .t-property{padding:.5rem 0}.t-type{font-family:monospace}.t-deprecated .t-property-code{text-decoration:line-through}.t-deprecated-label{margin-right:.125rem;color:var(--tui-error-fill);font-size:.75rem}.t-additional-info{display:flex;grid-gap:.3125rem;gap:.3125rem;align-items:center}.t-exception{display:block;width:-webkit-max-content;width:max-content}.t-output{text-align:left;opacity:0}.t-heading{font:var(--tui-font-heading-4)}.t-code-type{display:flex;flex-wrap:wrap;align-items:center;justify-content:flex-start}.t-code-reference{display:inline-flex;color:var(--tui-link);text-decoration:none;align-items:center;justify-content:center;grid-gap:3px;gap:3px}.t-code-reference:after{content:\"\";font-size:1rem;width:1rem;height:1rem;background:currentColor;-webkit-mask:url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1rem\" height=\"1rem\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line></svg>') center / 100%;mask:url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1rem\" height=\"1rem\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"></path><polyline points=\"15 3 21 3 21 9\"></polyline><line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"></line></svg>') center / 100%}\n"], components: [{ type: i1__namespace.TuiBadgeComponent, selector: "tui-badge", inputs: ["value", "size", "status", "hoverable"] }, { type: i1__namespace.TuiSelectComponent, selector: "tui-select", inputs: ["stringify", "identityMatcher", "valueContent"] }, { type: i1__namespace.TuiDataListWrapperComponent, selector: "tui-data-list-wrapper:not([labels])", inputs: ["items"] }, { type: i1__namespace.TuiToggleComponent, selector: "tui-toggle", inputs: ["singleColor", "showIcons", "showLoader", "size"] }, { type: i2__namespace.TuiPrimitiveTextfieldComponent, selector: "tui-primitive-textfield", inputs: ["editable", "filler", "iconCleaner", "readOnly", "invalid", "disabled", "prefix", "postfix", "value"], outputs: ["valueChange"] }, { type: i2__namespace.TuiTextfieldComponent, selector: "input[tuiTextfield], textarea[tuiTextfield]" }, { type: i1__namespace.TuiInputNumberComponent, selector: "tui-input-number", inputs: ["min", "max", "decimal", "precision", "step", "prefix", "postfix"] }, { type: i2__namespace.TuiNotificationComponent, selector: "tui-notification,a[tuiNotification],button[tuiNotification]", inputs: ["hasIcon", "icon", "status", "size", "hideClose"], outputs: ["close"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i1__namespace.TuiSelectDirective, selector: "tui-select" }, { type: i2__namespace.TuiDropdownOptionsDirective, selector: "[tuiDropdownAlign], [tuiDropdownAppearance], [tuiDropdownDirection], [tuiDropdownLimitWidth], [tuiDropdownMinHeight], [tuiDropdownMaxHeight], [tuiDropdownOffset]", inputs: ["tuiDropdownAlign", "tuiDropdownAppearance", "tuiDropdownDirection", "tuiDropdownLimitWidth", "tuiDropdownMinHeight", "tuiDropdownMaxHeight", "tuiDropdownOffset"] }, { type: i2__namespace.TuiTextfieldSizeDirective, selector: "[tuiTextfieldSize]", inputs: ["tuiTextfieldSize"] }, { type: i5__namespace.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5__namespace.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i2__namespace.TuiTextfieldCleanerDirective, selector: "[tuiTextfieldCleaner]", inputs: ["tuiTextfieldCleaner"] }, { type: i2__namespace.TuiTextfieldLabelOutsideDirective, selector: "[tuiTextfieldLabelOutside]", inputs: ["tuiTextfieldLabelOutside"] }, { type: i2__namespace.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { type: i4__namespace.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i4__namespace.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { type: i2__namespace.TuiPrimitiveTextfieldDirective, selector: "tui-primitive-textfield" }, { type: i2__namespace.TuiGroupDirective, selector: "[tuiGroup]:not(ng-container)", inputs: ["orientation", "adaptive", "collapsed", "rounded", "size"] }, { type: TuiInputOpacityDirective, selector: "[tuiInputOpacity]", inputs: ["tuiInputOpacity"] }, { type: i1__namespace.TuiInputNumberDirective, selector: "tui-input-number" }], pipes: { "tuiFilter": i6__namespace.TuiFilterPipe, "tuiStripOptionalPipe": TuiStripOptionalPipe, "tuiIsOptionalPipe": TuiIsOptionalPipe, "tuiDocTypeReference": TuiDocTypeReferencePipe, "tuiShowCleanerPipe": TuiShowCleanerPipe, "tuiInspectAny": TuiInspectPipe, "tuiGetOpacity": TuiGetOpacityPipe, "tuiGetColorPipe": TuiGetColorPipe, "tuiIsPrimitivePolymorpheusContentPipe": TuiIsPrimitivePolymorpheusContentPipe, "async": i4__namespace.AsyncPipe }, animations: [
            animations.trigger('emitEvent', [
                animations.transition(':increment', [animations.style({ opacity: 1 }), animations.animate('500ms ease-in')]),
            ]),
        ], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDocumentationComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-doc-documentation',
                        templateUrl: './documentation.template.html',
                        styleUrls: ['./documentation.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [TuiGetColorPipe, TuiGetOpacityPipe, i6.TuiDestroyService],
                        animations: [
                            animations.trigger('emitEvent', [
                                animations.transition(':increment', [animations.style({ opacity: 1 }), animations.animate('500ms ease-in')]),
                            ]),
                        ],
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_DOCUMENTATION_TEXTS]
                        }] }, { type: Set, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_EXCLUDED_PROPERTIES]
                        }] }, { type: i6__namespace.TuiDestroyService, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [i6.TuiDestroyService]
                        }] }, { type: TuiGetColorPipe, decorators: [{
                            type: i0.Inject,
                            args: [TuiGetColorPipe]
                        }] }, { type: TuiGetOpacityPipe, decorators: [{
                            type: i0.Inject,
                            args: [TuiGetOpacityPipe]
                        }] }];
        }, propDecorators: { heading: [{
                    type: i0.Input
                }], showValues: [{
                    type: i0.Input
                }], isAPI: [{
                    type: i0.Input
                }], propertiesConnectors: [{
                    type: i0.ContentChildren,
                    args: [TuiDocDocumentationPropertyConnectorDirective]
                }] } });

    var TuiInputOpacityModule = /** @class */ (function () {
        function TuiInputOpacityModule() {
        }
        return TuiInputOpacityModule;
    }());
    TuiInputOpacityModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputOpacityModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiInputOpacityModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputOpacityModule, declarations: [TuiInputOpacityDirective], exports: [TuiInputOpacityDirective] });
    TuiInputOpacityModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputOpacityModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputOpacityModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TuiInputOpacityDirective],
                        exports: [TuiInputOpacityDirective],
                    }]
            }] });

    var TuiDocDocumentationModule = /** @class */ (function () {
        function TuiDocDocumentationModule() {
        }
        return TuiDocDocumentationModule;
    }());
    TuiDocDocumentationModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDocumentationModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiDocDocumentationModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDocumentationModule, declarations: [TuiInspectPipe,
            TuiGetColorPipe,
            TuiGetOpacityPipe,
            TuiIsOptionalPipe,
            TuiShowCleanerPipe,
            TuiStripOptionalPipe,
            TuiDocTypeReferencePipe,
            TuiDocDocumentationComponent,
            TuiIsPrimitivePolymorpheusContentPipe,
            TuiDocDocumentationPropertyConnectorDirective], imports: [i4.CommonModule,
            i5.FormsModule,
            i7.RouterModule,
            i1.TuiBadgeModule,
            i1.TuiSelectModule,
            i1.TuiToggleModule,
            i2.TuiLinkModule,
            i1.TuiInputNumberModule,
            i2.TuiModeModule,
            i2.TuiGroupModule,
            TuiInputOpacityModule,
            i2.TuiPrimitiveTextfieldModule,
            i2.TuiTextfieldControllerModule,
            i2.TuiDropdownModule,
            i2.TuiDataListModule,
            i1.TuiDataListWrapperModule,
            i2.TuiNotificationModule,
            i6.TuiFilterPipeModule], exports: [TuiDocTypeReferencePipe,
            TuiDocDocumentationComponent,
            TuiDocDocumentationPropertyConnectorDirective] });
    TuiDocDocumentationModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDocumentationModule, imports: [[
                i4.CommonModule,
                i5.FormsModule,
                i7.RouterModule,
                i1.TuiBadgeModule,
                i1.TuiSelectModule,
                i1.TuiToggleModule,
                i2.TuiLinkModule,
                i1.TuiInputNumberModule,
                i2.TuiModeModule,
                i2.TuiGroupModule,
                TuiInputOpacityModule,
                i2.TuiPrimitiveTextfieldModule,
                i2.TuiTextfieldControllerModule,
                i2.TuiDropdownModule,
                i2.TuiDataListModule,
                i1.TuiDataListWrapperModule,
                i2.TuiNotificationModule,
                i6.TuiFilterPipeModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocDocumentationModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4.CommonModule,
                            i5.FormsModule,
                            i7.RouterModule,
                            i1.TuiBadgeModule,
                            i1.TuiSelectModule,
                            i1.TuiToggleModule,
                            i2.TuiLinkModule,
                            i1.TuiInputNumberModule,
                            i2.TuiModeModule,
                            i2.TuiGroupModule,
                            TuiInputOpacityModule,
                            i2.TuiPrimitiveTextfieldModule,
                            i2.TuiTextfieldControllerModule,
                            i2.TuiDropdownModule,
                            i2.TuiDataListModule,
                            i1.TuiDataListWrapperModule,
                            i2.TuiNotificationModule,
                            i6.TuiFilterPipeModule,
                        ],
                        declarations: [
                            TuiInspectPipe,
                            TuiGetColorPipe,
                            TuiGetOpacityPipe,
                            TuiIsOptionalPipe,
                            TuiShowCleanerPipe,
                            TuiStripOptionalPipe,
                            TuiDocTypeReferencePipe,
                            TuiDocDocumentationComponent,
                            TuiIsPrimitivePolymorpheusContentPipe,
                            TuiDocDocumentationPropertyConnectorDirective,
                        ],
                        exports: [
                            TuiDocTypeReferencePipe,
                            TuiDocDocumentationComponent,
                            TuiDocDocumentationPropertyConnectorDirective,
                        ],
                    }]
            }] });

    var TUI_DOC_EXAMPLE_DEFAULT_OPTIONS = {
        codeEditorVisibilityHandler: function (files) { return Boolean(files[interfaces.TUI_EXAMPLE_PRIMARY_FILE_NAME.TS] &&
            files[interfaces.TUI_EXAMPLE_PRIMARY_FILE_NAME.HTML]); },
        tabTitles: new Map(),
        fullsize: true,
        linkIcon: 'tuiIconLink',
    };
    /**
     * Default parameters for DocExample component
     */
    var TUI_DOC_EXAMPLE_OPTIONS = i6.tuiCreateToken(TUI_DOC_EXAMPLE_DEFAULT_OPTIONS);
    function tuiDocExampleOptionsProvider(options) {
        return i6.tuiProvideOptions(TUI_DOC_EXAMPLE_OPTIONS, options, TUI_DOC_EXAMPLE_DEFAULT_OPTIONS);
    }

    var TuiDocExampleGetTabsPipe = /** @class */ (function () {
        function TuiDocExampleGetTabsPipe() {
        }
        TuiDocExampleGetTabsPipe.prototype.transform = function (content, defaultTab) {
            return __spreadArray([defaultTab], __read(Object.keys(content)));
        };
        return TuiDocExampleGetTabsPipe;
    }());
    TuiDocExampleGetTabsPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocExampleGetTabsPipe, deps: [], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiDocExampleGetTabsPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocExampleGetTabsPipe, name: "tuiDocExampleGetTabs" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocExampleGetTabsPipe, decorators: [{
                type: i0.Pipe,
                args: [{ name: 'tuiDocExampleGetTabs' }]
            }] });

    var TuiDocExampleComponent = /** @class */ (function () {
        function TuiDocExampleComponent(clipboard, alerts, location, copyTexts$, texts, codeEditor, processContent, isE2E, codeActions, options) {
            var _this = this;
            this.clipboard = clipboard;
            this.alerts = alerts;
            this.location = location;
            this.copyTexts$ = copyTexts$;
            this.texts = texts;
            this.codeEditor = codeEditor;
            this.processContent = processContent;
            this.isE2E = isE2E;
            this.codeActions = codeActions;
            this.options = options;
            this.rawLoader$$ = new i10.BehaviorSubject({});
            this.id = null;
            this.fullsize = this.options.fullsize;
            this.componentName = this.location.pathname.slice(1);
            this.defaultTabIndex = 0;
            this.defaultTab = this.texts[this.defaultTabIndex];
            this.activeItemIndex = this.defaultTabIndex;
            this.copy$ = this.copyTexts$.pipe(operators.map(function (_b) {
                var _c = __read(_b, 1), copy = _c[0];
                return copy;
            }));
            this.processor$ = this.rawLoader$$.pipe(operators.switchMap(utils.tuiRawLoadRecord), operators.map(function (value) { return _this.processContent(value); }));
            this.loading$ = new i10.Subject();
            this.visible = function (files) { return Boolean(_this.codeEditor && _this.options.codeEditorVisibilityHandler(files)); };
        }
        Object.defineProperty(TuiDocExampleComponent.prototype, "content", {
            set: function (content) {
                this.rawLoader$$.next(content);
            },
            enumerable: false,
            configurable: true
        });
        TuiDocExampleComponent.prototype.getTabTitle = function (fileName) {
            return this.options.tabTitles.get(fileName) || fileName;
        };
        TuiDocExampleComponent.prototype.copyExampleLink = function (_b) {
            var href = _b.href;
            this.clipboard.copy(href);
            this.alerts
                .open(this.texts[1], { label: this.texts[2], status: 'success' })
                .subscribe();
        };
        TuiDocExampleComponent.prototype.edit = function (files) {
            var _this = this;
            var _a;
            this.loading$.next(true);
            (_a = this.codeEditor) === null || _a === void 0 ? void 0 : _a.edit(this.componentName, this.id || '', files).then(function () { return _this.loading$.next(false); }).catch(function () { return _this.loading$.next(false); });
        };
        return TuiDocExampleComponent;
    }());
    TuiDocExampleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocExampleComponent, deps: [{ token: i4$1.Clipboard }, { token: i2.TuiAlertService }, { token: common.LOCATION }, { token: i1.TUI_COPY_TEXTS }, { token: tokens.TUI_DOC_EXAMPLE_TEXTS }, { token: tokens.TUI_DOC_CODE_EDITOR, optional: true }, { token: tokens.TUI_DOC_EXAMPLE_CONTENT_PROCESSOR }, { token: i6.TUI_IS_E2E }, { token: tokens.TUI_DOC_CODE_ACTIONS }, { token: TUI_DOC_EXAMPLE_OPTIONS }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiDocExampleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocExampleComponent, selector: "tui-doc-example", inputs: { id: "id", heading: "heading", description: "description", content: "content", fullsize: "fullsize", componentName: "componentName" }, host: { properties: { "class._fullsize": "this.fullsize" } }, ngImport: i0__namespace, template: "<h3\n    *ngIf=\"heading\"\n    class=\"t-title\"\n>\n    <span\n        *polymorpheusOutlet=\"heading as text\"\n        [textContent]=\"text\"\n    ></span>\n    <a\n        *ngIf=\"id\"\n        appearance=\"icon\"\n        routerLink=\".\"\n        size=\"xs\"\n        tuiIconButton\n        type=\"button\"\n        class=\"t-link-icon\"\n        [fragment]=\"id\"\n        [icon]=\"options.linkIcon\"\n        [title]=\"copy$ | async\"\n        (click)=\"copyExampleLink($any($event.currentTarget))\"\n    ></a>\n</h3>\n<h4\n    *ngIf=\"description\"\n    class=\"t-description\"\n>\n    <ng-container *polymorpheusOutlet=\"description as text\">\n        {{ text }}\n    </ng-container>\n</h4>\n\n<div\n    *ngIf=\"processor$ | async as files\"\n    class=\"t-example\"\n>\n    <ng-container *ngIf=\"files | tuiDocExampleGetTabs: defaultTab as tabs\">\n        <div\n            *ngIf=\"tabs.length > 1\"\n            class=\"t-tabs-wrapper\"\n        >\n            <tui-tabs-with-more\n                class=\"t-tabs\"\n                [(activeItemIndex)]=\"activeItemIndex\"\n            >\n                <ng-container *ngFor=\"let tab of tabs\">\n                    <button\n                        *tuiItem\n                        tuiTab\n                    >\n                        <ng-container *polymorpheusOutlet=\"getTabTitle(tab) as text\">\n                            {{ text }}\n                        </ng-container>\n                    </button>\n                </ng-container>\n            </tui-tabs-with-more>\n\n            <tui-loader\n                *ngIf=\"files | tuiMapper: visible\"\n                size=\"xs\"\n                [overlay]=\"true\"\n                [showLoader]=\"!!(loading$ | async)\"\n                (click)=\"edit(files)\"\n            >\n                <ng-container *ngIf=\"codeEditor?.content as content; else defaultEditContent\">\n                    <ng-container *polymorpheusOutlet=\"content as editContent\">\n                        {{ editContent }}\n                    </ng-container>\n                </ng-container>\n\n                <ng-template #defaultEditContent>\n                    <button\n                        appearance=\"flat\"\n                        size=\"s\"\n                        tuiButton\n                        type=\"button\"\n                    >\n                        Edit on {{ codeEditor!.name }}\n                    </button>\n                </ng-template>\n            </tui-loader>\n        </div>\n\n        <div\n            *ngFor=\"let tab of tabs; let index = index\"\n            class=\"t-content\"\n            [class.t-content_animated]=\"!isE2E\"\n            [class.t-content_visible]=\"activeItemIndex === index\"\n        >\n            <ng-container\n                *ngIf=\"index === defaultTabIndex; else anotherTab\"\n                [ngTemplateOutlet]=\"preview\"\n            ></ng-container>\n            <ng-template #anotherTab>\n                <ng-container\n                    [ngTemplateOutlet]=\"codeSection\"\n                    [ngTemplateOutletContext]=\"{$implicit: files?.[tabs[activeItemIndex]] || ''}\"\n                ></ng-container>\n            </ng-template>\n        </div>\n    </ng-container>\n</div>\n\n<ng-template #preview>\n    <div\n        automation-id=\"tui-doc-example\"\n        class=\"t-demo\"\n    >\n        <ng-content></ng-content>\n    </div>\n</ng-template>\n\n<ng-template\n    #codeSection\n    let-code\n>\n    <tui-doc-code [code]=\"code\">\n        <ng-container *ngFor=\"let action of codeActions\">\n            <ng-container *polymorpheusOutlet=\"action as text; context: {$implicit: code}\">\n                {{ text }}\n            </ng-container>\n        </ng-container>\n    </tui-doc-code>\n</ng-template>\n", styles: [":host{position:relative;display:block;padding-top:3.5rem;clear:right}:host:target{animation:1s .3s tuiShaking}:host :host-context(tui-root._mobile){padding-top:2rem}.t-title{font:var(--tui-font-heading-5);margin:0 0 .5rem}:host-context(tui-root._mobile) .t-title{font:var(--tui-font-heading-6)}.t-description{font:var(--tui-font-text-m);font-weight:normal;margin:0}.t-title:first-letter,.t-description:first-letter{text-transform:capitalize}.t-example{position:relative;margin-top:1.5rem;border:1px solid var(--tui-base-03);border-radius:var(--tui-radius-m);box-shadow:0 .125rem .1875rem #0000001a;overflow:hidden}:host-context(tui-root._mobile) .t-example{margin-top:.75rem}.t-tabs-wrapper{display:flex;padding:0 .875rem 0 2rem;box-shadow:inset 0 -1px var(--tui-base-03);justify-content:space-between;align-items:center}:host-context(tui-root._mobile) .t-tabs-wrapper{padding:0 .875rem 0 1rem}.t-tabs{flex-grow:1}.t-demo{padding:2rem;max-width:100%;box-sizing:border-box;overflow-x:auto}@media all and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: .001dpcm){.t-demo::-webkit-scrollbar,.t-demo::-webkit-scrollbar-thumb{width:1rem;height:1rem;border-radius:6.25rem;background-clip:padding-box;border:.375rem solid transparent}.t-demo::-webkit-scrollbar{background-color:transparent}.t-demo::-webkit-scrollbar-thumb{background-color:var(--tui-clear-hover)}.t-demo::-webkit-scrollbar-thumb:hover{background-color:var(--tui-clear-active)}.t-demo::-webkit-scrollbar-thumb:active{background-color:var(--tui-text-03)}}:host-context(tui-root._mobile) .t-demo{padding:1rem}:host:not(._fullsize) .t-demo{width:-webkit-min-content;width:min-content;min-width:20rem}.t-link-icon{margin-left:.3rem;vertical-align:baseline}.t-content{will-change:opacity;height:0;visibility:hidden;opacity:0}.t-content_animated{transition:opacity .3s ease-in-out}.t-content_visible{height:auto;visibility:visible;opacity:1}\n"], components: [{ type: i2__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }, { type: i1__namespace.TuiTabsWithMoreComponent, selector: "tui-tabs-with-more, nav[tuiTabsWithMore]", inputs: ["moreContent", "dropdownContent", "underline", "activeItemIndex", "itemsLimit"], outputs: ["activeItemIndexChange"] }, { type: i1__namespace.TuiTabComponent, selector: "a[tuiTab]:not([routerLink]), a[tuiTab][routerLink][routerLinkActive], button[tuiTab]" }, { type: i2__namespace.TuiLoaderComponent, selector: "tui-loader", inputs: ["size", "inheritColor", "overlay", "textContent", "showLoader"] }, { type: TuiDocCodeComponent, selector: "tui-doc-code", inputs: ["filename", "code"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace$1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i7__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i6__namespace.TuiItemDirective, selector: "[tuiItem]" }, { type: i4__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "async": i4__namespace.AsyncPipe, "tuiDocExampleGetTabs": TuiDocExampleGetTabsPipe, "tuiMapper": i6__namespace.TuiMapperPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocExampleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-doc-example',
                        templateUrl: './example.template.html',
                        styleUrls: ['./example.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: i4__namespace$1.Clipboard, decorators: [{
                            type: i0.Inject,
                            args: [i4$1.Clipboard]
                        }] }, { type: i2__namespace.TuiAlertService, decorators: [{
                            type: i0.Inject,
                            args: [i2.TuiAlertService]
                        }] }, { type: Location, decorators: [{
                            type: i0.Inject,
                            args: [common.LOCATION]
                        }] }, { type: i10__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_COPY_TEXTS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_EXAMPLE_TEXTS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_CODE_EDITOR]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_EXAMPLE_CONTENT_PROCESSOR]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i6.TUI_IS_E2E]
                        }] }, { type: Array, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_CODE_ACTIONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_DOC_EXAMPLE_OPTIONS]
                        }] }];
        }, propDecorators: { id: [{
                    type: i0.Input
                }], heading: [{
                    type: i0.Input
                }], description: [{
                    type: i0.Input
                }], content: [{
                    type: i0.Input
                }], fullsize: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class._fullsize']
                }], componentName: [{
                    type: i0.Input
                }] } });

    var TuiDocExampleModule = /** @class */ (function () {
        function TuiDocExampleModule() {
        }
        return TuiDocExampleModule;
    }());
    TuiDocExampleModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocExampleModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiDocExampleModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocExampleModule, declarations: [TuiDocExampleComponent, TuiDocExampleGetTabsPipe], imports: [i4.CommonModule,
            i4$1.ClipboardModule,
            i1.TuiTabsModule,
            i2.TuiButtonModule,
            TuiDocCopyModule,
            TuiDocCodeModule,
            i5$1.PolymorpheusModule,
            i6.TuiMapperPipeModule,
            i2.TuiLoaderModule,
            i7.RouterModule], exports: [TuiDocExampleComponent, TuiDocExampleGetTabsPipe] });
    TuiDocExampleModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocExampleModule, imports: [[
                i4.CommonModule,
                i4$1.ClipboardModule,
                i1.TuiTabsModule,
                i2.TuiButtonModule,
                TuiDocCopyModule,
                TuiDocCodeModule,
                i5$1.PolymorpheusModule,
                i6.TuiMapperPipeModule,
                i2.TuiLoaderModule,
                i7.RouterModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocExampleModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4.CommonModule,
                            i4$1.ClipboardModule,
                            i1.TuiTabsModule,
                            i2.TuiButtonModule,
                            TuiDocCopyModule,
                            TuiDocCodeModule,
                            i5$1.PolymorpheusModule,
                            i6.TuiMapperPipeModule,
                            i2.TuiLoaderModule,
                            i7.RouterModule,
                        ],
                        declarations: [TuiDocExampleComponent, TuiDocExampleGetTabsPipe],
                        exports: [TuiDocExampleComponent, TuiDocExampleGetTabsPipe],
                    }]
            }] });

    function labelsProviderFactory(pages) {
        return pages
            .map(function (_a) {
            var section = _a.section;
            return section;
        })
            .filter(i6.tuiIsPresent)
            .filter(function (item, index, array) { return array.indexOf(item) === index; });
    }
    /**
     * Page title
     */
    var NAVIGATION_TITLE = new i0.InjectionToken('[NAVIGATION_TITLE]');
    /**
     * Navigation sections labels for search
     */
    var NAVIGATION_LABELS = new i0.InjectionToken('[NAVIGATION_LABELS]');
    /**
     * Navigation pages
     */
    var NAVIGATION_ITEMS = new i0.InjectionToken('[NAVIGATION_ITEMS]');
    var NAVIGATION_PROVIDERS = [
        i6.TuiDestroyService,
        {
            provide: NAVIGATION_TITLE,
            deps: [i7.Router, i7.ActivatedRoute, tokens.TUI_DOC_TITLE, i6.TuiDestroyService],
            useFactory: function (router, activatedRoute, titlePrefix, destroy$) { return router.events.pipe(operators.filter(function (event) { return event instanceof i7.NavigationEnd; }), operators.map(function () { return activatedRoute.firstChild; }), operators.filter(i6.tuiIsPresent), operators.mergeMap(function (_a) {
                var data = _a.data;
                return data;
            }), operators.map(function (_a) {
                var title = _a.title;
                return "" + titlePrefix + title;
            }), operators.takeUntil(destroy$)); },
        },
        {
            provide: NAVIGATION_LABELS,
            deps: [tokens.TUI_DOC_PAGES],
            useFactory: labelsProviderFactory,
        },
        {
            provide: NAVIGATION_ITEMS,
            deps: [tokens.TUI_DOC_PAGES],
            useFactory: function (pages) {
                var labels = labelsProviderFactory(pages);
                return __spreadArray(__spreadArray([], __read(labels.map(function (label) { return pages.filter(function (_a) {
                    var section = _a.section;
                    return section === label;
                }); }))), [
                    pages.filter(function (page) { return !page.section; }),
                ]);
            },
        },
    ];

    var TuiDocNavigationComponent = /** @class */ (function () {
        function TuiDocNavigationComponent(cdr, titleService, title$, mode, sidebar, labels, items, searchText, router, activatedRoute, destroy$, readyToScroll$, docIcons, icons, doc) {
            var _this = this;
            this.title$ = title$;
            this.mode = mode;
            this.sidebar = sidebar;
            this.labels = labels;
            this.items = items;
            this.searchText = searchText;
            this.router = router;
            this.activatedRoute = activatedRoute;
            this.destroy$ = destroy$;
            this.readyToScroll$ = readyToScroll$;
            this.docIcons = docIcons;
            this.icons = icons;
            this.doc = doc;
            this.menuOpen = false;
            this.openPagesArr = [];
            this.openPagesGroupsArr = [];
            this.active = '';
            this.search = new i5.FormControl('');
            this.filtered$ = i6.tuiControlValue(this.search).pipe(operators.filter(function (search) { return search.trim().length > 2; }), operators.map(function (search) { return _this.filterItems(_this.flattenSubPages(_this.items), search); }));
            this.mode$ = this.mode.change$.pipe(operators.startWith(null), operators.map(function () { return _this.mode.mode || 'onLight'; }));
            title$.subscribe(function (title) {
                cdr.markForCheck();
                titleService.setTitle(title);
                _this.openActivePageGroup();
            });
            i10.combineLatest([
                this.router.events.pipe(operators.filter(function (event) { return event instanceof i7.Scroll; })),
                this.title$.pipe(operators.switchMap(function () { return _this.readyToScroll$.pipe(operators.filter(Boolean)); })),
            ])
                .pipe(operators.take(1), operators.map(function (_c) {
                var _d = __read(_c, 1), event = _d[0];
                return event.anchor || '';
            }), operators.filter(Boolean), operators.takeUntil(this.destroy$))
                .subscribe(function (anchor) { return _this.navigateToAnchorLink(anchor); });
        }
        Object.defineProperty(TuiDocNavigationComponent.prototype, "canOpen", {
            get: function () {
                var _a, _b;
                return ((_b = (_a = this.search.value) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 2;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiDocNavigationComponent.prototype, "itemsWithoutSections", {
            get: function () {
                return this.items[this.items.length - 1];
            },
            enumerable: false,
            configurable: true
        });
        TuiDocNavigationComponent.prototype.$pages = function (pages) {
            return pages;
        };
        TuiDocNavigationComponent.prototype.isActive = function (route) {
            return route === this.active;
        };
        TuiDocNavigationComponent.prototype.onGroupClick = function (index) {
            this.openPagesGroupsArr[index] = !this.openPagesGroupsArr[index];
        };
        TuiDocNavigationComponent.prototype.closeMenu = function () {
            this.menuOpen = false;
        };
        TuiDocNavigationComponent.prototype.onClick = function (input) {
            input.open = false;
            this.menuOpen = false;
            this.search.setValue('');
            this.openActivePageGroup();
        };
        TuiDocNavigationComponent.prototype.filterItems = function (items, search) {
            return items.map(function (section) { return i6.tuiUniqBy(section.filter(function (_c) {
                var title = _c.title, _d = _c.keywords, keywords = _d === void 0 ? '' : _d;
                search = search.toLowerCase().trim();
                keywords = keywords.toLowerCase();
                title = title.toLowerCase();
                return (title.includes(search) ||
                    keywords.includes(search) ||
                    title.includes(utils.tuiTransliterateKeyboardLayout(search)) ||
                    keywords.includes(utils.tuiTransliterateKeyboardLayout(search)) ||
                    search.replace(/-/gi, '').includes(title) ||
                    title.includes(search.replace(/\s|tui/g, '')) ||
                    keywords.includes(search.replace(/\s|tui/g, '')) ||
                    search.split(/\s/).find(function (word) { return title.includes(word); }));
            }), 'title'); });
        };
        TuiDocNavigationComponent.prototype.flattenSubPages = function (items) {
            return items.reduce(function (array, item) { return __spreadArray(__spreadArray([], __read(array)), [
                item.reduce(function (pages, page) { return 'subPages' in page
                    ? __spreadArray(__spreadArray([], __read(pages)), __read(page.subPages)) : __spreadArray(__spreadArray([], __read(pages)), [page]); }, []),
            ]); }, []);
        };
        TuiDocNavigationComponent.prototype.isActiveRoute = function (route) {
            return this.router.isActive(route, {
                paths: 'subset',
                queryParams: 'subset',
                fragment: 'ignored',
                matrixParams: 'ignored',
            });
        };
        TuiDocNavigationComponent.prototype.openActivePageGroup = function () {
            var _this = this;
            this.items.forEach(function (pages, pagesIndex) {
                pages.forEach(function (page, pageIndex) {
                    if ('route' in page && _this.isActiveRoute(page.route)) {
                        _this.openPagesArr[pagesIndex] = true;
                        _this.active = page.route;
                    }
                    if ('subPages' in page) {
                        page.subPages.forEach(function (subPage) {
                            if (_this.isActiveRoute(subPage.route)) {
                                _this.openPagesArr[pagesIndex] = true;
                                _this.openPagesGroupsArr[pagesIndex * 100 + pageIndex] = true;
                                _this.active = subPage.route;
                            }
                        });
                    }
                });
            });
        };
        TuiDocNavigationComponent.prototype.navigateToAnchorLink = function (fragment) {
            var nodes = fragment ? this.doc.querySelectorAll("#" + fragment) : [];
            var element = nodes.length && nodes[nodes.length - 1];
            if (!element) {
                return;
            }
            // emulate :target event
            var target = this.doc.createElement('a');
            target.href = this.doc.location.pathname + "#" + fragment;
            target.style.display = 'none';
            target.style.position = 'absolute';
            this.doc.body.appendChild(target);
            target.click();
            target.remove();
        };
        return TuiDocNavigationComponent;
    }());
    TuiDocNavigationComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocNavigationComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i9.Title }, { token: NAVIGATION_TITLE }, { token: i2.TuiModeDirective }, { token: i4$2.TuiSidebarDirective, optional: true }, { token: NAVIGATION_LABELS }, { token: NAVIGATION_ITEMS }, { token: tokens.TUI_DOC_SEARCH_TEXT }, { token: i7.Router }, { token: i7.ActivatedRoute }, { token: i6.TuiDestroyService, self: true }, { token: tokens.TUI_DOC_PAGE_LOADED }, { token: tokens.TUI_DOC_ICONS }, { token: i2.TUI_COMMON_ICONS }, { token: i4.DOCUMENT }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiDocNavigationComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocNavigationComponent, selector: "tui-doc-navigation", host: { properties: { "class._open": "this.menuOpen" } }, providers: NAVIGATION_PROVIDERS, ngImport: i0__namespace, template: "<tui-input\n    #input\n    tuiTextfieldSize=\"m\"\n    class=\"t-input\"\n    [formControl]=\"search\"\n    [tuiAutoFocus]=\"!!sidebar\"\n    [tuiTextfieldCleaner]=\"true\"\n    [tuiTextfieldIconLeft]=\"docIcons.search\"\n    [tuiTextfieldLabelOutside]=\"true\"\n>\n    {{ searchText }}\n    <ng-container *ngIf=\"canOpen\">\n        <tui-data-list *tuiDataList>\n            <tui-opt-group\n                *ngFor=\"let group of filtered$ | async; let index = index\"\n                [label]=\"labels[index] || ''\"\n            >\n                <ng-container *ngFor=\"let item of group\">\n                    <a\n                        *ngIf=\"item.route.includes('://'); else internal\"\n                        tuiOption\n                        [attr.rel]=\"item.rel\"\n                        [href]=\"item.route\"\n                        [target]=\"item.target || '_self'\"\n                    >\n                        {{ item.title }}\n                        <tui-svg\n                            *polymorpheusOutlet=\"item.icon as icon\"\n                            class=\"t-icon\"\n                            [src]=\"icon\"\n                        ></tui-svg>\n                    </a>\n\n                    <ng-template #internal>\n                        <a\n                            tuiOption\n                            [attr.rel]=\"item.rel\"\n                            [fragment]=\"item.fragment\"\n                            [routerLink]=\"item.route\"\n                            [target]=\"item.target || '_self'\"\n                            (click)=\"onClick(input)\"\n                        >\n                            {{ item.title }}\n                            <tui-svg\n                                *polymorpheusOutlet=\"item.icon as icon\"\n                                class=\"t-icon\"\n                                [src]=\"icon\"\n                            ></tui-svg>\n                        </a>\n                    </ng-template>\n                </ng-container>\n            </tui-opt-group>\n        </tui-data-list>\n    </ng-container>\n</tui-input>\n\n<nav class=\"t-navigation\">\n    <tui-scrollbar\n        class=\"t-scrollbar\"\n        [tuiMode]=\"mode$ | async\"\n    >\n        <tui-accordion\n            [closeOthers]=\"false\"\n            [rounded]=\"false\"\n        >\n            <tui-accordion-item\n                *ngFor=\"let label of labels; index as index\"\n                size=\"s\"\n                [borders]=\"null\"\n                [(open)]=\"!!openPagesArr[index]\"\n            >\n                <span class=\"t-label\">\n                    <strong>{{ label }}</strong>\n                </span>\n                <ng-template tuiAccordionItemContent>\n                    <div class=\"t-section\">\n                        <ng-container\n                            *ngFor=\"let item of items[index]; index as subIndex\"\n                            [ngTemplateOutlet]=\"pages\"\n                            [ngTemplateOutletContext]=\"{item: item, index: index * 100 + subIndex}\"\n                        ></ng-container>\n                    </div>\n                </ng-template>\n            </tui-accordion-item>\n        </tui-accordion>\n        <div class=\"t-items-container\">\n            <ng-container\n                *ngFor=\"let item of itemsWithoutSections; let index = index\"\n                [ngTemplateOutlet]=\"pages\"\n                [ngTemplateOutletContext]=\"{item: item, index: items.length - 1 + index}\"\n            ></ng-container>\n        </div>\n\n        <ng-template\n            #pages\n            let-index=\"index\"\n            let-item=\"item\"\n        >\n            <ng-container *ngIf=\"!item.subPages; else subPagesTemplate\">\n                <a\n                    *ngIf=\"item.route.includes('://'); else internal\"\n                    tuiLink\n                    class=\"t-sublink\"\n                    [attr.rel]=\"item.rel\"\n                    [href]=\"item.route\"\n                    [target]=\"item.target || '_self'\"\n                >\n                    {{ item.title }}\n                    <tui-svg\n                        *polymorpheusOutlet=\"item.icon as icon\"\n                        class=\"t-icon\"\n                        [src]=\"icon\"\n                    ></tui-svg>\n                </a>\n\n                <ng-template #internal>\n                    <a\n                        routerLinkActive=\"t-sublink_active\"\n                        tuiLink\n                        class=\"t-sublink\"\n                        [attr.rel]=\"item.rel\"\n                        [routerLink]=\"item.route\"\n                        [target]=\"item.target || '_self'\"\n                        [tuiScrollIntoViewLink]=\"isActive(item.route)\"\n                        (click)=\"closeMenu()\"\n                    >\n                        {{ item.title }}\n                        <tui-svg\n                            *polymorpheusOutlet=\"item.icon as icon\"\n                            class=\"t-icon\"\n                            [src]=\"icon\"\n                        ></tui-svg>\n                    </a>\n                </ng-template>\n            </ng-container>\n\n            <ng-template #subPagesTemplate>\n                <div\n                    routerLinkActive\n                    class=\"t-subsection\"\n                    [routerLinkActiveOptions]=\"{exact: false}\"\n                >\n                    <button\n                        *ngIf=\"item.subPages\"\n                        tuiLink\n                        type=\"button\"\n                        class=\"t-sublink t-sublink_subsection\"\n                        (click)=\"onGroupClick(index)\"\n                    >\n                        <tui-svg\n                            class=\"t-chevron\"\n                            [class.t-chevron_active]=\"!!openPagesGroupsArr[index]\"\n                            [src]=\"icons.more\"\n                        ></tui-svg>\n                        {{ item.title }}\n                        <tui-svg\n                            *polymorpheusOutlet=\"item.icon as icon\"\n                            class=\"t-icon\"\n                            [src]=\"icon\"\n                        ></tui-svg>\n                    </button>\n                    <tui-expand\n                        class=\"t-expand\"\n                        [expanded]=\"!!openPagesGroupsArr[index]\"\n                    >\n                        <div class=\"t-section t-section_bordered\">\n                            <ng-container *ngFor=\"let subPage of $pages(item.subPages)\">\n                                <a\n                                    *ngIf=\"subPage.route.includes('://'); else internal\"\n                                    tuiLink\n                                    class=\"t-sublink t-sublink_small\"\n                                    [attr.rel]=\"subPage.rel\"\n                                    [href]=\"subPage.route\"\n                                    [target]=\"subPage.target || '_self'\"\n                                >\n                                    {{ subPage.title }}\n                                    <tui-svg\n                                        *polymorpheusOutlet=\"subPage.icon as icon\"\n                                        class=\"t-icon\"\n                                        [src]=\"icon\"\n                                    ></tui-svg>\n                                </a>\n\n                                <ng-template #internal>\n                                    <a\n                                        routerLinkActive=\"t-sublink_active\"\n                                        tuiLink\n                                        class=\"t-sublink t-sublink_small\"\n                                        [attr.rel]=\"subPage.rel\"\n                                        [fragment]=\"subPage.fragment\"\n                                        [routerLink]=\"subPage.route\"\n                                        [target]=\"subPage.target || '_self'\"\n                                        [tuiScrollIntoViewLink]=\"isActive(subPage.route)\"\n                                        (click)=\"closeMenu()\"\n                                    >\n                                        {{ subPage.title }}\n                                        <tui-svg\n                                            *polymorpheusOutlet=\"subPage.icon as icon\"\n                                            class=\"t-icon\"\n                                            [src]=\"icon\"\n                                        ></tui-svg>\n                                    </a>\n                                </ng-template>\n                            </ng-container>\n                        </div>\n                    </tui-expand>\n                </div>\n            </ng-template>\n        </ng-template>\n    </tui-scrollbar>\n</nav>\n\n<ng-content></ng-content>\n", styles: [":host{z-index:1;display:flex;flex-direction:column;text-align:center;background:var(--tui-base-01)}.t-input{margin:1.25rem}.t-navigation{display:flex;max-height:100%;min-height:0;flex:1 1 0;text-align:left}.t-scrollbar{scroll-behavior:smooth;width:100%}:host-context(tui-root._reduced-motion) .t-scrollbar{scroll-behavior:auto}.t-items-container{display:flex;flex-direction:column;padding:0 1rem}.t-label{margin-left:.5rem}.t-expand{margin-left:.25rem}.t-section{display:flex;flex-direction:column;align-items:flex-start;margin:-1rem 0 -.5rem}.t-section_bordered{margin:.5rem 0;border-left:1px solid var(--tui-base-03)}.t-subsection{margin-left:.5rem}.t-sublink{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:1rem 0 0;border:0;background:none;font-size:inherit;line-height:inherit;text-decoration:none;font:var(--tui-font-text-m);margin-left:.5rem}.t-sublink_small{margin-left:1rem;line-height:1.5rem;padding-top:.5rem}.t-sublink_subsection{margin-left:0;line-height:1.6rem}.t-sublink.t-sublink.t-sublink_active{color:var(--tui-text-01)}.t-icon{margin-left:.5rem}.t-chevron{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;width:1rem;height:1rem;margin:-.25rem .25rem 0 -.1875rem}.t-chevron_active{transform:rotate(90deg)}\n"], components: [{ type: i1__namespace.TuiInputComponent, selector: "tui-input" }, { type: i2__namespace.TuiDataListComponent, selector: "tui-data-list", inputs: ["role", "emptyContent", "size"] }, { type: i2__namespace.TuiOptionComponent, selector: "button[tuiOption], a[tuiOption]", inputs: ["size", "role", "disabled", "value"] }, { type: i2__namespace.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: i2__namespace.TuiScrollbarComponent, selector: "tui-scrollbar", inputs: ["hidden"] }, { type: i1__namespace.TuiAccordionComponent, selector: "tui-accordion", inputs: ["closeOthers", "rounded"] }, { type: i1__namespace.TuiAccordionItemComponent, selector: "tui-accordion-item", inputs: ["noPadding", "showArrow", "borders", "size", "disabled", "disableHover", "open", "async"], outputs: ["openChange"] }, { type: i2__namespace.TuiLinkComponent, selector: "a[tuiLink], button[tuiLink]", inputs: ["pseudo", "icon", "iconAlign", "iconRotated", "mode"], exportAs: ["tuiLink"] }, { type: i2__namespace.TuiExpandComponent, selector: "tui-expand", inputs: ["async", "expanded"] }], directives: [{ type: i1__namespace.TuiInputDirective, selector: "tui-input" }, { type: i2__namespace.TuiTextfieldSizeDirective, selector: "[tuiTextfieldSize]", inputs: ["tuiTextfieldSize"] }, { type: i5__namespace.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5__namespace.FormControlDirective, selector: "[formControl]", inputs: ["disabled", "formControl", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { type: i6__namespace.TuiAutoFocusDirective, selector: "[tuiAutoFocus]", inputs: ["tuiAutoFocus"] }, { type: i2__namespace.TuiTextfieldCleanerDirective, selector: "[tuiTextfieldCleaner]", inputs: ["tuiTextfieldCleaner"] }, { type: i2__namespace.TuiTextfieldIconLeftDirective, selector: "[tuiTextfieldIconLeft]", inputs: ["tuiTextfieldIconLeft"] }, { type: i2__namespace.TuiTextfieldLabelOutsideDirective, selector: "[tuiTextfieldLabelOutside]", inputs: ["tuiTextfieldLabelOutside"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.TuiOptGroupDirective, selector: "tui-opt-group", inputs: ["label"] }, { type: i5__namespace$1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i7__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i2__namespace.TuiModeDirective, selector: "[tuiMode]", inputs: ["tuiMode"] }, { type: i1__namespace.TuiAccordionItemContentDirective, selector: "ng-template[tuiAccordionItemContent]" }, { type: i4__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i7__namespace.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "routerLinkActive"], exportAs: ["routerLinkActive"] }, { type: i8__namespace.TuiScrollIntoViewLinkDirective, selector: "[tuiScrollIntoViewLink]", inputs: ["tuiScrollIntoViewLink"] }], pipes: { "async": i4__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i6.tuiPure
    ], TuiDocNavigationComponent.prototype, "filterItems", null);
    __decorate([
        i6.tuiPure
    ], TuiDocNavigationComponent.prototype, "flattenSubPages", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocNavigationComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-doc-navigation',
                        templateUrl: './navigation.template.html',
                        styleUrls: ['./navigation.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: NAVIGATION_PROVIDERS,
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }, { type: i9__namespace.Title, decorators: [{
                            type: i0.Inject,
                            args: [i9.Title]
                        }] }, { type: i10__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [NAVIGATION_TITLE]
                        }] }, { type: i2__namespace.TuiModeDirective, decorators: [{
                            type: i0.Inject,
                            args: [i2.TuiModeDirective]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i4$2.TuiSidebarDirective]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [NAVIGATION_LABELS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [NAVIGATION_ITEMS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_SEARCH_TEXT]
                        }] }, { type: i7__namespace.Router, decorators: [{
                            type: i0.Inject,
                            args: [i7.Router]
                        }] }, { type: i7__namespace.ActivatedRoute, decorators: [{
                            type: i0.Inject,
                            args: [i7.ActivatedRoute]
                        }] }, { type: i10__namespace.Observable, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [i6.TuiDestroyService]
                        }] }, { type: i10__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_PAGE_LOADED]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_ICONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i2.TUI_COMMON_ICONS]
                        }] }, { type: Document, decorators: [{
                            type: i0.Inject,
                            args: [i4.DOCUMENT]
                        }] }];
        }, propDecorators: { menuOpen: [{
                    type: i0.HostBinding,
                    args: ['class._open']
                }], filterItems: [], flattenSubPages: [] } });

    var TuiDocHeaderComponent = /** @class */ (function () {
        function TuiDocHeaderComponent(icons, logo, menu, router) {
            this.icons = icons;
            this.logo = logo;
            this.menu = menu;
            this.router = router;
            this.stream$ = new i10.Subject();
            this.open$ = i10.merge(this.router.events.pipe(operators.map(i6.ALWAYS_FALSE_HANDLER)), this.stream$).pipe(operators.startWith(false), operators.distinctUntilChanged());
        }
        TuiDocHeaderComponent.prototype.onClick = function () {
            this.stream$.next(true);
        };
        TuiDocHeaderComponent.prototype.onActiveZone = function (active) {
            if (!active) {
                this.stream$.next(false);
            }
        };
        return TuiDocHeaderComponent;
    }());
    TuiDocHeaderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocHeaderComponent, deps: [{ token: tokens.TUI_DOC_ICONS }, { token: tokens.TUI_DOC_LOGO }, { token: tokens.TUI_DOC_MENU_TEXT }, { token: i7.Router }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiDocHeaderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocHeaderComponent, selector: "header[tuiDocHeader]", ngImport: i0__namespace, template: "<button\n    appearance=\"icon\"\n    tuiIconButton\n    type=\"button\"\n    class=\"t-menu\"\n    [icon]=\"icons.menu\"\n    [title]=\"menu\"\n    (click)=\"onClick()\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <tui-doc-navigation\n        *tuiSidebar=\"!!(open$ | async)\"\n        class=\"t-navigation\"\n    ></tui-doc-navigation>\n</button>\n<div class=\"t-logo\">\n    <img\n        *polymorpheusOutlet=\"logo as src\"\n        alt=\"Logo\"\n        class=\"t-img\"\n        [src]=\"src\"\n    />\n</div>\n<ng-content></ng-content>\n", styles: [":host{position:fixed;top:0;left:0;right:0;z-index:1;display:flex;box-shadow:var(--tui-shadow-navigation);height:3.9375rem;align-items:center;padding:0 1.25rem;background:var(--tui-base-01);border-bottom:1px solid var(--tui-base-03)}@supports (background: color-mix(in srgb,var(--tui-base-01),transparent 50%)){:host{background:color-mix(in srgb,var(--tui-base-01),transparent 50%);-webkit-backdrop-filter:blur(1.25rem);backdrop-filter:blur(1.25rem)}}.t-logo{margin-right:auto;font:var(--tui-font-heading-5)}.t-img{display:block}.t-menu{margin-left:-1.25rem}@media screen and (min-width: 48em){.t-menu{display:none}}.t-navigation{min-height:100%}\n"], components: [{ type: i2__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }, { type: TuiDocNavigationComponent, selector: "tui-doc-navigation" }], directives: [{ type: i6__namespace.TuiActiveZoneDirective, selector: "[tuiActiveZone]:not(ng-container), [tuiActiveZoneChange]:not(ng-container), [tuiActiveZoneParent]:not(ng-container)", inputs: ["tuiActiveZoneParent"], outputs: ["tuiActiveZoneChange"], exportAs: ["tuiActiveZone"] }, { type: i4__namespace$2.TuiSidebarDirective, selector: "[tuiSidebar]", inputs: ["tuiSidebarDirection", "tuiSidebarAutoWidth", "tuiSidebar"] }, { type: i5__namespace$1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i4__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocHeaderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'header[tuiDocHeader]',
                        templateUrl: './header.template.html',
                        styleUrls: ['./header.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_ICONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_LOGO]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_MENU_TEXT]
                        }] }, { type: i7__namespace.Router, decorators: [{
                            type: i0.Inject,
                            args: [i7.Router]
                        }] }];
        } });

    var TuiDocNavigationModule = /** @class */ (function () {
        function TuiDocNavigationModule() {
        }
        return TuiDocNavigationModule;
    }());
    TuiDocNavigationModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocNavigationModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiDocNavigationModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocNavigationModule, declarations: [TuiDocNavigationComponent], imports: [i4.CommonModule,
            i5.ReactiveFormsModule,
            i7.RouterModule,
            i5$1.PolymorpheusModule,
            i8.TuiScrollIntoViewLinkModule,
            i2.TuiButtonModule,
            i1.TuiInputModule,
            i2.TuiTextfieldControllerModule,
            i6.TuiActiveZoneModule,
            i6.TuiLetModule,
            i2.TuiModeModule,
            i2.TuiLinkModule,
            i2.TuiExpandModule,
            i2.TuiHostedDropdownModule,
            i2.TuiDropdownModule,
            i1.TuiAccordionModule,
            i2.TuiScrollbarModule,
            i2.TuiSvgModule,
            i2.TuiDataListModule,
            i6.TuiAutoFocusModule], exports: [TuiDocNavigationComponent] });
    TuiDocNavigationModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocNavigationModule, imports: [[
                i4.CommonModule,
                i5.ReactiveFormsModule,
                i7.RouterModule,
                i5$1.PolymorpheusModule,
                i8.TuiScrollIntoViewLinkModule,
                i2.TuiButtonModule,
                i1.TuiInputModule,
                i2.TuiTextfieldControllerModule,
                i6.TuiActiveZoneModule,
                i6.TuiLetModule,
                i2.TuiModeModule,
                i2.TuiLinkModule,
                i2.TuiExpandModule,
                i2.TuiHostedDropdownModule,
                i2.TuiDropdownModule,
                i1.TuiAccordionModule,
                i2.TuiScrollbarModule,
                i2.TuiSvgModule,
                i2.TuiDataListModule,
                i6.TuiAutoFocusModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocNavigationModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4.CommonModule,
                            i5.ReactiveFormsModule,
                            i7.RouterModule,
                            i5$1.PolymorpheusModule,
                            i8.TuiScrollIntoViewLinkModule,
                            i2.TuiButtonModule,
                            i1.TuiInputModule,
                            i2.TuiTextfieldControllerModule,
                            i6.TuiActiveZoneModule,
                            i6.TuiLetModule,
                            i2.TuiModeModule,
                            i2.TuiLinkModule,
                            i2.TuiExpandModule,
                            i2.TuiHostedDropdownModule,
                            i2.TuiDropdownModule,
                            i1.TuiAccordionModule,
                            i2.TuiScrollbarModule,
                            i2.TuiSvgModule,
                            i2.TuiDataListModule,
                            i6.TuiAutoFocusModule,
                        ],
                        declarations: [TuiDocNavigationComponent],
                        exports: [TuiDocNavigationComponent],
                    }]
            }] });

    var TuiDocHeaderModule = /** @class */ (function () {
        function TuiDocHeaderModule() {
        }
        return TuiDocHeaderModule;
    }());
    TuiDocHeaderModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocHeaderModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiDocHeaderModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocHeaderModule, declarations: [TuiDocHeaderComponent], imports: [i4.CommonModule,
            i5$1.PolymorpheusModule,
            i2.TuiButtonModule,
            i4$2.TuiSidebarModule,
            i6.TuiActiveZoneModule,
            TuiDocNavigationModule], exports: [TuiDocHeaderComponent] });
    TuiDocHeaderModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocHeaderModule, imports: [[
                i4.CommonModule,
                i5$1.PolymorpheusModule,
                i2.TuiButtonModule,
                i4$2.TuiSidebarModule,
                i6.TuiActiveZoneModule,
                TuiDocNavigationModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocHeaderModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4.CommonModule,
                            i5$1.PolymorpheusModule,
                            i2.TuiButtonModule,
                            i4$2.TuiSidebarModule,
                            i6.TuiActiveZoneModule,
                            TuiDocNavigationModule,
                        ],
                        declarations: [TuiDocHeaderComponent],
                        exports: [TuiDocHeaderComponent],
                    }]
            }] });

    var TuiDocSeeAlsoComponent = /** @class */ (function () {
        function TuiDocSeeAlsoComponent(text, pages) {
            this.text = text;
            this.pages = pages;
            this.seeAlso = [];
        }
        TuiDocSeeAlsoComponent.prototype.getRouterLink = function (pageTitle) {
            var _a, _b;
            return (_b = (_a = this.pages.get(pageTitle)) === null || _a === void 0 ? void 0 : _a.route) !== null && _b !== void 0 ? _b : '';
        };
        return TuiDocSeeAlsoComponent;
    }());
    TuiDocSeeAlsoComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocSeeAlsoComponent, deps: [{ token: tokens.TUI_DOC_SEE_ALSO_TEXT }, { token: tokens.TUI_DOC_MAP_PAGES }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiDocSeeAlsoComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocSeeAlsoComponent, selector: "tui-doc-see-also", inputs: { seeAlso: "seeAlso" }, ngImport: i0__namespace, template: "<h5 class=\"t-header\">{{ text }}</h5>\n<ng-container *ngFor=\"let item of seeAlso; last as last\">\n    <a\n        tuiLink\n        [innerText]=\"item\"\n        [routerLink]=\"getRouterLink(item)\"\n    ></a>\n    <ng-container *ngIf=\"!last\">{{ ', ' }}</ng-container>\n</ng-container>\n", styles: [":host{display:block}.t-header{font-size:.6875rem;line-height:1rem;text-transform:uppercase;letter-spacing:.075em;color:var(--tui-text-02);margin:0 0 .5rem;white-space:nowrap}\n"], components: [{ type: i2__namespace.TuiLinkComponent, selector: "a[tuiLink], button[tuiLink]", inputs: ["pseudo", "icon", "iconAlign", "iconRotated", "mode"], exportAs: ["tuiLink"] }], directives: [{ type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i7__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocSeeAlsoComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-doc-see-also',
                        templateUrl: './see-also.template.html',
                        styleUrls: ['./see-also.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_SEE_ALSO_TEXT]
                        }] }, { type: Map, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_MAP_PAGES]
                        }] }];
        }, propDecorators: { seeAlso: [{
                    type: i0.Input
                }] } });

    var TuiDocSeeAlsoModule = /** @class */ (function () {
        function TuiDocSeeAlsoModule() {
        }
        return TuiDocSeeAlsoModule;
    }());
    TuiDocSeeAlsoModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocSeeAlsoModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiDocSeeAlsoModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocSeeAlsoModule, declarations: [TuiDocSeeAlsoComponent], imports: [i4.CommonModule, i7.RouterModule, i2.TuiLinkModule], exports: [TuiDocSeeAlsoComponent] });
    TuiDocSeeAlsoModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocSeeAlsoModule, imports: [[i4.CommonModule, i7.RouterModule, i2.TuiLinkModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocSeeAlsoModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4.CommonModule, i7.RouterModule, i2.TuiLinkModule],
                        declarations: [TuiDocSeeAlsoComponent],
                        exports: [TuiDocSeeAlsoComponent],
                    }]
            }] });

    var TuiDocSourceCodeComponent = /** @class */ (function () {
        function TuiDocSourceCodeComponent(icons, sourceCode, text) {
            this.icons = icons;
            this.sourceCode = sourceCode;
            this.text = text;
            this.header = '';
            this.package = '';
            this.type = '';
            this.path = '';
        }
        Object.defineProperty(TuiDocSourceCodeComponent.prototype, "pathOptions", {
            get: function () {
                return this.getPathOptions(this.header, this.package, this.type, this.path);
            },
            enumerable: false,
            configurable: true
        });
        TuiDocSourceCodeComponent.prototype.pathIsUrl = function (path) {
            return path.startsWith('http');
        };
        TuiDocSourceCodeComponent.prototype.getPathOptions = function (header, packageName, type, path) {
            return {
                header: header,
                package: packageName,
                type: type,
                path: path,
            };
        };
        return TuiDocSourceCodeComponent;
    }());
    TuiDocSourceCodeComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocSourceCodeComponent, deps: [{ token: tokens.TUI_DOC_ICONS }, { token: tokens.TUI_DOC_SOURCE_CODE }, { token: tokens.TUI_DOC_SOURCE_CODE_TEXT }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiDocSourceCodeComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocSourceCodeComponent, selector: "tui-doc-source-code", inputs: { header: "header", package: "package", type: "type", path: "path" }, ngImport: i0__namespace, template: "<a\n    *polymorpheusOutlet=\"pathIsUrl(path) ? path : sourceCode as link; context: pathOptions\"\n    appearance=\"icon\"\n    size=\"s\"\n    target=\"_blank\"\n    tuiIconButton\n    type=\"button\"\n    [href]=\"link\"\n    [icon]=\"icons.code\"\n    [title]=\"text\"\n></a>\n", components: [{ type: i2__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i5__namespace$1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i6.tuiPure
    ], TuiDocSourceCodeComponent.prototype, "pathIsUrl", null);
    __decorate([
        i6.tuiPure
    ], TuiDocSourceCodeComponent.prototype, "getPathOptions", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocSourceCodeComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-doc-source-code',
                        templateUrl: './source-code.template.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_ICONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_SOURCE_CODE]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_SOURCE_CODE_TEXT]
                        }] }];
        }, propDecorators: { header: [{
                    type: i0.Input
                }], package: [{
                    type: i0.Input
                }], type: [{
                    type: i0.Input
                }], path: [{
                    type: i0.Input
                }], pathIsUrl: [], getPathOptions: [] } });

    var TuiDocSourceCodeModule = /** @class */ (function () {
        function TuiDocSourceCodeModule() {
        }
        return TuiDocSourceCodeModule;
    }());
    TuiDocSourceCodeModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocSourceCodeModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiDocSourceCodeModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocSourceCodeModule, declarations: [TuiDocSourceCodeComponent], imports: [i4.CommonModule, i5$1.PolymorpheusModule, i2.TuiButtonModule], exports: [TuiDocSourceCodeComponent] });
    TuiDocSourceCodeModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocSourceCodeModule, imports: [[i4.CommonModule, i5$1.PolymorpheusModule, i2.TuiButtonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocSourceCodeModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i4.CommonModule, i5$1.PolymorpheusModule, i2.TuiButtonModule],
                        declarations: [TuiDocSourceCodeComponent],
                        exports: [TuiDocSourceCodeComponent],
                    }]
            }] });

    var TuiLanguageSwitcherComponent = /** @class */ (function () {
        function TuiLanguageSwitcherComponent(switcher, flagPipe) {
            this.switcher = switcher;
            this.flagPipe = flagPipe;
            this.language = new i5.FormControl(i2.tuiCapitalizeFirstLetter(this.switcher.language));
            this.flags = new Map([
                ['chinese', i5$2.TuiCountryIsoCode.CN],
                ['dutch', i5$2.TuiCountryIsoCode.NL],
                ['english', i5$2.TuiCountryIsoCode.GB],
                ['french', i5$2.TuiCountryIsoCode.FR],
                ['german', i5$2.TuiCountryIsoCode.DE],
                ['italian', i5$2.TuiCountryIsoCode.IT],
                ['polish', i5$2.TuiCountryIsoCode.PL],
                ['portuguese', i5$2.TuiCountryIsoCode.PT],
                ['russian', i5$2.TuiCountryIsoCode.RU],
                ['spanish', i5$2.TuiCountryIsoCode.ES],
                ['turkish', i5$2.TuiCountryIsoCode.TR],
                ['ukrainian', i5$2.TuiCountryIsoCode.UA],
                ['kazakh', i5$2.TuiCountryIsoCode.KZ],
                ['malay', i5$2.TuiCountryIsoCode.MY],
                ['vietnamese', i5$2.TuiCountryIsoCode.VN],
            ]);
            this.names = Array.from(this.flags.keys());
        }
        /**
         * @deprecated use `<img [src]="countryIsoCode | tuiFlagPipe" />`
         * TODO drop in v4.0
         */
        TuiLanguageSwitcherComponent.prototype.getFlagPath = function (code) {
            return this.flagPipe.transform(code);
        };
        return TuiLanguageSwitcherComponent;
    }());
    TuiLanguageSwitcherComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLanguageSwitcherComponent, deps: [{ token: i5$2.TuiLanguageSwitcher }, { token: i2.TuiFlagPipe }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiLanguageSwitcherComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiLanguageSwitcherComponent, selector: "tui-language-switcher", providers: [
            // TODO: for backward compatibility only. Drop in v4.0
            i2.TuiFlagPipe,
        ], ngImport: i0__namespace, template: "<tui-select [formControl]=\"language\">\n    <ng-content></ng-content>\n    <tui-data-list *tuiDataList>\n        <button\n            *ngFor=\"let name of names\"\n            tuiOption\n            [value]=\"name | titlecase\"\n            (click)=\"switcher.setLanguage(name)\"\n        >\n            <img\n                alt=\"\"\n                class=\"t-flag\"\n                [src]=\"flags.get(name) | tuiFlag\"\n            />\n            {{ name | titlecase }}\n        </button>\n    </tui-data-list>\n</tui-select>\n", styles: [".t-flag{width:1.75rem;height:1.25rem;margin-right:.5rem}\n"], components: [{ type: i1__namespace.TuiSelectComponent, selector: "tui-select", inputs: ["stringify", "identityMatcher", "valueContent"] }, { type: i2__namespace.TuiDataListComponent, selector: "tui-data-list", inputs: ["role", "emptyContent", "size"] }, { type: i2__namespace.TuiOptionComponent, selector: "button[tuiOption], a[tuiOption]", inputs: ["size", "role", "disabled", "value"] }], directives: [{ type: i1__namespace.TuiSelectDirective, selector: "tui-select" }, { type: i5__namespace.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5__namespace.FormControlDirective, selector: "[formControl]", inputs: ["disabled", "formControl", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { type: i2__namespace.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "titlecase": i4__namespace.TitleCasePipe, "tuiFlag": i2__namespace.TuiFlagPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLanguageSwitcherComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-language-switcher',
                        templateUrl: './language-switcher.component.html',
                        styleUrls: ['./language-switcher.component.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            // TODO: for backward compatibility only. Drop in v4.0
                            i2.TuiFlagPipe,
                        ],
                    }]
            }], ctorParameters: function () {
            return [{ type: i5__namespace$2.TuiLanguageSwitcher, decorators: [{
                            type: i0.Inject,
                            args: [i5$2.TuiLanguageSwitcher]
                        }] }, { type: i2__namespace.TuiFlagPipe, decorators: [{
                            type: i0.Inject,
                            args: [i2.TuiFlagPipe]
                        }] }];
        } });

    var TuiLanguageSwitcherModule = /** @class */ (function () {
        function TuiLanguageSwitcherModule() {
        }
        return TuiLanguageSwitcherModule;
    }());
    TuiLanguageSwitcherModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLanguageSwitcherModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiLanguageSwitcherModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLanguageSwitcherModule, declarations: [TuiLanguageSwitcherComponent], imports: [i4.CommonModule,
            i2.TuiFlagPipeModule,
            i1.TuiSelectModule,
            i2.TuiDataListModule,
            i5.ReactiveFormsModule], exports: [TuiLanguageSwitcherComponent] });
    TuiLanguageSwitcherModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLanguageSwitcherModule, imports: [[
                i4.CommonModule,
                i2.TuiFlagPipeModule,
                i1.TuiSelectModule,
                i2.TuiDataListModule,
                i5.ReactiveFormsModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLanguageSwitcherModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4.CommonModule,
                            i2.TuiFlagPipeModule,
                            i1.TuiSelectModule,
                            i2.TuiDataListModule,
                            i5.ReactiveFormsModule,
                        ],
                        declarations: [TuiLanguageSwitcherComponent],
                        exports: [TuiLanguageSwitcherComponent],
                    }]
            }] });

    var TuiDocMainComponent = /** @class */ (function () {
        function TuiDocMainComponent(icons, theme, night) {
            var _this = this;
            this.icons = icons;
            this.theme = theme;
            this.night = night;
            this.change$ = this.night;
            this.night$ = this.change$.pipe(operators.startWith(null), operators.map(function () { return _this.night.value; }), operators.distinctUntilChanged(), operators.shareReplay({ bufferSize: 1, refCount: true }));
        }
        Object.defineProperty(TuiDocMainComponent.prototype, "mode", {
            get: function () {
                return this.night.value ? 'onDark' : null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiDocMainComponent.prototype, "icon", {
            get: function () {
                return this.night.value ? this.icons.day : this.icons.night;
            },
            enumerable: false,
            configurable: true
        });
        return TuiDocMainComponent;
    }());
    TuiDocMainComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocMainComponent, deps: [{ token: tokens.TUI_DOC_ICONS }, { token: i6$1.TuiThemeService }, { token: i6$1.TuiThemeNightService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiDocMainComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocMainComponent, selector: "tui-doc-main", host: { properties: { "attr.data-mode": "this.mode" } }, providers: [
            {
                provide: i2.TuiModeDirective,
                useExisting: i0.forwardRef(function () { return TuiDocMainComponent; }),
            },
            i6.TuiSwipeService,
        ], ngImport: i0__namespace, template: "<tui-theme-night *ngIf=\"theme.isDefaultTheme && night.useDefaultNightTheme && (night$ | async)\"></tui-theme-night>\n<tui-root [attr.tuiTheme]=\"theme.isDefaultTheme && night.useDefaultNightTheme && (night$ | async) ? 'night' : null\">\n    <div class=\"tui-doc-page\">\n        <tui-doc-navigation class=\"tui-doc-navigation\">\n            <ng-content select=\"tuiDocNavigation\"></ng-content>\n        </tui-doc-navigation>\n        <div class=\"tui-doc-content\">\n            <router-outlet class=\"tui-doc-outlet\"></router-outlet>\n        </div>\n    </div>\n    <header tuiDocHeader>\n        <ng-content select=\"tuiDocHeader\"></ng-content>\n        <button\n            appearance=\"secondary\"\n            shape=\"rounded\"\n            size=\"s\"\n            tuiIconButton\n            tuiMode=\"onLight\"\n            type=\"button\"\n            class=\"tui-doc-night-mode-switch\"\n            [icon]=\"icon\"\n            (click)=\"night.toggle()\"\n        ></button>\n    </header>\n    <ng-container ngProjectAs=\"tuiOverContent\">\n        <ng-content select=\"tuiOverContent\"></ng-content>\n    </ng-container>\n    <ng-container ngProjectAs=\"tuiOverDialogs\">\n        <ng-content select=\"tuiOverDialogs\"></ng-content>\n    </ng-container>\n    <ng-container ngProjectAs=\"tuiOverAlerts\">\n        <ng-content select=\"tuiOverAlerts\"></ng-content>\n    </ng-container>\n    <ng-container ngProjectAs=\"tuiOverPortals\">\n        <ng-content select=\"tuiOverPortals\"></ng-content>\n    </ng-container>\n    <ng-container ngProjectAs=\"tuiOverHints\">\n        <ng-content select=\"tuiOverHints\"></ng-content>\n    </ng-container>\n</tui-root>\n", styles: ["@keyframes tuiShaking{0%,to{transform:translate(0)}10%,30%,50%,70%,90%{transform:translate(-.3125rem)}20%,40%,60%,80%{transform:translate(.3125rem)}}html,body{scroll-padding-top:4rem;background:var(--tui-base-01);height:auto}tui-root>tui-scroll-controls>.t-bar_vertical{top:4rem!important}tui-doc-main{display:block}code:not(pre code):not(.hljs):not([class*=\"language-\"]){transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:inline-flex;background:var(--tui-base-02);color:var(--tui-text-02);vertical-align:middle;align-items:center;border-radius:.25rem;font-weight:500;outline:1px solid var(--tui-base-04);font-size:.75rem;padding:0 .3125rem;margin:.125rem .1875rem;text-wrap:wrap}tui-notification code:not(pre code):not(.hljs):not([class*=\"language-\"]){mix-blend-mode:luminosity}a code:not(pre code):not(.hljs):not([class*=\"language-\"]){color:var(--tui-link)}button:focus code,a:focus code{background:var(--tui-base-01)}.tui-doc-page{isolation:isolate;padding-top:4rem}tui-doc-navigation.tui-doc-navigation{position:fixed;top:4rem;bottom:0;width:16.25rem;border-right:1px solid var(--tui-base-03)}@media screen and (max-width: 47.9625em){tui-doc-navigation.tui-doc-navigation{display:none}}.tui-doc-content{margin-left:16.25rem}@media screen and (max-width: 47.9625em){.tui-doc-content{margin-left:0}}.tui-doc-outlet+*{display:block}.tui-doc-night-mode-switch{margin-left:1rem}.tui-doc-night-mode-switch tui-svg{color:var(--tui-text-02)}tui-doc-code .hljs-tag{background:none}tui-doc-code .hljs{display:block;overflow-x:auto;padding:.5em;color:var(--tui-text-01);background-color:var(--tui-clear)}tui-doc-code .hljs.hljs-line-numbers{background:transparent}tui-doc-code .hljs-subst,tui-doc-code .hljs-title{font-weight:normal;color:var(--tui-text-01)}tui-doc-code .hljs-property{color:var(--tui-support-14)}tui-doc-code .hljs-comment,tui-doc-code .hljs-quote{color:var(--tui-text-02);font-style:italic}tui-doc-code .hljs-meta{color:#e38162}tui-doc-code .hljs-section,tui-doc-code .hljs-name,tui-doc-code .hljs-literal,tui-doc-code .hljs-keyword,tui-doc-code .hljs-selector-tag,tui-doc-code .hljs-type,tui-doc-code .hljs-selector-id,tui-doc-code .hljs-selector-class{font-weight:bold;color:var(--tui-link)}tui-doc-code .hljs-attr{color:var(--tui-link)}tui-doc-code .hljs-attribute,tui-doc-code .hljs-number,tui-doc-code .hljs-regexp,tui-doc-code .hljs-link,tui-doc-code .hljs-built_in{font-weight:bold;color:var(--tui-support-06)}tui-doc-code .hljs-number,tui-doc-code .hljs-regexp,tui-doc-code .hljs-link{font-weight:normal}tui-doc-code .hljs-string{color:var(--tui-positive);font-weight:bold}tui-doc-code .hljs-symbol,tui-doc-code .hljs-bullet,tui-doc-code .hljs-formula{color:var(--tui-text-01);background:var(--tui-base-02);font-style:italic}tui-doc-code .hljs-doctag{text-decoration:underline}tui-doc-code .hljs-variable,tui-doc-code .hljs-template-variable{color:var(--tui-link-hover)}tui-doc-code [data-mode=onDark] .hljs-variable,tui-doc-code [data-mode=onDark] .hljs-template-variable{color:var(--tui-warning-fill)}tui-doc-code .hljs-addition{background:var(--tui-success-bg)}tui-doc-code .hljs-deletion{background:var(--tui-error-bg)}tui-doc-code .hljs-emphasis{font-style:italic}tui-doc-code .hljs-strong{font-weight:bold}tui-doc-code .hljs .hljs-line-numbers{padding:0}tui-doc-code .hljs-ln-numbers{vertical-align:top;opacity:.3;text-align:right;padding-right:1em!important}\n"], components: [{ type: i2__namespace.TuiThemeNightComponent, selector: "tui-theme-night" }, { type: i2__namespace.TuiRootComponent, selector: "tui-root" }, { type: TuiDocNavigationComponent, selector: "tui-doc-navigation" }, { type: TuiDocHeaderComponent, selector: "header[tuiDocHeader]" }, { type: i2__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i7__namespace.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }, { type: i2__namespace.TuiModeDirective, selector: "[tuiMode]", inputs: ["tuiMode"] }], pipes: { "async": i4__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.Default, encapsulation: i0__namespace.ViewEncapsulation.None });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocMainComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-doc-main',
                        templateUrl: './main.template.html',
                        styleUrls: ['./main.style.less'],
                        encapsulation: i0.ViewEncapsulation.None,
                        // @note: This one was default on purpose so we can test demo in default mode.
                        // eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection
                        changeDetection: i0.ChangeDetectionStrategy.Default,
                        providers: [
                            {
                                provide: i2.TuiModeDirective,
                                useExisting: i0.forwardRef(function () { return TuiDocMainComponent; }),
                            },
                            i6.TuiSwipeService,
                        ],
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_ICONS]
                        }] }, { type: i6__namespace$1.TuiThemeService, decorators: [{
                            type: i0.Inject,
                            args: [i6$1.TuiThemeService]
                        }] }, { type: i6__namespace$1.TuiThemeNightService, decorators: [{
                            type: i0.Inject,
                            args: [i6$1.TuiThemeNightService]
                        }] }];
        }, propDecorators: { mode: [{
                    type: i0.HostBinding,
                    args: ['attr.data-mode']
                }] } });

    var TuiDocMainModule = /** @class */ (function () {
        function TuiDocMainModule() {
        }
        return TuiDocMainModule;
    }());
    TuiDocMainModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocMainModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiDocMainModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocMainModule, declarations: [TuiDocMainComponent], imports: [i4.CommonModule,
            i7.RouterModule,
            i2.TuiThemeNightModule,
            TuiDocHeaderModule,
            i2.TuiRootModule,
            i2.TuiDialogModule,
            i2.TuiAlertModule,
            i2.TuiButtonModule,
            i2.TuiModeModule,
            TuiDocNavigationModule], exports: [TuiDocMainComponent] });
    TuiDocMainModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocMainModule, imports: [[
                i4.CommonModule,
                i7.RouterModule,
                i2.TuiThemeNightModule,
                TuiDocHeaderModule,
                i2.TuiRootModule,
                i2.TuiDialogModule,
                i2.TuiAlertModule,
                i2.TuiButtonModule,
                i2.TuiModeModule,
                TuiDocNavigationModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocMainModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4.CommonModule,
                            i7.RouterModule,
                            i2.TuiThemeNightModule,
                            TuiDocHeaderModule,
                            i2.TuiRootModule,
                            i2.TuiDialogModule,
                            i2.TuiAlertModule,
                            i2.TuiButtonModule,
                            i2.TuiModeModule,
                            TuiDocNavigationModule,
                        ],
                        declarations: [TuiDocMainComponent],
                        exports: [TuiDocMainComponent],
                    }]
            }] });

    /**
     * Array if related page titles
     */
    var PAGE_SEE_ALSO = new i0.InjectionToken('[PAGE_SEE_ALSO]');
    var PAGE_PROVIDERS = [
        {
            provide: PAGE_SEE_ALSO,
            deps: [i0.ElementRef, tokens.TUI_DOC_SEE_ALSO],
            useFactory: function (_a, seeAlsoGroups) {
                var nativeElement = _a.nativeElement;
                var currentHeader = nativeElement.getAttribute('header');
                var groups = seeAlsoGroups.filter(function (group) { return group.includes(currentHeader); }) || [];
                var seeAlsoSet = new Set(groups
                    .join()
                    .split(',')
                    .filter(function (component) { return component && component !== currentHeader; }));
                return Array.from(seeAlsoSet);
            },
        },
    ];

    var TuiDocPageTabConnectorDirective = /** @class */ (function () {
        function TuiDocPageTabConnectorDirective(template) {
            this.template = template;
        }
        return TuiDocPageTabConnectorDirective;
    }());
    TuiDocPageTabConnectorDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocPageTabConnectorDirective, deps: [{ token: i0.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiDocPageTabConnectorDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocPageTabConnectorDirective, selector: "[pageTab]", inputs: { pageTab: "pageTab" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocPageTabConnectorDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[pageTab]',
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.TemplateRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.TemplateRef]
                        }] }];
        }, propDecorators: { pageTab: [{
                    type: i0.Input
                }] } });

    var TuiDocPageComponent = /** @class */ (function () {
        function TuiDocPageComponent(defaultTabs, seeAlso) {
            this.defaultTabs = defaultTabs;
            this.seeAlso = seeAlso;
            this.header = '';
            this.package = '';
            this.type = '';
            this.path = '';
            this.deprecated = false;
            this.tabConnectors = i6.EMPTY_QUERY;
            this.activeItemIndex = 0;
            this.from = / /g;
            this.to = '_';
        }
        Object.defineProperty(TuiDocPageComponent.prototype, "showSeeAlso", {
            get: function () {
                return !!this.seeAlso.length && this.activeItemIndex === 0;
            },
            enumerable: false,
            configurable: true
        });
        return TuiDocPageComponent;
    }());
    TuiDocPageComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocPageComponent, deps: [{ token: tokens.TUI_DOC_DEFAULT_TABS }, { token: PAGE_SEE_ALSO }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiDocPageComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDocPageComponent, selector: "tui-doc-page", inputs: { header: "header", package: "package", type: "type", path: "path", deprecated: "deprecated" }, providers: PAGE_PROVIDERS, queries: [{ propertyName: "tabConnectors", predicate: TuiDocPageTabConnectorDirective }], ngImport: i0__namespace, template: "<header class=\"t-header\">\n    <h1 class=\"t-title\">\n        {{ header }}\n        <tui-tag\n            *ngIf=\"!!deprecated || deprecated === ''\"\n            status=\"custom\"\n            value=\"deprecated\"\n            class=\"t-tag t-tag_deprecated\"\n        ></tui-tag>\n        <tui-tag\n            *ngIf=\"package\"\n            status=\"custom\"\n            class=\"t-tag t-tag_package\"\n            [autoColor]=\"true\"\n            [value]=\"package\"\n        ></tui-tag>\n    </h1>\n    <tui-tabs-with-more\n        *ngIf=\"tabConnectors.length\"\n        class=\"t-tabs\"\n        [(activeItemIndex)]=\"activeItemIndex\"\n    >\n        <ng-container *ngFor=\"let tab of tabConnectors; first as first; index as index\">\n            <ng-container *ngIf=\"tab.pageTab || defaultTabs[index] as tabName\">\n                <a\n                    *tuiItem\n                    routerLinkActive\n                    tuiTab\n                    [routerLink]=\"first ? './' : (tabName | tuiReplace: from : to)\"\n                    [routerLinkActiveOptions]=\"{exact: first}\"\n                >\n                    {{ tabName }}\n                </a>\n            </ng-container>\n        </ng-container>\n    </tui-tabs-with-more>\n    <tui-doc-source-code\n        class=\"t-source-code\"\n        [header]=\"header\"\n        [package]=\"package\"\n        [path]=\"path\"\n        [type]=\"type\"\n    ></tui-doc-source-code>\n</header>\n<div class=\"t-content\">\n    <ng-content></ng-content>\n    <tui-doc-see-also\n        *ngIf=\"showSeeAlso\"\n        class=\"t-see-also\"\n        [seeAlso]=\"seeAlso\"\n    ></tui-doc-see-also>\n    <ng-container *ngFor=\"let tab of tabConnectors; index as index\">\n        <ng-container\n            *ngIf=\"index === activeItemIndex\"\n            [ngTemplateOutlet]=\"tab.template\"\n        ></ng-container>\n    </ng-container>\n</div>\n", styles: [":host{display:flex;flex-direction:column;min-height:0;flex-basis:0;flex-grow:1}.t-header{display:flex;font:var(--tui-font-heading-3);flex-wrap:wrap;min-height:7.25rem;color:var(--tui-text-01);box-shadow:inset 0 -1px 0 0 var(--tui-base-03);padding:3.75rem 0 0;box-sizing:border-box;flex-shrink:0;margin:0 min(10vw,8.75rem)}:host-context(tui-root._mobile) .t-header{font:var(--tui-font-heading-4);min-height:4.5rem;padding:1.25rem 1.25rem 0;margin:0}.t-title{min-width:100%;font-size:inherit;margin:0}.t-tag{vertical-align:middle;text-transform:uppercase;margin-right:.5rem}.t-tag_deprecated{background-color:var(--tui-error-fill);color:#fff}.t-tag.t-tag_package{color:#000}.t-tabs{flex:1;margin:1.125rem .3125rem 0 0}:host-context(tui-root._mobile) .t-tabs{margin-top:.25rem}.t-content{padding:2rem 0;margin:0 min(10vw,8.75rem)}:host-context(tui-root._mobile) .t-content{padding:2rem 1.25rem;margin:0}.t-see-also{min-width:18.75rem;width:30%;float:right;margin-left:1.5rem}:host-context(tui-root._mobile) .t-see-also{float:none;width:100%;margin:0 0 1.5rem}.t-source-code{align-self:flex-end;line-height:2.75rem;margin-left:auto}\n"], components: [{ type: i1__namespace.TuiTagComponent, selector: "tui-tag, a[tuiTag], button[tuiTag]", inputs: ["value", "editable", "separator", "maxLength", "size", "showLoader", "status", "hoverable", "removable", "disabled", "autoColor", "leftContent"], outputs: ["edited"] }, { type: i1__namespace.TuiTabsWithMoreComponent, selector: "tui-tabs-with-more, nav[tuiTabsWithMore]", inputs: ["moreContent", "dropdownContent", "underline", "activeItemIndex", "itemsLimit"], outputs: ["activeItemIndexChange"] }, { type: i1__namespace.TuiTabComponent, selector: "a[tuiTab]:not([routerLink]), a[tuiTab][routerLink][routerLinkActive], button[tuiTab]" }, { type: TuiDocSourceCodeComponent, selector: "tui-doc-source-code", inputs: ["header", "package", "type", "path"] }, { type: TuiDocSeeAlsoComponent, selector: "tui-doc-see-also", inputs: ["seeAlso"] }], directives: [{ type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i6__namespace.TuiItemDirective, selector: "[tuiItem]" }, { type: i7__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i7__namespace.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "routerLinkActive"], exportAs: ["routerLinkActive"] }, { type: i4__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "tuiReplace": i6__namespace.TuiReplacePipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocPageComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-doc-page',
                        templateUrl: './page.template.html',
                        styleUrls: ['./page.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: PAGE_PROVIDERS,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DOC_DEFAULT_TABS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [PAGE_SEE_ALSO]
                        }] }];
        }, propDecorators: { header: [{
                    type: i0.Input
                }], package: [{
                    type: i0.Input
                }], type: [{
                    type: i0.Input
                }], path: [{
                    type: i0.Input
                }], deprecated: [{
                    type: i0.Input
                }], tabConnectors: [{
                    type: i0.ContentChildren,
                    args: [TuiDocPageTabConnectorDirective]
                }] } });

    var TuiDocPageModule = /** @class */ (function () {
        function TuiDocPageModule() {
        }
        return TuiDocPageModule;
    }());
    TuiDocPageModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocPageModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiDocPageModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocPageModule, declarations: [TuiDocPageComponent, TuiDocPageTabConnectorDirective], imports: [i4.CommonModule,
            i7.RouterModule,
            TuiDocSeeAlsoModule,
            i1.TuiTabsModule,
            i1.TuiTagModule,
            TuiDocSourceCodeModule,
            i6.TuiReplacePipeModule], exports: [TuiDocPageComponent, TuiDocPageTabConnectorDirective] });
    TuiDocPageModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocPageModule, imports: [[
                i4.CommonModule,
                i7.RouterModule,
                TuiDocSeeAlsoModule,
                i1.TuiTabsModule,
                i1.TuiTagModule,
                TuiDocSourceCodeModule,
                i6.TuiReplacePipeModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDocPageModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4.CommonModule,
                            i7.RouterModule,
                            TuiDocSeeAlsoModule,
                            i1.TuiTabsModule,
                            i1.TuiTagModule,
                            TuiDocSourceCodeModule,
                            i6.TuiReplacePipeModule,
                        ],
                        declarations: [TuiDocPageComponent, TuiDocPageTabConnectorDirective],
                        exports: [TuiDocPageComponent, TuiDocPageTabConnectorDirective],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.PAGE_PROVIDERS = PAGE_PROVIDERS;
    exports.PAGE_SEE_ALSO = PAGE_SEE_ALSO;
    exports.TUI_DOC_EXAMPLE_DEFAULT_OPTIONS = TUI_DOC_EXAMPLE_DEFAULT_OPTIONS;
    exports.TUI_DOC_EXAMPLE_OPTIONS = TUI_DOC_EXAMPLE_OPTIONS;
    exports.TuiDocCodeComponent = TuiDocCodeComponent;
    exports.TuiDocCodeModule = TuiDocCodeModule;
    exports.TuiDocCopyComponent = TuiDocCopyComponent;
    exports.TuiDocCopyModule = TuiDocCopyModule;
    exports.TuiDocDemoComponent = TuiDocDemoComponent;
    exports.TuiDocDemoModule = TuiDocDemoModule;
    exports.TuiDocDocumentationComponent = TuiDocDocumentationComponent;
    exports.TuiDocDocumentationModule = TuiDocDocumentationModule;
    exports.TuiDocDocumentationPropertyConnectorDirective = TuiDocDocumentationPropertyConnectorDirective;
    exports.TuiDocExampleComponent = TuiDocExampleComponent;
    exports.TuiDocExampleGetTabsPipe = TuiDocExampleGetTabsPipe;
    exports.TuiDocExampleModule = TuiDocExampleModule;
    exports.TuiDocHeaderComponent = TuiDocHeaderComponent;
    exports.TuiDocHeaderModule = TuiDocHeaderModule;
    exports.TuiDocMainComponent = TuiDocMainComponent;
    exports.TuiDocMainModule = TuiDocMainModule;
    exports.TuiDocNavigationComponent = TuiDocNavigationComponent;
    exports.TuiDocNavigationModule = TuiDocNavigationModule;
    exports.TuiDocPageComponent = TuiDocPageComponent;
    exports.TuiDocPageModule = TuiDocPageModule;
    exports.TuiDocPageTabConnectorDirective = TuiDocPageTabConnectorDirective;
    exports.TuiDocSeeAlsoComponent = TuiDocSeeAlsoComponent;
    exports.TuiDocSeeAlsoModule = TuiDocSeeAlsoModule;
    exports.TuiDocSourceCodeComponent = TuiDocSourceCodeComponent;
    exports.TuiDocSourceCodeModule = TuiDocSourceCodeModule;
    exports.TuiDocTabComponent = TuiDocTabComponent;
    exports.TuiDocTabModule = TuiDocTabModule;
    exports.TuiDocTypeReferencePipe = TuiDocTypeReferencePipe;
    exports.TuiGetColorPipe = TuiGetColorPipe;
    exports.TuiGetOpacityPipe = TuiGetOpacityPipe;
    exports.TuiInputOpacityDirective = TuiInputOpacityDirective;
    exports.TuiInputOpacityModule = TuiInputOpacityModule;
    exports.TuiInspectPipe = TuiInspectPipe;
    exports.TuiIsOptionalPipe = TuiIsOptionalPipe;
    exports.TuiIsPrimitivePolymorpheusContentPipe = TuiIsPrimitivePolymorpheusContentPipe;
    exports.TuiLanguageSwitcherComponent = TuiLanguageSwitcherComponent;
    exports.TuiLanguageSwitcherModule = TuiLanguageSwitcherModule;
    exports.TuiShowCleanerPipe = TuiShowCleanerPipe;
    exports.TuiStripOptionalPipe = TuiStripOptionalPipe;
    exports.tuiDocExampleOptionsProvider = tuiDocExampleOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-addon-doc-components.umd.js.map

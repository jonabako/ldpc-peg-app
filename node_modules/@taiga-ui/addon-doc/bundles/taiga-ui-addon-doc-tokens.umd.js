(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@taiga-ui/cdk'), require('@angular/core'), require('@taiga-ui/addon-doc/utils'), require('rxjs'), require('rxjs/operators'), require('@taiga-ui/core')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/addon-doc/tokens', ['exports', '@taiga-ui/cdk', '@angular/core', '@taiga-ui/addon-doc/utils', 'rxjs', 'rxjs/operators', '@taiga-ui/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"]["addon-doc"] = global["taiga-ui"]["addon-doc"] || {}, global["taiga-ui"]["addon-doc"].tokens = {}), global.cdk, global.ng.core, global["taiga-ui"]["addon-doc"].utils, global.rxjs, global.rxjs.operators, global.core$1));
})(this, (function (exports, cdk, core, utils, rxjs, operators, core$1) { 'use strict';

    /**
     * Code actions for the opened tab with code example
     */
    var TUI_DOC_CODE_ACTIONS = cdk.tuiCreateToken('');

    /**
     * Service for opening online IDE e.g. Stackblitz
     */
    var TUI_DOC_CODE_EDITOR = new core.InjectionToken('[TUI_DOC_CODE_EDITOR]');

    /**
     * Array of default tab names
     */
    var TUI_DOC_DEFAULT_TABS = cdk.tuiCreateToken([]);

    var TUI_DOC_DEFAULT_ICONS = {
        search: 'tuiIconSearch',
        day: 'tuiIconSun',
        night: 'tuiIconMoon',
        code: 'tuiIconCode',
        menu: 'tuiIconMenuLarge',
    };
    var TUI_DOC_ICONS = cdk.tuiCreateToken(TUI_DOC_DEFAULT_ICONS);
    function tuiDocIconsProvider(icons) {
        return cdk.tuiProvideOptions(TUI_DOC_ICONS, icons, TUI_DOC_DEFAULT_ICONS);
    }

    /**
     * Processes content in example
     */
    var TUI_DOC_EXAMPLE_CONTENT_PROCESSOR = cdk.tuiCreateToken(rxjs.identity);
    /**
     * Processes markdown in code block
     */
    var TUI_DOC_EXAMPLE_MARKDOWN_CODE_PROCESSOR = cdk.tuiCreateToken(utils.tuiTryParseMarkdownCodeBlock);

    /**
     * Token to exclude inherited documentation properties
     */
    var TUI_DOC_EXCLUDED_PROPERTIES = cdk.tuiCreateToken(new Set([]));
    function tuiDocExcludeProperties(properties) {
        return { provide: TUI_DOC_EXCLUDED_PROPERTIES, useValue: new Set(properties) };
    }

    /**
     * TODO: think about reorganization in @taiga-ui/i18n way
     */
    /**
     * tui-doc-demo i18n texts
     * Works with a tuple
     * [@string tuiMode tooltip content, @string word 'background', @string 'form value']
     */
    var TUI_DOC_DEMO_TEXTS = cdk.tuiCreateToken([
        'Read more more about modes: ',
        'Background',
        'Form value',
    ]);
    /**
     * tui-doc-documentation i18n texts
     * Works with a tuple
     * [
     * @string word 'argument',
     * @string word 'type',
     * @string 'name and description',
     * @string word 'value'
     * @string message for tooltip about ng-polymorpheus
     * ]
     */
    var TUI_DOC_DOCUMENTATION_TEXTS = cdk.tuiCreateToken([
        'Argument',
        'Type',
        'Name and description',
        'Value',
        'Learn about our dynamic templates from ',
    ]);
    /**
     * tui-doc-example i18n texts
     * Works with a tuple
     * [
     * @string default tab name,
     * @string link to a sample copied message text,
     * @string link to a sample copied message label
     * ]
     */
    var TUI_DOC_EXAMPLE_TEXTS = cdk.tuiCreateToken([
        'Preview',
        'Link to a sample was successfully copied',
        'Done',
    ]);
    var TUI_DOC_MENU_TEXT = cdk.tuiCreateToken('Menu');
    var TUI_DOC_SEARCH_TEXT = cdk.tuiCreateToken('Search');
    var TUI_DOC_SEE_ALSO_TEXT = cdk.tuiCreateToken('See also');
    var TUI_DOC_SOURCE_CODE_TEXT = cdk.tuiCreateToken('Source code');

    /**
     * Main logo
     */
    var TUI_DOC_LOGO = cdk.tuiCreateToken('');

    /**
     * Stream that emits if loading of page is over (for example, to begin scrollIntoView)
     */
    var TUI_DOC_PAGE_LOADED = cdk.tuiCreateToken(rxjs.defer(function () { return rxjs.timer(200).pipe(operators.switchMap(function () { return rxjs.of(true); })); }));

    /**
     * Documentation pages
     */
    var TUI_DOC_PAGES = cdk.tuiCreateToken([]);
    var TUI_DOC_MAP_PAGES = cdk.tuiCreateTokenFromFactory(function () { return utils.tuiToFlatMapPages(core.inject(TUI_DOC_PAGES)); });

    /**
     * Defines the transition animation for scroll
     * @deprecated will be remove in v4.0
     */
    var TUI_DOC_SCROLL_BEHAVIOR = cdk.tuiCreateTokenFromFactory(function () { return core.inject(core$1.TUI_REDUCED_MOTION) ? 'auto' : 'smooth'; });

    /**
     * Array of arrays of related pages
     */
    var TUI_DOC_SEE_ALSO = cdk.tuiCreateToken([]);

    /**
     * Source code link
     */
    var TUI_DOC_SOURCE_CODE = cdk.tuiCreateToken(null);

    /**
     * Page title prefix
     */
    var TUI_DOC_TITLE = cdk.tuiCreateToken('');

    var TUI_DOC_TYPE_REFERENCE_HANDLER = cdk.tuiCreateToken(null);
    var TUI_DOC_TYPE_REFERENCE_PARSER = cdk.tuiCreateToken(utils.tuiTypeReferenceParser);

    var TUI_DOC_URL_STATE_HANDLER = cdk.tuiCreateToken(String);

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_DOC_CODE_ACTIONS = TUI_DOC_CODE_ACTIONS;
    exports.TUI_DOC_CODE_EDITOR = TUI_DOC_CODE_EDITOR;
    exports.TUI_DOC_DEFAULT_ICONS = TUI_DOC_DEFAULT_ICONS;
    exports.TUI_DOC_DEFAULT_TABS = TUI_DOC_DEFAULT_TABS;
    exports.TUI_DOC_DEMO_TEXTS = TUI_DOC_DEMO_TEXTS;
    exports.TUI_DOC_DOCUMENTATION_TEXTS = TUI_DOC_DOCUMENTATION_TEXTS;
    exports.TUI_DOC_EXAMPLE_CONTENT_PROCESSOR = TUI_DOC_EXAMPLE_CONTENT_PROCESSOR;
    exports.TUI_DOC_EXAMPLE_MARKDOWN_CODE_PROCESSOR = TUI_DOC_EXAMPLE_MARKDOWN_CODE_PROCESSOR;
    exports.TUI_DOC_EXAMPLE_TEXTS = TUI_DOC_EXAMPLE_TEXTS;
    exports.TUI_DOC_EXCLUDED_PROPERTIES = TUI_DOC_EXCLUDED_PROPERTIES;
    exports.TUI_DOC_ICONS = TUI_DOC_ICONS;
    exports.TUI_DOC_LOGO = TUI_DOC_LOGO;
    exports.TUI_DOC_MAP_PAGES = TUI_DOC_MAP_PAGES;
    exports.TUI_DOC_MENU_TEXT = TUI_DOC_MENU_TEXT;
    exports.TUI_DOC_PAGES = TUI_DOC_PAGES;
    exports.TUI_DOC_PAGE_LOADED = TUI_DOC_PAGE_LOADED;
    exports.TUI_DOC_SCROLL_BEHAVIOR = TUI_DOC_SCROLL_BEHAVIOR;
    exports.TUI_DOC_SEARCH_TEXT = TUI_DOC_SEARCH_TEXT;
    exports.TUI_DOC_SEE_ALSO = TUI_DOC_SEE_ALSO;
    exports.TUI_DOC_SEE_ALSO_TEXT = TUI_DOC_SEE_ALSO_TEXT;
    exports.TUI_DOC_SOURCE_CODE = TUI_DOC_SOURCE_CODE;
    exports.TUI_DOC_SOURCE_CODE_TEXT = TUI_DOC_SOURCE_CODE_TEXT;
    exports.TUI_DOC_TITLE = TUI_DOC_TITLE;
    exports.TUI_DOC_TYPE_REFERENCE_HANDLER = TUI_DOC_TYPE_REFERENCE_HANDLER;
    exports.TUI_DOC_TYPE_REFERENCE_PARSER = TUI_DOC_TYPE_REFERENCE_PARSER;
    exports.TUI_DOC_URL_STATE_HANDLER = TUI_DOC_URL_STATE_HANDLER;
    exports.tuiDocExcludeProperties = tuiDocExcludeProperties;
    exports.tuiDocIconsProvider = tuiDocIconsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-addon-doc-tokens.umd.js.map

import * as i0 from '@angular/core';
import { ElementRef, Directive, Self, Inject, Input, NgModule, HostBinding } from '@angular/core';
import { TUI_DOC_PAGE_LOADED } from '@taiga-ui/addon-doc/tokens';
import * as i1 from '@taiga-ui/cdk';
import { tuiGetElementObscures, TuiDestroyService } from '@taiga-ui/cdk';
import * as i2 from 'rxjs';
import { ReplaySubject } from 'rxjs';
import { filter, switchMap, debounceTime, takeUntil } from 'rxjs/operators';

class TuiScrollIntoViewLinkDirective {
    constructor(destroy$, { nativeElement }, readyToScroll$) {
        this.readyToScroll$ = readyToScroll$;
        this.scroll$ = new ReplaySubject(1);
        this.readyToScroll$
            .pipe(filter(Boolean), switchMap(() => this.scroll$), debounceTime(750), filter(shallWe => shallWe && !!tuiGetElementObscures(nativeElement)), takeUntil(destroy$))
            .subscribe(() => {
            nativeElement.scrollIntoView();
        });
    }
    set tuiScrollIntoViewLink(shallWe) {
        this.scroll$.next(shallWe);
    }
}
TuiScrollIntoViewLinkDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollIntoViewLinkDirective, deps: [{ token: TuiDestroyService, self: true }, { token: ElementRef }, { token: TUI_DOC_PAGE_LOADED }], target: i0.ɵɵFactoryTarget.Directive });
TuiScrollIntoViewLinkDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiScrollIntoViewLinkDirective, selector: "[tuiScrollIntoViewLink]", inputs: { tuiScrollIntoViewLink: "tuiScrollIntoViewLink" }, providers: [TuiDestroyService], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollIntoViewLinkDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiScrollIntoViewLink]',
                    providers: [TuiDestroyService],
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiDestroyService, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDestroyService]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i2.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_DOC_PAGE_LOADED]
                }] }]; }, propDecorators: { tuiScrollIntoViewLink: [{
                type: Input
            }] } });

class TuiScrollIntoViewLinkModule {
}
TuiScrollIntoViewLinkModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollIntoViewLinkModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiScrollIntoViewLinkModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollIntoViewLinkModule, declarations: [TuiScrollIntoViewLinkDirective], exports: [TuiScrollIntoViewLinkDirective] });
TuiScrollIntoViewLinkModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollIntoViewLinkModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiScrollIntoViewLinkModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiScrollIntoViewLinkDirective],
                    exports: [TuiScrollIntoViewLinkDirective],
                }]
        }] });

class TuiTextCodeDirective {
    constructor() {
        this.code = '';
    }
}
TuiTextCodeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextCodeDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
TuiTextCodeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTextCodeDirective, selector: "code[tuiText]", inputs: { code: ["tuiText", "code"] }, host: { properties: { "textContent": "this.code" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextCodeDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'code[tuiText]',
                }]
        }], propDecorators: { code: [{
                type: Input,
                args: ['tuiText']
            }, {
                type: HostBinding,
                args: ['textContent']
            }] } });

class TuiTextCodeModule {
}
TuiTextCodeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextCodeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiTextCodeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextCodeModule, declarations: [TuiTextCodeDirective], exports: [TuiTextCodeDirective] });
TuiTextCodeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextCodeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextCodeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiTextCodeDirective],
                    exports: [TuiTextCodeDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiScrollIntoViewLinkDirective, TuiScrollIntoViewLinkModule, TuiTextCodeDirective, TuiTextCodeModule };
//# sourceMappingURL=taiga-ui-addon-doc-directives.js.map

import { tuiCreateToken } from '@taiga-ui/cdk';
import * as i0 from '@angular/core';
import { Injectable, Inject } from '@angular/core';
import { LOCAL_STORAGE, WINDOW } from '@ng-web-apis/common';
import { BehaviorSubject } from 'rxjs';

const TUI_THEME_STORAGE_DEFAULT_KEY = 'tuiTheme';
const TUI_THEME_DEFAULT_NAME = 'Taiga UI';
const TUI_THEME_STORAGE_KEY = tuiCreateToken(TUI_THEME_STORAGE_DEFAULT_KEY);
const TUI_THEME_NAME = tuiCreateToken(TUI_THEME_DEFAULT_NAME);

class TuiThemeService extends BehaviorSubject {
    constructor(initialTheme, key, storage) {
        super(storage.getItem(key) || initialTheme);
        this.initialTheme = initialTheme;
        this.key = key;
        this.storage = storage;
    }
    next(theme) {
        this.storage.setItem(this.key, theme);
        super.next(theme);
    }
    get isDefaultTheme() {
        return this.value === TUI_THEME_DEFAULT_NAME;
    }
}
TuiThemeService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiThemeService, deps: [{ token: TUI_THEME_NAME }, { token: TUI_THEME_STORAGE_KEY }, { token: LOCAL_STORAGE }], target: i0.ɵɵFactoryTarget.Injectable });
TuiThemeService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiThemeService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiThemeService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_THEME_NAME]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_THEME_STORAGE_KEY]
                }] }, { type: Storage, decorators: [{
                    type: Inject,
                    args: [LOCAL_STORAGE]
                }] }]; } });

const TUI_THEME_NIGHT_STORAGE_DEFAULT_KEY = 'tuiNight';
const TUI_THEME_NIGHT_STORAGE_KEY = tuiCreateToken(TUI_THEME_NIGHT_STORAGE_DEFAULT_KEY);
const TUI_USE_DEFAULT_NIGHT_THEME = tuiCreateToken(true);

class TuiThemeNightService extends BehaviorSubject {
    constructor(win, storage, key, useDefaultNightTheme) {
        super(storage.getItem(key) === 'true' ||
            (storage.getItem(key) === null &&
                win.matchMedia('(prefers-color-scheme: dark)').matches));
        this.win = win;
        this.storage = storage;
        this.key = key;
        this.useDefaultNightTheme = useDefaultNightTheme;
    }
    next(night) {
        this.storage.setItem(this.key, String(night));
        super.next(night);
    }
    toggle() {
        this.next(!this.value);
    }
}
TuiThemeNightService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiThemeNightService, deps: [{ token: WINDOW }, { token: LOCAL_STORAGE }, { token: TUI_THEME_NIGHT_STORAGE_KEY }, { token: TUI_USE_DEFAULT_NIGHT_THEME }], target: i0.ɵɵFactoryTarget.Injectable });
TuiThemeNightService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiThemeNightService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiThemeNightService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: Window, decorators: [{
                    type: Inject,
                    args: [WINDOW]
                }] }, { type: Storage, decorators: [{
                    type: Inject,
                    args: [LOCAL_STORAGE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_THEME_NIGHT_STORAGE_KEY]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_USE_DEFAULT_NIGHT_THEME]
                }] }]; } });

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_THEME_DEFAULT_NAME, TUI_THEME_NAME, TUI_THEME_NIGHT_STORAGE_DEFAULT_KEY, TUI_THEME_NIGHT_STORAGE_KEY, TUI_THEME_STORAGE_DEFAULT_KEY, TUI_THEME_STORAGE_KEY, TUI_USE_DEFAULT_NIGHT_THEME, TuiThemeNightService, TuiThemeService };
//# sourceMappingURL=taiga-ui-addon-doc-services.js.map

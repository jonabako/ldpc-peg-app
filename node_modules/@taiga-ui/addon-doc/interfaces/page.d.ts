import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
export interface TuiDocPageBase {
    readonly section?: string;
    readonly title: string;
}
export interface TuiDocPage extends TuiDocPageBase {
    readonly fragment?: string;
    readonly keywords?: string;
    readonly route: string;
    readonly icon?: PolymorpheusContent;
    readonly rel?: HTMLAnchorElement['rel'];
    readonly target?: HTMLAnchorElement['target'];
}
export interface TuiDocPageGroup extends TuiDocPageBase {
    readonly subPages: readonly TuiDocPage[];
}
export declare type TuiRawLoaderContent = Promise<{
    default: string;
}> | string;
/**
 * @deprecated: use {@link TuiRawLoaderContent}
 * TODO: remove in v4.0
 */
export declare type RawLoaderContent = TuiRawLoaderContent;
export declare const TUI_EXAMPLE_PRIMARY_FILE_NAME: {
    readonly TS: "TypeScript";
    readonly LESS: "LESS";
    readonly HTML: "HTML";
};
export declare type TuiDocExample = Record<string, TuiRawLoaderContent> | {
    [TUI_EXAMPLE_PRIMARY_FILE_NAME.HTML]?: string;
    [TUI_EXAMPLE_PRIMARY_FILE_NAME.LESS]?: string;
    [TUI_EXAMPLE_PRIMARY_FILE_NAME.TS]?: string;
};

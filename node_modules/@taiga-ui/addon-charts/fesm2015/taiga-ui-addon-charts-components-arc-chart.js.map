{"version":3,"file":"taiga-ui-addon-charts-components-arc-chart.js","sources":["../../../projects/addon-charts/components/arc-chart/arc-chart.component.ts","../../../projects/addon-charts/components/arc-chart/arc-chart.template.html","../../../projects/addon-charts/components/arc-chart/arc-chart.module.ts","../../../projects/addon-charts/components/arc-chart/taiga-ui-addon-charts-components-arc-chart.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    HostBinding,\n    Inject,\n    Input,\n    Output,\n    QueryList,\n    Self,\n    ViewChildren,\n} from '@angular/core';\nimport {DomSanitizer, SafeValue} from '@angular/platform-browser';\nimport {TuiDestroyService, tuiTypedFromEvent, tuiWatch} from '@taiga-ui/cdk';\nimport {TuiSizeXL} from '@taiga-ui/core';\nimport {merge, Observable, ReplaySubject, timer} from 'rxjs';\nimport {map, startWith, switchMap, takeUntil, tap} from 'rxjs/operators';\n\n// 3/4 with 1% safety offset\nconst ARC = 0.76;\n\nconst SIZE: Record<TuiSizeXL, number> = {\n    m: 9,\n    l: 11,\n    xl: 16,\n};\n\nconst WIDTH: Record<TuiSizeXL, number> = {\n    m: 0.25,\n    l: 0.375,\n    xl: 0.5625,\n};\n\nconst GAP: Record<TuiSizeXL, number> = {\n    m: 0.125,\n    l: 0.1875,\n    xl: 0.25,\n};\n\nfunction arcsToIndex(arcs: QueryList<ElementRef<SVGElement>>): Array<Observable<number>> {\n    return arcs.map(({nativeElement}, index) =>\n        merge(\n            tuiTypedFromEvent(nativeElement, 'mouseenter').pipe(map(() => index)),\n            tuiTypedFromEvent(nativeElement, 'mouseleave').pipe(map(() => NaN)),\n        ),\n    );\n}\n\n@Component({\n    selector: 'tui-arc-chart',\n    templateUrl: './arc-chart.template.html',\n    styleUrls: ['./arc-chart.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TuiDestroyService],\n})\nexport class TuiArcChartComponent {\n    private readonly arcs$ = new ReplaySubject<QueryList<ElementRef<SVGElement>>>(1);\n\n    @ViewChildren('arc')\n    set arcs(arcs: QueryList<ElementRef<SVGElement>>) {\n        this.arcs$.next(arcs);\n    }\n\n    @Input()\n    value: readonly number[] = [];\n\n    @Input()\n    @HostBinding('attr.data-size')\n    size: TuiSizeXL = 'm';\n\n    @Input()\n    max = 100;\n\n    @Input()\n    minLabel = '0%';\n\n    @Input()\n    maxLabel = '100%';\n\n    @Input()\n    activeItemIndex = NaN;\n\n    @Output()\n    readonly activeItemIndexChange = this.arcs$.pipe(\n        switchMap(arcs =>\n            arcs.changes.pipe(\n                startWith(null),\n                switchMap(() => merge(...arcsToIndex(arcs))),\n            ),\n        ),\n        tap(index => {\n            this.activeItemIndex = index;\n        }),\n    );\n\n    initialized = false;\n\n    constructor(\n        @Inject(DomSanitizer) private readonly sanitizer: DomSanitizer,\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Self() @Inject(TuiDestroyService) destroy$: Observable<void>,\n    ) {\n        timer(0)\n            .pipe(tuiWatch(cdr), takeUntil(destroy$))\n            .subscribe(() => {\n                this.initialized = true;\n            });\n    }\n\n    @HostBinding('style.width.rem')\n    @HostBinding('style.height.rem')\n    get width(): number {\n        return SIZE[this.size];\n    }\n\n    @HostBinding('style.strokeWidth.rem')\n    get strokeWidth(): number {\n        return WIDTH[this.size];\n    }\n\n    isInactive(index: number): boolean {\n        return !Number.isNaN(this.activeItemIndex) && index !== this.activeItemIndex;\n    }\n\n    getInset(index: number): number {\n        return this.strokeWidth / 2 + index * (this.strokeWidth + GAP[this.size]);\n    }\n\n    getDiameter(index: number): number {\n        return SIZE[this.size] - 2 * this.getInset(index);\n    }\n\n    getLength(index: number): number {\n        return Math.PI * this.getDiameter(index) * ARC;\n    }\n\n    getOffset(index: number): number {\n        return this.getLength(index) * (1 - Math.min(this.value[index] / this.max, 1));\n    }\n\n    getColor(index: number): SafeValue {\n        return this.sanitizer.bypassSecurityTrustStyle(\n            `var(--tui-chart-${index}, var(--tui-support-0${index + 1}))`,\n        );\n    }\n}\n","<svg\n    *tuiRepeatTimes=\"let index of value.length\"\n    focusable=\"false\"\n    viewBox=\"-100 -100 200 200\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    class=\"t-svg\"\n    [style.height.em]=\"getDiameter(index)\"\n    [style.left.em]=\"getInset(index)\"\n    [style.top.em]=\"getInset(index)\"\n    [style.width.em]=\"getDiameter(index)\"\n>\n    <path\n        d=\"M -70 70 A 100 100 0 1 1 70 70\"\n        vector-effect=\"non-scaling-stroke\"\n    />\n    <path\n        #arc\n        d=\"M -70 70 A 100 100 0 1 1 70 70\"\n        vector-effect=\"non-scaling-stroke\"\n        class=\"t-value\"\n        [class.t-value_inactive]=\"isInactive(index)\"\n        [style.stroke]=\"getColor(index)\"\n        [style.strokeDasharray.em]=\"getLength(index)\"\n        [style.strokeDashoffset.em]=\"initialized ? getOffset(index) : getLength(index)\"\n    />\n</svg>\n<div class=\"t-content\">\n    <div class=\"t-wrapper\">\n        <ng-content></ng-content>\n    </div>\n</div>\n<div class=\"t-percent\">\n    <span>{{ minLabel }}</span>\n    <span>{{ maxLabel }}</span>\n</div>\n","import {NgModule} from '@angular/core';\nimport {TuiRepeatTimesModule} from '@taiga-ui/cdk';\n\nimport {TuiArcChartComponent} from './arc-chart.component';\n\n@NgModule({\n    imports: [TuiRepeatTimesModule],\n    declarations: [TuiArcChartComponent],\n    exports: [TuiArcChartComponent],\n})\nexport class TuiArcChartModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
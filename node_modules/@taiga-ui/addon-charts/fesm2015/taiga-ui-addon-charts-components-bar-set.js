import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';
import { tuiPure } from '@taiga-ui/cdk';
import * as i1 from '@taiga-ui/addon-charts/components/bar';
import { TuiBarModule } from '@taiga-ui/addon-charts/components/bar';
import * as i2 from '@angular/common';
import { CommonModule } from '@angular/common';

const PERCENT = 100;
const EMPTY_ARRAY = [];
const FILLER_ARRAY = [1];
class TuiBarSetComponent {
    constructor() {
        this.value = [];
        this.size = 'm';
        this.collapsed = false;
    }
    get computedValue() {
        return this.collapsed ? FILLER_ARRAY : this.value;
    }
    get computedSegments() {
        return this.collapsed ? this.value : EMPTY_ARRAY;
    }
    get computedSize() {
        return this.size || 'm';
    }
    getHeight(value) {
        return Math.abs((PERCENT * value) / this.getLargest(this.computedValue));
    }
    getColor(index) {
        return `var(--tui-chart-${index})`;
    }
    getLargest(value) {
        return value.some(a => a > 0)
            ? value.reduce((a, b) => (a > b ? a : b), 0)
            : Math.abs(value.reduce((a, b) => (a < b ? a : b), 0));
    }
}
TuiBarSetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBarSetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TuiBarSetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiBarSetComponent, selector: "tui-bar-set", inputs: { value: "value", size: "size", collapsed: "collapsed" }, ngImport: i0, template: "<ng-container *ngIf=\"size; else flexible\">\n    <ng-container\n        *ngFor=\"let item of computedValue; let index = index\"\n        [ngTemplateOutlet]=\"bar\"\n        [ngTemplateOutletContext]=\"{$implicit: item, index: index, flexible: false}\"\n    ></ng-container>\n</ng-container>\n<ng-template #flexible>\n    <div\n        *ngFor=\"let item of computedValue; let index = index\"\n        class=\"t-wrapper\"\n    >\n        <ng-container\n            [ngTemplateOutlet]=\"bar\"\n            [ngTemplateOutletContext]=\"{$implicit: item, index: index, flexible: true}\"\n        ></ng-container>\n    </div>\n</ng-template>\n<ng-template\n    #bar\n    let-flexible=\"flexible\"\n    let-index=\"index\"\n    let-item\n>\n    <tui-bar\n        automation-id=\"tui-bar-set__bar\"\n        class=\"t-bar\"\n        [class.t-bar_flexible]=\"flexible\"\n        [class.t-bar_negative]=\"item < 0\"\n        [size]=\"computedSize\"\n        [style.background]=\"getColor(index)\"\n        [style.height.%]=\"getHeight(item)\"\n        [value]=\"computedSegments\"\n    ></tui-bar>\n</ng-template>\n<span class=\"t-label\">\n    <ng-content></ng-content>\n</span>\n", styles: [":host{position:relative;display:flex;height:100%;align-items:flex-end;justify-content:center}.t-wrapper{display:flex;flex:1;height:100%;align-items:flex-end}.t-wrapper:first-of-type{margin-left:25%}.t-wrapper:last-of-type{margin-right:25%}.t-bar{transform-origin:bottom center}.t-bar_negative{transform:rotate(180deg);opacity:var(--tui-disabled-opacity)}.t-bar.t-bar_flexible{max-width:none;width:75%;margin:0 auto}.t-label{position:absolute;top:-1.5rem;font:var(--tui-font-text-xs);color:var(--tui-text-02)}\n"], components: [{ type: i1.TuiBarComponent, selector: "tui-bar", inputs: ["value", "size"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiPure
], TuiBarSetComponent.prototype, "getLargest", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBarSetComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-bar-set',
                    templateUrl: './bar-set.template.html',
                    styleUrls: ['./bar-set.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { value: [{
                type: Input
            }], size: [{
                type: Input
            }], collapsed: [{
                type: Input
            }], getLargest: [] } });

class TuiBarSetModule {
}
TuiBarSetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBarSetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiBarSetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBarSetModule, declarations: [TuiBarSetComponent], imports: [CommonModule, TuiBarModule], exports: [TuiBarSetComponent] });
TuiBarSetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBarSetModule, imports: [[CommonModule, TuiBarModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBarSetModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, TuiBarModule],
                    declarations: [TuiBarSetComponent],
                    exports: [TuiBarSetComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiBarSetComponent, TuiBarSetModule };
//# sourceMappingURL=taiga-ui-addon-charts-components-bar-set.js.map

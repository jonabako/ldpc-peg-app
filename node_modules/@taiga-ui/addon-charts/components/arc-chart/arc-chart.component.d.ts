import { ChangeDetectorRef, ElementRef, QueryList } from '@angular/core';
import { DomSanitizer, SafeValue } from '@angular/platform-browser';
import { TuiSizeXL } from '@taiga-ui/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class TuiArcChartComponent {
    private readonly sanitizer;
    private readonly arcs$;
    set arcs(arcs: QueryList<ElementRef<SVGElement>>);
    value: readonly number[];
    size: TuiSizeXL;
    max: number;
    minLabel: string;
    maxLabel: string;
    activeItemIndex: number;
    readonly activeItemIndexChange: Observable<number>;
    initialized: boolean;
    constructor(sanitizer: DomSanitizer, cdr: ChangeDetectorRef, destroy$: Observable<void>);
    get width(): number;
    get strokeWidth(): number;
    isInactive(index: number): boolean;
    getInset(index: number): number;
    getDiameter(index: number): number;
    getLength(index: number): number;
    getOffset(index: number): number;
    getColor(index: number): SafeValue;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiArcChartComponent, [null, null, { self: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiArcChartComponent, "tui-arc-chart", never, { "value": "value"; "size": "size"; "max": "max"; "minLabel": "minLabel"; "maxLabel": "maxLabel"; "activeItemIndex": "activeItemIndex"; }, { "activeItemIndexChange": "activeItemIndexChange"; }, never, ["*"]>;
}

import { QueryList } from '@angular/core';
import { TuiContextWithImplicit, TuiIdService, TuiTypedMapper } from '@taiga-ui/cdk';
import { TuiHintOptionsDirective, TuiSizeL, TuiSizeS } from '@taiga-ui/core';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class TuiBarChartComponent {
    private readonly hintOptions;
    private readonly autoIdString;
    readonly drivers: QueryList<Observable<boolean>>;
    value: ReadonlyArray<readonly number[]>;
    max: number;
    size: TuiSizeL | TuiSizeS | null;
    collapsed: boolean;
    constructor(hintOptions: TuiHintOptionsDirective | null, idService: TuiIdService);
    get hintContent(): PolymorpheusContent<TuiContextWithImplicit<number>>;
    get transposed(): ReadonlyArray<readonly number[]>;
    get computedMax(): number;
    readonly percentMapper: TuiTypedMapper<[readonly number[], boolean, number], number>;
    getHintId(index: number): string;
    private transpose;
    private getMax;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiBarChartComponent, [{ optional: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiBarChartComponent, "tui-bar-chart", never, { "value": "value"; "max": "max"; "size": "size"; "collapsed": "collapsed"; }, {}, never, never>;
}

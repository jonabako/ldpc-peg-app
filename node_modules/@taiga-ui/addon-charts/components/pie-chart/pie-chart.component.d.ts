import { EventEmitter } from '@angular/core';
import { SafeValue } from '@angular/platform-browser';
import { TuiContextWithImplicit, TuiIdService } from '@taiga-ui/cdk';
import { TuiHintOptionsDirective, TuiSizeXL, TuiSizeXS } from '@taiga-ui/core';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import * as i0 from "@angular/core";
export declare class TuiPieChartComponent {
    private readonly hintOptions;
    private readonly autoIdString;
    value: readonly number[];
    size: TuiSizeXL | TuiSizeXS;
    masked: boolean;
    activeItemIndex: number;
    readonly activeItemIndexChange: EventEmitter<number>;
    constructor(idService: TuiIdService, hintOptions: TuiHintOptionsDirective | null);
    get empty(): boolean;
    get hintContent(): PolymorpheusContent<TuiContextWithImplicit<number>>;
    get maskId(): string;
    get mask(): string | null;
    get radius(): string;
    get segments(): ReadonlyArray<[number, number]>;
    getTransform(index: number): string | null;
    onHovered(hovered: boolean, index: number): void;
    getColor(index: number): SafeValue;
    private getSum;
    private getSegments;
    private getDeg;
    private updateActiveItemIndex;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiPieChartComponent, [null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiPieChartComponent, "tui-pie-chart", never, { "value": "value"; "size": "size"; "masked": "masked"; "activeItemIndex": "activeItemIndex"; }, { "activeItemIndexChange": "activeItemIndexChange"; }, never, never>;
}

import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input, } from '@angular/core';
import { TUI_ALWAYS_DASHED, TUI_ALWAYS_SOLID } from '@taiga-ui/addon-charts/constants';
import { CHAR_NO_BREAK_SPACE } from '@taiga-ui/cdk';
import { MODE_PROVIDER, TUI_MODE } from '@taiga-ui/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@taiga-ui/cdk";
import * as i3 from "rxjs";
export class TuiAxesComponent {
    constructor(mode$) {
        this.mode$ = mode$;
        this.axisX = 'solid';
        this.axisXLabels = [];
        this.axisY = 'solid';
        this.axisYInset = false;
        this.axisYLabels = [];
        this.axisYName = '';
        this.axisYSecondaryInset = false;
        this.axisYSecondaryLabels = [];
        this.axisYSecondaryName = '';
        this.horizontalLines = 0;
        this.horizontalLinesHandler = TUI_ALWAYS_SOLID;
        this.verticalLines = 0;
        this.verticalLinesHandler = TUI_ALWAYS_DASHED;
    }
    get centeredXLabels() {
        return this.axisY === 'none';
    }
    get hasXLabels() {
        return !!this.axisXLabels.length;
    }
    get hasYLabels() {
        return (!!this.axisYLabels.length && !this.axisYInset) || !!this.axisYName;
    }
    get hasYSecondaryLabels() {
        return ((!!this.axisYSecondaryLabels.length && !this.axisYSecondaryInset) ||
            !!this.axisYSecondaryName);
    }
    fallback(label) {
        return label || CHAR_NO_BREAK_SPACE;
    }
}
TuiAxesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAxesComponent, deps: [{ token: TUI_MODE }], target: i0.ɵɵFactoryTarget.Component });
TuiAxesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiAxesComponent, selector: "tui-axes", inputs: { axisX: "axisX", axisXLabels: "axisXLabels", axisY: "axisY", axisYInset: "axisYInset", axisYLabels: "axisYLabels", axisYName: "axisYName", axisYSecondaryInset: "axisYSecondaryInset", axisYSecondaryLabels: "axisYSecondaryLabels", axisYSecondaryName: "axisYSecondaryName", horizontalLines: "horizontalLines", horizontalLinesHandler: "horizontalLinesHandler", verticalLines: "verticalLines", verticalLinesHandler: "verticalLinesHandler" }, host: { listeners: { "$.data-mode.attr": "mode$" }, properties: { "class._centered": "this.centeredXLabels" } }, providers: [MODE_PROVIDER], ngImport: i0, template: "<div\n    *ngIf=\"hasYLabels\"\n    class=\"t-side\"\n    [class.t-side_padding]=\"hasXLabels\"\n>\n    <div\n        *ngIf=\"axisYName\"\n        automation-id=\"tui-axex__axis-y-name\"\n        class=\"t-name t-name_primary\"\n    >\n        {{ axisYName }}\n    </div>\n    <div\n        *ngIf=\"!axisYInset\"\n        class=\"t-labels-y t-labels-y_primary\"\n    >\n        <div\n            *ngFor=\"let label of axisYLabels\"\n            automation-id=\"tui-axex__axis-y-label\"\n            class=\"t-label-y\"\n        >\n            {{ fallback(label) }}\n        </div>\n    </div>\n</div>\n<div class=\"t-wrapper\">\n    <div\n        class=\"t-grid\"\n        [style.borderBottomStyle]=\"axisX\"\n        [style.borderLeftStyle]=\"axisY\"\n    >\n        <div class=\"t-vertical\">\n            <div\n                *tuiRepeatTimes=\"let index of verticalLines\"\n                automation-id=\"tui-axex__vertical-line\"\n                class=\"t-line t-line_vertical\"\n                [style.borderRightStyle]=\"verticalLinesHandler(index, verticalLines)\"\n            ></div>\n        </div>\n        <div class=\"t-horizontal\">\n            <div\n                *tuiRepeatTimes=\"let index of horizontalLines\"\n                automation-id=\"tui-axex__horizontal-line\"\n                class=\"t-line\"\n                [style.borderTopStyle]=\"horizontalLinesHandler(index, horizontalLines)\"\n            ></div>\n        </div>\n        <div\n            *ngIf=\"axisYInset\"\n            class=\"t-labels-y t-labels-y_inset\"\n        >\n            <div\n                *ngFor=\"let label of axisYLabels\"\n                automation-id=\"tui-axex__axis-y-label\"\n                class=\"t-label-y\"\n            >\n                {{ fallback(label) }}\n            </div>\n        </div>\n        <div\n            *ngIf=\"axisYSecondaryInset\"\n            class=\"t-labels-y t-labels-y_inset t-labels-y_inset_secondary\"\n        >\n            <div\n                *ngFor=\"let label of axisYSecondaryLabels\"\n                automation-id=\"tui-axex__axis-y-secondary-label\"\n                class=\"t-label-y\"\n            >\n                {{ fallback(label) }}\n            </div>\n        </div>\n        <div class=\"t-content\">\n            <ng-content></ng-content>\n        </div>\n    </div>\n    <div\n        *ngIf=\"hasXLabels\"\n        class=\"t-labels-x\"\n    >\n        <div\n            *ngFor=\"let label of axisXLabels\"\n            automation-id=\"tui-axex__axis-x-label\"\n            class=\"t-label-x\"\n            [class.t-label-x_transparent]=\"label === null\"\n        >\n            {{ fallback(label) }}\n        </div>\n    </div>\n</div>\n<div\n    *ngIf=\"hasYSecondaryLabels\"\n    class=\"t-side\"\n    [class.t-side_padding]=\"hasXLabels\"\n>\n    <div\n        *ngIf=\"!axisYSecondaryInset\"\n        class=\"t-labels-y t-labels-y_secondary\"\n    >\n        <div\n            *ngFor=\"let label of axisYSecondaryLabels\"\n            automation-id=\"tui-axex__axis-y-secondary-label\"\n            class=\"t-label-y\"\n        >\n            {{ fallback(label) }}\n        </div>\n    </div>\n    <div\n        *ngIf=\"axisYSecondaryName\"\n        automation-id=\"tui-axex__axis-y-secondary-name\"\n        class=\"t-name\"\n    >\n        {{ axisYSecondaryName }}\n    </div>\n</div>\n", styles: [":host{display:flex}.t-wrapper{display:flex;flex:1;height:100%;flex-direction:column}.t-grid{position:relative;display:flex;flex:1;justify-content:space-around;align-items:flex-end;border-width:1px;border-color:var(--tui-base-03);isolation:isolate}:host[data-mode=onDark] .t-grid{border-color:#ffffff7a}:host[data-mode=onLight] .t-grid{border-color:#0000007a}.t-horizontal{position:absolute;top:0;left:0;width:100%;height:100%;display:flex;flex-direction:column}.t-vertical{position:absolute;top:0;left:0;width:100%;height:100%;display:flex}:host._centered .t-vertical:after{content:\"\";display:block;flex:1 0 1px}.t-line{flex:2 0 1px;box-sizing:border-box;border-width:1px;border-color:var(--tui-base-03)}:host[data-mode=onDark] .t-line{border-color:#ffffff7a}:host[data-mode=onLight] .t-line{border-color:#0000007a}:host._centered .t-line_vertical:first-child{flex:1 0 1px;pointer-events:none}.t-side{display:flex;align-items:stretch}.t-side_padding{padding-bottom:2rem}.t-name{font:var(--tui-font-text-xs);writing-mode:tb;text-align:center;padding-left:.75rem;color:var(--tui-text-02)}.t-name_primary{transform:rotate(180deg)}:host[data-mode=onDark] .t-name{color:var(--tui-text-02-night)}.t-labels-y{display:flex;font:var(--tui-font-text-xs);flex-direction:column-reverse;justify-content:space-between;color:var(--tui-text-02)}:host[data-mode=onDark] .t-labels-y{color:var(--tui-text-02-night)}.t-labels-y_primary{text-align:right;padding-right:.75rem}.t-labels-y_secondary{padding-left:.75rem}.t-labels-y_transparent{border-color:transparent}.t-labels-y_inset{position:absolute;top:.5625rem;left:.25rem;bottom:-.75rem;pointer-events:none}.t-labels-y_inset_secondary{left:auto;right:.25rem;text-align:right}.t-labels-x{display:flex;font:var(--tui-font-text-xs);border-right:1px solid transparent;color:var(--tui-text-02)}.t-label-x{height:.4375rem;border-left:1px solid var(--tui-base-03);flex:1;margin-bottom:1.5625rem}:host[data-mode=onDark] .t-label-x{border-color:#ffffff7a}:host[data-mode=onLight] .t-label-x{border-color:#0000007a}.t-label-x:before{content:\"\";display:block;height:.5625rem}.t-label-x_transparent{border-color:transparent}:host._centered .t-label-x{height:2rem;text-align:center;border:none;margin:0}:host[new]:not(._centered) .t-label-x:last-child:not(:first-child){flex:.5;text-align:right;border-left:none}:host[new]:not(._centered) .t-label-x:nth-last-child(2){flex:.5}.t-label-y:first-child{margin-bottom:-.375rem}.t-label-y:last-child{margin-top:-.375rem}.t-content{position:absolute;top:0;left:-1px;right:0;bottom:-1px;display:flex;align-items:flex-end}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2.TuiRepeatTimesDirective, selector: "[tuiRepeatTimes][tuiRepeatTimesOf]", inputs: ["tuiRepeatTimesOf"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAxesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-axes',
                    templateUrl: './axes.template.html',
                    styleUrls: ['./axes.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [MODE_PROVIDER],
                    host: {
                        '($.data-mode.attr)': 'mode$',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i3.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }]; }, propDecorators: { axisX: [{
                type: Input
            }], axisXLabels: [{
                type: Input
            }], axisY: [{
                type: Input
            }], axisYInset: [{
                type: Input
            }], axisYLabels: [{
                type: Input
            }], axisYName: [{
                type: Input
            }], axisYSecondaryInset: [{
                type: Input
            }], axisYSecondaryLabels: [{
                type: Input
            }], axisYSecondaryName: [{
                type: Input
            }], horizontalLines: [{
                type: Input
            }], horizontalLinesHandler: [{
                type: Input
            }], verticalLines: [{
                type: Input
            }], verticalLinesHandler: [{
                type: Input
            }], centeredXLabels: [{
                type: HostBinding,
                args: ['class._centered']
            }] } });
//# sourceMappingURL=data:application/json;base64,
import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';
import { tuiPure, tuiSum } from '@taiga-ui/cdk';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class TuiBarComponent {
    constructor() {
        this.value = [];
        this.size = 'm';
    }
    getHeight(value) {
        return (100 * value) / this.getSum(this.value);
    }
    getColor(index) {
        return `var(--tui-chart-${index})`;
    }
    getSum(value) {
        return tuiSum(...value);
    }
}
TuiBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TuiBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiBarComponent, selector: "tui-bar", inputs: { value: "value", size: "size" }, host: { properties: { "attr.data-size": "this.size" } }, ngImport: i0, template: "<div\n    *ngFor=\"let item of value; let index = index\"\n    automation-id=\"tui-bar__bar\"\n    [style.background]=\"getColor(index)\"\n    [style.height.%]=\"getHeight(item)\"\n></div>\n", styles: [":host{display:flex;min-width:.125rem;flex-direction:column-reverse;border-top-left-radius:var(--tui-radius-l);border-top-right-radius:var(--tui-radius-l);overflow:hidden}:host[data-size=l]{width:1rem;max-width:1rem;margin:0 .1875rem}:host[data-size=m]{width:.5rem;max-width:.5rem;margin:0 .1875rem}:host[data-size=s]{width:.25rem;max-width:.5rem;margin:0 .125rem}\n"], directives: [{ type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiPure
], TuiBarComponent.prototype, "getSum", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-bar',
                    templateUrl: './bar.template.html',
                    styleUrls: ['./bar.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { value: [{
                type: Input
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], getSum: [] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FkZG9uLWNoYXJ0cy9jb21wb25lbnRzL2Jhci9iYXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tY2hhcnRzL2NvbXBvbmVudHMvYmFyL2Jhci50ZW1wbGF0ZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFckYsT0FBTyxFQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7OztBQVM5QyxNQUFNLE9BQU8sZUFBZTtJQU41QjtRQVFJLFVBQUssR0FBc0IsRUFBRSxDQUFDO1FBSTlCLFNBQUksR0FBd0IsR0FBRyxDQUFDO0tBY25DO0lBWkcsU0FBUyxDQUFDLEtBQWE7UUFDbkIsT0FBTyxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBRUQsUUFBUSxDQUFDLEtBQWE7UUFDbEIsT0FBTyxtQkFBbUIsS0FBSyxHQUFHLENBQUM7SUFDdkMsQ0FBQztJQUdPLE1BQU0sQ0FBQyxLQUF3QjtRQUNuQyxPQUFPLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDO0lBQzVCLENBQUM7OzZHQW5CUSxlQUFlO2lHQUFmLGVBQWUsa0pDWDVCLGdNQU1BO0FEc0JJO0lBREMsT0FBTzs2Q0FHUDs0RkFuQlEsZUFBZTtrQkFOM0IsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsU0FBUztvQkFDbkIsV0FBVyxFQUFFLHFCQUFxQjtvQkFDbEMsU0FBUyxFQUFFLENBQUMsa0JBQWtCLENBQUM7b0JBQy9CLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNsRDs4QkFHRyxLQUFLO3NCQURKLEtBQUs7Z0JBS04sSUFBSTtzQkFGSCxLQUFLOztzQkFDTCxXQUFXO3VCQUFDLGdCQUFnQjtnQkFZckIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7U2FmZVZhbHVlfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcbmltcG9ydCB7dHVpUHVyZSwgdHVpU3VtfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VHVpU2l6ZUwsIFR1aVNpemVTfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLWJhcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2Jhci50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9iYXIuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlCYXJDb21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgdmFsdWU6IHJlYWRvbmx5IG51bWJlcltdID0gW107XG5cbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLXNpemUnKVxuICAgIHNpemU6IFR1aVNpemVMIHwgVHVpU2l6ZVMgPSAnbSc7XG5cbiAgICBnZXRIZWlnaHQodmFsdWU6IG51bWJlcik6IG51bWJlciB7XG4gICAgICAgIHJldHVybiAoMTAwICogdmFsdWUpIC8gdGhpcy5nZXRTdW0odGhpcy52YWx1ZSk7XG4gICAgfVxuXG4gICAgZ2V0Q29sb3IoaW5kZXg6IG51bWJlcik6IFNhZmVWYWx1ZSB7XG4gICAgICAgIHJldHVybiBgdmFyKC0tdHVpLWNoYXJ0LSR7aW5kZXh9KWA7XG4gICAgfVxuXG4gICAgQHR1aVB1cmVcbiAgICBwcml2YXRlIGdldFN1bSh2YWx1ZTogcmVhZG9ubHkgbnVtYmVyW10pOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdHVpU3VtKC4uLnZhbHVlKTtcbiAgICB9XG59XG4iLCI8ZGl2XG4gICAgKm5nRm9yPVwibGV0IGl0ZW0gb2YgdmFsdWU7IGxldCBpbmRleCA9IGluZGV4XCJcbiAgICBhdXRvbWF0aW9uLWlkPVwidHVpLWJhcl9fYmFyXCJcbiAgICBbc3R5bGUuYmFja2dyb3VuZF09XCJnZXRDb2xvcihpbmRleClcIlxuICAgIFtzdHlsZS5oZWlnaHQuJV09XCJnZXRIZWlnaHQoaXRlbSlcIlxuPjwvZGl2PlxuIl19
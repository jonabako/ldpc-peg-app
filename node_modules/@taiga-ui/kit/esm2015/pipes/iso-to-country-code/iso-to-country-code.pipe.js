import { Inject, Pipe } from '@angular/core';
import { TUI_COUNTRIES_MASKS } from '@taiga-ui/kit/tokens';
import { tuiIsoToCountryCode } from '@taiga-ui/kit/utils';
import * as i0 from "@angular/core";
export class TuiIsoToCountryCodePipe {
    constructor(countriesMasks) {
        this.countriesMasks = countriesMasks;
    }
    transform(isoCode) {
        return tuiIsoToCountryCode(this.countriesMasks, isoCode);
    }
}
TuiIsoToCountryCodePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiIsoToCountryCodePipe, deps: [{ token: TUI_COUNTRIES_MASKS }], target: i0.ɵɵFactoryTarget.Pipe });
TuiIsoToCountryCodePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiIsoToCountryCodePipe, name: "tuiIsoToCountryCode" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiIsoToCountryCodePipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'tuiIsoToCountryCode',
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_COUNTRIES_MASKS]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNvLXRvLWNvdW50cnktY29kZS5waXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L3BpcGVzL2lzby10by1jb3VudHJ5LWNvZGUvaXNvLXRvLWNvdW50cnktY29kZS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFnQixNQUFNLGVBQWUsQ0FBQztBQUUxRCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQzs7QUFLeEQsTUFBTSxPQUFPLHVCQUF1QjtJQUNoQyxZQUVxQixjQUFpRDtRQUFqRCxtQkFBYyxHQUFkLGNBQWMsQ0FBbUM7SUFDbkUsQ0FBQztJQUVKLFNBQVMsQ0FBQyxPQUEwQjtRQUNoQyxPQUFPLG1CQUFtQixDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDN0QsQ0FBQzs7cUhBUlEsdUJBQXVCLGtCQUVwQixtQkFBbUI7bUhBRnRCLHVCQUF1Qjs0RkFBdkIsdUJBQXVCO2tCQUhuQyxJQUFJO21CQUFDO29CQUNGLElBQUksRUFBRSxxQkFBcUI7aUJBQzlCOzswQkFHUSxNQUFNOzJCQUFDLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBQaXBlLCBQaXBlVHJhbnNmb3JtfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpQ291bnRyeUlzb0NvZGV9IGZyb20gJ0B0YWlnYS11aS9pMThuJztcbmltcG9ydCB7VFVJX0NPVU5UUklFU19NQVNLU30gZnJvbSAnQHRhaWdhLXVpL2tpdC90b2tlbnMnO1xuaW1wb3J0IHt0dWlJc29Ub0NvdW50cnlDb2RlfSBmcm9tICdAdGFpZ2EtdWkva2l0L3V0aWxzJztcblxuQFBpcGUoe1xuICAgIG5hbWU6ICd0dWlJc29Ub0NvdW50cnlDb2RlJyxcbn0pXG5leHBvcnQgY2xhc3MgVHVpSXNvVG9Db3VudHJ5Q29kZVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUVUlfQ09VTlRSSUVTX01BU0tTKVxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGNvdW50cmllc01hc2tzOiBSZWNvcmQ8VHVpQ291bnRyeUlzb0NvZGUsIHN0cmluZz4sXG4gICAgKSB7fVxuXG4gICAgdHJhbnNmb3JtKGlzb0NvZGU6IFR1aUNvdW50cnlJc29Db2RlKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHR1aUlzb1RvQ291bnRyeUNvZGUodGhpcy5jb3VudHJpZXNNYXNrcywgaXNvQ29kZSk7XG4gICAgfVxufVxuIl19
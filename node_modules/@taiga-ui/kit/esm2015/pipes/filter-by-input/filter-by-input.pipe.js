import { Inject, Optional, Pipe } from '@angular/core';
import { TUI_DEFAULT_MATCHER, TUI_DEFAULT_STRINGIFY, TUI_FOCUSABLE_ITEM_ACCESSOR, } from '@taiga-ui/cdk';
import { TUI_DATA_LIST_HOST } from '@taiga-ui/core';
import { TuiMultiSelectDirective } from '@taiga-ui/kit/components/multi-select';
import { AbstractTuiFilterByInput } from './filter-by-input.base';
import * as i0 from "@angular/core";
export class TuiFilterByInputPipe extends AbstractTuiFilterByInput {
    constructor(accessor, host, multiSelect) {
        super();
        this.accessor = accessor;
        this.host = host;
        this.multiSelect = multiSelect;
    }
    transform(items, matcher = TUI_DEFAULT_MATCHER) {
        return this.filter(items, matcher, this.host.stringify || TUI_DEFAULT_STRINGIFY, this.query);
    }
}
TuiFilterByInputPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFilterByInputPipe, deps: [{ token: TUI_FOCUSABLE_ITEM_ACCESSOR }, { token: TUI_DATA_LIST_HOST }, { token: TuiMultiSelectDirective, optional: true }], target: i0.ɵɵFactoryTarget.Pipe });
TuiFilterByInputPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFilterByInputPipe, name: "tuiFilterByInput", pure: false });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiFilterByInputPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'tuiFilterByInput',
                    pure: false,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_FOCUSABLE_ITEM_ACCESSOR]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_DATA_LIST_HOST]
                }] }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiMultiSelectDirective]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLWJ5LWlucHV0LnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvcGlwZXMvZmlsdGVyLWJ5LWlucHV0L2ZpbHRlci1ieS1pbnB1dC5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBZ0IsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUNILG1CQUFtQixFQUNuQixxQkFBcUIsRUFDckIsMkJBQTJCLEdBRzlCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxrQkFBa0IsRUFBa0IsTUFBTSxnQkFBZ0IsQ0FBQztBQUNuRSxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSx1Q0FBdUMsQ0FBQztBQUU5RSxPQUFPLEVBQUMsd0JBQXdCLEVBQWtCLE1BQU0sd0JBQXdCLENBQUM7O0FBTWpGLE1BQU0sT0FBTyxvQkFDVCxTQUFRLHdCQUF3QjtJQUdoQyxZQUV1QixRQUFxQyxFQUV2QyxJQUE4QixFQUc1QixXQUFvQjtRQUV2QyxLQUFLLEVBQUUsQ0FBQztRQVBXLGFBQVEsR0FBUixRQUFRLENBQTZCO1FBRXZDLFNBQUksR0FBSixJQUFJLENBQTBCO1FBRzVCLGdCQUFXLEdBQVgsV0FBVyxDQUFTO0lBRzNDLENBQUM7SUFHRCxTQUFTLENBQ0wsS0FBd0QsRUFDeEQsVUFBK0IsbUJBQW1CO1FBRWxELE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FDZCxLQUFLLEVBQ0wsT0FBTyxFQUNQLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxJQUFJLHFCQUFxQixFQUM1QyxJQUFJLENBQUMsS0FBSyxDQUNiLENBQUM7SUFDTixDQUFDOztrSEEzQlEsb0JBQW9CLGtCQUtqQiwyQkFBMkIsYUFFM0Isa0JBQWtCLGFBR2xCLHVCQUF1QjtnSEFWMUIsb0JBQW9COzRGQUFwQixvQkFBb0I7a0JBSmhDLElBQUk7bUJBQUM7b0JBQ0YsSUFBSSxFQUFFLGtCQUFrQjtvQkFDeEIsSUFBSSxFQUFFLEtBQUs7aUJBQ2Q7OzBCQU1RLE1BQU07MkJBQUMsMkJBQTJCOzswQkFFbEMsTUFBTTsyQkFBQyxrQkFBa0I7OzBCQUV6QixRQUFROzswQkFDUixNQUFNOzJCQUFDLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0LCBPcHRpb25hbCwgUGlwZSwgUGlwZVRyYW5zZm9ybX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICAgIFRVSV9ERUZBVUxUX01BVENIRVIsXG4gICAgVFVJX0RFRkFVTFRfU1RSSU5HSUZZLFxuICAgIFRVSV9GT0NVU0FCTEVfSVRFTV9BQ0NFU1NPUixcbiAgICBUdWlGb2N1c2FibGVFbGVtZW50QWNjZXNzb3IsXG4gICAgVHVpU3RyaW5nTWF0Y2hlcixcbn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1RVSV9EQVRBX0xJU1RfSE9TVCwgVHVpRGF0YUxpc3RIb3N0fSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1R1aU11bHRpU2VsZWN0RGlyZWN0aXZlfSBmcm9tICdAdGFpZ2EtdWkva2l0L2NvbXBvbmVudHMvbXVsdGktc2VsZWN0JztcblxuaW1wb3J0IHtBYnN0cmFjdFR1aUZpbHRlckJ5SW5wdXQsIFR1aUFycmF5RWxlbWVudH0gZnJvbSAnLi9maWx0ZXItYnktaW5wdXQuYmFzZSc7XG5cbkBQaXBlKHtcbiAgICBuYW1lOiAndHVpRmlsdGVyQnlJbnB1dCcsXG4gICAgcHVyZTogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIFR1aUZpbHRlckJ5SW5wdXRQaXBlXG4gICAgZXh0ZW5kcyBBYnN0cmFjdFR1aUZpbHRlckJ5SW5wdXRcbiAgICBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm1cbntcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUVUlfRk9DVVNBQkxFX0lURU1fQUNDRVNTT1IpXG4gICAgICAgIHByb3RlY3RlZCByZWFkb25seSBhY2Nlc3NvcjogVHVpRm9jdXNhYmxlRWxlbWVudEFjY2Vzc29yLFxuICAgICAgICBASW5qZWN0KFRVSV9EQVRBX0xJU1RfSE9TVClcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBob3N0OiBUdWlEYXRhTGlzdEhvc3Q8dW5rbm93bj4sXG4gICAgICAgIEBPcHRpb25hbCgpXG4gICAgICAgIEBJbmplY3QoVHVpTXVsdGlTZWxlY3REaXJlY3RpdmUpXG4gICAgICAgIHByb3RlY3RlZCByZWFkb25seSBtdWx0aVNlbGVjdDogdW5rbm93bixcbiAgICApIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG5cbiAgICB0cmFuc2Zvcm08VD4oaXRlbXM6IFQsIG1hdGNoZXI/OiBUdWlTdHJpbmdNYXRjaGVyPFR1aUFycmF5RWxlbWVudDxUPj4pOiBUO1xuICAgIHRyYW5zZm9ybTxUPihcbiAgICAgICAgaXRlbXM6IFJlYWRvbmx5QXJyYXk8cmVhZG9ubHkgVFtdPiB8IHJlYWRvbmx5IFRbXSB8IG51bGwsXG4gICAgICAgIG1hdGNoZXI6IFR1aVN0cmluZ01hdGNoZXI8VD4gPSBUVUlfREVGQVVMVF9NQVRDSEVSLFxuICAgICk6IFJlYWRvbmx5QXJyYXk8cmVhZG9ubHkgVFtdPiB8IHJlYWRvbmx5IFRbXSB8IG51bGwge1xuICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXIoXG4gICAgICAgICAgICBpdGVtcyxcbiAgICAgICAgICAgIG1hdGNoZXIsXG4gICAgICAgICAgICB0aGlzLmhvc3Quc3RyaW5naWZ5IHx8IFRVSV9ERUZBVUxUX1NUUklOR0lGWSxcbiAgICAgICAgICAgIHRoaXMucXVlcnksXG4gICAgICAgICk7XG4gICAgfVxufVxuIl19
import { Directive, Input } from '@angular/core';
import { MASKITO_DEFAULT_OPTIONS, maskitoTransform } from '@maskito/core';
import { AbstractTuiValueTransformer } from '@taiga-ui/cdk';
import { identity } from 'rxjs';
import * as i0 from "@angular/core";
export class TuiUnmaskHandlerDirective extends AbstractTuiValueTransformer {
    constructor() {
        super(...arguments);
        this.tuiUnmaskHandler = identity;
        this.maskito = null;
    }
    fromControlValue(controlValue) {
        return maskitoTransform(String(controlValue !== null && controlValue !== void 0 ? controlValue : ''), this.maskito || MASKITO_DEFAULT_OPTIONS);
    }
    toControlValue(value) {
        return this.tuiUnmaskHandler(value);
    }
}
TuiUnmaskHandlerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiUnmaskHandlerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TuiUnmaskHandlerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiUnmaskHandlerDirective, selector: "[maskito][tuiUnmaskHandler]", inputs: { tuiUnmaskHandler: "tuiUnmaskHandler", maskito: "maskito" }, providers: [
        {
            provide: AbstractTuiValueTransformer,
            useExisting: TuiUnmaskHandlerDirective,
        },
    ], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiUnmaskHandlerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[maskito][tuiUnmaskHandler]',
                    providers: [
                        {
                            provide: AbstractTuiValueTransformer,
                            useExisting: TuiUnmaskHandlerDirective,
                        },
                    ],
                }]
        }], propDecorators: { tuiUnmaskHandler: [{
                type: Input
            }], maskito: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5tYXNrLWhhbmRsZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2RpcmVjdGl2ZXMvdW5tYXNrLWhhbmRsZXIvdW5tYXNrLWhhbmRsZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQy9DLE9BQU8sRUFBQyx1QkFBdUIsRUFBa0IsZ0JBQWdCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEYsT0FBTyxFQUFDLDJCQUEyQixFQUFZLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxNQUFNLENBQUM7O0FBVzlCLE1BQU0sT0FBTyx5QkFBMEIsU0FBUSwyQkFBbUM7SUFUbEY7O1FBV0kscUJBQWdCLEdBQThCLFFBQVEsQ0FBQztRQUd2RCxZQUFPLEdBQTBCLElBQUksQ0FBQztLQVl6QztJQVZZLGdCQUFnQixDQUFDLFlBQXFCO1FBQzNDLE9BQU8sZ0JBQWdCLENBQ25CLE1BQU0sQ0FBQyxZQUFZLGFBQVosWUFBWSxjQUFaLFlBQVksR0FBSSxFQUFFLENBQUMsRUFDMUIsSUFBSSxDQUFDLE9BQU8sSUFBSSx1QkFBdUIsQ0FDMUMsQ0FBQztJQUNOLENBQUM7SUFFUSxjQUFjLENBQUMsS0FBYTtRQUNqQyxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDOzt1SEFoQlEseUJBQXlCOzJHQUF6Qix5QkFBeUIsNEhBUHZCO1FBQ1A7WUFDSSxPQUFPLEVBQUUsMkJBQTJCO1lBQ3BDLFdBQVcsRUFBRSx5QkFBeUI7U0FDekM7S0FDSjs0RkFFUSx5QkFBeUI7a0JBVHJDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLDZCQUE2QjtvQkFDdkMsU0FBUyxFQUFFO3dCQUNQOzRCQUNJLE9BQU8sRUFBRSwyQkFBMkI7NEJBQ3BDLFdBQVcsMkJBQTJCO3lCQUN6QztxQkFDSjtpQkFDSjs4QkFHRyxnQkFBZ0I7c0JBRGYsS0FBSztnQkFJTixPQUFPO3NCQUROLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtNQVNLSVRPX0RFRkFVTFRfT1BUSU9OUywgTWFza2l0b09wdGlvbnMsIG1hc2tpdG9UcmFuc2Zvcm19IGZyb20gJ0BtYXNraXRvL2NvcmUnO1xuaW1wb3J0IHtBYnN0cmFjdFR1aVZhbHVlVHJhbnNmb3JtZXIsIFR1aU1hcHBlcn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge2lkZW50aXR5fSBmcm9tICdyeGpzJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbbWFza2l0b11bdHVpVW5tYXNrSGFuZGxlcl0nLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBBYnN0cmFjdFR1aVZhbHVlVHJhbnNmb3JtZXIsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogVHVpVW5tYXNrSGFuZGxlckRpcmVjdGl2ZSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlVbm1hc2tIYW5kbGVyRGlyZWN0aXZlIGV4dGVuZHMgQWJzdHJhY3RUdWlWYWx1ZVRyYW5zZm9ybWVyPHN0cmluZz4ge1xuICAgIEBJbnB1dCgpXG4gICAgdHVpVW5tYXNrSGFuZGxlcjogVHVpTWFwcGVyPHN0cmluZywgc3RyaW5nPiA9IGlkZW50aXR5O1xuXG4gICAgQElucHV0KClcbiAgICBtYXNraXRvOiBNYXNraXRvT3B0aW9ucyB8IG51bGwgPSBudWxsO1xuXG4gICAgb3ZlcnJpZGUgZnJvbUNvbnRyb2xWYWx1ZShjb250cm9sVmFsdWU6IHVua25vd24pOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gbWFza2l0b1RyYW5zZm9ybShcbiAgICAgICAgICAgIFN0cmluZyhjb250cm9sVmFsdWUgPz8gJycpLFxuICAgICAgICAgICAgdGhpcy5tYXNraXRvIHx8IE1BU0tJVE9fREVGQVVMVF9PUFRJT05TLFxuICAgICAgICApO1xuICAgIH1cblxuICAgIG92ZXJyaWRlIHRvQ29udHJvbFZhbHVlKHZhbHVlOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy50dWlVbm1hc2tIYW5kbGVyKHZhbHVlKTtcbiAgICB9XG59XG4iXX0=
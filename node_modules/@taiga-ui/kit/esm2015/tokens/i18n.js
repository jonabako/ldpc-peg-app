import { tuiCreateTokenFromFactory } from '@taiga-ui/cdk';
import { tuiExtractI18n } from '@taiga-ui/i18n';
export const TUI_PROMPT_WORDS = tuiCreateTokenFromFactory(tuiExtractI18n('prompt'));
export const TUI_CANCEL_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('cancel'));
export const TUI_DONE_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('done'));
export const TUI_MORE_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('more'));
export const TUI_HIDE_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('hide'));
export const TUI_SHOW_ALL_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('showAll'));
export const TUI_OTHER_DATE_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('otherDate'));
export const TUI_CHOOSE_DAY_OR_RANGE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('mobileCalendarTexts'));
export const TUI_FROM_TO_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('range'));
export const TUI_PLUS_MINUS_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('countTexts'));
export const TUI_TIME_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('time'));
export const TUI_DATE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('dateTexts'));
export const TUI_DIGITAL_INFORMATION_UNITS = tuiCreateTokenFromFactory(tuiExtractI18n('digitalInformationUnits'));
export const TUI_COPY_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('copyTexts'));
export const TUI_PASSWORD_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('passwordTexts'));
export const TUI_CALENDAR_MONTHS = tuiCreateTokenFromFactory(tuiExtractI18n('shortCalendarMonths'));
export const TUI_FILE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('fileTexts'));
export const TUI_PAGINATION_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('pagination'));
export const TUI_INPUT_FILE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('inputFileTexts'));
export const TUI_MULTI_SELECT_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('multiSelectTexts'));
export const TUI_COUNTRIES = tuiCreateTokenFromFactory(tuiExtractI18n('countries'));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaTE4bi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC90b2tlbnMvaTE4bi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMseUJBQXlCLEVBQWMsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFvQixjQUFjLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUdqRSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyx5QkFBeUIsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztBQUVwRixNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcseUJBQXlCLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFFbkYsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLHlCQUF5QixDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBRS9FLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyx5QkFBeUIsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUUvRSxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcseUJBQXlCLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFFL0UsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcseUJBQXlCLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFFdEYsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcseUJBQXlCLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7QUFFMUYsTUFBTSxDQUFDLE1BQU0sNkJBQTZCLEdBQUcseUJBQXlCLENBQ2xFLGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUN4QyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcseUJBQXlCLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7QUFFcEYsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcseUJBQXlCLENBQ3pELGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FDL0IsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyx5QkFBeUIsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUVoRixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcseUJBQXlCLENBRXJELGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0FBRS9CLE1BQU0sQ0FBQyxNQUFNLDZCQUE2QixHQUFHLHlCQUF5QixDQUNsRSxjQUFjLENBQUMseUJBQXlCLENBQUMsQ0FDNUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyx5QkFBeUIsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztBQUVyRixNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyx5QkFBeUIsQ0FDdkQsY0FBYyxDQUFDLGVBQWUsQ0FBQyxDQUNsQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcseUJBQXlCLENBQ3hELGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUN4QyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLHlCQUF5QixDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0FBRXJGLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLHlCQUF5QixDQUN6RCxjQUFjLENBQUMsWUFBWSxDQUFDLENBQy9CLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyx5QkFBeUIsQ0FDekQsY0FBYyxDQUFDLGdCQUFnQixDQUFDLENBQ25DLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRyx5QkFBeUIsQ0FDM0QsY0FBYyxDQUFDLGtCQUFrQixDQUFDLENBQ3JDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcseUJBQXlCLENBRXBELGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5LCBUdWlEYXRlTW9kZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aUNvdW50cnlJc29Db2RlLCB0dWlFeHRyYWN0STE4bn0gZnJvbSAnQHRhaWdhLXVpL2kxOG4nO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IGNvbnN0IFRVSV9QUk9NUFRfV09SRFMgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KHR1aUV4dHJhY3RJMThuKCdwcm9tcHQnKSk7XG5cbmV4cG9ydCBjb25zdCBUVUlfQ0FOQ0VMX1dPUkQgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KHR1aUV4dHJhY3RJMThuKCdjYW5jZWwnKSk7XG5cbmV4cG9ydCBjb25zdCBUVUlfRE9ORV9XT1JEID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeSh0dWlFeHRyYWN0STE4bignZG9uZScpKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9NT1JFX1dPUkQgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KHR1aUV4dHJhY3RJMThuKCdtb3JlJykpO1xuXG5leHBvcnQgY29uc3QgVFVJX0hJREVfVEVYVCA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnkodHVpRXh0cmFjdEkxOG4oJ2hpZGUnKSk7XG5cbmV4cG9ydCBjb25zdCBUVUlfU0hPV19BTExfVEVYVCA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnkodHVpRXh0cmFjdEkxOG4oJ3Nob3dBbGwnKSk7XG5cbmV4cG9ydCBjb25zdCBUVUlfT1RIRVJfREFURV9URVhUID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeSh0dWlFeHRyYWN0STE4bignb3RoZXJEYXRlJykpO1xuXG5leHBvcnQgY29uc3QgVFVJX0NIT09TRV9EQVlfT1JfUkFOR0VfVEVYVFMgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KFxuICAgIHR1aUV4dHJhY3RJMThuKCdtb2JpbGVDYWxlbmRhclRleHRzJyksXG4pO1xuXG5leHBvcnQgY29uc3QgVFVJX0ZST01fVE9fVEVYVFMgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KHR1aUV4dHJhY3RJMThuKCdyYW5nZScpKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9QTFVTX01JTlVTX1RFWFRTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICB0dWlFeHRyYWN0STE4bignY291bnRUZXh0cycpLFxuKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9USU1FX1RFWFRTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeSh0dWlFeHRyYWN0STE4bigndGltZScpKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9EQVRFX1RFWFRTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeTxcbiAgICBPYnNlcnZhYmxlPFJlY29yZDxUdWlEYXRlTW9kZSwgc3RyaW5nPj5cbj4odHVpRXh0cmFjdEkxOG4oJ2RhdGVUZXh0cycpKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9ESUdJVEFMX0lORk9STUFUSU9OX1VOSVRTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICB0dWlFeHRyYWN0STE4bignZGlnaXRhbEluZm9ybWF0aW9uVW5pdHMnKSxcbik7XG5cbmV4cG9ydCBjb25zdCBUVUlfQ09QWV9URVhUUyA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnkodHVpRXh0cmFjdEkxOG4oJ2NvcHlUZXh0cycpKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9QQVNTV09SRF9URVhUUyA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnkoXG4gICAgdHVpRXh0cmFjdEkxOG4oJ3Bhc3N3b3JkVGV4dHMnKSxcbik7XG5cbmV4cG9ydCBjb25zdCBUVUlfQ0FMRU5EQVJfTU9OVEhTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICB0dWlFeHRyYWN0STE4bignc2hvcnRDYWxlbmRhck1vbnRocycpLFxuKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9GSUxFX1RFWFRTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeSh0dWlFeHRyYWN0STE4bignZmlsZVRleHRzJykpO1xuXG5leHBvcnQgY29uc3QgVFVJX1BBR0lOQVRJT05fVEVYVFMgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KFxuICAgIHR1aUV4dHJhY3RJMThuKCdwYWdpbmF0aW9uJyksXG4pO1xuXG5leHBvcnQgY29uc3QgVFVJX0lOUFVUX0ZJTEVfVEVYVFMgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KFxuICAgIHR1aUV4dHJhY3RJMThuKCdpbnB1dEZpbGVUZXh0cycpLFxuKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9NVUxUSV9TRUxFQ1RfVEVYVFMgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KFxuICAgIHR1aUV4dHJhY3RJMThuKCdtdWx0aVNlbGVjdFRleHRzJyksXG4pO1xuXG5leHBvcnQgY29uc3QgVFVJX0NPVU5UUklFUyA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3Rvcnk8XG4gICAgT2JzZXJ2YWJsZTxSZWNvcmQ8VHVpQ291bnRyeUlzb0NvZGUsIHN0cmluZz4+XG4+KHR1aUV4dHJhY3RJMThuKCdjb3VudHJpZXMnKSk7XG4iXX0=
import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input, } from '@angular/core';
import { MODE_PROVIDER, TUI_MODE, } from '@taiga-ui/core';
import * as i0 from "@angular/core";
import * as i1 from "rxjs";
export class TuiProgressBarComponent {
    constructor(mode$) {
        this.mode$ = mode$;
        this.size = 'm';
    }
}
TuiProgressBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiProgressBarComponent, deps: [{ token: TUI_MODE }], target: i0.ɵɵFactoryTarget.Component });
TuiProgressBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiProgressBarComponent, selector: "progress[tuiProgressBar]", inputs: { color: "color", size: "size" }, host: { listeners: { "$.data-mode.attr": "mode$" }, properties: { "style.--tui-progress-color": "this.color", "attr.data-size": "this.size" } }, providers: [MODE_PROVIDER], ngImport: i0, template: '', isInline: true, styles: ["@keyframes tuiIndeterminateAnimation{50%{background-position:left}}:host{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;display:block;width:100%;height:var(--t-height);color:var(--tui-primary);background:var(--tui-clear);-webkit-clip-path:inset(0 round var(--tui-radius-xs));clip-path:inset(0 round var(--tui-radius-xs));overflow:hidden}:host::-webkit-progress-value{-webkit-transition:width var(--tui-duration) linear;transition:width var(--tui-duration) linear}:host::-webkit-progress-value{background:var(--tui-progress-color, currentColor)}:host::-moz-progress-bar{background:var(--tui-progress-color, currentColor)}:host[data-mode=onDark]{--tui-clear: var(--tui-clear-inverse)}:host[data-size=m]{--t-height: 1.5rem}:host[data-size=s]{--t-height: .5rem}:host[data-size=s]::-webkit-progress-value{border-radius:var(--tui-radius-xs)}:host[data-size=s]::-moz-progress-bar{border-radius:var(--tui-radius-xs)}:host[new]{-webkit-clip-path:inset(0 .5px round var(--tui-radius-m));clip-path:inset(0 .5px round var(--tui-radius-m));border-radius:1rem}:host[new]::-webkit-progress-value{border-radius:inherit}:host[new]::-moz-progress-bar{border-radius:inherit}:host[new][data-size=xs]{--t-height: .25rem}:host[new][data-size=s]{--t-height: .5rem}:host[new][data-size=m]{--t-height: .75rem}:host[new][data-size=l]{--t-height: 1rem}:host[new][data-size=xl]{--t-height: 1.25rem}:host[new][data-size=xxl]{--t-height: 1.5rem}:host:indeterminate{background:linear-gradient(to right,var(--tui-clear) 0 45%,var(--tui-progress-color, currentColor) 45% 55%,var(--tui-clear) 55% 100%) right;background-size:225%;animation:tuiIndeterminateAnimation 3s infinite ease-in-out}:host:indeterminate::-webkit-progress-value{background:transparent}:host:indeterminate::-moz-progress-bar{background:transparent}:host::-webkit-progress-inner-element{border-radius:inherit}:host::-webkit-progress-bar{background:transparent;border-radius:inherit}:host-context(label[tuiProgressLabel]):not(:first-child){position:absolute;top:0;left:0;width:100%;height:100%;background:transparent}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiProgressBarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'progress[tuiProgressBar]',
                    template: '',
                    styleUrls: ['./progress-bar.component.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [MODE_PROVIDER],
                    host: {
                        '($.data-mode.attr)': 'mode$',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }]; }, propDecorators: { color: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['style.--tui-progress-color']
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MtYmFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9jb21wb25lbnRzL3Byb2dyZXNzL3Byb2dyZXNzLWJhci9wcm9ncmVzcy1iYXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFdBQVcsRUFDWCxNQUFNLEVBQ04sS0FBSyxHQUNSLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFDSCxhQUFhLEVBQ2IsUUFBUSxHQUlYLE1BQU0sZ0JBQWdCLENBQUM7OztBQWF4QixNQUFNLE9BQU8sdUJBQXVCO0lBU2hDLFlBQXVDLEtBQXVDO1FBQXZDLFVBQUssR0FBTCxLQUFLLENBQWtDO1FBRjlFLFNBQUksR0FBMkIsR0FBRyxDQUFDO0lBRThDLENBQUM7O3FIQVR6RSx1QkFBdUIsa0JBU1osUUFBUTt5R0FUbkIsdUJBQXVCLDhPQUxyQixDQUFDLGFBQWEsQ0FBQywwQkFIaEIsRUFBRTs0RkFRSCx1QkFBdUI7a0JBVm5DLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLDBCQUEwQjtvQkFDcEMsUUFBUSxFQUFFLEVBQUU7b0JBQ1osU0FBUyxFQUFFLENBQUMsK0JBQStCLENBQUM7b0JBQzVDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxTQUFTLEVBQUUsQ0FBQyxhQUFhLENBQUM7b0JBQzFCLElBQUksRUFBRTt3QkFDRixvQkFBb0IsRUFBRSxPQUFPO3FCQUNoQztpQkFDSjs7MEJBVWdCLE1BQU07MkJBQUMsUUFBUTs0Q0FONUIsS0FBSztzQkFGSixLQUFLOztzQkFDTCxXQUFXO3VCQUFDLDRCQUE0QjtnQkFLekMsSUFBSTtzQkFGSCxLQUFLOztzQkFDTCxXQUFXO3VCQUFDLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEhvc3RCaW5kaW5nLFxuICAgIEluamVjdCxcbiAgICBJbnB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICAgIE1PREVfUFJPVklERVIsXG4gICAgVFVJX01PREUsXG4gICAgVHVpQnJpZ2h0bmVzcyxcbiAgICBUdWlTaXplWFMsXG4gICAgVHVpU2l6ZVhYTCxcbn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdwcm9ncmVzc1t0dWlQcm9ncmVzc0Jhcl0nLFxuICAgIHRlbXBsYXRlOiAnJyxcbiAgICBzdHlsZVVybHM6IFsnLi9wcm9ncmVzcy1iYXIuY29tcG9uZW50Lmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtNT0RFX1BST1ZJREVSXSxcbiAgICBob3N0OiB7XG4gICAgICAgICcoJC5kYXRhLW1vZGUuYXR0ciknOiAnbW9kZSQnLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVByb2dyZXNzQmFyQ29tcG9uZW50IHtcbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnc3R5bGUuLS10dWktcHJvZ3Jlc3MtY29sb3InKVxuICAgIGNvbG9yPzogc3RyaW5nO1xuXG4gICAgQElucHV0KClcbiAgICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1zaXplJylcbiAgICBzaXplOiBUdWlTaXplWFMgfCBUdWlTaXplWFhMID0gJ20nO1xuXG4gICAgY29uc3RydWN0b3IoQEluamVjdChUVUlfTU9ERSkgcmVhZG9ubHkgbW9kZSQ6IE9ic2VydmFibGU8VHVpQnJpZ2h0bmVzcyB8IG51bGw+KSB7fVxufVxuIl19
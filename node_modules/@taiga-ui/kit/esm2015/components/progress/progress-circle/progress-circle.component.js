import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject, Input, ViewChild, } from '@angular/core';
import { USER_AGENT, WINDOW } from '@ng-web-apis/common';
import { CHROMIUM_EDGE_START_VERSION, tuiIsEdgeOlderThan } from '@taiga-ui/cdk';
import { MODE_PROVIDER, TUI_MODE, } from '@taiga-ui/core';
import { of } from 'rxjs';
import { delay } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "rxjs";
export class TuiProgressCircleComponent {
    constructor(userAgent, win, el, mode$) {
        this.userAgent = userAgent;
        this.win = win;
        this.el = el;
        this.mode$ = mode$;
        this.value = 0;
        this.max = 1;
        this.color = null;
        this.size = 'm';
        this.animationDelay$ = of(true).pipe(delay(0));
    }
    get progressRatio() {
        const ratio = this.value / this.max;
        return Number.isFinite(ratio) ? ratio : 0;
    }
    // TODO: drop support of legacy Edge (EdgeHTML) in v4.x
    get oldEdgeRadiusFallback() {
        if (!tuiIsEdgeOlderThan(CHROMIUM_EDGE_START_VERSION, this.userAgent)) {
            return null;
        }
        const strokeWidth = parseInt(this.win.getComputedStyle(this.progressCircle.nativeElement).strokeWidth, 10);
        return (this.el.nativeElement.offsetWidth - strokeWidth) / 2;
    }
}
TuiProgressCircleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiProgressCircleComponent, deps: [{ token: USER_AGENT }, { token: WINDOW }, { token: ElementRef }, { token: TUI_MODE }], target: i0.ɵɵFactoryTarget.Component });
TuiProgressCircleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiProgressCircleComponent, selector: "tui-progress-circle", inputs: { value: "value", max: "max", color: "color", size: "size" }, host: { listeners: { "$.data-mode.attr": "mode$" }, properties: { "style.--tui-progress-color": "this.color", "attr.data-size": "this.size", "style.--progress-ratio": "this.progressRatio" } }, providers: [MODE_PROVIDER], viewQueries: [{ propertyName: "progressCircle", first: true, predicate: ["progressCircle"], descendants: true, static: true }], ngImport: i0, template: "<progress\n    class=\"t-hidden-progress\"\n    [max]=\"max\"\n    [value]=\"value\"\n></progress>\n\n<svg\n    aria-hidden=\"true\"\n    height=\"100%\"\n    width=\"100%\"\n    class=\"t-svg\"\n>\n    <circle\n        cx=\"50%\"\n        cy=\"50%\"\n        class=\"t-track\"\n        [attr.r]=\"oldEdgeRadiusFallback\"\n    ></circle>\n\n    <circle\n        #progressCircle\n        cx=\"50%\"\n        cy=\"50%\"\n        class=\"t-progress\"\n        [attr.r]=\"oldEdgeRadiusFallback\"\n        [class.t-progress_filled]=\"animationDelay$ | async\"\n    ></circle>\n</svg>\n", styles: [":host{position:relative;display:block;color:var(--tui-primary);transform:rotate(-90deg);transform-origin:center;font-size:1rem;width:var(--t-diameter);height:var(--t-diameter)}:host[data-mode=onDark]{--tui-clear: var(--tui-clear-inverse)}:host[data-size=s]{--t-diameter: 2em;--t-track-stroke: .5em;--t-progress-stroke: .5em}:host[data-size=m]{--t-diameter: 3em;--t-track-stroke: .375em;--t-progress-stroke: .375em}:host[data-size=l]{--t-diameter: 4em;--t-track-stroke: .375em;--t-progress-stroke: .375em}:host[data-size=xl]{--t-diameter: 7em;--t-track-stroke: .375em;--t-progress-stroke: .375em}:host[new]{--t-track-stroke: var(--tui-thickness, .375em);--t-progress-stroke: var(--tui-thickness, .375em)}:host[new][data-size=xxs]{--t-diameter: 2rem}:host[new][data-size=xs]{--t-diameter: 2.5rem}:host[new][data-size=s]{--t-diameter: 3.5rem}:host[new][data-size=m]{--t-diameter: 4rem}:host[new][data-size=l]{--t-diameter: 5rem}:host[new][data-size=xl]{--t-diameter: 6rem}:host[new][data-size=xxl]{--t-diameter: 8rem}.t-track{fill:transparent;stroke:var(--tui-clear);stroke-width:var(--t-track-stroke);r:calc((var(--t-diameter) - var(--t-track-stroke)) / 2)}.t-progress{fill:transparent;stroke:var(--tui-progress-color, currentColor);stroke-linecap:round;stroke-width:var(--t-progress-stroke);stroke-dasharray:calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2));stroke-dashoffset:calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2));r:calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)}.t-progress_filled{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)) - var(--progress-ratio) * calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)))}.t-hidden-progress{position:absolute;clip:rect(1px,1px,1px,1px);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;width:1px;margin:-1px;overflow:hidden;padding:0}.t-svg{overflow:unset}\n"], pipes: { "async": i1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiProgressCircleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-progress-circle',
                    templateUrl: './progress-circle.template.html',
                    styleUrls: ['./progress-circle.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [MODE_PROVIDER],
                    host: {
                        '($.data-mode.attr)': 'mode$',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [USER_AGENT]
                }] }, { type: Window, decorators: [{
                    type: Inject,
                    args: [WINDOW]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i2.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }]; }, propDecorators: { progressCircle: [{
                type: ViewChild,
                args: ['progressCircle', { static: true }]
            }], value: [{
                type: Input
            }], max: [{
                type: Input
            }], color: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['style.--tui-progress-color']
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], progressRatio: [{
                type: HostBinding,
                args: ['style.--progress-ratio']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MtY2lyY2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9jb21wb25lbnRzL3Byb2dyZXNzL3Byb2dyZXNzLWNpcmNsZS9wcm9ncmVzcy1jaXJjbGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvcHJvZ3Jlc3MvcHJvZ3Jlc3MtY2lyY2xlL3Byb2dyZXNzLWNpcmNsZS50ZW1wbGF0ZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFVBQVUsRUFDVixXQUFXLEVBQ1gsTUFBTSxFQUNOLEtBQUssRUFDTCxTQUFTLEdBQ1osTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsMkJBQTJCLEVBQUUsa0JBQWtCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDOUUsT0FBTyxFQUNILGFBQWEsRUFDYixRQUFRLEdBSVgsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEVBQWEsRUFBRSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQ3BDLE9BQU8sRUFBQyxLQUFLLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQVlyQyxNQUFNLE9BQU8sMEJBQTBCO0lBb0JuQyxZQUN5QyxTQUFpQixFQUNyQixHQUFXLEVBQ1AsRUFBMkIsRUFDckMsS0FBdUM7UUFIN0IsY0FBUyxHQUFULFNBQVMsQ0FBUTtRQUNyQixRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQ1AsT0FBRSxHQUFGLEVBQUUsQ0FBeUI7UUFDckMsVUFBSyxHQUFMLEtBQUssQ0FBa0M7UUFuQnRFLFVBQUssR0FBRyxDQUFDLENBQUM7UUFHVixRQUFHLEdBQUcsQ0FBQyxDQUFDO1FBSVIsVUFBSyxHQUFrQixJQUFJLENBQUM7UUFJNUIsU0FBSSxHQUE0QixHQUFHLENBQUM7UUFFM0Isb0JBQWUsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBT2hELENBQUM7SUFFSixJQUNJLGFBQWE7UUFDYixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7UUFFcEMsT0FBTyxNQUFNLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBRUQsdURBQXVEO0lBQ3ZELElBQUkscUJBQXFCO1FBQ3JCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQywyQkFBMkIsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUU7WUFDbEUsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUVELE1BQU0sV0FBVyxHQUFHLFFBQVEsQ0FDeEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQyxDQUFDLFdBQVcsRUFDeEUsRUFBRSxDQUNMLENBQUM7UUFFRixPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNqRSxDQUFDOzt3SEE5Q1EsMEJBQTBCLGtCQXFCdkIsVUFBVSxhQUNWLE1BQU0sYUFDTixVQUFVLGFBQ1YsUUFBUTs0R0F4QlgsMEJBQTBCLHFUQUx4QixDQUFDLGFBQWEsQ0FBQywwSkMxQjlCLHNrQkE0QkE7NEZER2EsMEJBQTBCO2tCQVZ0QyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLFdBQVcsRUFBRSxpQ0FBaUM7b0JBQzlDLFNBQVMsRUFBRSxDQUFDLDhCQUE4QixDQUFDO29CQUMzQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsU0FBUyxFQUFFLENBQUMsYUFBYSxDQUFDO29CQUMxQixJQUFJLEVBQUU7d0JBQ0Ysb0JBQW9CLEVBQUUsT0FBTztxQkFDaEM7aUJBQ0o7OzBCQXNCUSxNQUFNOzJCQUFDLFVBQVU7OEJBQ29CLE1BQU07MEJBQTNDLE1BQU07MkJBQUMsTUFBTTs7MEJBQ2IsTUFBTTsyQkFBQyxVQUFVOzswQkFDakIsTUFBTTsyQkFBQyxRQUFROzRDQXRCSCxjQUFjO3NCQUQ5QixTQUFTO3VCQUFDLGdCQUFnQixFQUFFLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQztnQkFJM0MsS0FBSztzQkFESixLQUFLO2dCQUlOLEdBQUc7c0JBREYsS0FBSztnQkFLTixLQUFLO3NCQUZKLEtBQUs7O3NCQUNMLFdBQVc7dUJBQUMsNEJBQTRCO2dCQUt6QyxJQUFJO3NCQUZILEtBQUs7O3NCQUNMLFdBQVc7dUJBQUMsZ0JBQWdCO2dCQWF6QixhQUFhO3NCQURoQixXQUFXO3VCQUFDLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEVsZW1lbnRSZWYsXG4gICAgSG9zdEJpbmRpbmcsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxuICAgIFZpZXdDaGlsZCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1VTRVJfQUdFTlQsIFdJTkRPV30gZnJvbSAnQG5nLXdlYi1hcGlzL2NvbW1vbic7XG5pbXBvcnQge0NIUk9NSVVNX0VER0VfU1RBUlRfVkVSU0lPTiwgdHVpSXNFZGdlT2xkZXJUaGFufSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7XG4gICAgTU9ERV9QUk9WSURFUixcbiAgICBUVUlfTU9ERSxcbiAgICBUdWlCcmlnaHRuZXNzLFxuICAgIFR1aVNpemVYWEwsXG4gICAgVHVpU2l6ZVhYUyxcbn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUnO1xuaW1wb3J0IHtPYnNlcnZhYmxlLCBvZn0gZnJvbSAncnhqcyc7XG5pbXBvcnQge2RlbGF5fSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLXByb2dyZXNzLWNpcmNsZScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3Byb2dyZXNzLWNpcmNsZS50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9wcm9ncmVzcy1jaXJjbGUuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHByb3ZpZGVyczogW01PREVfUFJPVklERVJdLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJygkLmRhdGEtbW9kZS5hdHRyKSc6ICdtb2RlJCcsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpUHJvZ3Jlc3NDaXJjbGVDb21wb25lbnQge1xuICAgIEBWaWV3Q2hpbGQoJ3Byb2dyZXNzQ2lyY2xlJywge3N0YXRpYzogdHJ1ZX0pXG4gICAgcHJpdmF0ZSByZWFkb25seSBwcm9ncmVzc0NpcmNsZSE6IEVsZW1lbnRSZWY8U1ZHQ2lyY2xlRWxlbWVudD47XG5cbiAgICBASW5wdXQoKVxuICAgIHZhbHVlID0gMDtcblxuICAgIEBJbnB1dCgpXG4gICAgbWF4ID0gMTtcblxuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdzdHlsZS4tLXR1aS1wcm9ncmVzcy1jb2xvcicpXG4gICAgY29sb3I6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuXG4gICAgQElucHV0KClcbiAgICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1zaXplJylcbiAgICBzaXplOiBUdWlTaXplWFhMIHwgVHVpU2l6ZVhYUyA9ICdtJztcblxuICAgIHJlYWRvbmx5IGFuaW1hdGlvbkRlbGF5JCA9IG9mKHRydWUpLnBpcGUoZGVsYXkoMCkpO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVVNFUl9BR0VOVCkgcHJpdmF0ZSByZWFkb25seSB1c2VyQWdlbnQ6IHN0cmluZyxcbiAgICAgICAgQEluamVjdChXSU5ET1cpIHByaXZhdGUgcmVhZG9ubHkgd2luOiBXaW5kb3csXG4gICAgICAgIEBJbmplY3QoRWxlbWVudFJlZikgcHJpdmF0ZSByZWFkb25seSBlbDogRWxlbWVudFJlZjxIVE1MRWxlbWVudD4sXG4gICAgICAgIEBJbmplY3QoVFVJX01PREUpIHJlYWRvbmx5IG1vZGUkOiBPYnNlcnZhYmxlPFR1aUJyaWdodG5lc3MgfCBudWxsPixcbiAgICApIHt9XG5cbiAgICBASG9zdEJpbmRpbmcoJ3N0eWxlLi0tcHJvZ3Jlc3MtcmF0aW8nKVxuICAgIGdldCBwcm9ncmVzc1JhdGlvKCk6IG51bWJlciB7XG4gICAgICAgIGNvbnN0IHJhdGlvID0gdGhpcy52YWx1ZSAvIHRoaXMubWF4O1xuXG4gICAgICAgIHJldHVybiBOdW1iZXIuaXNGaW5pdGUocmF0aW8pID8gcmF0aW8gOiAwO1xuICAgIH1cblxuICAgIC8vIFRPRE86IGRyb3Agc3VwcG9ydCBvZiBsZWdhY3kgRWRnZSAoRWRnZUhUTUwpIGluIHY0LnhcbiAgICBnZXQgb2xkRWRnZVJhZGl1c0ZhbGxiYWNrKCk6IG51bWJlciB8IG51bGwge1xuICAgICAgICBpZiAoIXR1aUlzRWRnZU9sZGVyVGhhbihDSFJPTUlVTV9FREdFX1NUQVJUX1ZFUlNJT04sIHRoaXMudXNlckFnZW50KSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzdHJva2VXaWR0aCA9IHBhcnNlSW50KFxuICAgICAgICAgICAgdGhpcy53aW4uZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLnByb2dyZXNzQ2lyY2xlLm5hdGl2ZUVsZW1lbnQpLnN0cm9rZVdpZHRoLFxuICAgICAgICAgICAgMTAsXG4gICAgICAgICk7XG5cbiAgICAgICAgcmV0dXJuICh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQub2Zmc2V0V2lkdGggLSBzdHJva2VXaWR0aCkgLyAyO1xuICAgIH1cbn1cbiIsIjxwcm9ncmVzc1xuICAgIGNsYXNzPVwidC1oaWRkZW4tcHJvZ3Jlc3NcIlxuICAgIFttYXhdPVwibWF4XCJcbiAgICBbdmFsdWVdPVwidmFsdWVcIlxuPjwvcHJvZ3Jlc3M+XG5cbjxzdmdcbiAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxuICAgIGhlaWdodD1cIjEwMCVcIlxuICAgIHdpZHRoPVwiMTAwJVwiXG4gICAgY2xhc3M9XCJ0LXN2Z1wiXG4+XG4gICAgPGNpcmNsZVxuICAgICAgICBjeD1cIjUwJVwiXG4gICAgICAgIGN5PVwiNTAlXCJcbiAgICAgICAgY2xhc3M9XCJ0LXRyYWNrXCJcbiAgICAgICAgW2F0dHIucl09XCJvbGRFZGdlUmFkaXVzRmFsbGJhY2tcIlxuICAgID48L2NpcmNsZT5cblxuICAgIDxjaXJjbGVcbiAgICAgICAgI3Byb2dyZXNzQ2lyY2xlXG4gICAgICAgIGN4PVwiNTAlXCJcbiAgICAgICAgY3k9XCI1MCVcIlxuICAgICAgICBjbGFzcz1cInQtcHJvZ3Jlc3NcIlxuICAgICAgICBbYXR0ci5yXT1cIm9sZEVkZ2VSYWRpdXNGYWxsYmFja1wiXG4gICAgICAgIFtjbGFzcy50LXByb2dyZXNzX2ZpbGxlZF09XCJhbmltYXRpb25EZWxheSQgfCBhc3luY1wiXG4gICAgPjwvY2lyY2xlPlxuPC9zdmc+XG4iXX0=
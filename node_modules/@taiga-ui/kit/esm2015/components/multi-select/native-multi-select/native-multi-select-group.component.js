import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';
import { tuiAsDataList } from '@taiga-ui/core';
import { AbstractTuiNativeMultiSelect } from './native-multi-select';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/kit/components/data-list-wrapper";
import * as i2 from "@angular/common";
import * as i3 from "@taiga-ui/core";
import * as i4 from "../multi-select-group/multi-select-group.directive";
import * as i5 from "@angular/forms";
import * as i6 from "@taiga-ui/kit/pipes/stringify-content";
import * as i7 from "@taiga-ui/cdk";
export class TuiNativeMultiSelectGroupComponent extends AbstractTuiNativeMultiSelect {
    constructor() {
        super(...arguments);
        this.items = [];
        this.labels = [];
    }
    onValueChange(selectedOptions) {
        var _a;
        const selected = Array.from(selectedOptions).map(option => option.index);
        const flatItems = ((_a = this.items) === null || _a === void 0 ? void 0 : _a.reduce((acc, val) => acc.concat(val), [])) || [];
        const value = flatItems.filter((_, index) => selected.includes(index));
        this.host.onSelectionChange(value);
    }
}
TuiNativeMultiSelectGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiNativeMultiSelectGroupComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
TuiNativeMultiSelectGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiNativeMultiSelectGroupComponent, selector: "select[multiple][tuiSelect][labels]", inputs: { items: "items", labels: "labels" }, host: { listeners: { "change": "onValueChange($event.target.selectedOptions)", "click.stop.silent": "0", "mousedown.stop.silent": "0" }, properties: { "attr.aria-invalid": "host.invalid", "disabled": "host.disabled || control.readOnly", "tabIndex": "host.focusable ? 0 : -1" } }, providers: [
        tuiAsDataList(TuiNativeMultiSelectGroupComponent),
        {
            provide: TemplateRef,
            deps: [TuiNativeMultiSelectGroupComponent],
            useFactory: ({ datalist }) => datalist,
        },
        {
            provide: AbstractTuiNativeMultiSelect,
            useExisting: TuiNativeMultiSelectGroupComponent,
        },
    ], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"control.control?.valueChanges | async\"></ng-container>\n\n<tui-data-list-wrapper\n    *tuiDataList\n    tuiMultiSelectGroup\n    [disabledItemHandler]=\"disabledItemHandler || host.disableItemHandler\"\n    [itemContent]=\"stringify | tuiStringifyContent\"\n    [items]=\"items\"\n    [labels]=\"labels\"\n></tui-data-list-wrapper>\n<optgroup\n    *ngFor=\"let group of items; let index = index\"\n    [label]=\"labels[index]\"\n>\n    <option\n        *ngFor=\"let option of group\"\n        [disabled]=\"disabledItemHandler ? disabledItemHandler(option) : host.disableItemHandler(option)\"\n        [selected]=\"option | tuiMapper: selectedMapper : control.value\"\n        [value]=\"stringify(option)\"\n    >\n        {{ stringify(option) }}\n    </option>\n</optgroup>\n", styles: [":host{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0}\n"], components: [{ type: i1.TuiDataListGroupWrapperComponent, selector: "tui-data-list-wrapper[labels]", inputs: ["items", "labels"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { type: i4.TuiMultiSelectGroupDirective, selector: "[tuiMultiSelectGroup]" }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { type: i5.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }], pipes: { "async": i2.AsyncPipe, "tuiStringifyContent": i6.TuiStringifyContentPipe, "tuiMapper": i7.TuiMapperPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiNativeMultiSelectGroupComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'select[multiple][tuiSelect][labels]',
                    templateUrl: './native-multi-select-group.template.html',
                    styleUrls: ['./native-multi-select.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsDataList(TuiNativeMultiSelectGroupComponent),
                        {
                            provide: TemplateRef,
                            deps: [TuiNativeMultiSelectGroupComponent],
                            useFactory: ({ datalist }) => datalist,
                        },
                        {
                            provide: AbstractTuiNativeMultiSelect,
                            useExisting: TuiNativeMultiSelectGroupComponent,
                        },
                    ],
                    host: {
                        '[attr.aria-invalid]': 'host.invalid',
                        '[disabled]': 'host.disabled || control.readOnly',
                        '[tabIndex]': 'host.focusable ? 0 : -1',
                        '(change)': 'onValueChange($event.target.selectedOptions)',
                        '(click.stop.silent)': '0',
                        '(mousedown.stop.silent)': '0',
                    },
                }]
        }], propDecorators: { items: [{
                type: Input
            }], labels: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLW11bHRpLXNlbGVjdC1ncm91cC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9tdWx0aS1zZWxlY3QvbmF0aXZlLW11bHRpLXNlbGVjdC9uYXRpdmUtbXVsdGktc2VsZWN0LWdyb3VwLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9jb21wb25lbnRzL211bHRpLXNlbGVjdC9uYXRpdmUtbXVsdGktc2VsZWN0L25hdGl2ZS1tdWx0aS1zZWxlY3QtZ3JvdXAudGVtcGxhdGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sRUFBQyw0QkFBNEIsRUFBQyxNQUFNLHVCQUF1QixDQUFDOzs7Ozs7Ozs7QUE2Qm5FLE1BQU0sT0FBTyxrQ0FFWCxTQUFRLDRCQUErQjtJQTdCekM7O1FBK0JJLFVBQUssR0FBMEIsRUFBRSxDQUFDO1FBR2xDLFdBQU0sR0FBc0IsRUFBRSxDQUFDO0tBU2xDO0lBUEcsYUFBYSxDQUFDLGVBQXFEOztRQUMvRCxNQUFNLFFBQVEsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6RSxNQUFNLFNBQVMsR0FBRyxDQUFBLE1BQUEsSUFBSSxDQUFDLEtBQUssMENBQUUsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsS0FBSSxFQUFFLENBQUM7UUFDOUUsTUFBTSxLQUFLLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUV2RSxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7O2dJQWZRLGtDQUFrQztvSEFBbEMsa0NBQWtDLG9ZQXRCaEM7UUFDUCxhQUFhLENBQUMsa0NBQWtDLENBQUM7UUFDakQ7WUFDSSxPQUFPLEVBQUUsV0FBVztZQUNwQixJQUFJLEVBQUUsQ0FBQyxrQ0FBa0MsQ0FBQztZQUMxQyxVQUFVLEVBQUUsQ0FBQyxFQUFDLFFBQVEsRUFBOEMsRUFBRSxFQUFFLENBQ3BFLFFBQVE7U0FDZjtRQUNEO1lBQ0ksT0FBTyxFQUFFLDRCQUE0QjtZQUNyQyxXQUFXLEVBQUUsa0NBQWtDO1NBQ2xEO0tBQ0osaURDdEJMLGd5QkF1QkE7NEZEU2Esa0NBQWtDO2tCQTNCOUMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUscUNBQXFDO29CQUMvQyxXQUFXLEVBQUUsMkNBQTJDO29CQUN4RCxTQUFTLEVBQUUsQ0FBQyxrQ0FBa0MsQ0FBQztvQkFDL0MsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFNBQVMsRUFBRTt3QkFDUCxhQUFhLG9DQUFvQzt3QkFDakQ7NEJBQ0ksT0FBTyxFQUFFLFdBQVc7NEJBQ3BCLElBQUksRUFBRSxvQ0FBb0M7NEJBQzFDLFVBQVUsRUFBRSxDQUFDLEVBQUMsUUFBUSxFQUE4QyxFQUFFLEVBQUUsQ0FDcEUsUUFBUTt5QkFDZjt3QkFDRDs0QkFDSSxPQUFPLEVBQUUsNEJBQTRCOzRCQUNyQyxXQUFXLG9DQUFvQzt5QkFDbEQ7cUJBQ0o7b0JBQ0QsSUFBSSxFQUFFO3dCQUNGLHFCQUFxQixFQUFFLGNBQWM7d0JBQ3JDLFlBQVksRUFBRSxtQ0FBbUM7d0JBQ2pELFlBQVksRUFBRSx5QkFBeUI7d0JBQ3ZDLFVBQVUsRUFBRSw4Q0FBOEM7d0JBQzFELHFCQUFxQixFQUFFLEdBQUc7d0JBQzFCLHlCQUF5QixFQUFFLEdBQUc7cUJBQ2pDO2lCQUNKOzhCQUtHLEtBQUs7c0JBREosS0FBSztnQkFJTixNQUFNO3NCQURMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBUZW1wbGF0ZVJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aUFzRGF0YUxpc3R9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcblxuaW1wb3J0IHtBYnN0cmFjdFR1aU5hdGl2ZU11bHRpU2VsZWN0fSBmcm9tICcuL25hdGl2ZS1tdWx0aS1zZWxlY3QnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3NlbGVjdFttdWx0aXBsZV1bdHVpU2VsZWN0XVtsYWJlbHNdJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbmF0aXZlLW11bHRpLXNlbGVjdC1ncm91cC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9uYXRpdmUtbXVsdGktc2VsZWN0LnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgdHVpQXNEYXRhTGlzdChUdWlOYXRpdmVNdWx0aVNlbGVjdEdyb3VwQ29tcG9uZW50KSxcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVGVtcGxhdGVSZWYsXG4gICAgICAgICAgICBkZXBzOiBbVHVpTmF0aXZlTXVsdGlTZWxlY3RHcm91cENvbXBvbmVudF0sXG4gICAgICAgICAgICB1c2VGYWN0b3J5OiAoe2RhdGFsaXN0fTogVHVpTmF0aXZlTXVsdGlTZWxlY3RHcm91cENvbXBvbmVudDx1bmtub3duPikgPT5cbiAgICAgICAgICAgICAgICBkYXRhbGlzdCxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogQWJzdHJhY3RUdWlOYXRpdmVNdWx0aVNlbGVjdCxcbiAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBUdWlOYXRpdmVNdWx0aVNlbGVjdEdyb3VwQ29tcG9uZW50LFxuICAgICAgICB9LFxuICAgIF0sXG4gICAgaG9zdDoge1xuICAgICAgICAnW2F0dHIuYXJpYS1pbnZhbGlkXSc6ICdob3N0LmludmFsaWQnLFxuICAgICAgICAnW2Rpc2FibGVkXSc6ICdob3N0LmRpc2FibGVkIHx8IGNvbnRyb2wucmVhZE9ubHknLFxuICAgICAgICAnW3RhYkluZGV4XSc6ICdob3N0LmZvY3VzYWJsZSA/IDAgOiAtMScsXG4gICAgICAgICcoY2hhbmdlKSc6ICdvblZhbHVlQ2hhbmdlKCRldmVudC50YXJnZXQuc2VsZWN0ZWRPcHRpb25zKScsXG4gICAgICAgICcoY2xpY2suc3RvcC5zaWxlbnQpJzogJzAnLFxuICAgICAgICAnKG1vdXNlZG93bi5zdG9wLnNpbGVudCknOiAnMCcsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpTmF0aXZlTXVsdGlTZWxlY3RHcm91cENvbXBvbmVudDxcbiAgICBULFxuPiBleHRlbmRzIEFic3RyYWN0VHVpTmF0aXZlTXVsdGlTZWxlY3Q8VD4ge1xuICAgIEBJbnB1dCgpXG4gICAgaXRlbXM6IHJlYWRvbmx5IFRbXVtdIHwgbnVsbCA9IFtdO1xuXG4gICAgQElucHV0KClcbiAgICBsYWJlbHM6IHJlYWRvbmx5IHN0cmluZ1tdID0gW107XG5cbiAgICBvblZhbHVlQ2hhbmdlKHNlbGVjdGVkT3B0aW9uczogSFRNTFNlbGVjdEVsZW1lbnRbJ3NlbGVjdGVkT3B0aW9ucyddKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IHNlbGVjdGVkID0gQXJyYXkuZnJvbShzZWxlY3RlZE9wdGlvbnMpLm1hcChvcHRpb24gPT4gb3B0aW9uLmluZGV4KTtcbiAgICAgICAgY29uc3QgZmxhdEl0ZW1zID0gdGhpcy5pdGVtcz8ucmVkdWNlKChhY2MsIHZhbCkgPT4gYWNjLmNvbmNhdCh2YWwpLCBbXSkgfHwgW107XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZmxhdEl0ZW1zLmZpbHRlcigoXywgaW5kZXgpID0+IHNlbGVjdGVkLmluY2x1ZGVzKGluZGV4KSk7XG5cbiAgICAgICAgdGhpcy5ob3N0Lm9uU2VsZWN0aW9uQ2hhbmdlKHZhbHVlKTtcbiAgICB9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiY29udHJvbC5jb250cm9sPy52YWx1ZUNoYW5nZXMgfCBhc3luY1wiPjwvbmctY29udGFpbmVyPlxuXG48dHVpLWRhdGEtbGlzdC13cmFwcGVyXG4gICAgKnR1aURhdGFMaXN0XG4gICAgdHVpTXVsdGlTZWxlY3RHcm91cFxuICAgIFtkaXNhYmxlZEl0ZW1IYW5kbGVyXT1cImRpc2FibGVkSXRlbUhhbmRsZXIgfHwgaG9zdC5kaXNhYmxlSXRlbUhhbmRsZXJcIlxuICAgIFtpdGVtQ29udGVudF09XCJzdHJpbmdpZnkgfCB0dWlTdHJpbmdpZnlDb250ZW50XCJcbiAgICBbaXRlbXNdPVwiaXRlbXNcIlxuICAgIFtsYWJlbHNdPVwibGFiZWxzXCJcbj48L3R1aS1kYXRhLWxpc3Qtd3JhcHBlcj5cbjxvcHRncm91cFxuICAgICpuZ0Zvcj1cImxldCBncm91cCBvZiBpdGVtczsgbGV0IGluZGV4ID0gaW5kZXhcIlxuICAgIFtsYWJlbF09XCJsYWJlbHNbaW5kZXhdXCJcbj5cbiAgICA8b3B0aW9uXG4gICAgICAgICpuZ0Zvcj1cImxldCBvcHRpb24gb2YgZ3JvdXBcIlxuICAgICAgICBbZGlzYWJsZWRdPVwiZGlzYWJsZWRJdGVtSGFuZGxlciA/IGRpc2FibGVkSXRlbUhhbmRsZXIob3B0aW9uKSA6IGhvc3QuZGlzYWJsZUl0ZW1IYW5kbGVyKG9wdGlvbilcIlxuICAgICAgICBbc2VsZWN0ZWRdPVwib3B0aW9uIHwgdHVpTWFwcGVyOiBzZWxlY3RlZE1hcHBlciA6IGNvbnRyb2wudmFsdWVcIlxuICAgICAgICBbdmFsdWVdPVwic3RyaW5naWZ5KG9wdGlvbilcIlxuICAgID5cbiAgICAgICAge3sgc3RyaW5naWZ5KG9wdGlvbikgfX1cbiAgICA8L29wdGlvbj5cbjwvb3B0Z3JvdXA+XG4iXX0=
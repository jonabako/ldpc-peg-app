import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, HostListener, Inject, Input, } from '@angular/core';
import { TuiDestroyService, TuiFocusVisibleService } from '@taiga-ui/cdk';
import { TUI_COMMON_ICONS, TuiRouterLinkActiveService, } from '@taiga-ui/core';
import { identity } from 'rxjs';
import { filter } from 'rxjs/operators';
import { TuiStepperComponent } from '../stepper.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@angular/common";
import * as i3 from "@taiga-ui/cdk";
import * as i4 from "rxjs";
import * as i5 from "../stepper.component";
export class TuiStepComponent {
    constructor(focusVisible$, routerLinkActive$, stepper, el, icons) {
        this.stepper = stepper;
        this.el = el;
        this.icons = icons;
        this.stepState = 'normal';
        this.icon = '';
        this.focusVisible = false;
        routerLinkActive$.pipe(filter(identity)).subscribe(() => {
            this.activate();
        });
        focusVisible$.subscribe(visible => {
            this.focusVisible = visible;
        });
    }
    get isActive() {
        return this.stepper.isActive(this.index);
    }
    get isVertical() {
        return this.stepper.orientation === 'vertical';
    }
    get tabIndex() {
        return this.isActive ? 0 : -1;
    }
    get index() {
        return this.stepper.indexOf(this.el.nativeElement);
    }
    activate() {
        this.stepper.activate(this.index);
    }
}
TuiStepComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiStepComponent, deps: [{ token: TuiFocusVisibleService }, { token: TuiRouterLinkActiveService }, { token: TuiStepperComponent }, { token: ElementRef }, { token: TUI_COMMON_ICONS }], target: i0.ɵɵFactoryTarget.Component });
TuiStepComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiStepComponent, selector: "button[tuiStep], a[tuiStep]:not([routerLink]), a[tuiStep][routerLink][routerLinkActive]", inputs: { stepState: "stepState", icon: "icon" }, host: { attributes: { "type": "button" }, listeners: { "click": "activate()" }, properties: { "attr.data-state": "this.stepState", "class._focus-visible": "this.focusVisible", "class._active": "this.isActive", "class._vertical": "this.isVertical", "tabIndex": "this.tabIndex" } }, providers: [TuiDestroyService, TuiRouterLinkActiveService, TuiFocusVisibleService], ngImport: i0, template: "<tui-svg\n    *ngIf=\"icon\"\n    class=\"t-marker t-marker_custom\"\n    [src]=\"icon\"\n></tui-svg>\n<tui-svg\n    class=\"t-marker t-marker_error\"\n    [src]=\"icons.error\"\n></tui-svg>\n<tui-svg\n    class=\"t-marker t-marker_pass\"\n    [src]=\"icons.check\"\n></tui-svg>\n<div class=\"t-marker t-marker_index\"></div>\n<ng-content></ng-content>\n", styles: [":host{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;text-decoration:none;position:relative;display:flex;align-items:center;flex-shrink:0;color:var(--tui-link);margin-right:1.5rem;outline:none;cursor:pointer;counter-increment:steps}:host:disabled{pointer-events:none;color:var(--tui-base-07)}:host:hover{color:var(--tui-link-hover)}:host:not(:last-of-type)._vertical{margin-bottom:1.25rem}:host._active,:host._active:hover{color:var(--tui-text-01);cursor:default}:host._focus-visible:before{content:\"\";position:absolute;left:2.75rem;right:0;top:50%;height:1.5rem;margin-top:-.75rem;background:var(--tui-selection)}.t-marker{transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:flex;width:2rem;height:2rem;border-radius:100%;margin-right:.75rem;flex-shrink:0;align-items:center;justify-content:center;background:var(--tui-secondary);color:var(--tui-link)}:host:disabled .t-marker{background:var(--tui-base-03);color:var(--tui-base-07)}.t-marker_index:before{content:counter(steps)}:host:hover .t-marker_index{color:var(--tui-link-hover);background:var(--tui-secondary-hover)}:host._active .t-marker_index{color:var(--tui-primary-text);background:var(--tui-primary)}:host:not([data-state=\"normal\"]):not(._active) .t-marker_index,:host:not(._active) .t-marker_custom~.t-marker_index{display:none}.t-marker_error{background:var(--tui-error-bg);color:var(--tui-error-fill)}:host:hover .t-marker_error{background:var(--tui-error-bg-hover);color:var(--tui-error-fill)}:host:not([data-state=\"error\"]) .t-marker_error,:host._active .t-marker_error{display:none}:host:not([data-state=\"pass\"]) .t-marker_pass,:host._active .t-marker_pass{display:none}:host:not([data-state=\"normal\"]) .t-marker_custom,:host._active .t-marker_custom{display:none}:host:hover .t-marker_custom{color:var(--tui-link-hover);background:var(--tui-secondary-hover)}\n"], components: [{ type: i1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiStepComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'button[tuiStep], a[tuiStep]:not([routerLink]), a[tuiStep][routerLink][routerLinkActive]',
                    templateUrl: './step.template.html',
                    styleUrls: ['./step.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [TuiDestroyService, TuiRouterLinkActiveService, TuiFocusVisibleService],
                    host: {
                        type: 'button',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i3.TuiFocusVisibleService, decorators: [{
                    type: Inject,
                    args: [TuiFocusVisibleService]
                }] }, { type: i4.Observable, decorators: [{
                    type: Inject,
                    args: [TuiRouterLinkActiveService]
                }] }, { type: i5.TuiStepperComponent, decorators: [{
                    type: Inject,
                    args: [TuiStepperComponent]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_COMMON_ICONS]
                }] }]; }, propDecorators: { stepState: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-state']
            }], icon: [{
                type: Input
            }], focusVisible: [{
                type: HostBinding,
                args: ['class._focus-visible']
            }], isActive: [{
                type: HostBinding,
                args: ['class._active']
            }], isVertical: [{
                type: HostBinding,
                args: ['class._vertical']
            }], tabIndex: [{
                type: HostBinding,
                args: ['tabIndex']
            }], activate: [{
                type: HostListener,
                args: ['click']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9zdGVwcGVyL3N0ZXAvc3RlcC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9zdGVwcGVyL3N0ZXAvc3RlcC50ZW1wbGF0ZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFVBQVUsRUFDVixXQUFXLEVBQ1gsWUFBWSxFQUNaLE1BQU0sRUFDTixLQUFLLEdBQ1IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGlCQUFpQixFQUFFLHNCQUFzQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFDSCxnQkFBZ0IsRUFFaEIsMEJBQTBCLEdBQzdCLE1BQU0sZ0JBQWdCLENBQUM7QUFDeEIsT0FBTyxFQUFDLFFBQVEsRUFBYSxNQUFNLE1BQU0sQ0FBQztBQUMxQyxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFdEMsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7Ozs7Ozs7QUFhekQsTUFBTSxPQUFPLGdCQUFnQjtJQVd6QixZQUNvQyxhQUFxQyxFQUNqQyxpQkFBc0MsRUFDNUIsT0FBNEIsRUFDckMsRUFBMkIsRUFDN0IsS0FBcUI7UUFGVixZQUFPLEdBQVAsT0FBTyxDQUFxQjtRQUNyQyxPQUFFLEdBQUYsRUFBRSxDQUF5QjtRQUM3QixVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQWI1RCxjQUFTLEdBQWdDLFFBQVEsQ0FBQztRQUdsRCxTQUFJLEdBQUcsRUFBRSxDQUFDO1FBR1YsaUJBQVksR0FBRyxLQUFLLENBQUM7UUFTakIsaUJBQWlCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUU7WUFDcEQsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3BCLENBQUMsQ0FBQyxDQUFDO1FBRUgsYUFBYSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUM5QixJQUFJLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQztRQUNoQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxJQUNJLFFBQVE7UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRUQsSUFDSSxVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsS0FBSyxVQUFVLENBQUM7SUFDbkQsQ0FBQztJQUVELElBQ0ksUUFBUTtRQUNSLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBSSxLQUFLO1FBQ0wsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFHRCxRQUFRO1FBQ0osSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3RDLENBQUM7OzhHQWpEUSxnQkFBZ0Isa0JBWWIsc0JBQXNCLGFBQ3RCLDBCQUEwQixhQUMxQixtQkFBbUIsYUFDbkIsVUFBVSxhQUNWLGdCQUFnQjtrR0FoQm5CLGdCQUFnQiw2YkFMZCxDQUFDLGlCQUFpQixFQUFFLDBCQUEwQixFQUFFLHNCQUFzQixDQUFDLDBCQzFCdEYsb1dBZUE7NEZEZ0JhLGdCQUFnQjtrQkFYNUIsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQ0oseUZBQXlGO29CQUM3RixXQUFXLEVBQUUsc0JBQXNCO29CQUNuQyxTQUFTLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztvQkFDaEMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFNBQVMsRUFBRSxDQUFDLGlCQUFpQixFQUFFLDBCQUEwQixFQUFFLHNCQUFzQixDQUFDO29CQUNsRixJQUFJLEVBQUU7d0JBQ0YsSUFBSSxFQUFFLFFBQVE7cUJBQ2pCO2lCQUNKOzswQkFhUSxNQUFNOzJCQUFDLHNCQUFzQjs7MEJBQzdCLE1BQU07MkJBQUMsMEJBQTBCOzswQkFDakMsTUFBTTsyQkFBQyxtQkFBbUI7OzBCQUMxQixNQUFNOzJCQUFDLFVBQVU7OzBCQUNqQixNQUFNOzJCQUFDLGdCQUFnQjs0Q0FiNUIsU0FBUztzQkFGUixLQUFLOztzQkFDTCxXQUFXO3VCQUFDLGlCQUFpQjtnQkFJOUIsSUFBSTtzQkFESCxLQUFLO2dCQUlOLFlBQVk7c0JBRFgsV0FBVzt1QkFBQyxzQkFBc0I7Z0JBb0IvQixRQUFRO3NCQURYLFdBQVc7dUJBQUMsZUFBZTtnQkFNeEIsVUFBVTtzQkFEYixXQUFXO3VCQUFDLGlCQUFpQjtnQkFNMUIsUUFBUTtzQkFEWCxXQUFXO3VCQUFDLFVBQVU7Z0JBVXZCLFFBQVE7c0JBRFAsWUFBWTt1QkFBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDb21wb25lbnQsXG4gICAgRWxlbWVudFJlZixcbiAgICBIb3N0QmluZGluZyxcbiAgICBIb3N0TGlzdGVuZXIsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpRGVzdHJveVNlcnZpY2UsIFR1aUZvY3VzVmlzaWJsZVNlcnZpY2V9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtcbiAgICBUVUlfQ09NTU9OX0lDT05TLFxuICAgIFR1aUNvbW1vbkljb25zLFxuICAgIFR1aVJvdXRlckxpbmtBY3RpdmVTZXJ2aWNlLFxufSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge2lkZW50aXR5LCBPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcbmltcG9ydCB7ZmlsdGVyfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmltcG9ydCB7VHVpU3RlcHBlckNvbXBvbmVudH0gZnJvbSAnLi4vc3RlcHBlci5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjpcbiAgICAgICAgJ2J1dHRvblt0dWlTdGVwXSwgYVt0dWlTdGVwXTpub3QoW3JvdXRlckxpbmtdKSwgYVt0dWlTdGVwXVtyb3V0ZXJMaW5rXVtyb3V0ZXJMaW5rQWN0aXZlXScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3N0ZXAudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vc3RlcC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgcHJvdmlkZXJzOiBbVHVpRGVzdHJveVNlcnZpY2UsIFR1aVJvdXRlckxpbmtBY3RpdmVTZXJ2aWNlLCBUdWlGb2N1c1Zpc2libGVTZXJ2aWNlXSxcbiAgICBob3N0OiB7XG4gICAgICAgIHR5cGU6ICdidXR0b24nLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVN0ZXBDb21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtc3RhdGUnKVxuICAgIHN0ZXBTdGF0ZTogJ2Vycm9yJyB8ICdub3JtYWwnIHwgJ3Bhc3MnID0gJ25vcm1hbCc7XG5cbiAgICBASW5wdXQoKVxuICAgIGljb24gPSAnJztcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX2ZvY3VzLXZpc2libGUnKVxuICAgIGZvY3VzVmlzaWJsZSA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVHVpRm9jdXNWaXNpYmxlU2VydmljZSkgZm9jdXNWaXNpYmxlJDogVHVpRm9jdXNWaXNpYmxlU2VydmljZSxcbiAgICAgICAgQEluamVjdChUdWlSb3V0ZXJMaW5rQWN0aXZlU2VydmljZSkgcm91dGVyTGlua0FjdGl2ZSQ6IE9ic2VydmFibGU8Ym9vbGVhbj4sXG4gICAgICAgIEBJbmplY3QoVHVpU3RlcHBlckNvbXBvbmVudCkgcHJpdmF0ZSByZWFkb25seSBzdGVwcGVyOiBUdWlTdGVwcGVyQ29tcG9uZW50LFxuICAgICAgICBASW5qZWN0KEVsZW1lbnRSZWYpIHByaXZhdGUgcmVhZG9ubHkgZWw6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuICAgICAgICBASW5qZWN0KFRVSV9DT01NT05fSUNPTlMpIHJlYWRvbmx5IGljb25zOiBUdWlDb21tb25JY29ucyxcbiAgICApIHtcbiAgICAgICAgcm91dGVyTGlua0FjdGl2ZSQucGlwZShmaWx0ZXIoaWRlbnRpdHkpKS5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5hY3RpdmF0ZSgpO1xuICAgICAgICB9KTtcblxuICAgICAgICBmb2N1c1Zpc2libGUkLnN1YnNjcmliZSh2aXNpYmxlID0+IHtcbiAgICAgICAgICAgIHRoaXMuZm9jdXNWaXNpYmxlID0gdmlzaWJsZTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5fYWN0aXZlJylcbiAgICBnZXQgaXNBY3RpdmUoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0ZXBwZXIuaXNBY3RpdmUodGhpcy5pbmRleCk7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5fdmVydGljYWwnKVxuICAgIGdldCBpc1ZlcnRpY2FsKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGVwcGVyLm9yaWVudGF0aW9uID09PSAndmVydGljYWwnO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygndGFiSW5kZXgnKVxuICAgIGdldCB0YWJJbmRleCgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5pc0FjdGl2ZSA/IDAgOiAtMTtcbiAgICB9XG5cbiAgICBnZXQgaW5kZXgoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RlcHBlci5pbmRleE9mKHRoaXMuZWwubmF0aXZlRWxlbWVudCk7XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignY2xpY2snKVxuICAgIGFjdGl2YXRlKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnN0ZXBwZXIuYWN0aXZhdGUodGhpcy5pbmRleCk7XG4gICAgfVxufVxuIiwiPHR1aS1zdmdcbiAgICAqbmdJZj1cImljb25cIlxuICAgIGNsYXNzPVwidC1tYXJrZXIgdC1tYXJrZXJfY3VzdG9tXCJcbiAgICBbc3JjXT1cImljb25cIlxuPjwvdHVpLXN2Zz5cbjx0dWktc3ZnXG4gICAgY2xhc3M9XCJ0LW1hcmtlciB0LW1hcmtlcl9lcnJvclwiXG4gICAgW3NyY109XCJpY29ucy5lcnJvclwiXG4+PC90dWktc3ZnPlxuPHR1aS1zdmdcbiAgICBjbGFzcz1cInQtbWFya2VyIHQtbWFya2VyX3Bhc3NcIlxuICAgIFtzcmNdPVwiaWNvbnMuY2hlY2tcIlxuPjwvdHVpLXN2Zz5cbjxkaXYgY2xhc3M9XCJ0LW1hcmtlciB0LW1hcmtlcl9pbmRleFwiPjwvZGl2PlxuPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuIl19
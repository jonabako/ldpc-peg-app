import { ChangeDetectionStrategy, Component, HostBinding, HostListener, Inject, Input, } from '@angular/core';
import { TuiTabsDirective } from '../tabs.directive';
import * as i0 from "@angular/core";
import * as i1 from "../tabs.directive";
export class TuiTabsVerticalComponent {
    constructor(tabs) {
        this.tabs = tabs;
        this.vertical = 'left';
    }
    onKeyDownArrow(current, step) {
        this.tabs.moveFocus(current, step);
    }
}
TuiTabsVerticalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTabsVerticalComponent, deps: [{ token: TuiTabsDirective }], target: i0.ɵɵFactoryTarget.Component });
TuiTabsVerticalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTabsVerticalComponent, selector: "tui-tabs[vertical], nav[tuiTabs][vertical]", inputs: { vertical: "vertical" }, host: { listeners: { "keydown.arrowDown.prevent": "onKeyDownArrow($event.target,1)", "keydown.arrowUp.prevent": "onKeyDownArrow($event.target,-1)" }, properties: { "attr.data-vertical": "this.vertical" } }, ngImport: i0, template: `
        <ng-content></ng-content>
    `, isInline: true, styles: [":host{display:flex;flex-direction:column;font:var(--tui-font-text-m);color:var(--tui-text-02);box-shadow:inset -1px 0 var(--tui-base-03)}:host[data-vertical=right]{box-shadow:inset 1px 0 var(--tui-base-03)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTabsVerticalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-tabs[vertical], nav[tuiTabs][vertical]',
                    template: `
        <ng-content></ng-content>
    `,
                    styleUrls: ['./tabs-vertical.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiTabsDirective, decorators: [{
                    type: Inject,
                    args: [TuiTabsDirective]
                }] }]; }, propDecorators: { vertical: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-vertical']
            }], onKeyDownArrow: [{
                type: HostListener,
                args: ['keydown.arrowDown.prevent', ['$event.target', '1']]
            }, {
                type: HostListener,
                args: ['keydown.arrowUp.prevent', ['$event.target', '-1']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicy12ZXJ0aWNhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy90YWJzL3RhYnMtdmVydGljYWwvdGFicy12ZXJ0aWNhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsV0FBVyxFQUNYLFlBQVksRUFDWixNQUFNLEVBQ04sS0FBSyxHQUNSLE1BQU0sZUFBZSxDQUFDO0FBR3ZCLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLG1CQUFtQixDQUFDOzs7QUFVbkQsTUFBTSxPQUFPLHdCQUF3QjtJQUtqQyxZQUF1RCxJQUFzQjtRQUF0QixTQUFJLEdBQUosSUFBSSxDQUFrQjtRQUY3RSxhQUFRLEdBQTJCLE1BQU0sQ0FBQztJQUVzQyxDQUFDO0lBSWpGLGNBQWMsQ0FBQyxPQUFvQixFQUFFLElBQVk7UUFDN0MsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7O3NIQVhRLHdCQUF3QixrQkFLYixnQkFBZ0I7MEdBTDNCLHdCQUF3QixtVUFOdkI7O0tBRVQ7NEZBSVEsd0JBQXdCO2tCQVJwQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSw0Q0FBNEM7b0JBQ3RELFFBQVEsRUFBRTs7S0FFVDtvQkFDRCxTQUFTLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQztvQkFDekMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2xEOzswQkFNZ0IsTUFBTTsyQkFBQyxnQkFBZ0I7NENBRnBDLFFBQVE7c0JBRlAsS0FBSzs7c0JBQ0wsV0FBVzt1QkFBQyxvQkFBb0I7Z0JBT2pDLGNBQWM7c0JBRmIsWUFBWTt1QkFBQywyQkFBMkIsRUFBRSxDQUFDLGVBQWUsRUFBRSxHQUFHLENBQUM7O3NCQUNoRSxZQUFZO3VCQUFDLHlCQUF5QixFQUFFLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEhvc3RCaW5kaW5nLFxuICAgIEhvc3RMaXN0ZW5lcixcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlIb3Jpem9udGFsRGlyZWN0aW9ufSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5cbmltcG9ydCB7VHVpVGFic0RpcmVjdGl2ZX0gZnJvbSAnLi4vdGFicy5kaXJlY3RpdmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS10YWJzW3ZlcnRpY2FsXSwgbmF2W3R1aVRhYnNdW3ZlcnRpY2FsXScsXG4gICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuICAgIGAsXG4gICAgc3R5bGVVcmxzOiBbJy4vdGFicy12ZXJ0aWNhbC5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFR1aVRhYnNWZXJ0aWNhbENvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS12ZXJ0aWNhbCcpXG4gICAgdmVydGljYWw6IFR1aUhvcml6b250YWxEaXJlY3Rpb24gPSAnbGVmdCc7XG5cbiAgICBjb25zdHJ1Y3RvcihASW5qZWN0KFR1aVRhYnNEaXJlY3RpdmUpIHByaXZhdGUgcmVhZG9ubHkgdGFiczogVHVpVGFic0RpcmVjdGl2ZSkge31cblxuICAgIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24uYXJyb3dEb3duLnByZXZlbnQnLCBbJyRldmVudC50YXJnZXQnLCAnMSddKVxuICAgIEBIb3N0TGlzdGVuZXIoJ2tleWRvd24uYXJyb3dVcC5wcmV2ZW50JywgWyckZXZlbnQudGFyZ2V0JywgJy0xJ10pXG4gICAgb25LZXlEb3duQXJyb3coY3VycmVudDogSFRNTEVsZW1lbnQsIHN0ZXA6IG51bWJlcik6IHZvaWQge1xuICAgICAgICB0aGlzLnRhYnMubW92ZUZvY3VzKGN1cnJlbnQsIHN0ZXApO1xuICAgIH1cbn1cbiJdfQ==
import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';
import { tuiIsNumber, tuiIsString, tuiPx } from '@taiga-ui/cdk';
import { tuiSizeBigger } from '@taiga-ui/core';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/kit/components/badge";
import * as i2 from "@taiga-ui/core";
import * as i3 from "@angular/common";
import * as i4 from "@tinkoff/ng-polymorpheus";
const BADGE_SIZE = {
    xs: 'xs',
    s: 's',
    m: 's',
    l: 'm',
    xl: 'm',
    xxl: 'l',
};
export class TuiBadgedContentComponent {
    constructor() {
        this.size = 'm';
        this.colorTop = '';
        this.colorBottom = '';
        this.rounded = false;
    }
    get topNotification() {
        return !this.contentTop && this.colorTop ? this.colorTop : '';
    }
    get bottomNotification() {
        return !this.contentBottom && this.colorBottom ? this.colorBottom : '';
    }
    get badgeSize() {
        return BADGE_SIZE[this.size];
    }
    get badgeHidden() {
        return this.size === 'xs';
    }
    get sizeBig() {
        return tuiSizeBigger(this.size);
    }
    get boxShadow() {
        const borderWidth = this.sizeBig ? 3 : 2;
        return `0 0 0 ${tuiPx(borderWidth)}`;
    }
    contentIsNumber(content) {
        return tuiIsNumber(content === null || content === void 0 ? void 0 : content.valueOf());
    }
    contentIsString(content) {
        return tuiIsString(content === null || content === void 0 ? void 0 : content.valueOf());
    }
    getStatus(color) {
        return color ? 'custom' : 'primary';
    }
}
TuiBadgedContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgedContentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TuiBadgedContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiBadgedContentComponent, selector: "tui-badged-content", inputs: { contentTop: "contentTop", contentBottom: "contentBottom", size: "size", colorTop: "colorTop", colorBottom: "colorBottom", rounded: "rounded" }, host: { properties: { "class._with-top": "this.contentTop", "class._with-bottom": "this.contentBottom", "attr.data-size": "this.size", "class._rounded": "this.rounded" } }, ngImport: i0, template: "<ng-content></ng-content>\n\n<div\n    *ngIf=\"topNotification\"\n    class=\"t-notification t-notification_top\"\n    [style.background]=\"topNotification\"\n    [style.boxShadow]=\"boxShadow\"\n></div>\n\n<div\n    *ngIf=\"bottomNotification\"\n    class=\"t-notification t-notification_bottom\"\n    [style.background]=\"bottomNotification\"\n    [style.boxShadow]=\"boxShadow\"\n></div>\n\n<div\n    *ngIf=\"contentTop\"\n    class=\"t-content t-content_top\"\n    [style.boxShadow]=\"boxShadow\"\n>\n    <ng-container *polymorpheusOutlet=\"contentTop as content\">\n        <tui-badge\n            *ngIf=\"contentIsNumber(content)\"\n            [size]=\"badgeSize\"\n            [status]=\"getStatus(colorTop)\"\n            [style.backgroundColor]=\"colorTop\"\n            [value]=\"content\"\n        ></tui-badge>\n        <tui-svg\n            *ngIf=\"contentIsString(content)\"\n            class=\"t-icon\"\n            [src]=\"content\"\n            [style.color]=\"colorTop\"\n        ></tui-svg>\n    </ng-container>\n</div>\n\n<div\n    *ngIf=\"contentBottom && sizeBig\"\n    class=\"t-content t-content_bottom\"\n    [style.boxShadow]=\"boxShadow\"\n>\n    <ng-container *polymorpheusOutlet=\"contentBottom as content\">\n        <tui-badge\n            *ngIf=\"contentIsNumber(content)\"\n            [size]=\"badgeSize\"\n            [status]=\"getStatus(colorBottom)\"\n            [style.backgroundColor]=\"colorBottom\"\n            [value]=\"content\"\n        ></tui-badge>\n        <tui-svg\n            *ngIf=\"contentIsString(content)\"\n            class=\"t-icon\"\n            [src]=\"content\"\n            [style.color]=\"colorBottom\"\n        ></tui-svg>\n    </ng-container>\n</div>\n", styles: [":host{position:relative;display:inline-block;color:var(--tui-base-01);height:-webkit-min-content;height:min-content}.t-notification{position:absolute;border-radius:100%;box-shadow:0 0 0 2px currentColor;background-color:currentColor}:host[data-size=xs]:not(._rounded) .t-notification_top,:host[data-size=s]:not(._rounded) .t-notification_top,:host[data-size=m]:not(._rounded) .t-notification_top{top:-.125rem;right:-.125rem}:host[data-size=l]:not(._rounded) .t-notification_top,:host[data-size=xl]:not(._rounded) .t-notification_top{top:-.25rem;right:-.25rem}:host[data-size=xxl]:not(._rounded) .t-notification_top{top:-.5rem;right:-.5rem}:host[data-size=xs]._rounded .t-notification_top{top:0;right:0}:host[data-size=s]._rounded .t-notification_top{top:.0625rem;right:.0625rem}:host[data-size=m]._rounded .t-notification_top{top:.1875rem;right:.1875rem}:host[data-size=l]._rounded .t-notification_top{top:.25rem;right:.25rem}:host[data-size=xl]._rounded .t-notification_top{top:.375rem;right:.375rem}:host[data-size=xxl]._rounded .t-notification_top{top:.5rem;right:.5rem}:host[data-size=m]:not(._rounded) .t-notification_bottom{bottom:-.125rem;right:-.125rem}:host[data-size=l]:not(._rounded) .t-notification_bottom,:host[data-size=xl]:not(._rounded) .t-notification_bottom{bottom:-.25rem;right:-.25rem}:host[data-size=xxl]:not(._rounded) .t-notification_bottom{bottom:-.5rem;right:-.5rem}:host[data-size=m]._rounded .t-notification_bottom{bottom:.1875rem;right:.1875rem}:host[data-size=l]._rounded .t-notification_bottom{bottom:.25rem;right:.25rem}:host[data-size=xl]._rounded .t-notification_bottom{bottom:.375rem;right:.375rem}:host[data-size=xxl]._rounded .t-notification_bottom{bottom:.5rem;right:.5rem}:host[data-size=xs] .t-notification,:host[data-size=s] .t-notification,:host[data-size=m] .t-notification{width:.5rem;height:.5rem}:host[data-size=l] .t-notification{width:.75rem;height:.75rem}:host[data-size=xl] .t-notification{width:1rem;height:1rem}:host[data-size=xxl] .t-notification{width:1.5rem;height:1.5rem}.t-icon{color:var(--tui-success-fill)}:host[data-size=xs] .t-icon{transform:scale(.66666667);margin:-.25rem}:host[data-size=s] .t-icon,:host[data-size=m] .t-icon{width:1.5rem;height:1.5rem;margin:-.125rem}:host[data-size=l] .t-icon,:host[data-size=xl] .t-icon{transform:scale(1.2)}:host[data-size=xxl] .t-icon{transform:scale(1.6)}.t-content{position:absolute;display:flex;align-items:center;justify-content:center;border-radius:6.25rem;overflow:hidden;background-color:currentColor;box-shadow:0 0 0 2px currentColor}:host[data-size=xxl]._with-top:not(._rounded) .t-content_top,:host[data-size=l]._with-top:not(._rounded) .t-content_top{right:-.5rem;top:-.5rem}:host[data-size=xl]._with-top:not(._rounded) .t-content_top{right:-.375rem;top:-.375rem}:host[data-size=m]._with-top:not(._rounded) .t-content_top,:host[data-size=s]._with-top:not(._rounded) .t-content_top,:host[data-size=xs]._with-top:not(._rounded) .t-content_top{right:-.25rem;top:-.25rem}:host[data-size=xxl]._with-top._rounded .t-content_top{right:.25rem;top:.25rem}:host[data-size=xl]._with-top._rounded .t-content_top{right:.125rem;top:.125rem}:host[data-size=l]._with-top._rounded .t-content_top,:host[data-size=m]._with-top._rounded .t-content_top,:host[data-size=s]._with-top._rounded .t-content_top,:host[data-size=xs]._with-top._rounded .t-content_top{right:-.25rem;top:-.25rem}:host[data-size=xxl]._with-bottom:not(._rounded) .t-content_bottom,:host[data-size=l]._with-bottom:not(._rounded) .t-content_bottom{bottom:-.5rem;right:-.5rem}:host[data-size=xl]._with-bottom:not(._rounded) .t-content_bottom{bottom:-.375rem;right:-.375rem}:host[data-size=m]._with-bottom:not(._rounded) .t-content_bottom{bottom:-.25rem;right:-.25rem}:host[data-size=xxl]._with-bottom._rounded .t-content_bottom{bottom:.25rem;right:.25rem}:host[data-size=xl]._with-bottom._rounded .t-content_bottom{bottom:.125rem;right:.125rem}:host[data-size=l]._with-bottom._rounded .t-content_bottom,:host[data-size=m]._with-bottom._rounded .t-content_bottom{bottom:-.25rem;right:-.25rem}:host[data-size=xxl] .t-content{height:2rem;min-width:2rem}:host[data-size=xl] .t-content,:host[data-size=l] .t-content{height:1.5rem;min-width:1.5rem}:host[data-size=m] .t-content,:host[data-size=s] .t-content{height:1.25rem;min-width:1.25rem}:host[data-size=xs] .t-content{height:1rem;min-width:1rem}\n"], components: [{ type: i1.TuiBadgeComponent, selector: "tui-badge", inputs: ["value", "size", "status", "hoverable"] }, { type: i2.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiBadgedContentComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-badged-content',
                    templateUrl: './badged-content.template.html',
                    styleUrls: ['./badged-content.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], propDecorators: { contentTop: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._with-top']
            }], contentBottom: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._with-bottom']
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], colorTop: [{
                type: Input
            }], colorBottom: [{
                type: Input
            }], rounded: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._rounded']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2VkLWNvbnRlbnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvYmFkZ2VkLWNvbnRlbnQvYmFkZ2VkLWNvbnRlbnQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvYmFkZ2VkLWNvbnRlbnQvYmFkZ2VkLWNvbnRlbnQudGVtcGxhdGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFDLFdBQVcsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBQyxhQUFhLEVBQWtDLE1BQU0sZ0JBQWdCLENBQUM7Ozs7OztBQUk5RSxNQUFNLFVBQVUsR0FBRztJQUNmLEVBQUUsRUFBRSxJQUFJO0lBQ1IsQ0FBQyxFQUFFLEdBQUc7SUFDTixDQUFDLEVBQUUsR0FBRztJQUNOLENBQUMsRUFBRSxHQUFHO0lBQ04sRUFBRSxFQUFFLEdBQUc7SUFDUCxHQUFHLEVBQUUsR0FBRztDQUNGLENBQUM7QUFRWCxNQUFNLE9BQU8seUJBQXlCO0lBTnRDO1FBaUJJLFNBQUksR0FBMkIsR0FBRyxDQUFDO1FBR25DLGFBQVEsR0FBRyxFQUFFLENBQUM7UUFHZCxnQkFBVyxHQUFHLEVBQUUsQ0FBQztRQUlqQixZQUFPLEdBQUcsS0FBSyxDQUFDO0tBdUNuQjtJQXJDRyxJQUFJLGVBQWU7UUFDZixPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDbEUsQ0FBQztJQUVELElBQUksa0JBQWtCO1FBQ2xCLE9BQU8sQ0FBQyxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUMzRSxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1QsT0FBTyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCxJQUFJLFdBQVc7UUFDWCxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO0lBQzlCLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDUCxPQUFPLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELElBQUksU0FBUztRQUNULE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXpDLE9BQU8sU0FBUyxLQUFLLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQztJQUN6QyxDQUFDO0lBRUQsZUFBZSxDQUFDLE9BQTRCO1FBQ3hDLE9BQU8sV0FBVyxDQUFDLE9BQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxlQUFlLENBQUMsT0FBNEI7UUFDeEMsT0FBTyxXQUFXLENBQUMsT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELFNBQVMsQ0FBQyxLQUFhO1FBQ25CLE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUN4QyxDQUFDOzt1SEEzRFEseUJBQXlCOzJHQUF6Qix5QkFBeUIsaVlDckJ0QywyckRBMkRBOzRGRHRDYSx5QkFBeUI7a0JBTnJDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsV0FBVyxFQUFFLGdDQUFnQztvQkFDN0MsU0FBUyxFQUFFLENBQUMsNkJBQTZCLENBQUM7b0JBQzFDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNsRDs4QkFJRyxVQUFVO3NCQUZULEtBQUs7O3NCQUNMLFdBQVc7dUJBQUMsaUJBQWlCO2dCQUs5QixhQUFhO3NCQUZaLEtBQUs7O3NCQUNMLFdBQVc7dUJBQUMsb0JBQW9CO2dCQUtqQyxJQUFJO3NCQUZILEtBQUs7O3NCQUNMLFdBQVc7dUJBQUMsZ0JBQWdCO2dCQUk3QixRQUFRO3NCQURQLEtBQUs7Z0JBSU4sV0FBVztzQkFEVixLQUFLO2dCQUtOLE9BQU87c0JBRk4sS0FBSzs7c0JBQ0wsV0FBVzt1QkFBQyxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aUlzTnVtYmVyLCB0dWlJc1N0cmluZywgdHVpUHh9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHt0dWlTaXplQmlnZ2VyLCBUdWlTaXplTCwgVHVpU2l6ZVhTLCBUdWlTaXplWFhMfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1R1aVN0YXR1c30gZnJvbSAnQHRhaWdhLXVpL2tpdC90eXBlcyc7XG5pbXBvcnQge1BvbHltb3JwaGV1c0NvbnRlbnR9IGZyb20gJ0B0aW5rb2ZmL25nLXBvbHltb3JwaGV1cyc7XG5cbmNvbnN0IEJBREdFX1NJWkUgPSB7XG4gICAgeHM6ICd4cycsXG4gICAgczogJ3MnLFxuICAgIG06ICdzJyxcbiAgICBsOiAnbScsXG4gICAgeGw6ICdtJyxcbiAgICB4eGw6ICdsJyxcbn0gYXMgY29uc3Q7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLWJhZGdlZC1jb250ZW50JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vYmFkZ2VkLWNvbnRlbnQudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vYmFkZ2VkLWNvbnRlbnQuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlCYWRnZWRDb250ZW50Q29tcG9uZW50IHtcbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuX3dpdGgtdG9wJylcbiAgICBjb250ZW50VG9wOiBQb2x5bW9ycGhldXNDb250ZW50O1xuXG4gICAgQElucHV0KClcbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLl93aXRoLWJvdHRvbScpXG4gICAgY29udGVudEJvdHRvbTogUG9seW1vcnBoZXVzQ29udGVudDtcblxuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtc2l6ZScpXG4gICAgc2l6ZTogVHVpU2l6ZVhTIHwgVHVpU2l6ZVhYTCA9ICdtJztcblxuICAgIEBJbnB1dCgpXG4gICAgY29sb3JUb3AgPSAnJztcblxuICAgIEBJbnB1dCgpXG4gICAgY29sb3JCb3R0b20gPSAnJztcblxuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5fcm91bmRlZCcpXG4gICAgcm91bmRlZCA9IGZhbHNlO1xuXG4gICAgZ2V0IHRvcE5vdGlmaWNhdGlvbigpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gIXRoaXMuY29udGVudFRvcCAmJiB0aGlzLmNvbG9yVG9wID8gdGhpcy5jb2xvclRvcCA6ICcnO1xuICAgIH1cblxuICAgIGdldCBib3R0b21Ob3RpZmljYXRpb24oKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLmNvbnRlbnRCb3R0b20gJiYgdGhpcy5jb2xvckJvdHRvbSA/IHRoaXMuY29sb3JCb3R0b20gOiAnJztcbiAgICB9XG5cbiAgICBnZXQgYmFkZ2VTaXplKCk6IFR1aVNpemVMIHwgVHVpU2l6ZVhTIHtcbiAgICAgICAgcmV0dXJuIEJBREdFX1NJWkVbdGhpcy5zaXplXTtcbiAgICB9XG5cbiAgICBnZXQgYmFkZ2VIaWRkZW4oKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnNpemUgPT09ICd4cyc7XG4gICAgfVxuXG4gICAgZ2V0IHNpemVCaWcoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0dWlTaXplQmlnZ2VyKHRoaXMuc2l6ZSk7XG4gICAgfVxuXG4gICAgZ2V0IGJveFNoYWRvdygpOiBzdHJpbmcge1xuICAgICAgICBjb25zdCBib3JkZXJXaWR0aCA9IHRoaXMuc2l6ZUJpZyA/IDMgOiAyO1xuXG4gICAgICAgIHJldHVybiBgMCAwIDAgJHt0dWlQeChib3JkZXJXaWR0aCl9YDtcbiAgICB9XG5cbiAgICBjb250ZW50SXNOdW1iZXIoY29udGVudDogUG9seW1vcnBoZXVzQ29udGVudCk6IGNvbnRlbnQgaXMgbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHR1aUlzTnVtYmVyKGNvbnRlbnQ/LnZhbHVlT2YoKSk7XG4gICAgfVxuXG4gICAgY29udGVudElzU3RyaW5nKGNvbnRlbnQ6IFBvbHltb3JwaGV1c0NvbnRlbnQpOiBjb250ZW50IGlzIHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0dWlJc1N0cmluZyhjb250ZW50Py52YWx1ZU9mKCkpO1xuICAgIH1cblxuICAgIGdldFN0YXR1cyhjb2xvcjogc3RyaW5nKTogVHVpU3RhdHVzIHtcbiAgICAgICAgcmV0dXJuIGNvbG9yID8gJ2N1c3RvbScgOiAncHJpbWFyeSc7XG4gICAgfVxufVxuIiwiPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuXG48ZGl2XG4gICAgKm5nSWY9XCJ0b3BOb3RpZmljYXRpb25cIlxuICAgIGNsYXNzPVwidC1ub3RpZmljYXRpb24gdC1ub3RpZmljYXRpb25fdG9wXCJcbiAgICBbc3R5bGUuYmFja2dyb3VuZF09XCJ0b3BOb3RpZmljYXRpb25cIlxuICAgIFtzdHlsZS5ib3hTaGFkb3ddPVwiYm94U2hhZG93XCJcbj48L2Rpdj5cblxuPGRpdlxuICAgICpuZ0lmPVwiYm90dG9tTm90aWZpY2F0aW9uXCJcbiAgICBjbGFzcz1cInQtbm90aWZpY2F0aW9uIHQtbm90aWZpY2F0aW9uX2JvdHRvbVwiXG4gICAgW3N0eWxlLmJhY2tncm91bmRdPVwiYm90dG9tTm90aWZpY2F0aW9uXCJcbiAgICBbc3R5bGUuYm94U2hhZG93XT1cImJveFNoYWRvd1wiXG4+PC9kaXY+XG5cbjxkaXZcbiAgICAqbmdJZj1cImNvbnRlbnRUb3BcIlxuICAgIGNsYXNzPVwidC1jb250ZW50IHQtY29udGVudF90b3BcIlxuICAgIFtzdHlsZS5ib3hTaGFkb3ddPVwiYm94U2hhZG93XCJcbj5cbiAgICA8bmctY29udGFpbmVyICpwb2x5bW9ycGhldXNPdXRsZXQ9XCJjb250ZW50VG9wIGFzIGNvbnRlbnRcIj5cbiAgICAgICAgPHR1aS1iYWRnZVxuICAgICAgICAgICAgKm5nSWY9XCJjb250ZW50SXNOdW1iZXIoY29udGVudClcIlxuICAgICAgICAgICAgW3NpemVdPVwiYmFkZ2VTaXplXCJcbiAgICAgICAgICAgIFtzdGF0dXNdPVwiZ2V0U3RhdHVzKGNvbG9yVG9wKVwiXG4gICAgICAgICAgICBbc3R5bGUuYmFja2dyb3VuZENvbG9yXT1cImNvbG9yVG9wXCJcbiAgICAgICAgICAgIFt2YWx1ZV09XCJjb250ZW50XCJcbiAgICAgICAgPjwvdHVpLWJhZGdlPlxuICAgICAgICA8dHVpLXN2Z1xuICAgICAgICAgICAgKm5nSWY9XCJjb250ZW50SXNTdHJpbmcoY29udGVudClcIlxuICAgICAgICAgICAgY2xhc3M9XCJ0LWljb25cIlxuICAgICAgICAgICAgW3NyY109XCJjb250ZW50XCJcbiAgICAgICAgICAgIFtzdHlsZS5jb2xvcl09XCJjb2xvclRvcFwiXG4gICAgICAgID48L3R1aS1zdmc+XG4gICAgPC9uZy1jb250YWluZXI+XG48L2Rpdj5cblxuPGRpdlxuICAgICpuZ0lmPVwiY29udGVudEJvdHRvbSAmJiBzaXplQmlnXCJcbiAgICBjbGFzcz1cInQtY29udGVudCB0LWNvbnRlbnRfYm90dG9tXCJcbiAgICBbc3R5bGUuYm94U2hhZG93XT1cImJveFNoYWRvd1wiXG4+XG4gICAgPG5nLWNvbnRhaW5lciAqcG9seW1vcnBoZXVzT3V0bGV0PVwiY29udGVudEJvdHRvbSBhcyBjb250ZW50XCI+XG4gICAgICAgIDx0dWktYmFkZ2VcbiAgICAgICAgICAgICpuZ0lmPVwiY29udGVudElzTnVtYmVyKGNvbnRlbnQpXCJcbiAgICAgICAgICAgIFtzaXplXT1cImJhZGdlU2l6ZVwiXG4gICAgICAgICAgICBbc3RhdHVzXT1cImdldFN0YXR1cyhjb2xvckJvdHRvbSlcIlxuICAgICAgICAgICAgW3N0eWxlLmJhY2tncm91bmRDb2xvcl09XCJjb2xvckJvdHRvbVwiXG4gICAgICAgICAgICBbdmFsdWVdPVwiY29udGVudFwiXG4gICAgICAgID48L3R1aS1iYWRnZT5cbiAgICAgICAgPHR1aS1zdmdcbiAgICAgICAgICAgICpuZ0lmPVwiY29udGVudElzU3RyaW5nKGNvbnRlbnQpXCJcbiAgICAgICAgICAgIGNsYXNzPVwidC1pY29uXCJcbiAgICAgICAgICAgIFtzcmNdPVwiY29udGVudFwiXG4gICAgICAgICAgICBbc3R5bGUuY29sb3JdPVwiY29sb3JCb3R0b21cIlxuICAgICAgICA+PC90dWktc3ZnPlxuICAgIDwvbmctY29udGFpbmVyPlxuPC9kaXY+XG4iXX0=
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ElementRef, EventEmitter, HostBinding, HostListener, Inject, Input, Optional, Output, Self, TemplateRef, ViewChild, ViewChildren, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiMultipleControl, ALWAYS_FALSE_HANDLER, ALWAYS_TRUE_HANDLER, EMPTY_QUERY, tuiArrayRemove, tuiAsControl, tuiAsFocusableItemAccessor, tuiGetActualTarget, tuiGetClipboardDataText, tuiIsElement, tuiIsNativeFocusedIn, tuiRetargetedBoundaryCrossing, } from '@taiga-ui/cdk';
import { MODE_PROVIDER, TEXTFIELD_CONTROLLER_PROVIDER, TUI_COMMON_ICONS, TUI_MODE, TUI_TEXTFIELD_WATCHED_CONTROLLER, tuiAsDataListHost, TuiDataListDirective, TuiHintOptionsDirective, TuiHostedDropdownComponent, TuiModeDirective, TuiScrollbarComponent, } from '@taiga-ui/core';
import { FIXED_DROPDOWN_CONTROLLER_PROVIDER } from '@taiga-ui/kit/providers';
import { timer } from 'rxjs';
import { map, takeUntil } from 'rxjs/operators';
import { TUI_INPUT_TAG_OPTIONS } from './input-tag.options';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@taiga-ui/kit/components/tag";
import * as i3 from "@angular/common";
import * as i4 from "@taiga-ui/cdk";
import * as i5 from "@tinkoff/ng-polymorpheus";
import * as i6 from "@angular/forms";
import * as i7 from "rxjs";
const TAG_SIZE_REM = {
    s: 1.25,
    m: 1.5,
    l: 2,
};
const LINE_HEIGHT_REM = {
    s: 1,
    m: 1.25,
    l: 1.25,
};
const TAG_VERTICAL_SPACE_REM = 0.125;
export class TuiInputTagComponent extends AbstractTuiMultipleControl {
    constructor(control, cdr, el, modeDirective, mode$, hintOptions, controller, options, icons) {
        super(control, cdr);
        this.el = el;
        this.modeDirective = modeDirective;
        this.mode$ = mode$;
        this.hintOptions = hintOptions;
        this.controller = controller;
        this.options = options;
        this.icons = icons;
        this.tags = EMPTY_QUERY;
        this.separator = this.options.separator;
        this.search = '';
        this.editable = true;
        this.tagValidator = ALWAYS_TRUE_HANDLER;
        // TODO: 4.0 Consider removing and use rows = 1 instead
        this.expandable = true;
        this.rows = Infinity;
        this.inputHidden = false;
        this.uniqueTags = this.options.uniqueTags;
        this.maxLength = null;
        this.placeholder = '';
        this.removable = true;
        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;
        this.searchChange = new EventEmitter();
        this.status$ = this.mode$.pipe(map(() => this.status));
        this.open = false;
    }
    set pseudoFocusedSetter(value) {
        if (!value && !this.focused) {
            this.scrollTo(0);
        }
        this.pseudoFocus = value;
    }
    get nativeFocusableElement() {
        return !this.focusableElement || this.computedDisabled
            ? null
            : this.focusableElement.nativeElement;
    }
    get focused() {
        var _a;
        return (tuiIsNativeFocusedIn(this.el.nativeElement) || !!((_a = this.hostedDropdown) === null || _a === void 0 ? void 0 : _a.focused));
    }
    get appearance() {
        return this.controller.appearance;
    }
    get size() {
        return this.controller.size;
    }
    get labelOutside() {
        const { size, labelOutside } = this.controller;
        return size === 's' || labelOutside;
    }
    get iconLeft() {
        return this.controller.iconLeft;
    }
    get icon() {
        return this.controller.icon;
    }
    get iconCleaner() {
        return this.controller.options.iconCleaner;
    }
    get hasCleaner() {
        return this.controller.cleaner && this.hasValue && this.interactive;
    }
    get hasNativeValue() {
        return !!this.search;
    }
    get hasValue() {
        return !!this.value.length || this.hasNativeValue;
    }
    get hasPlaceholder() {
        return (!this.labelOutside ||
            (!this.hasValue && (!this.hasExampleText || this.inputHidden)));
    }
    get placeholderRaised() {
        return (!this.labelOutside &&
            ((this.computedFocused && !this.readOnly) || this.hasValue));
    }
    get hasExampleText() {
        var _a;
        return (!!((_a = this.nativeFocusableElement) === null || _a === void 0 ? void 0 : _a.placeholder) &&
            this.computedFocused &&
            !this.hasValue &&
            !this.readOnly);
    }
    get hasRightIcons() {
        var _a;
        return (this.hasCleaner ||
            !!this.icon ||
            (!!((_a = this.hintOptions) === null || _a === void 0 ? void 0 : _a.content) && !this.computedDisabled));
    }
    get showHint() {
        var _a;
        return (!!((_a = this.hintOptions) === null || _a === void 0 ? void 0 : _a.content) &&
            (this.controller.options.hintOnDisabled || !this.computedDisabled));
    }
    get status() {
        var _a;
        return ((_a = this.modeDirective) === null || _a === void 0 ? void 0 : _a.mode) ? 'default' : this.options.tagStatus;
    }
    get canOpen() {
        return this.interactive && !!this.datalist;
    }
    get computeMaxHeight() {
        return this.expandable ? this.rows * this.lineHeight : null;
    }
    onFocusInOut() {
        this.cdr.detectChanges();
    }
    detectRetargetFromLabel(event) {
        if (tuiRetargetedBoundaryCrossing(event)) {
            event.stopImmediatePropagation();
        }
    }
    getLeftContent(tag) {
        return !this.tagValidator(tag) && this.errorIconTemplate
            ? this.errorIconTemplate
            : '';
    }
    onCleanerClick() {
        this.updateSearch('');
        this.clear();
        this.focusInput();
    }
    onActiveZone(active) {
        this.open = false;
        this.addTag();
        this.updateFocused(active);
        if (!active && !this.computedFocused) {
            this.scrollTo(0);
        }
    }
    onMouseDown(event) {
        var _a;
        const actualTarget = tuiGetActualTarget(event);
        if (!this.focusableElement ||
            actualTarget === this.focusableElement.nativeElement ||
            !tuiIsElement(event.target) ||
            ((_a = this.cleanerSvg) === null || _a === void 0 ? void 0 : _a.nativeElement.contains(event.target)) ||
            (this.tagsContainer &&
                actualTarget !== this.tagsContainer.nativeElement &&
                this.tagsContainer.nativeElement.contains(actualTarget))) {
            return;
        }
        event.preventDefault();
        this.focusInput();
    }
    onFieldKeyDownBackspace(event) {
        if (!this.labelOutside && !this.hasNativeValue && this.value.length) {
            this.deleteLastEnabledItem();
        }
        else {
            this.onFieldKeyDownArrowLeft(event);
        }
    }
    onFieldKeyDownArrowLeft(event) {
        if (!this.labelOutside || this.hasNativeValue || !this.value.length) {
            return;
        }
        event.preventDefault();
        this.tags.last.nativeElement.focus();
    }
    onFieldKeyDownEnter() {
        this.addTag();
        this.scrollTo();
    }
    onTagKeyDownArrowLeft(currentIndex) {
        if (currentIndex > 0) {
            this.onScrollKeyDown(currentIndex, -1);
        }
    }
    onTagKeyDownArrowRight(currentIndex) {
        if (currentIndex === this.value.length - 1) {
            this.focusInput();
        }
        else {
            this.onScrollKeyDown(currentIndex, 1);
        }
    }
    onTagEdited(value, index) {
        this.focusInput(value === '');
        this.value = this.filterValue(this.value
            .map((tag, tagIndex) => tagIndex !== index
            ? tag
            : value
                .split(this.separator)
                .map(tag => tag.trim())
                .filter(Boolean))
            .reduce((result, item) => result.concat(item), []));
    }
    handleOption(item) {
        this.focusInput();
        this.updateSearch('');
        this.value = this.filterValue(this.value.concat(item));
        this.open = false;
        this.scrollTo();
    }
    onInput(value) {
        const array = value.split(this.separator);
        const tags = array
            .map(item => this.clippedValue(item.trim()))
            .filter((item, index, { length }) => item.length > 0 && index !== length - 1);
        const validated = tags.filter(tag => !this.disabledItemHandler(tag));
        if (array.length > 1) {
            this.updateSearch(this.clippedValue(array[array.length - 1].trim()));
            this.value = this.filterValue([...this.value, ...validated]);
        }
        else {
            this.updateSearch(this.clippedValue(value));
        }
        this.open = this.hasNativeValue;
    }
    onPaste(event) {
        const pasted = tuiGetClipboardDataText(event);
        this.onInput(pasted || '');
    }
    onDrop({ dataTransfer }) {
        if (dataTransfer) {
            this.onInput(dataTransfer.getData('text') || '');
        }
    }
    setDisabledState() {
        super.setDisabledState();
        this.open = false;
    }
    trackByFn(_, tag) {
        // Actually tag has TuiStringifiableItem type not string
        return tag.toString();
    }
    scrollTo(scrollLeft) {
        var _a;
        if (scrollLeft === void 0) { scrollLeft = (_a = this.scrollBar) === null || _a === void 0 ? void 0 : _a.nativeElement.scrollWidth; }
        // Allow change detection to run and add new tag to DOM
        timer(0)
            .pipe(takeUntil(this.destroy$))
            .subscribe(() => {
            if (this.scrollBar) {
                this.scrollBar.nativeElement.scrollLeft = scrollLeft || 0;
            }
        });
    }
    filterValue(value) {
        const seen = new Set();
        return value
            .reverse()
            .filter(item => !this.uniqueTags || (item && !seen.has(item) && seen.add(item)))
            .reverse();
    }
    onScrollKeyDown(currentIndex, flag) {
        const tag = this.tags.find((_item, index) => index === currentIndex + flag);
        if (!tag || !this.scrollBar) {
            return;
        }
        tag.nativeElement.focus();
        if (flag * this.scrollBar.nativeElement.clientWidth -
            flag * tag.nativeElement.offsetLeft -
            tag.nativeElement.clientWidth <
            0) {
            this.scrollBar.nativeElement.scrollLeft +=
                flag * tag.nativeElement.clientWidth;
        }
    }
    updateSearch(value) {
        if (this.focusableElement) {
            this.focusableElement.nativeElement.value = value;
        }
        this.search = value;
        this.searchChange.emit(value);
    }
    addTag() {
        var _a, _b;
        const inputValue = (_b = (_a = this.search) === null || _a === void 0 ? void 0 : _a.trim()) !== null && _b !== void 0 ? _b : '';
        if (!inputValue || this.disabledItemHandler(inputValue)) {
            return;
        }
        this.updateSearch('');
        this.value = this.filterValue(this.value.concat(inputValue));
    }
    deleteLastEnabledItem() {
        for (let index = this.value.length - 1; index >= 0; index--) {
            if (!this.disabledItemHandler(this.value[index])) {
                this.value = tuiArrayRemove(this.value, index);
                break;
            }
        }
    }
    focusInput(preventScroll = false) {
        var _a;
        (_a = this.nativeFocusableElement) === null || _a === void 0 ? void 0 : _a.focus({ preventScroll });
    }
    clippedValue(value) {
        return value.slice(0, this.maxLength || value.length);
    }
    get lineHeight() {
        return this.labelOutside
            ? TAG_SIZE_REM[this.controller.size] + 2 * TAG_VERTICAL_SPACE_REM
            : LINE_HEIGHT_REM[this.controller.size];
    }
}
TuiInputTagComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputTagComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: ElementRef }, { token: TuiModeDirective, optional: true }, { token: TUI_MODE }, { token: TuiHintOptionsDirective, optional: true }, { token: TUI_TEXTFIELD_WATCHED_CONTROLLER }, { token: TUI_INPUT_TAG_OPTIONS }, { token: TUI_COMMON_ICONS }], target: i0.ɵɵFactoryTarget.Component });
TuiInputTagComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputTagComponent, selector: "tui-input-tag", inputs: { separator: "separator", search: "search", editable: "editable", tagValidator: "tagValidator", expandable: "expandable", rows: "rows", inputHidden: "inputHidden", uniqueTags: "uniqueTags", maxLength: "maxLength", placeholder: "placeholder", removable: "removable", disabledItemHandler: "disabledItemHandler", pseudoFocusedSetter: ["pseudoFocused", "pseudoFocusedSetter"] }, outputs: { searchChange: "searchChange" }, host: { listeners: { "focusin.capture.silent": "onFocusInOut()", "focusout.capture.silent": "onFocusInOut()" }, properties: { "class._expandable": "this.expandable", "attr.data-size": "this.size", "class._label-outside": "this.labelOutside", "class._icon-left": "this.iconLeft" } }, providers: [
        tuiAsFocusableItemAccessor(TuiInputTagComponent),
        tuiAsControl(TuiInputTagComponent),
        tuiAsDataListHost(TuiInputTagComponent),
        TEXTFIELD_CONTROLLER_PROVIDER,
        MODE_PROVIDER,
    ], queries: [{ propertyName: "datalist", first: true, predicate: TuiDataListDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: "hostedDropdown", first: true, predicate: TuiHostedDropdownComponent, descendants: true }, { propertyName: "focusableElement", first: true, predicate: ["focusableElement"], descendants: true }, { propertyName: "tagsContainer", first: true, predicate: ["tagsContainer"], descendants: true }, { propertyName: "cleanerSvg", first: true, predicate: ["cleaner"], descendants: true, read: ElementRef }, { propertyName: "scrollBar", first: true, predicate: TuiScrollbarComponent, descendants: true, read: ElementRef }, { propertyName: "errorIconTemplate", first: true, predicate: ["errorIcon"], descendants: true }, { propertyName: "tags", predicate: ["tag"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"hintOptions?.change$ | async\"></ng-container>\n<tui-hosted-dropdown\n    class=\"t-hosted\"\n    [canOpen]=\"canOpen\"\n    [content]=\"datalist || ''\"\n    [(open)]=\"open\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <div\n        tuiWrapper\n        [appearance]=\"appearance\"\n        [disabled]=\"computedDisabled\"\n        [focus]=\"computedFocused\"\n        [hover]=\"pseudoHover\"\n        [invalid]=\"computedInvalid\"\n        [readOnly]=\"readOnly\"\n        (click.prevent.silent)=\"detectRetargetFromLabel($event)\"\n        (mousedown)=\"onMouseDown($event)\"\n    >\n        <div class=\"t-content\">\n            <div\n                *ngIf=\"iconLeft\"\n                class=\"t-icon t-icon_left t-textfield-icon t-icon-wrapper\"\n            >\n                <tui-svg\n                    *polymorpheusOutlet=\"iconLeft as src; context: {$implicit: size}\"\n                    appearance=\"icon\"\n                    tuiWrapper\n                    [src]=\"src\"\n                ></tui-svg>\n            </div>\n            <div class=\"t-wrapper\">\n                <div class=\"t-absolute-wrapper\">\n                    <div\n                        *ngIf=\"hasPlaceholder\"\n                        automation-id=\"tui-input-tag__placeholder\"\n                        class=\"t-placeholder\"\n                        [class.t-placeholder_raised]=\"placeholderRaised\"\n                    >\n                        <ng-content></ng-content>\n                    </div>\n                </div>\n                <tui-scrollbar\n                    class=\"t-scrollbar\"\n                    [hidden]=\"!expandable\"\n                    [style.maxHeight.rem]=\"computeMaxHeight\"\n                >\n                    <div\n                        class=\"t-tags\"\n                        [class.t-tags_empty]=\"(!focused || inputHidden) && !value?.length && !search?.trim()?.length\"\n                    >\n                        <ng-container *ngIf=\"labelOutside; else text\">\n                            <tui-tag\n                                *ngFor=\"let item of value; index as index; trackBy: trackByFn\"\n                                #tag\n                                automation-id=\"tui-input-tag__tag\"\n                                class=\"t-tag\"\n                                [disabled]=\"computedDisabled || disabledItemHandler(item)\"\n                                [editable]=\"editable && !readOnly\"\n                                [hoverable]=\"!readOnly\"\n                                [leftContent]=\"getLeftContent(item)\"\n                                [maxLength]=\"maxLength\"\n                                [removable]=\"!readOnly && removable\"\n                                [separator]=\"separator\"\n                                [size]=\"controller.size\"\n                                [status]=\"(status$ | async)!\"\n                                [tuiFocusable]=\"false\"\n                                [value]=\"item.toString()\"\n                                (edited)=\"onTagEdited($event, index)\"\n                                (keydown.arrowLeft.prevent)=\"onTagKeyDownArrowLeft(index)\"\n                                (keydown.arrowRight.prevent)=\"onTagKeyDownArrowRight(index)\"\n                            ></tui-tag>\n                        </ng-container>\n                        <ng-template #text>\n                            <span\n                                *ngFor=\"let item of value\"\n                                class=\"t-text\"\n                                [class.t-text_comma]=\"computedFocused && !inputHidden\"\n                                [class.t-text_disabled]=\"disabledItemHandler(item)\"\n                                [class.t-text_error]=\"!tagValidator(item)\"\n                                [textContent]=\"item\"\n                            ></span>\n                        </ng-template>\n                        <div\n                            class=\"t-input-wrapper\"\n                            [class.t-input-wrapper_collapsed]=\"computedDisabled || readOnly || inputHidden\"\n                        >\n                            <div class=\"t-ghost\">{{ search }}</div>\n                            <input\n                                #focusableElement\n                                automation-id=\"tui-input-tag__native\"\n                                type=\"text\"\n                                class=\"t-native\"\n                                [attr.maxLength]=\"maxLength\"\n                                [class.t-native_hidden]=\"inputHidden\"\n                                [disabled]=\"computedDisabled\"\n                                [id]=\"id\"\n                                [ngModel]=\"search\"\n                                [placeholder]=\"placeholder\"\n                                [readOnly]=\"readOnly || inputHidden\"\n                                [tuiFocusable]=\"computedFocusable\"\n                                (drop.prevent)=\"onDrop($any($event))\"\n                                (keydown.arrowLeft)=\"onFieldKeyDownArrowLeft($event)\"\n                                (keydown.backspace)=\"onFieldKeyDownBackspace($event)\"\n                                (keydown.enter.prevent)=\"onFieldKeyDownEnter()\"\n                                (ngModelChange)=\"onInput($event)\"\n                                (paste.prevent)=\"onPaste($event)\"\n                            />\n                        </div>\n                    </div>\n                    <div class=\"t-value-content\">\n                        <ng-content select=\"tuiContent\"></ng-content>\n                    </div>\n                </tui-scrollbar>\n            </div>\n            <ng-content select=\"select\"></ng-content>\n            <div\n                *ngIf=\"hasRightIcons\"\n                class=\"t-icons t-icon-wrapper\"\n            >\n                <ng-container *ngIf=\"hasCleaner\">\n                    <tui-svg\n                        *polymorpheusOutlet=\"iconCleaner as src; context: {$implicit: size}\"\n                        #cleaner\n                        appearance=\"icon\"\n                        automation-id=\"tui-input-tag__cleaner\"\n                        tuiWrapper\n                        class=\"t-cleaner\"\n                        [src]=\"src\"\n                        (click.stop)=\"onCleanerClick()\"\n                    ></tui-svg>\n                </ng-container>\n                <tui-tooltip\n                    *ngIf=\"showHint\"\n                    automation-id=\"tui-input-tag__tooltip\"\n                    class=\"t-tooltip\"\n                    [content]=\"hintOptions?.content\"\n                    [describeId]=\"id\"\n                ></tui-tooltip>\n                <div\n                    *ngIf=\"icon\"\n                    class=\"t-icon t-textfield-icon\"\n                >\n                    <tui-svg\n                        *polymorpheusOutlet=\"icon as src; context: {$implicit: size}\"\n                        appearance=\"icon\"\n                        tuiWrapper\n                        [src]=\"src\"\n                    ></tui-svg>\n                </div>\n            </div>\n        </div>\n        <ng-template #errorIcon>\n            <tui-svg\n                class=\"t-error-icon\"\n                [src]=\"icons.error\"\n            ></tui-svg>\n        </ng-template>\n    </div>\n</tui-hosted-dropdown>\n", styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:block;text-align:left;border-radius:var(--tui-radius-m);height:var(--tui-height);min-height:var(--tui-height);max-height:var(--tui-height)}:host[data-size=s]{--tui-height: var(--tui-height-s)}:host[data-size=m]{--tui-height: var(--tui-height-m)}:host[data-size=l]{--tui-height: var(--tui-height-l);font:var(--tui-font-text-m);line-height:1.25rem}.t-input{font:var(--tui-font-text-s);color:var(--tui-text-01);padding:0;margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;border-style:solid;border-color:transparent;border-inline-start-width:var(--border-start, 0);border-inline-end-width:var(--border-end, 0);text-indent:var(--text-indent);text-align:inherit;box-sizing:border-box;white-space:nowrap;overflow:hidden;text-transform:inherit;resize:none}.t-input:-webkit-autofill,.t-input:-webkit-autofill:hover,.t-input:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}.t-input:-webkit-autofill,.t-input:-webkit-autofill:first-line{font-size:inherit;line-height:inherit}.t-input::-webkit-caps-lock-indicator,.t-input::-webkit-contacts-auto-fill-button,.t-input::-webkit-credit-card-auto-fill-button,.t-input::-webkit-credentials-auto-fill-button,.t-input::-webkit-strong-password-auto-fill-button{content:none!important;position:absolute;left:-62.4375rem;top:-62.4375rem;z-index:-999;display:none!important;background:transparent!important;pointer-events:none!important}.t-input::placeholder{color:var(--tui-text-03);opacity:0}:host._focused:not(._readonly) .t-input::placeholder,:host-context(tui-primitive-textfield._focused:not(._readonly)) .t-input::placeholder,:host-context(tui-textarea._focused:not(._readonly)) .t-input::placeholder,:host-context(tui-text-area._focused:not(._readonly)) .t-input::placeholder{opacity:1}[tuiWrapper][data-mode=onDark] .t-input:-webkit-autofill,.t-input :host-context([tuiWrapper][data-mode=\"onDark\"]):-webkit-autofill,[tuiWrapper][data-mode=onDark] .t-input:-webkit-autofill:hover,.t-input :host-context([tuiWrapper][data-mode=\"onDark\"]):-webkit-autofill:hover,[tuiWrapper][data-mode=onDark] .t-input:-webkit-autofill:focus,.t-input :host-context([tuiWrapper][data-mode=\"onDark\"]):-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01-night)!important;border-color:var(--tui-autofill-night);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill-night) inset!important}[tuiWrapper][data-mode=onDark] .t-input::placeholder,.t-input :host-context([tuiWrapper][data-mode=\"onDark\"])::placeholder{color:var(--tui-text-03-night)}:host[data-size=s] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"s\"]):not(tui-primitive-textfield),.t-input :host-context(tui-textarea[data-size=\"s\"]):not(tui-textarea),.t-input :host-context(tui-text-area[data-size=\"s\"]):not(tui-text-area){padding:0 var(--tui-padding-s)}:host[data-size=m] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"m\"]):not(tui-primitive-textfield),.t-input :host-context(tui-textarea[data-size=\"m\"]):not(tui-textarea),.t-input :host-context(tui-text-area[data-size=\"m\"]):not(tui-text-area){padding:0 var(--tui-padding-m)}:host[data-size=l] .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"l\"]):not(tui-primitive-textfield),.t-input :host-context(tui-textarea[data-size=\"l\"]):not(tui-textarea),.t-input :host-context(tui-text-area[data-size=\"l\"]):not(tui-text-area){padding:0 var(--tui-padding-l)}:host._disabled .t-input,.t-input :host-context(tui-primitive-textfield._disabled),.t-input :host-context(tui-textarea._disabled),.t-input :host-context(tui-text-area._disabled){pointer-events:none}:host[data-size=l]:not(._label-outside) .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"l\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1.25rem}:host[data-size=m]:not(._label-outside) .t-input,.t-input :host-context(tui-primitive-textfield[data-size=\"m\"]:not(._label-outside)):not(tui-primitive-textfield){padding-top:1rem}:host[data-size=l]:not(._label-outside) .t-input{padding-top:1.25rem}:host[data-size=l]:not(._label-outside) .t-input:-webkit-autofill+.t-content .t-placeholder{font-size:.8156rem;transform:translateY(-.625rem)}:host[data-size=m]:not(._label-outside) .t-input:-webkit-autofill+.t-content .t-placeholder{font-size:.69rem;transform:translateY(-.5rem)}:host._hidden input.t-input,.t-input :host-context(tui-primitive-textfield._hidden){opacity:0;text-indent:-10em;-webkit-user-select:none}.t-content{display:flex;height:100%;width:100%;box-sizing:border-box;align-items:center;overflow:hidden}:host[data-size=s] .t-content{padding:0 var(--tui-padding-s)}:host[data-size=m] .t-content{padding:0 var(--tui-padding-m)}:host[data-size=l] .t-content{padding:0 var(--tui-padding-l)}.t-wrapper{flex:1;min-width:0;-webkit-padding-end:.25rem;padding-inline-end:.25rem}.t-placeholder{transition-property:transform,font-size,color,letter-spacing;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;width:100%;-webkit-user-select:none;-moz-user-select:none;user-select:none;font:var(--tui-font-text-s);color:var(--tui-text-02);pointer-events:none;will-change:transform;transform:translateY(0)}@supports (-webkit-hyphens: none){.t-placeholder{will-change:unset;transition-property:transform,color,letter-spacing}}.t-placeholder_raised{transform:translateY(-.625rem)}:host[data-size=m] .t-placeholder_raised{font:var(--tui-font-text-xs);line-height:1.25rem;transform:translateY(-.5rem);letter-spacing:.025rem}:host._invalid:not(._focused) .t-placeholder_raised,:host._invalid:not(._focused):hover .t-placeholder_raised{color:var(--tui-error-fill)}:host._invalid:not(._focused) [tuiWrapper][data-mode=onDark] .t-placeholder_raised,:host._invalid:not(._focused):hover [tuiWrapper][data-mode=onDark] .t-placeholder_raised{color:var(--tui-error-fill-night)}:host._focused .t-placeholder,:host[data-size=m]._focused._label-outside .t-placeholder,:host[data-size=l]._focused._label-outside .t-placeholder{color:var(--tui-text-03)}:host[data-size=l] .t-placeholder{font:var(--tui-font-text-m);line-height:1.25rem}:host[data-size=l] .t-placeholder_raised{font-size:.8156rem}:host[data-size=m]._focused:not(._label-outside) .t-placeholder,:host[data-size=l]._focused:not(._label-outside) .t-placeholder{color:var(--tui-text-01)}[tuiWrapper][data-mode=onDark] .t-placeholder{color:var(--tui-text-02-night)}:host[data-size=m]._focused:not(._label-outside) [tuiWrapper][data-mode=onDark] .t-placeholder,:host[data-size=l]._focused:not(._label-outside) [tuiWrapper][data-mode=onDark] .t-placeholder{color:var(--tui-text-01-night)}:host._focused [tuiWrapper][data-mode=onDark] .t-placeholder,:host[data-size=m]._focused._label-outside [tuiWrapper][data-mode=onDark] .t-placeholder,:host[data-size=l]._focused._label-outside [tuiWrapper][data-mode=onDark] .t-placeholder{color:var(--tui-text-02-night)}.t-cleaner{position:relative;display:flex;width:1.5rem;height:1.5rem;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none;pointer-events:auto}:host._readonly .t-cleaner,:host._disabled .t-cleaner{pointer-events:none}.t-icon{position:relative;display:flex;width:1.5rem;height:1.5rem;align-items:center;justify-content:center;box-sizing:border-box;cursor:pointer;pointer-events:none}:host[data-size=s] .t-icon_left{-webkit-margin-start:-.375rem;margin-inline-start:-.375rem}:host[data-size=m] .t-icon_left{-webkit-margin-start:-.125rem;margin-inline-start:-.125rem;-webkit-margin-end:.375rem;margin-inline-end:.375rem}:host[data-size=l] .t-icon_left{-webkit-margin-end:.75rem;margin-inline-end:.75rem}.t-icons{display:flex;align-items:center}:host[data-size=m] .t-icons{-webkit-margin-end:-.125rem;margin-inline-end:-.125rem}:host[data-size=s] .t-icons{-webkit-margin-end:-.375rem;margin-inline-end:-.375rem}:host:not([data-size=\"s\"]) .t-icons>:not(:first-child){-webkit-margin-start:.25rem;margin-inline-start:.25rem}:host{cursor:text}:host._expandable{height:auto;max-height:none}:host._disabled{pointer-events:none}:host._readonly{cursor:default}:host[data-size=m]{line-height:1rem}.t-hosted{display:block;border-radius:inherit}.t-scrollbar{scroll-behavior:smooth;-webkit-margin-start:-.25rem;margin-inline-start:-.25rem;min-width:100%}:host-context(tui-root._reduced-motion) .t-scrollbar{scroll-behavior:auto}:host:not(._label-outside) .t-scrollbar,:host._label-outside._icon-left .t-scrollbar{margin:0}:host[data-size=s]._icon-left .t-scrollbar{-webkit-margin-start:.25rem;margin-inline-start:.25rem}:host[data-size=m]:not(._label-outside) .t-scrollbar{border-top:1rem solid transparent}:host[data-size=l]:not(._label-outside) .t-scrollbar{border-top:1.25rem solid transparent}.t-tags{display:flex;-webkit-padding-start:.25rem;padding-inline-start:.25rem}.t-tags_expandable{overflow:hidden}.t-tags_empty{height:0}:host._expandable .t-tags{flex-wrap:wrap;white-space:normal;overflow:hidden}:host._readonly .t-tags{pointer-events:none}:host[data-size=m]:not(._label-outside) .t-tags,:host[data-size=l]:not(._label-outside) .t-tags{padding:0}.t-content{align-items:flex-start}:host[data-size=s] .t-content{min-height:var(--tui-height-s)}:host[data-size=m] .t-content{min-height:var(--tui-height-m)}:host[data-size=l] .t-content{min-height:var(--tui-height-l)}:host[data-size=s] .t-icon-wrapper{height:var(--tui-height-s)}:host[data-size=m] .t-icon-wrapper{height:var(--tui-height-m)}:host[data-size=l] .t-icon-wrapper{height:var(--tui-height-l)}.t-absolute-wrapper{position:absolute;top:0;left:0;width:100%;height:100%;display:flex;flex-direction:column;justify-content:center}:host[data-size=m] .t-absolute-wrapper{height:var(--tui-height-m)}:host[data-size=l] .t-absolute-wrapper{height:var(--tui-height-l)}.t-wrapper{position:relative;display:flex;align-items:center;padding:0;box-sizing:border-box}:host[data-size=s] .t-wrapper{min-height:var(--tui-height-s);padding:calc((var(--tui-height-s) - 1.5rem) / 2) 0}:host[data-size=m] .t-wrapper{min-height:var(--tui-height-m);padding:calc((var(--tui-height-m) - var(--tui-height-xs) - .25rem) / 2) 0}:host[data-size=l] .t-wrapper{padding:calc((var(--tui-height-l) - var(--tui-height-s) - .25rem) / 2) 0}:host[data-size=m]:not(._label-outside) .t-wrapper{padding:calc((var(--tui-height-m) - 2rem) / 2) 0}:host[data-size=l]:not(._label-outside) .t-wrapper{padding:calc((var(--tui-height-l) - 2.5rem) / 2) 0}.t-tag{margin:.125rem .5rem .125rem -.25rem;-webkit-margin-start:-.25rem;margin-inline-start:-.25rem;-webkit-margin-end:.5rem;margin-inline-end:.5rem;max-width:100%;flex-shrink:0}:host[data-size=m] .t-tag{-webkit-margin-start:-.125rem;margin-inline-start:-.125rem;-webkit-margin-end:.375rem;margin-inline-end:.375rem}.t-text:after{content:\",\\a0\"}.t-text_disabled{color:var(--tui-text-03)}.t-text_error{color:var(--tui-negative)}.t-text:not(.t-text_comma):last-of-type:after{content:\"\"}:host:not(._expandable) .t-text{white-space:nowrap}.t-input-wrapper,.t-value-content{position:relative;display:flex;flex:1;max-width:100%}:host[data-size=s] .t-input-wrapper,:host[data-size=s] .t-value-content{min-height:1.5rem}:host[data-size=m] .t-input-wrapper,:host[data-size=m] .t-value-content{min-height:calc(var(--tui-height-xs) + 2 * .125rem)}:host[data-size=l] .t-input-wrapper,:host[data-size=l] .t-value-content{min-height:calc(var(--tui-height-s) + 2 * .125rem)}:host:not(._label-outside) .t-input-wrapper,:host:not(._label-outside) .t-value-content{min-height:1rem}.t-input-wrapper_collapsed{flex:0;-webkit-margin-start:-.5rem;margin-inline-start:-.5rem}.t-value-content:empty{display:none}.t-ghost{visibility:hidden;white-space:pre;text-overflow:clip;min-width:.125rem}:host:not(._expandable) .t-ghost{min-width:2rem}.t-native{margin:0;border-width:0;border-radius:inherit;background:none;font-size:inherit;line-height:inherit;font-weight:inherit;color:inherit;caret-color:currentColor;outline:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;word-break:keep-all;-webkit-text-fill-color:currentColor;position:absolute;top:0;left:0;width:100%;height:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;box-sizing:border-box;padding:0;cursor:inherit}.t-native:-webkit-autofill,.t-native:-webkit-autofill:hover,.t-native:-webkit-autofill:focus{caret-color:var(--tui-base-09);border-radius:inherit;color:inherit!important;background-color:transparent!important;-webkit-text-fill-color:var(--tui-text-01)!important;border-color:var(--tui-autofill);-webkit-box-shadow:0 0 0 100rem var(--tui-autofill) inset!important}.t-native_hidden{opacity:0;text-indent:-10em}.t-native::placeholder{color:var(--tui-text-03);opacity:0}[tuiWrapper][data-mode=onDark] .t-native::placeholder{color:var(--tui-text-03-night)}:host._focused .t-native:not(:-moz-read-only)::placeholder{opacity:1}:host._focused .t-native:not(:read-only)::placeholder{opacity:1}.t-error-icon{display:block;color:var(--tui-error-fill);width:1rem;height:1rem}\n"], components: [{ type: i1.TuiHostedDropdownComponent, selector: "tui-hosted-dropdown", inputs: ["content", "sided", "canOpen", "open"], outputs: ["openChange", "focusedChange"] }, { type: i1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: i1.TuiScrollbarComponent, selector: "tui-scrollbar", inputs: ["hidden"] }, { type: i2.TuiTagComponent, selector: "tui-tag, a[tuiTag], button[tuiTag]", inputs: ["value", "editable", "separator", "maxLength", "size", "showLoader", "status", "hoverable", "removable", "disabled", "autoColor", "leftContent"], outputs: ["edited"] }, { type: i1.TuiTooltipComponent, selector: "tui-tooltip", inputs: ["content", "direction", "appearance", "showDelay", "hideDelay", "describeId", "context"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.TuiActiveZoneDirective, selector: "[tuiActiveZone]:not(ng-container), [tuiActiveZoneChange]:not(ng-container), [tuiActiveZoneParent]:not(ng-container)", inputs: ["tuiActiveZoneParent"], outputs: ["tuiActiveZoneChange"], exportAs: ["tuiActiveZone"] }, { type: i1.TuiWrapperDirective, selector: "[tuiWrapper]", inputs: ["disabled", "readOnly", "hover", "active", "focus", "invalid", "appearance"] }, { type: i5.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4.TuiFocusableDirective, selector: "[tuiFocusable]", inputs: ["tuiFocusable"] }, { type: i6.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i6.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }], pipes: { "async": i3.AsyncPipe }, viewProviders: [FIXED_DROPDOWN_CONTROLLER_PROVIDER], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputTagComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-input-tag',
                    templateUrl: './input-tag.template.html',
                    styleUrls: ['./input-tag.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsFocusableItemAccessor(TuiInputTagComponent),
                        tuiAsControl(TuiInputTagComponent),
                        tuiAsDataListHost(TuiInputTagComponent),
                        TEXTFIELD_CONTROLLER_PROVIDER,
                        MODE_PROVIDER,
                    ],
                    viewProviders: [FIXED_DROPDOWN_CONTROLLER_PROVIDER],
                }]
        }], ctorParameters: function () { return [{ type: i6.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i1.TuiModeDirective, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiModeDirective]
                }] }, { type: i7.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MODE]
                }] }, { type: i1.TuiHintOptionsDirective, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiHintOptionsDirective]
                }] }, { type: i1.TuiTextfieldController, decorators: [{
                    type: Inject,
                    args: [TUI_TEXTFIELD_WATCHED_CONTROLLER]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_INPUT_TAG_OPTIONS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_COMMON_ICONS]
                }] }]; }, propDecorators: { hostedDropdown: [{
                type: ViewChild,
                args: [TuiHostedDropdownComponent]
            }], focusableElement: [{
                type: ViewChild,
                args: ['focusableElement']
            }], tagsContainer: [{
                type: ViewChild,
                args: ['tagsContainer']
            }], tags: [{
                type: ViewChildren,
                args: ['tag', { read: ElementRef }]
            }], cleanerSvg: [{
                type: ViewChild,
                args: ['cleaner', { read: ElementRef }]
            }], scrollBar: [{
                type: ViewChild,
                args: [TuiScrollbarComponent, { read: ElementRef }]
            }], separator: [{
                type: Input
            }], search: [{
                type: Input
            }], editable: [{
                type: Input
            }], tagValidator: [{
                type: Input
            }], expandable: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._expandable']
            }], rows: [{
                type: Input
            }], inputHidden: [{
                type: Input
            }], uniqueTags: [{
                type: Input
            }], maxLength: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], removable: [{
                type: Input
            }], disabledItemHandler: [{
                type: Input
            }], pseudoFocusedSetter: [{
                type: Input,
                args: ['pseudoFocused']
            }], searchChange: [{
                type: Output
            }], datalist: [{
                type: ContentChild,
                args: [TuiDataListDirective, { read: TemplateRef }]
            }], errorIconTemplate: [{
                type: ViewChild,
                args: ['errorIcon']
            }], size: [{
                type: HostBinding,
                args: ['attr.data-size']
            }], labelOutside: [{
                type: HostBinding,
                args: ['class._label-outside']
            }], iconLeft: [{
                type: HostBinding,
                args: ['class._icon-left']
            }], onFocusInOut: [{
                type: HostListener,
                args: ['focusin.capture.silent']
            }, {
                type: HostListener,
                args: ['focusout.capture.silent']
            }] } });
//# sourceMappingURL=data:application/json;base64,
import { ChangeDetectionStrategy, Component, Inject, Input, Optional } from '@angular/core';
import { TEXTFIELD_CONTROLLER_PROVIDER, TUI_TEXTFIELD_WATCHED_CONTROLLER, tuiAsDataListAccessor, } from '@taiga-ui/core';
import { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';
import { AbstractTuiDataListWrapper } from './data-list-wrapper';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@angular/common";
import * as i3 from "@taiga-ui/cdk";
import * as i4 from "@tinkoff/ng-polymorpheus";
export class TuiDataListWrapperComponent extends AbstractTuiDataListWrapper {
    constructor(itemsHandlers, controller) {
        super(itemsHandlers, (controller === null || controller === void 0 ? void 0 : controller.size) || 'm');
        this.items = [];
    }
}
TuiDataListWrapperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDataListWrapperComponent, deps: [{ token: TUI_ITEMS_HANDLERS }, { token: TUI_TEXTFIELD_WATCHED_CONTROLLER, optional: true }], target: i0.ɵɵFactoryTarget.Component });
TuiDataListWrapperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDataListWrapperComponent, selector: "tui-data-list-wrapper:not([labels])", inputs: { items: "items" }, providers: [
        tuiAsDataListAccessor(TuiDataListWrapperComponent),
        TEXTFIELD_CONTROLLER_PROVIDER,
    ], usesInheritance: true, ngImport: i0, template: "<!-- TODO: remove $any in 4.0 -->\n<tui-data-list\n    *ngIf=\"items; else loading\"\n    [emptyContent]=\"emptyContent\"\n    [size]=\"$any(size)\"\n>\n    <button\n        *ngFor=\"let item of items\"\n        #elementRef=\"elementRef\"\n        automation-id=\"tui-data-list-wrapper__option\"\n        tuiElement\n        tuiOption\n        [disabled]=\"disabledItemHandler(item)\"\n        [value]=\"item\"\n        (click)=\"itemClick.emit(item)\"\n    >\n        <span class=\"t-content\">\n            <ng-container *polymorpheusOutlet=\"itemContent as text; context: getContext(item, elementRef)\">\n                {{ text }}\n            </ng-container>\n        </span>\n    </button>\n</tui-data-list>\n<ng-template #loading>\n    <tui-loader\n        automation-id=\"tui-data-list-wrapper__loader\"\n        class=\"t-loader\"\n    ></tui-loader>\n</ng-template>\n", styles: [":host{display:block}.t-content{flex:1}.t-loader{margin:.75rem 0}\n"], components: [{ type: i1.TuiDataListComponent, selector: "tui-data-list", inputs: ["role", "emptyContent", "size"] }, { type: i1.TuiOptionComponent, selector: "button[tuiOption], a[tuiOption]", inputs: ["size", "role", "disabled", "value"] }, { type: i1.TuiLoaderComponent, selector: "tui-loader", inputs: ["size", "inheritColor", "overlay", "textContent", "showLoader"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.TuiElementDirective, selector: "[tuiElement]", exportAs: ["elementRef"] }, { type: i4.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDataListWrapperComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-data-list-wrapper:not([labels])',
                    templateUrl: './data-list-wrapper.template.html',
                    styleUrls: ['./data-list-wrapper.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsDataListAccessor(TuiDataListWrapperComponent),
                        TEXTFIELD_CONTROLLER_PROVIDER,
                    ],
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ITEMS_HANDLERS]
                }] }, { type: i1.TuiTextfieldController, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TUI_TEXTFIELD_WATCHED_CONTROLLER]
                }] }]; }, propDecorators: { items: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1saXN0LXdyYXBwZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvZGF0YS1saXN0LXdyYXBwZXIvZGF0YS1saXN0LXdyYXBwZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvZGF0YS1saXN0LXdyYXBwZXIvZGF0YS1saXN0LXdyYXBwZXIudGVtcGxhdGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFDSCw2QkFBNkIsRUFDN0IsZ0NBQWdDLEVBQ2hDLHFCQUFxQixHQUV4QixNQUFNLGdCQUFnQixDQUFDO0FBQ3hCLE9BQU8sRUFBQyxrQkFBa0IsRUFBbUIsTUFBTSxzQkFBc0IsQ0FBQztBQUUxRSxPQUFPLEVBQUMsMEJBQTBCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7O0FBWS9ELE1BQU0sT0FBTywyQkFBK0IsU0FBUSwwQkFBNkI7SUFJN0UsWUFDZ0MsYUFBa0MsRUFHOUQsVUFBeUM7UUFFekMsS0FBSyxDQUFDLGFBQWEsRUFBRSxDQUFBLFVBQVUsYUFBVixVQUFVLHVCQUFWLFVBQVUsQ0FBRSxJQUFJLEtBQUksR0FBRyxDQUFDLENBQUM7UUFSbEQsVUFBSyxHQUF3QixFQUFFLENBQUM7SUFTaEMsQ0FBQzs7eUhBWFEsMkJBQTJCLGtCQUt4QixrQkFBa0IsYUFFbEIsZ0NBQWdDOzZHQVBuQywyQkFBMkIsMEZBTHpCO1FBQ1AscUJBQXFCLENBQUMsMkJBQTJCLENBQUM7UUFDbEQsNkJBQTZCO0tBQ2hDLGlEQ25CTCwrMkJBNkJBOzRGRFJhLDJCQUEyQjtrQkFWdkMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUscUNBQXFDO29CQUMvQyxXQUFXLEVBQUUsbUNBQW1DO29CQUNoRCxTQUFTLEVBQUUsQ0FBQyxnQ0FBZ0MsQ0FBQztvQkFDN0MsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFNBQVMsRUFBRTt3QkFDUCxxQkFBcUIsNkJBQTZCO3dCQUNsRCw2QkFBNkI7cUJBQ2hDO2lCQUNKOzswQkFNUSxNQUFNOzJCQUFDLGtCQUFrQjs7MEJBQ3pCLFFBQVE7OzBCQUNSLE1BQU07MkJBQUMsZ0NBQWdDOzRDQUw1QyxLQUFLO3NCQURKLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEluamVjdCwgSW5wdXQsIE9wdGlvbmFsfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gICAgVEVYVEZJRUxEX0NPTlRST0xMRVJfUFJPVklERVIsXG4gICAgVFVJX1RFWFRGSUVMRF9XQVRDSEVEX0NPTlRST0xMRVIsXG4gICAgdHVpQXNEYXRhTGlzdEFjY2Vzc29yLFxuICAgIFR1aVRleHRmaWVsZENvbnRyb2xsZXIsXG59IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7VFVJX0lURU1TX0hBTkRMRVJTLCBUdWlJdGVtc0hhbmRsZXJzfSBmcm9tICdAdGFpZ2EtdWkva2l0L3Rva2Vucyc7XG5cbmltcG9ydCB7QWJzdHJhY3RUdWlEYXRhTGlzdFdyYXBwZXJ9IGZyb20gJy4vZGF0YS1saXN0LXdyYXBwZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1kYXRhLWxpc3Qtd3JhcHBlcjpub3QoW2xhYmVsc10pJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZGF0YS1saXN0LXdyYXBwZXIudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vZGF0YS1saXN0LXdyYXBwZXIuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB0dWlBc0RhdGFMaXN0QWNjZXNzb3IoVHVpRGF0YUxpc3RXcmFwcGVyQ29tcG9uZW50KSxcbiAgICAgICAgVEVYVEZJRUxEX0NPTlRST0xMRVJfUFJPVklERVIsXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpRGF0YUxpc3RXcmFwcGVyQ29tcG9uZW50PFQ+IGV4dGVuZHMgQWJzdHJhY3RUdWlEYXRhTGlzdFdyYXBwZXI8VD4ge1xuICAgIEBJbnB1dCgpXG4gICAgaXRlbXM6IHJlYWRvbmx5IFRbXSB8IG51bGwgPSBbXTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFRVSV9JVEVNU19IQU5ETEVSUykgaXRlbXNIYW5kbGVyczogVHVpSXRlbXNIYW5kbGVyczxUPixcbiAgICAgICAgQE9wdGlvbmFsKClcbiAgICAgICAgQEluamVjdChUVUlfVEVYVEZJRUxEX1dBVENIRURfQ09OVFJPTExFUilcbiAgICAgICAgY29udHJvbGxlcjogVHVpVGV4dGZpZWxkQ29udHJvbGxlciB8IG51bGwsXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGl0ZW1zSGFuZGxlcnMsIGNvbnRyb2xsZXI/LnNpemUgfHwgJ20nKTtcbiAgICB9XG59XG4iLCI8IS0tIFRPRE86IHJlbW92ZSAkYW55IGluIDQuMCAtLT5cbjx0dWktZGF0YS1saXN0XG4gICAgKm5nSWY9XCJpdGVtczsgZWxzZSBsb2FkaW5nXCJcbiAgICBbZW1wdHlDb250ZW50XT1cImVtcHR5Q29udGVudFwiXG4gICAgW3NpemVdPVwiJGFueShzaXplKVwiXG4+XG4gICAgPGJ1dHRvblxuICAgICAgICAqbmdGb3I9XCJsZXQgaXRlbSBvZiBpdGVtc1wiXG4gICAgICAgICNlbGVtZW50UmVmPVwiZWxlbWVudFJlZlwiXG4gICAgICAgIGF1dG9tYXRpb24taWQ9XCJ0dWktZGF0YS1saXN0LXdyYXBwZXJfX29wdGlvblwiXG4gICAgICAgIHR1aUVsZW1lbnRcbiAgICAgICAgdHVpT3B0aW9uXG4gICAgICAgIFtkaXNhYmxlZF09XCJkaXNhYmxlZEl0ZW1IYW5kbGVyKGl0ZW0pXCJcbiAgICAgICAgW3ZhbHVlXT1cIml0ZW1cIlxuICAgICAgICAoY2xpY2spPVwiaXRlbUNsaWNrLmVtaXQoaXRlbSlcIlxuICAgID5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJ0LWNvbnRlbnRcIj5cbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKnBvbHltb3JwaGV1c091dGxldD1cIml0ZW1Db250ZW50IGFzIHRleHQ7IGNvbnRleHQ6IGdldENvbnRleHQoaXRlbSwgZWxlbWVudFJlZilcIj5cbiAgICAgICAgICAgICAgICB7eyB0ZXh0IH19XG4gICAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPC9zcGFuPlxuICAgIDwvYnV0dG9uPlxuPC90dWktZGF0YS1saXN0PlxuPG5nLXRlbXBsYXRlICNsb2FkaW5nPlxuICAgIDx0dWktbG9hZGVyXG4gICAgICAgIGF1dG9tYXRpb24taWQ9XCJ0dWktZGF0YS1saXN0LXdyYXBwZXJfX2xvYWRlclwiXG4gICAgICAgIGNsYXNzPVwidC1sb2FkZXJcIlxuICAgID48L3R1aS1sb2FkZXI+XG48L25nLXRlbXBsYXRlPlxuIl19
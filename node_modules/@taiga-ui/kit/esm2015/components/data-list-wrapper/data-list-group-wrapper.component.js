import { ChangeDetectionStrategy, Component, Inject, Input, Optional } from '@angular/core';
import { tuiAsDataListAccessor, TuiTextfieldSizeDirective } from '@taiga-ui/core';
import { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';
import { AbstractTuiDataListWrapper } from './data-list-wrapper';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@angular/common";
import * as i3 from "@taiga-ui/cdk";
import * as i4 from "@tinkoff/ng-polymorpheus";
export class TuiDataListGroupWrapperComponent extends AbstractTuiDataListWrapper {
    constructor(itemsHandlers, controller) {
        super(itemsHandlers, (controller === null || controller === void 0 ? void 0 : controller.size) || 'm');
        this.items = [];
        this.labels = [];
    }
}
TuiDataListGroupWrapperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDataListGroupWrapperComponent, deps: [{ token: TUI_ITEMS_HANDLERS }, { token: TuiTextfieldSizeDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });
TuiDataListGroupWrapperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiDataListGroupWrapperComponent, selector: "tui-data-list-wrapper[labels]", inputs: { items: "items", labels: "labels" }, providers: [tuiAsDataListAccessor(TuiDataListGroupWrapperComponent)], usesInheritance: true, ngImport: i0, template: "<!-- TODO: remove $any in 4.0 -->\n<tui-data-list\n    *ngIf=\"items; else loading\"\n    [emptyContent]=\"emptyContent\"\n    [size]=\"$any(size)\"\n>\n    <tui-opt-group\n        *ngFor=\"let group of items; let index = index\"\n        [label]=\"labels[index]\"\n    >\n        <button\n            *ngFor=\"let item of group\"\n            #elementRef=\"elementRef\"\n            automation-id=\"tui-data-list-wrapper__option\"\n            tuiElement\n            tuiOption\n            [disabled]=\"disabledItemHandler(item)\"\n            [value]=\"item\"\n            (click)=\"itemClick.emit(item)\"\n        >\n            <ng-container *polymorpheusOutlet=\"itemContent as text; context: getContext(item, elementRef)\">\n                {{ text }}\n            </ng-container>\n        </button>\n    </tui-opt-group>\n</tui-data-list>\n<ng-template #loading>\n    <tui-loader class=\"t-loader\"></tui-loader>\n</ng-template>\n", styles: [":host{display:block}.t-content{flex:1}.t-loader{margin:.75rem 0}\n"], components: [{ type: i1.TuiDataListComponent, selector: "tui-data-list", inputs: ["role", "emptyContent", "size"] }, { type: i1.TuiOptionComponent, selector: "button[tuiOption], a[tuiOption]", inputs: ["size", "role", "disabled", "value"] }, { type: i1.TuiLoaderComponent, selector: "tui-loader", inputs: ["size", "inheritColor", "overlay", "textContent", "showLoader"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.TuiOptGroupDirective, selector: "tui-opt-group", inputs: ["label"] }, { type: i3.TuiElementDirective, selector: "[tuiElement]", exportAs: ["elementRef"] }, { type: i4.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDataListGroupWrapperComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-data-list-wrapper[labels]',
                    templateUrl: './data-list-group-wrapper.template.html',
                    styleUrls: ['./data-list-wrapper.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [tuiAsDataListAccessor(TuiDataListGroupWrapperComponent)],
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ITEMS_HANDLERS]
                }] }, { type: i1.TuiTextfieldSizeDirective, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiTextfieldSizeDirective]
                }] }]; }, propDecorators: { items: [{
                type: Input
            }], labels: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1saXN0LWdyb3VwLXdyYXBwZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvZGF0YS1saXN0LXdyYXBwZXIvZGF0YS1saXN0LWdyb3VwLXdyYXBwZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvZGF0YS1saXN0LXdyYXBwZXIvZGF0YS1saXN0LWdyb3VwLXdyYXBwZXIudGVtcGxhdGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzFGLE9BQU8sRUFBQyxxQkFBcUIsRUFBRSx5QkFBeUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ2hGLE9BQU8sRUFBQyxrQkFBa0IsRUFBbUIsTUFBTSxzQkFBc0IsQ0FBQztBQUUxRSxPQUFPLEVBQUMsMEJBQTBCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7O0FBUy9ELE1BQU0sT0FBTyxnQ0FBb0MsU0FBUSwwQkFBNkI7SUFPbEYsWUFDZ0MsYUFBa0MsRUFHOUQsVUFBNEM7UUFFNUMsS0FBSyxDQUFDLGFBQWEsRUFBRSxDQUFBLFVBQVUsYUFBVixVQUFVLHVCQUFWLFVBQVUsQ0FBRSxJQUFJLEtBQUksR0FBRyxDQUFDLENBQUM7UUFYbEQsVUFBSyxHQUEwQixFQUFFLENBQUM7UUFHbEMsV0FBTSxHQUFzQixFQUFFLENBQUM7SUFTL0IsQ0FBQzs7OEhBZFEsZ0NBQWdDLGtCQVE3QixrQkFBa0IsYUFFbEIseUJBQXlCO2tIQVY1QixnQ0FBZ0Msc0dBRjlCLENBQUMscUJBQXFCLENBQUMsZ0NBQWdDLENBQUMsQ0FBQyxpRENYeEUsNDZCQTZCQTs0RkRoQmEsZ0NBQWdDO2tCQVA1QyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSwrQkFBK0I7b0JBQ3pDLFdBQVcsRUFBRSx5Q0FBeUM7b0JBQ3RELFNBQVMsRUFBRSxDQUFDLGdDQUFnQyxDQUFDO29CQUM3QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsU0FBUyxFQUFFLENBQUMscUJBQXFCLGtDQUFrQyxDQUFDO2lCQUN2RTs7MEJBU1EsTUFBTTsyQkFBQyxrQkFBa0I7OzBCQUN6QixRQUFROzswQkFDUixNQUFNOzJCQUFDLHlCQUF5Qjs0Q0FSckMsS0FBSztzQkFESixLQUFLO2dCQUlOLE1BQU07c0JBREwsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5qZWN0LCBJbnB1dCwgT3B0aW9uYWx9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0dWlBc0RhdGFMaXN0QWNjZXNzb3IsIFR1aVRleHRmaWVsZFNpemVEaXJlY3RpdmV9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7VFVJX0lURU1TX0hBTkRMRVJTLCBUdWlJdGVtc0hhbmRsZXJzfSBmcm9tICdAdGFpZ2EtdWkva2l0L3Rva2Vucyc7XG5cbmltcG9ydCB7QWJzdHJhY3RUdWlEYXRhTGlzdFdyYXBwZXJ9IGZyb20gJy4vZGF0YS1saXN0LXdyYXBwZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1kYXRhLWxpc3Qtd3JhcHBlcltsYWJlbHNdJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vZGF0YS1saXN0LWdyb3VwLXdyYXBwZXIudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vZGF0YS1saXN0LXdyYXBwZXIuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHByb3ZpZGVyczogW3R1aUFzRGF0YUxpc3RBY2Nlc3NvcihUdWlEYXRhTGlzdEdyb3VwV3JhcHBlckNvbXBvbmVudCldLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlEYXRhTGlzdEdyb3VwV3JhcHBlckNvbXBvbmVudDxUPiBleHRlbmRzIEFic3RyYWN0VHVpRGF0YUxpc3RXcmFwcGVyPFQ+IHtcbiAgICBASW5wdXQoKVxuICAgIGl0ZW1zOiByZWFkb25seSBUW11bXSB8IG51bGwgPSBbXTtcblxuICAgIEBJbnB1dCgpXG4gICAgbGFiZWxzOiByZWFkb25seSBzdHJpbmdbXSA9IFtdO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVFVJX0lURU1TX0hBTkRMRVJTKSBpdGVtc0hhbmRsZXJzOiBUdWlJdGVtc0hhbmRsZXJzPFQ+LFxuICAgICAgICBAT3B0aW9uYWwoKVxuICAgICAgICBASW5qZWN0KFR1aVRleHRmaWVsZFNpemVEaXJlY3RpdmUpXG4gICAgICAgIGNvbnRyb2xsZXI6IFR1aVRleHRmaWVsZFNpemVEaXJlY3RpdmUgfCBudWxsLFxuICAgICkge1xuICAgICAgICBzdXBlcihpdGVtc0hhbmRsZXJzLCBjb250cm9sbGVyPy5zaXplIHx8ICdtJyk7XG4gICAgfVxufVxuIiwiPCEtLSBUT0RPOiByZW1vdmUgJGFueSBpbiA0LjAgLS0+XG48dHVpLWRhdGEtbGlzdFxuICAgICpuZ0lmPVwiaXRlbXM7IGVsc2UgbG9hZGluZ1wiXG4gICAgW2VtcHR5Q29udGVudF09XCJlbXB0eUNvbnRlbnRcIlxuICAgIFtzaXplXT1cIiRhbnkoc2l6ZSlcIlxuPlxuICAgIDx0dWktb3B0LWdyb3VwXG4gICAgICAgICpuZ0Zvcj1cImxldCBncm91cCBvZiBpdGVtczsgbGV0IGluZGV4ID0gaW5kZXhcIlxuICAgICAgICBbbGFiZWxdPVwibGFiZWxzW2luZGV4XVwiXG4gICAgPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAqbmdGb3I9XCJsZXQgaXRlbSBvZiBncm91cFwiXG4gICAgICAgICAgICAjZWxlbWVudFJlZj1cImVsZW1lbnRSZWZcIlxuICAgICAgICAgICAgYXV0b21hdGlvbi1pZD1cInR1aS1kYXRhLWxpc3Qtd3JhcHBlcl9fb3B0aW9uXCJcbiAgICAgICAgICAgIHR1aUVsZW1lbnRcbiAgICAgICAgICAgIHR1aU9wdGlvblxuICAgICAgICAgICAgW2Rpc2FibGVkXT1cImRpc2FibGVkSXRlbUhhbmRsZXIoaXRlbSlcIlxuICAgICAgICAgICAgW3ZhbHVlXT1cIml0ZW1cIlxuICAgICAgICAgICAgKGNsaWNrKT1cIml0ZW1DbGljay5lbWl0KGl0ZW0pXCJcbiAgICAgICAgPlxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqcG9seW1vcnBoZXVzT3V0bGV0PVwiaXRlbUNvbnRlbnQgYXMgdGV4dDsgY29udGV4dDogZ2V0Q29udGV4dChpdGVtLCBlbGVtZW50UmVmKVwiPlxuICAgICAgICAgICAgICAgIHt7IHRleHQgfX1cbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICA8L3R1aS1vcHQtZ3JvdXA+XG48L3R1aS1kYXRhLWxpc3Q+XG48bmctdGVtcGxhdGUgI2xvYWRpbmc+XG4gICAgPHR1aS1sb2FkZXIgY2xhc3M9XCJ0LWxvYWRlclwiPjwvdHVpLWxvYWRlcj5cbjwvbmctdGVtcGxhdGU+XG4iXX0=
import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, Inject, Input, } from '@angular/core';
import { tuiIsString, tuiPure } from '@taiga-ui/cdk';
import { tuiSizeBigger } from '@taiga-ui/core';
import { tuiStringHashToHsl } from '@taiga-ui/kit/utils/format';
import { TUI_AVATAR_OPTIONS } from './avatar.options';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@angular/common";
import * as i3 from "@taiga-ui/kit/directives";
export class TuiAvatarComponent {
    constructor(options) {
        this.options = options;
        this.size = this.options.size;
        this.text = '';
        this.fallback = null;
        this.autoColor = this.options.autoColor;
        this.rounded = this.options.rounded;
        this.avatarUrl = null;
        this.isUrlValid = false;
    }
    set avatarUrlSetter(avatarUrl) {
        this.avatarUrl = avatarUrl;
        this.isUrlValid = !!avatarUrl && !this.iconAvatar;
    }
    get bgColor() {
        return this.autoColor ? tuiStringHashToHsl(this.text) : '';
    }
    get hasAvatar() {
        return this.avatarUrl !== null && this.isUrlValid;
    }
    get iconAvatar() {
        var _a;
        return tuiIsString(this.avatarUrl) && !!((_a = this.avatarUrl) === null || _a === void 0 ? void 0 : _a.startsWith('tuiIcon'));
    }
    get useFallback() {
        return (!!this.fallback && !!this.avatarUrl && !this.isUrlValid && !this.text.length);
    }
    get computedText() {
        return this.hasAvatar || this.iconAvatar || this.text === ''
            ? ''
            : this.getSlicedText(this.text, this.size);
    }
    get stringAvatar() {
        return this.iconAvatar ? String(this.avatarUrl) : '';
    }
    onError() {
        this.isUrlValid = false;
    }
    getSlicedText(text, size) {
        const words = text.split(' ');
        return words.length > 1 && tuiSizeBigger(size)
            ? words[0].slice(0, 1) + words[1].slice(0, 1)
            : words[0].slice(0, 1);
    }
}
TuiAvatarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAvatarComponent, deps: [{ token: TUI_AVATAR_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });
TuiAvatarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiAvatarComponent, selector: "tui-avatar", inputs: { size: "size", avatarUrlSetter: ["avatarUrl", "avatarUrlSetter"], text: "text", fallback: "fallback", autoColor: "autoColor", rounded: "rounded" }, host: { properties: { "attr.data-size": "this.size", "class._rounded": "this.rounded", "style.background": "this.bgColor", "class._has-avatar": "this.hasAvatar" } }, ngImport: i0, template: "<img\n    *ngIf=\"isUrlValid\"\n    loading=\"lazy\"\n    class=\"t-image\"\n    [attr.alt]=\"text\"\n    [src]=\"avatarUrl || ''\"\n    (error)=\"onError()\"\n/>\n<tui-svg\n    *ngIf=\"useFallback\"\n    class=\"t-icon\"\n    [src]=\"fallback!\"\n></tui-svg>\n<tui-svg\n    *ngIf=\"stringAvatar\"\n    class=\"t-icon\"\n    [src]=\"stringAvatar\"\n></tui-svg>\n<span class=\"t-text\">{{ computedText }}</span>\n", styles: [":host{position:relative;display:flex;flex-shrink:0;border-radius:var(--tui-radius-m);color:var(--tui-secondary-active);text-align:center;text-transform:uppercase;justify-content:center;align-items:center;background:var(--tui-avatar-background, currentColor);-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden}:host[data-size=xs]{font:var(--tui-font-text-s);width:1.5rem;height:1.5rem}:host[data-size=s]{font:var(--tui-font-text-m);width:2rem;height:2rem}:host[data-size=m]{font:var(--tui-font-text-l);width:3rem;height:3rem}:host[data-size=l]{font:var(--tui-font-heading-5);width:4rem;height:4rem;border-radius:var(--tui-radius-xl)}:host[data-size=xl]{font:var(--tui-font-heading-3);width:6rem;height:6rem;border-radius:var(--tui-radius-xl)}:host[data-size=xxl]{font:var(--tui-font-heading-1);width:9rem;height:9rem;border-radius:var(--tui-radius-l)}:host[new][data-size=xxs]{width:1.5rem;height:1.5rem;border-radius:var(--tui-radius-s)}:host[new][data-size=xxs] .t-icon{transform:scale(.58)}:host[new][data-size=xs]{width:2rem;height:2rem;border-radius:var(--tui-radius-s)}:host[new][data-size=xs] .t-icon{transform:scale(.83)}:host[new][data-size=s]{width:2.5rem;height:2.5rem;border-radius:calc(1.5 * var(--tui-radius-s))}:host[new][data-size=s] .t-icon{transform:scale(1)}:host[new][data-size=m]{width:3rem;height:3rem;border-radius:calc(2 * var(--tui-radius-s))}:host[new][data-size=m] .t-icon{transform:scale(1.17)}:host[new][data-size=l]{width:4rem;height:4rem;border-radius:calc(2 * var(--tui-radius-s))}:host[new][data-size=l] .t-icon{transform:scale(1.67)}:host[new][data-size=xl]{width:6rem;height:6rem;border-radius:calc(3 * var(--tui-radius-s))}:host[new][data-size=xl] .t-icon{transform:scale(2.33)}:host[new][data-size=xxl]{width:8rem;height:8rem;border-radius:calc(4 * var(--tui-radius-s))}:host[new][data-size=xxl] .t-icon{transform:scale(3.33)}:host._has-avatar{background-color:transparent}:host._rounded{border-radius:100%!important}::ng-deep .tui-avatar-stack{display:flex;width:-webkit-min-content;width:min-content}:host-context(.tui-avatar-stack)[data-size=xs]{margin-right:-.625rem;box-shadow:0 0 0 1px var(--tui-avatar-border, var(--tui-base-01))}:host-context(.tui-avatar-stack)[data-size=s]{margin-right:-.875rem;box-shadow:0 0 0 1px var(--tui-avatar-border, var(--tui-base-01))}:host-context(.tui-avatar-stack)[data-size=m]{margin-right:-1.25rem;box-shadow:0 0 0 2px var(--tui-avatar-border, var(--tui-base-01))}:host-context(.tui-avatar-stack)[data-size=l]{margin-right:-1.625rem;box-shadow:0 0 0 2px var(--tui-avatar-border, var(--tui-base-01))}:host-context(.tui-avatar-stack)[data-size=xl]{margin-right:-2.25rem;box-shadow:0 0 0 3px var(--tui-avatar-border, var(--tui-base-01))}:host-context(.tui-avatar-stack)[data-size=xxl]{margin-right:-3.375rem;box-shadow:0 0 0 3px var(--tui-avatar-border, var(--tui-base-01))}.t-image{width:100%;height:100%;object-fit:cover}.t-text{color:var(--tui-avatar-color, var(--tui-text-01))}.t-icon{position:absolute;top:0;left:0;width:100%;height:100%;color:var(--tui-avatar-color, var(--tui-text-01))}:host[data-size=xs] .t-icon{transform:scale(.5)}:host[data-size=m] .t-icon{transform:scale(1.6)}:host[data-size=l] .t-icon{transform:scale(2)}:host[data-size=xl] .t-icon{transform:scale(3.2)}\n"], components: [{ type: i1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.TuiLazyLoadingDirective, selector: "img[loading=\"lazy\"]", inputs: ["src"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiPure
], TuiAvatarComponent.prototype, "getSlicedText", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAvatarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-avatar',
                    templateUrl: './avatar.template.html',
                    styleUrls: ['./avatar.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_AVATAR_OPTIONS]
                }] }]; }, propDecorators: { size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], avatarUrlSetter: [{
                type: Input,
                args: ['avatarUrl']
            }], text: [{
                type: Input
            }], fallback: [{
                type: Input
            }], autoColor: [{
                type: Input
            }], rounded: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class._rounded']
            }], bgColor: [{
                type: HostBinding,
                args: ['style.background']
            }], hasAvatar: [{
                type: HostBinding,
                args: ['class._has-avatar']
            }], getSlicedText: [] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZhdGFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9jb21wb25lbnRzL2F2YXRhci9hdmF0YXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvYXZhdGFyL2F2YXRhci50ZW1wbGF0ZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxXQUFXLEVBQ1gsTUFBTSxFQUNOLEtBQUssR0FDUixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUMsV0FBVyxFQUFFLE9BQU8sRUFBYyxNQUFNLGVBQWUsQ0FBQztBQUNoRSxPQUFPLEVBQUMsYUFBYSxFQUF5QixNQUFNLGdCQUFnQixDQUFDO0FBQ3JFLE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLDRCQUE0QixDQUFDO0FBRTlELE9BQU8sRUFBQyxrQkFBa0IsRUFBbUIsTUFBTSxrQkFBa0IsQ0FBQzs7Ozs7QUFRdEUsTUFBTSxPQUFPLGtCQUFrQjtJQTRCM0IsWUFBeUQsT0FBeUI7UUFBekIsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUF6QmxGLFNBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztRQVN6QixTQUFJLEdBQUcsRUFBRSxDQUFDO1FBR1YsYUFBUSxHQUF1QixJQUFJLENBQUM7UUFHcEMsY0FBUyxHQUFZLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDO1FBSTVDLFlBQU8sR0FBWSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUV4QyxjQUFTLEdBQW9DLElBQUksQ0FBQztRQUVsRCxlQUFVLEdBQUcsS0FBSyxDQUFDO0lBRWtFLENBQUM7SUF2QnRGLElBQ0ksZUFBZSxDQUFDLFNBQTBDO1FBQzFELElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElB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ekIsT0FBTztzQkFEVixXQUFXO3VCQUFDLGtCQUFrQjtnQkFNM0IsU0FBUztzQkFEWixXQUFXO3VCQUFDLG1CQUFtQjtnQkE4QnhCLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtTYWZlUmVzb3VyY2VVcmx9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHt0dWlJc1N0cmluZywgdHVpUHVyZSwgVHVpU2FmZUh0bWx9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHt0dWlTaXplQmlnZ2VyLCBUdWlTaXplWFhMLCBUdWlTaXplWFhTfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge3R1aVN0cmluZ0hhc2hUb0hzbH0gZnJvbSAnQHRhaWdhLXVpL2tpdC91dGlscy9mb3JtYXQnO1xuXG5pbXBvcnQge1RVSV9BVkFUQVJfT1BUSU9OUywgVHVpQXZhdGFyT3B0aW9uc30gZnJvbSAnLi9hdmF0YXIub3B0aW9ucyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLWF2YXRhcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2F2YXRhci50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9hdmF0YXIuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlBdmF0YXJDb21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdhdHRyLmRhdGEtc2l6ZScpXG4gICAgc2l6ZSA9IHRoaXMub3B0aW9ucy5zaXplO1xuXG4gICAgQElucHV0KCdhdmF0YXJVcmwnKVxuICAgIHNldCBhdmF0YXJVcmxTZXR0ZXIoYXZhdGFyVXJsOiBTYWZlUmVzb3VyY2VVcmwgfCBzdHJpbmcgfCBudWxsKSB7XG4gICAgICAgIHRoaXMuYXZhdGFyVXJsID0gYXZhdGFyVXJsO1xuICAgICAgICB0aGlzLmlzVXJsVmFsaWQgPSAhIWF2YXRhclVybCAmJiAhdGhpcy5pY29uQXZhdGFyO1xuICAgIH1cblxuICAgIEBJbnB1dCgpXG4gICAgdGV4dCA9ICcnO1xuXG4gICAgQElucHV0KClcbiAgICBmYWxsYmFjazogVHVpU2FmZUh0bWwgfCBudWxsID0gbnVsbDtcblxuICAgIEBJbnB1dCgpXG4gICAgYXV0b0NvbG9yOiBib29sZWFuID0gdGhpcy5vcHRpb25zLmF1dG9Db2xvcjtcblxuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5fcm91bmRlZCcpXG4gICAgcm91bmRlZDogYm9vbGVhbiA9IHRoaXMub3B0aW9ucy5yb3VuZGVkO1xuXG4gICAgYXZhdGFyVXJsOiBTYWZlUmVzb3VyY2VVcmwgfCBzdHJpbmcgfCBudWxsID0gbnVsbDtcblxuICAgIGlzVXJsVmFsaWQgPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoVFVJX0FWQVRBUl9PUFRJT05TKSBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IFR1aUF2YXRhck9wdGlvbnMpIHt9XG5cbiAgICBASG9zdEJpbmRpbmcoJ3N0eWxlLmJhY2tncm91bmQnKVxuICAgIGdldCBiZ0NvbG9yKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLmF1dG9Db2xvciA/IHR1aVN0cmluZ0hhc2hUb0hzbCh0aGlzLnRleHQpIDogJyc7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5faGFzLWF2YXRhcicpXG4gICAgZ2V0IGhhc0F2YXRhcigpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXZhdGFyVXJsICE9PSBudWxsICYmIHRoaXMuaXNVcmxWYWxpZDtcbiAgICB9XG5cbiAgICBnZXQgaWNvbkF2YXRhcigpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHR1aUlzU3RyaW5nKHRoaXMuYXZhdGFyVXJsKSAmJiAhIXRoaXMuYXZhdGFyVXJsPy5zdGFydHNXaXRoKCd0dWlJY29uJyk7XG4gICAgfVxuXG4gICAgZ2V0IHVzZUZhbGxiYWNrKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgISF0aGlzLmZhbGxiYWNrICYmICEhdGhpcy5hdmF0YXJVcmwgJiYgIXRoaXMuaXNVcmxWYWxpZCAmJiAhdGhpcy50ZXh0Lmxlbmd0aFxuICAgICAgICApO1xuICAgIH1cblxuICAgIGdldCBjb21wdXRlZFRleHQoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGFzQXZhdGFyIHx8IHRoaXMuaWNvbkF2YXRhciB8fCB0aGlzLnRleHQgPT09ICcnXG4gICAgICAgICAgICA/ICcnXG4gICAgICAgICAgICA6IHRoaXMuZ2V0U2xpY2VkVGV4dCh0aGlzLnRleHQsIHRoaXMuc2l6ZSk7XG4gICAgfVxuXG4gICAgZ2V0IHN0cmluZ0F2YXRhcigpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5pY29uQXZhdGFyID8gU3RyaW5nKHRoaXMuYXZhdGFyVXJsKSA6ICcnO1xuICAgIH1cblxuICAgIG9uRXJyb3IoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuaXNVcmxWYWxpZCA9IGZhbHNlO1xuICAgIH1cblxuICAgIEB0dWlQdXJlXG4gICAgcHJpdmF0ZSBnZXRTbGljZWRUZXh0KHRleHQ6IHN0cmluZywgc2l6ZTogVHVpU2l6ZVhYTCB8IFR1aVNpemVYWFMpOiBzdHJpbmcge1xuICAgICAgICBjb25zdCB3b3JkcyA9IHRleHQuc3BsaXQoJyAnKTtcblxuICAgICAgICByZXR1cm4gd29yZHMubGVuZ3RoID4gMSAmJiB0dWlTaXplQmlnZ2VyKHNpemUpXG4gICAgICAgICAgICA/IHdvcmRzWzBdLnNsaWNlKDAsIDEpICsgd29yZHNbMV0uc2xpY2UoMCwgMSlcbiAgICAgICAgICAgIDogd29yZHNbMF0uc2xpY2UoMCwgMSk7XG4gICAgfVxufVxuIiwiPGltZ1xuICAgICpuZ0lmPVwiaXNVcmxWYWxpZFwiXG4gICAgbG9hZGluZz1cImxhenlcIlxuICAgIGNsYXNzPVwidC1pbWFnZVwiXG4gICAgW2F0dHIuYWx0XT1cInRleHRcIlxuICAgIFtzcmNdPVwiYXZhdGFyVXJsIHx8ICcnXCJcbiAgICAoZXJyb3IpPVwib25FcnJvcigpXCJcbi8+XG48dHVpLXN2Z1xuICAgICpuZ0lmPVwidXNlRmFsbGJhY2tcIlxuICAgIGNsYXNzPVwidC1pY29uXCJcbiAgICBbc3JjXT1cImZhbGxiYWNrIVwiXG4+PC90dWktc3ZnPlxuPHR1aS1zdmdcbiAgICAqbmdJZj1cInN0cmluZ0F2YXRhclwiXG4gICAgY2xhc3M9XCJ0LWljb25cIlxuICAgIFtzcmNdPVwic3RyaW5nQXZhdGFyXCJcbj48L3R1aS1zdmc+XG48c3BhbiBjbGFzcz1cInQtdGV4dFwiPnt7IGNvbXB1dGVkVGV4dCB9fTwvc3Bhbj5cbiJdfQ==
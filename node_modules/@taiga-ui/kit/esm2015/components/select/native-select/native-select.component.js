import { ChangeDetectionStrategy, Component, Input, TemplateRef } from '@angular/core';
import { tuiAsDataList } from '@taiga-ui/core';
import { AbstractTuiNativeSelect } from '@taiga-ui/kit/abstract';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/kit/components/data-list-wrapper";
import * as i2 from "@taiga-ui/core";
import * as i3 from "@angular/common";
import * as i4 from "@taiga-ui/kit/pipes";
export class TuiNativeSelectComponent extends AbstractTuiNativeSelect {
    constructor() {
        super(...arguments);
        this.items = [];
    }
    get stringify() {
        return this.host.stringify;
    }
    selected(option) {
        return this.control.value === option;
    }
    onValueChange(index) {
        var _a;
        this.host.onValueChange(((_a = this.items) === null || _a === void 0 ? void 0 : _a[index]) || null);
    }
}
TuiNativeSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiNativeSelectComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
TuiNativeSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiNativeSelectComponent, selector: "select[tuiSelect]:not([labels]):not([multiple])", inputs: { items: "items" }, host: { listeners: { "change": "onValueChange($event.target.options.selectedIndex)" }, properties: { "attr.aria-invalid": "host.invalid", "disabled": "host.disabled || control.readOnly", "tabIndex": "host.focusable ? 0 : -1", "value": "host.value" } }, providers: [
        tuiAsDataList(TuiNativeSelectComponent),
        {
            provide: TemplateRef,
            deps: [TuiNativeSelectComponent],
            useFactory: ({ datalist }) => datalist,
        },
        {
            provide: AbstractTuiNativeSelect,
            useExisting: TuiNativeSelectComponent,
        },
    ], usesInheritance: true, ngImport: i0, template: "<tui-data-list-wrapper\n    *tuiDataList\n    [disabledItemHandler]=\"disabledItemHandler || itemsHandlers.disabledItemHandler\"\n    [itemContent]=\"stringify | tuiStringifyContent\"\n    [items]=\"items\"\n></tui-data-list-wrapper>\n<option\n    *ngFor=\"let option of items; let index = index\"\n    [disabled]=\"disabledItemHandler ? disabledItemHandler(option) : itemsHandlers.disabledItemHandler(option)\"\n    [selected]=\"selected(option)\"\n    [value]=\"stringify(option)\"\n>\n    {{ stringify(option) }}\n</option>\n", styles: [":host{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0}\n"], components: [{ type: i1.TuiDataListWrapperComponent, selector: "tui-data-list-wrapper:not([labels])", inputs: ["items"] }], directives: [{ type: i2.TuiDataListDirective, selector: "ng-template[tuiDataList]" }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "tuiStringifyContent": i4.TuiStringifyContentPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiNativeSelectComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'select[tuiSelect]:not([labels]):not([multiple])',
                    templateUrl: './native-select.template.html',
                    styleUrls: ['./native-select.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsDataList(TuiNativeSelectComponent),
                        {
                            provide: TemplateRef,
                            deps: [TuiNativeSelectComponent],
                            useFactory: ({ datalist }) => datalist,
                        },
                        {
                            provide: AbstractTuiNativeSelect,
                            useExisting: TuiNativeSelectComponent,
                        },
                    ],
                    host: {
                        '[attr.aria-invalid]': 'host.invalid',
                        '[disabled]': 'host.disabled || control.readOnly',
                        '[tabIndex]': 'host.focusable ? 0 : -1',
                        '[value]': 'host.value',
                        '(change)': 'onValueChange($event.target.options.selectedIndex)',
                    },
                }]
        }], propDecorators: { items: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLXNlbGVjdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9zZWxlY3QvbmF0aXZlLXNlbGVjdC9uYXRpdmUtc2VsZWN0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC9jb21wb25lbnRzL3NlbGVjdC9uYXRpdmUtc2VsZWN0L25hdGl2ZS1zZWxlY3QudGVtcGxhdGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckYsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBQyx1QkFBdUIsRUFBQyxNQUFNLHdCQUF3QixDQUFDOzs7Ozs7QUE4Qi9ELE1BQU0sT0FBTyx3QkFBNEIsU0FBUSx1QkFHaEQ7SUE1QkQ7O1FBOEJJLFVBQUssR0FBd0IsRUFBRSxDQUFDO0tBYW5DO0lBWEcsSUFBSSxTQUFTO1FBQ1QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMvQixDQUFDO0lBRUQsUUFBUSxDQUFDLE1BQVM7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxLQUFLLE1BQU0sQ0FBQztJQUN6QyxDQUFDO0lBRUQsYUFBYSxDQUFDLEtBQWE7O1FBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUEsTUFBQSxJQUFJLENBQUMsS0FBSywwQ0FBRyxLQUFLLENBQUMsS0FBSSxJQUFJLENBQUMsQ0FBQztJQUN6RCxDQUFDOztzSEFqQlEsd0JBQXdCOzBHQUF4Qix3QkFBd0IsbVdBcEJ0QjtRQUNQLGFBQWEsQ0FBQyx3QkFBd0IsQ0FBQztRQUN2QztZQUNJLE9BQU8sRUFBRSxXQUFXO1lBQ3BCLElBQUksRUFBRSxDQUFDLHdCQUF3QixDQUFDO1lBQ2hDLFVBQVUsRUFBRSxDQUFDLEVBQUMsUUFBUSxFQUFvQyxFQUFFLEVBQUUsQ0FBQyxRQUFRO1NBQzFFO1FBQ0Q7WUFDSSxPQUFPLEVBQUUsdUJBQXVCO1lBQ2hDLFdBQVcsRUFBRSx3QkFBd0I7U0FDeEM7S0FDSixpREN2Qkwsa2hCQWNBOzRGRGtCYSx3QkFBd0I7a0JBekJwQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxpREFBaUQ7b0JBQzNELFdBQVcsRUFBRSwrQkFBK0I7b0JBQzVDLFNBQVMsRUFBRSxDQUFDLDRCQUE0QixDQUFDO29CQUN6QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsU0FBUyxFQUFFO3dCQUNQLGFBQWEsMEJBQTBCO3dCQUN2Qzs0QkFDSSxPQUFPLEVBQUUsV0FBVzs0QkFDcEIsSUFBSSxFQUFFLDBCQUEwQjs0QkFDaEMsVUFBVSxFQUFFLENBQUMsRUFBQyxRQUFRLEVBQW9DLEVBQUUsRUFBRSxDQUFDLFFBQVE7eUJBQzFFO3dCQUNEOzRCQUNJLE9BQU8sRUFBRSx1QkFBdUI7NEJBQ2hDLFdBQVcsMEJBQTBCO3lCQUN4QztxQkFDSjtvQkFDRCxJQUFJLEVBQUU7d0JBQ0YscUJBQXFCLEVBQUUsY0FBYzt3QkFDckMsWUFBWSxFQUFFLG1DQUFtQzt3QkFDakQsWUFBWSxFQUFFLHlCQUF5Qjt3QkFDdkMsU0FBUyxFQUFFLFlBQVk7d0JBQ3ZCLFVBQVUsRUFBRSxvREFBb0Q7cUJBQ25FO2lCQUNKOzhCQU1HLEtBQUs7c0JBREosS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsIFRlbXBsYXRlUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpQXNEYXRhTGlzdH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUnO1xuaW1wb3J0IHtBYnN0cmFjdFR1aU5hdGl2ZVNlbGVjdH0gZnJvbSAnQHRhaWdhLXVpL2tpdC9hYnN0cmFjdCc7XG5pbXBvcnQge1R1aUl0ZW1zSGFuZGxlcnN9IGZyb20gJ0B0YWlnYS11aS9raXQvdG9rZW5zJztcblxuaW1wb3J0IHR5cGUge1R1aVNlbGVjdERpcmVjdGl2ZX0gZnJvbSAnLi4vc2VsZWN0LmRpcmVjdGl2ZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnc2VsZWN0W3R1aVNlbGVjdF06bm90KFtsYWJlbHNdKTpub3QoW211bHRpcGxlXSknLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9uYXRpdmUtc2VsZWN0LnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL25hdGl2ZS1zZWxlY3Quc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB0dWlBc0RhdGFMaXN0KFR1aU5hdGl2ZVNlbGVjdENvbXBvbmVudCksXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IFRlbXBsYXRlUmVmLFxuICAgICAgICAgICAgZGVwczogW1R1aU5hdGl2ZVNlbGVjdENvbXBvbmVudF0sXG4gICAgICAgICAgICB1c2VGYWN0b3J5OiAoe2RhdGFsaXN0fTogVHVpTmF0aXZlU2VsZWN0Q29tcG9uZW50PHVua25vd24+KSA9PiBkYXRhbGlzdCxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogQWJzdHJhY3RUdWlOYXRpdmVTZWxlY3QsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogVHVpTmF0aXZlU2VsZWN0Q29tcG9uZW50LFxuICAgICAgICB9LFxuICAgIF0sXG4gICAgaG9zdDoge1xuICAgICAgICAnW2F0dHIuYXJpYS1pbnZhbGlkXSc6ICdob3N0LmludmFsaWQnLFxuICAgICAgICAnW2Rpc2FibGVkXSc6ICdob3N0LmRpc2FibGVkIHx8IGNvbnRyb2wucmVhZE9ubHknLFxuICAgICAgICAnW3RhYkluZGV4XSc6ICdob3N0LmZvY3VzYWJsZSA/IDAgOiAtMScsXG4gICAgICAgICdbdmFsdWVdJzogJ2hvc3QudmFsdWUnLFxuICAgICAgICAnKGNoYW5nZSknOiAnb25WYWx1ZUNoYW5nZSgkZXZlbnQudGFyZ2V0Lm9wdGlvbnMuc2VsZWN0ZWRJbmRleCknLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aU5hdGl2ZVNlbGVjdENvbXBvbmVudDxUPiBleHRlbmRzIEFic3RyYWN0VHVpTmF0aXZlU2VsZWN0PFxuICAgIFR1aVNlbGVjdERpcmVjdGl2ZSxcbiAgICBUXG4+IHtcbiAgICBASW5wdXQoKVxuICAgIGl0ZW1zOiByZWFkb25seSBUW10gfCBudWxsID0gW107XG5cbiAgICBnZXQgc3RyaW5naWZ5KCk6IFR1aUl0ZW1zSGFuZGxlcnM8VD5bJ3N0cmluZ2lmeSddIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaG9zdC5zdHJpbmdpZnk7XG4gICAgfVxuXG4gICAgc2VsZWN0ZWQob3B0aW9uOiBUKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRyb2wudmFsdWUgPT09IG9wdGlvbjtcbiAgICB9XG5cbiAgICBvblZhbHVlQ2hhbmdlKGluZGV4OiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5ob3N0Lm9uVmFsdWVDaGFuZ2UodGhpcy5pdGVtcz8uW2luZGV4XSB8fCBudWxsKTtcbiAgICB9XG59XG4iLCI8dHVpLWRhdGEtbGlzdC13cmFwcGVyXG4gICAgKnR1aURhdGFMaXN0XG4gICAgW2Rpc2FibGVkSXRlbUhhbmRsZXJdPVwiZGlzYWJsZWRJdGVtSGFuZGxlciB8fCBpdGVtc0hhbmRsZXJzLmRpc2FibGVkSXRlbUhhbmRsZXJcIlxuICAgIFtpdGVtQ29udGVudF09XCJzdHJpbmdpZnkgfCB0dWlTdHJpbmdpZnlDb250ZW50XCJcbiAgICBbaXRlbXNdPVwiaXRlbXNcIlxuPjwvdHVpLWRhdGEtbGlzdC13cmFwcGVyPlxuPG9wdGlvblxuICAgICpuZ0Zvcj1cImxldCBvcHRpb24gb2YgaXRlbXM7IGxldCBpbmRleCA9IGluZGV4XCJcbiAgICBbZGlzYWJsZWRdPVwiZGlzYWJsZWRJdGVtSGFuZGxlciA/IGRpc2FibGVkSXRlbUhhbmRsZXIob3B0aW9uKSA6IGl0ZW1zSGFuZGxlcnMuZGlzYWJsZWRJdGVtSGFuZGxlcihvcHRpb24pXCJcbiAgICBbc2VsZWN0ZWRdPVwic2VsZWN0ZWQob3B0aW9uKVwiXG4gICAgW3ZhbHVlXT1cInN0cmluZ2lmeShvcHRpb24pXCJcbj5cbiAgICB7eyBzdHJpbmdpZnkob3B0aW9uKSB9fVxuPC9vcHRpb24+XG4iXX0=
import { ChangeDetectionStrategy, Component, HostListener, Inject } from '@angular/core';
import { TUI_ANIMATION_OPTIONS, TUI_CLOSE_WORD, TUI_COMMON_ICONS, tuiFadeIn, tuiSlideInTop, } from '@taiga-ui/core';
import { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@tinkoff/ng-polymorpheus";
import * as i3 from "@angular/common";
import * as i4 from "rxjs";
export class TuiPdfViewerComponent {
    constructor(animation, closeWord$, icons, context) {
        this.animation = animation;
        this.closeWord$ = closeWord$;
        this.icons = icons;
        this.context = context;
    }
    onKeyDownEsc() {
        this.context.$implicit.complete();
    }
}
TuiPdfViewerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPdfViewerComponent, deps: [{ token: TUI_ANIMATION_OPTIONS }, { token: TUI_CLOSE_WORD }, { token: TUI_COMMON_ICONS }, { token: POLYMORPHEUS_CONTEXT }], target: i0.ɵɵFactoryTarget.Component });
TuiPdfViewerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiPdfViewerComponent, selector: "tui-pdf-viewer", host: { listeners: { "document:keydown.esc": "onKeyDownEsc()" }, properties: { "@tuiFadeIn": "animation", "@tuiSlideInTop": "animation" } }, ngImport: i0, template: "<header class=\"t-header\">\n    <h2\n        automation-id=\"tui-pdf-viewer__label\"\n        class=\"t-title\"\n    >\n        {{ context.label }}\n    </h2>\n    <div class=\"t-actions\">\n        <!-- TODO: Polymorpheus fix type -->\n        <ng-container *polymorpheusOutlet=\"$any(context.actions) as text; context: context\">\n            {{ text }}\n        </ng-container>\n    </div>\n    <button\n        appearance=\"\"\n        shape=\"rounded\"\n        size=\"s\"\n        tuiIconButton\n        type=\"button\"\n        class=\"t-close\"\n        [icon]=\"icons.close\"\n        [title]=\"closeWord$ | async\"\n        (click)=\"context.$implicit.complete()\"\n    ></button>\n</header>\n<section class=\"t-content\">\n    <!-- TODO: Polymorpheus fix type -->\n    <iframe\n        *polymorpheusOutlet=\"$any(context.content) as content; context: context\"\n        title=\"pdf\"\n        class=\"t-iframe\"\n        [src]=\"content\"\n    ></iframe>\n</section>\n", styles: [":host{display:block;width:100%;height:100%;box-sizing:border-box;color:var(--tui-text-01-night);background:#333639}.t-header{display:flex;align-items:center;height:4rem;padding:0 1rem 0 1.5625rem;box-shadow:inset 0 -1px #535659}.t-title{margin:0;font:var(--tui-font-text-m);white-space:nowrap;text-overflow:ellipsis;padding-right:.3125rem;overflow:hidden}.t-actions{display:flex;margin-left:auto}.t-close{transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;margin-left:.75rem;color:var(--tui-text-01-night);background:rgba(255,255,255,.32)}.t-close:hover{background:rgba(255,255,255,.4)}.t-content{height:calc(100% - 4rem);overflow:hidden}.t-iframe{width:100%;height:100%}\n"], components: [{ type: i1.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i2.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i3.AsyncPipe }, animations: [tuiSlideInTop, tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPdfViewerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-pdf-viewer',
                    templateUrl: './pdf-viewer.template.html',
                    styleUrls: ['./pdf-viewer.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    animations: [tuiSlideInTop, tuiFadeIn],
                    host: {
                        '[@tuiFadeIn]': 'animation',
                        '[@tuiSlideInTop]': 'animation',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ANIMATION_OPTIONS]
                }] }, { type: i4.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_CLOSE_WORD]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_COMMON_ICONS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [POLYMORPHEUS_CONTEXT]
                }] }]; }, propDecorators: { onKeyDownEsc: [{
                type: HostListener,
                args: ['document:keydown.esc']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmLXZpZXdlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9wZGYtdmlld2VyL3BkZi12aWV3ZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvcGRmLXZpZXdlci9wZGYtdmlld2VyLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRXZGLE9BQU8sRUFDSCxxQkFBcUIsRUFDckIsY0FBYyxFQUNkLGdCQUFnQixFQUVoQixTQUFTLEVBQ1QsYUFBYSxHQUNoQixNQUFNLGdCQUFnQixDQUFDO0FBQ3hCLE9BQU8sRUFBQyxvQkFBb0IsRUFBQyxNQUFNLDBCQUEwQixDQUFDOzs7Ozs7QUFnQjlELE1BQU0sT0FBTyxxQkFBcUI7SUFDOUIsWUFDNEMsU0FBMkIsRUFDbEMsVUFBOEIsRUFDNUIsS0FBcUIsRUFFL0MsT0FBNkM7UUFKZCxjQUFTLEdBQVQsU0FBUyxDQUFrQjtRQUNsQyxlQUFVLEdBQVYsVUFBVSxDQUFvQjtRQUM1QixVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQUUvQyxZQUFPLEdBQVAsT0FBTyxDQUFzQztJQUN2RCxDQUFDO0lBR0osWUFBWTtRQUNSLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3RDLENBQUM7O21IQVpRLHFCQUFxQixrQkFFbEIscUJBQXFCLGFBQ3JCLGNBQWMsYUFDZCxnQkFBZ0IsYUFDaEIsb0JBQW9CO3VHQUx2QixxQkFBcUIsbU1DM0JsQyxzOUJBa0NBLG1wQ0RiZ0IsQ0FBQyxhQUFhLEVBQUUsU0FBUyxDQUFDOzRGQU03QixxQkFBcUI7a0JBWGpDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsV0FBVyxFQUFFLDRCQUE0QjtvQkFDekMsU0FBUyxFQUFFLENBQUMseUJBQXlCLENBQUM7b0JBQ3RDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxVQUFVLEVBQUUsQ0FBQyxhQUFhLEVBQUUsU0FBUyxDQUFDO29CQUN0QyxJQUFJLEVBQUU7d0JBQ0YsY0FBYyxFQUFFLFdBQVc7d0JBQzNCLGtCQUFrQixFQUFFLFdBQVc7cUJBQ2xDO2lCQUNKOzswQkFHUSxNQUFNOzJCQUFDLHFCQUFxQjs7MEJBQzVCLE1BQU07MkJBQUMsY0FBYzs7MEJBQ3JCLE1BQU07MkJBQUMsZ0JBQWdCOzswQkFDdkIsTUFBTTsyQkFBQyxvQkFBb0I7NENBS2hDLFlBQVk7c0JBRFgsWUFBWTt1QkFBQyxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FuaW1hdGlvbk9wdGlvbnN9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBIb3N0TGlzdGVuZXIsIEluamVjdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1R1aURpYWxvZ30gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1xuICAgIFRVSV9BTklNQVRJT05fT1BUSU9OUyxcbiAgICBUVUlfQ0xPU0VfV09SRCxcbiAgICBUVUlfQ09NTU9OX0lDT05TLFxuICAgIFR1aUNvbW1vbkljb25zLFxuICAgIHR1aUZhZGVJbixcbiAgICB0dWlTbGlkZUluVG9wLFxufSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge1BPTFlNT1JQSEVVU19DT05URVhUfSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHtUdWlQZGZWaWV3ZXJPcHRpb25zfSBmcm9tICcuL3BkZi12aWV3ZXIub3B0aW9ucyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLXBkZi12aWV3ZXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9wZGYtdmlld2VyLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3BkZi12aWV3ZXIuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIGFuaW1hdGlvbnM6IFt0dWlTbGlkZUluVG9wLCB0dWlGYWRlSW5dLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tAdHVpRmFkZUluXSc6ICdhbmltYXRpb24nLFxuICAgICAgICAnW0B0dWlTbGlkZUluVG9wXSc6ICdhbmltYXRpb24nLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVBkZlZpZXdlckNvbXBvbmVudDxJLCBPPiB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVFVJX0FOSU1BVElPTl9PUFRJT05TKSByZWFkb25seSBhbmltYXRpb246IEFuaW1hdGlvbk9wdGlvbnMsXG4gICAgICAgIEBJbmplY3QoVFVJX0NMT1NFX1dPUkQpIHJlYWRvbmx5IGNsb3NlV29yZCQ6IE9ic2VydmFibGU8c3RyaW5nPixcbiAgICAgICAgQEluamVjdChUVUlfQ09NTU9OX0lDT05TKSByZWFkb25seSBpY29uczogVHVpQ29tbW9uSWNvbnMsXG4gICAgICAgIEBJbmplY3QoUE9MWU1PUlBIRVVTX0NPTlRFWFQpXG4gICAgICAgIHJlYWRvbmx5IGNvbnRleHQ6IFR1aURpYWxvZzxUdWlQZGZWaWV3ZXJPcHRpb25zPEk+LCBPPixcbiAgICApIHt9XG5cbiAgICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDprZXlkb3duLmVzYycpXG4gICAgb25LZXlEb3duRXNjKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmNvbnRleHQuJGltcGxpY2l0LmNvbXBsZXRlKCk7XG4gICAgfVxufVxuIiwiPGhlYWRlciBjbGFzcz1cInQtaGVhZGVyXCI+XG4gICAgPGgyXG4gICAgICAgIGF1dG9tYXRpb24taWQ9XCJ0dWktcGRmLXZpZXdlcl9fbGFiZWxcIlxuICAgICAgICBjbGFzcz1cInQtdGl0bGVcIlxuICAgID5cbiAgICAgICAge3sgY29udGV4dC5sYWJlbCB9fVxuICAgIDwvaDI+XG4gICAgPGRpdiBjbGFzcz1cInQtYWN0aW9uc1wiPlxuICAgICAgICA8IS0tIFRPRE86IFBvbHltb3JwaGV1cyBmaXggdHlwZSAtLT5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqcG9seW1vcnBoZXVzT3V0bGV0PVwiJGFueShjb250ZXh0LmFjdGlvbnMpIGFzIHRleHQ7IGNvbnRleHQ6IGNvbnRleHRcIj5cbiAgICAgICAgICAgIHt7IHRleHQgfX1cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9kaXY+XG4gICAgPGJ1dHRvblxuICAgICAgICBhcHBlYXJhbmNlPVwiXCJcbiAgICAgICAgc2hhcGU9XCJyb3VuZGVkXCJcbiAgICAgICAgc2l6ZT1cInNcIlxuICAgICAgICB0dWlJY29uQnV0dG9uXG4gICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICBjbGFzcz1cInQtY2xvc2VcIlxuICAgICAgICBbaWNvbl09XCJpY29ucy5jbG9zZVwiXG4gICAgICAgIFt0aXRsZV09XCJjbG9zZVdvcmQkIHwgYXN5bmNcIlxuICAgICAgICAoY2xpY2spPVwiY29udGV4dC4kaW1wbGljaXQuY29tcGxldGUoKVwiXG4gICAgPjwvYnV0dG9uPlxuPC9oZWFkZXI+XG48c2VjdGlvbiBjbGFzcz1cInQtY29udGVudFwiPlxuICAgIDwhLS0gVE9ETzogUG9seW1vcnBoZXVzIGZpeCB0eXBlIC0tPlxuICAgIDxpZnJhbWVcbiAgICAgICAgKnBvbHltb3JwaGV1c091dGxldD1cIiRhbnkoY29udGV4dC5jb250ZW50KSBhcyBjb250ZW50OyBjb250ZXh0OiBjb250ZXh0XCJcbiAgICAgICAgdGl0bGU9XCJwZGZcIlxuICAgICAgICBjbGFzcz1cInQtaWZyYW1lXCJcbiAgICAgICAgW3NyY109XCJjb250ZW50XCJcbiAgICA+PC9pZnJhbWU+XG48L3NlY3Rpb24+XG4iXX0=
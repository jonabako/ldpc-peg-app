import { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, Output, } from '@angular/core';
import { tuiIsObserved, tuiIsString } from '@taiga-ui/cdk';
import { TUI_CLOSE_WORD, TUI_COMMON_ICONS } from '@taiga-ui/core';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core";
import * as i2 from "@angular/common";
import * as i3 from "rxjs";
export class TuiPushComponent {
    constructor(closeWord$, icons) {
        this.closeWord$ = closeWord$;
        this.icons = icons;
        this.heading = '';
        this.type = '';
        this.lines = 2;
        this.timestamp = '';
        this.close = new EventEmitter();
        this.isString = tuiIsString;
    }
    get closeable() {
        return tuiIsObserved(this.close);
    }
}
TuiPushComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPushComponent, deps: [{ token: TUI_CLOSE_WORD }, { token: TUI_COMMON_ICONS }], target: i0.ɵɵFactoryTarget.Component });
TuiPushComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiPushComponent, selector: "tui-push", inputs: { heading: "heading", type: "type", lines: "lines", timestamp: "timestamp" }, outputs: { close: "close" }, host: { properties: { "style.--t-lines": "lines" } }, ngImport: i0, template: "<div class=\"t-image\">\n    <ng-content select=\"img\"></ng-content>\n</div>\n<button\n    *ngIf=\"closeable\"\n    appearance=\"\"\n    shape=\"rounded\"\n    size=\"xs\"\n    tuiIconButton\n    type=\"button\"\n    class=\"t-close\"\n    [icon]=\"icons.close\"\n    [title]=\"closeWord$ | async\"\n    (click)=\"close.emit()\"\n></button>\n<div class=\"t-top\">\n    <span class=\"t-icon\">\n        <ng-content select=\"tui-svg\"></ng-content>\n    </span>\n    {{ type }}\n    <span\n        *ngIf=\"timestamp\"\n        class=\"t-time\"\n        [textContent]=\"isString(timestamp) ? timestamp : (timestamp | tuiFormatDate | async)\"\n    ></span>\n</div>\n<h3\n    automation-id=\"tui-push__heading\"\n    class=\"t-heading\"\n>\n    {{ heading }}\n</h3>\n<div class=\"t-content\">\n    <ng-content></ng-content>\n</div>\n<div class=\"t-actions\">\n    <span class=\"t-button\">\n        <ng-content select=\"[tuiButton]\"></ng-content>\n    </span>\n    <span class=\"t-link\">\n        <ng-content select=\"[tuiLink]\"></ng-content>\n    </span>\n</div>\n", styles: [":host{position:relative;display:block;width:22.5rem;max-width:100%;box-sizing:border-box;padding:1.25rem 1.25rem .25rem;overflow:hidden;font:var(--tui-font-text-m);border-radius:var(--tui-radius-xl);background:var(--tui-elevation-02);box-shadow:var(--tui-shadow)}.t-image{display:flex;flex-direction:column;max-height:10.625rem;overflow:hidden;margin:-1.25rem -1.25rem 1.25rem}.t-close{position:absolute;top:.75rem;right:.75rem;color:#0000008a;background:rgba(242,242,242,.32);-webkit-backdrop-filter:blur(1rem);backdrop-filter:blur(1rem)}.t-top{display:flex;align-items:center;font:var(--tui-font-text-s);color:var(--tui-text-02)}.t-icon{height:1.25rem;margin-right:.5rem;transform:scale(.833);transform-origin:top left;color:var(--tui-link)}.t-time:before{content:\"\\2022\";display:inline-block;width:1rem;text-align:center}.t-heading{line-height:1.25rem;font-weight:bold;margin:.75rem 0 .25rem}.t-heading,.t-content{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:var(--t-lines);word-break:break-word;overflow:hidden}.t-actions{display:flex;align-items:center;font:var(--tui-font-text-s)}.t-button:not(:empty){margin:.75rem .75rem .75rem 0}.t-link{margin:.75rem 0}.t-link:empty{margin:.5rem}\n"], components: [{ type: i1.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i2.AsyncPipe, "tuiFormatDate": i1.TuiFormatDatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiPushComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-push',
                    templateUrl: './push.template.html',
                    styleUrls: ['./push.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[style.--t-lines]': 'lines',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i3.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_CLOSE_WORD]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_COMMON_ICONS]
                }] }]; }, propDecorators: { heading: [{
                type: Input
            }], type: [{
                type: Input
            }], lines: [{
                type: Input
            }], timestamp: [{
                type: Input
            }], close: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVzaC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy9wdXNoL3B1c2guY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMva2l0L2NvbXBvbmVudHMvcHVzaC9wdXNoLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUNaLE1BQU0sRUFDTixLQUFLLEVBQ0wsTUFBTSxHQUNULE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBQyxhQUFhLEVBQUUsV0FBVyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBQyxjQUFjLEVBQUUsZ0JBQWdCLEVBQWlCLE1BQU0sZ0JBQWdCLENBQUM7Ozs7O0FBWWhGLE1BQU0sT0FBTyxnQkFBZ0I7SUFtQnpCLFlBQ3FDLFVBQThCLEVBQzVCLEtBQXFCO1FBRHZCLGVBQVUsR0FBVixVQUFVLENBQW9CO1FBQzVCLFVBQUssR0FBTCxLQUFLLENBQWdCO1FBbkI1RCxZQUFPLEdBQUcsRUFBRSxDQUFDO1FBR2IsU0FBSSxHQUFHLEVBQUUsQ0FBQztRQUdWLFVBQUssR0FBRyxDQUFDLENBQUM7UUFHVixjQUFTLEdBQW9CLEVBQUUsQ0FBQztRQUl2QixVQUFLLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUVqQyxhQUFRLEdBQUcsV0FBVyxDQUFDO0lBSzdCLENBQUM7SUFFSixJQUFJLFNBQVM7UUFDVCxPQUFPLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQzs7OEdBMUJRLGdCQUFnQixrQkFvQmIsY0FBYyxhQUNkLGdCQUFnQjtrR0FyQm5CLGdCQUFnQix5TkNyQjdCLDBpQ0EyQ0E7NEZEdEJhLGdCQUFnQjtrQkFUNUIsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsVUFBVTtvQkFDcEIsV0FBVyxFQUFFLHNCQUFzQjtvQkFDbkMsU0FBUyxFQUFFLENBQUMsbUJBQW1CLENBQUM7b0JBQ2hDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxJQUFJLEVBQUU7d0JBQ0YsbUJBQW1CLEVBQUUsT0FBTztxQkFDL0I7aUJBQ0o7OzBCQXFCUSxNQUFNOzJCQUFDLGNBQWM7OzBCQUNyQixNQUFNOzJCQUFDLGdCQUFnQjs0Q0FuQjVCLE9BQU87c0JBRE4sS0FBSztnQkFJTixJQUFJO3NCQURILEtBQUs7Z0JBSU4sS0FBSztzQkFESixLQUFLO2dCQUlOLFNBQVM7c0JBRFIsS0FBSztnQkFLRyxLQUFLO3NCQUZiLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBFdmVudEVtaXR0ZXIsXG4gICAgSW5qZWN0LFxuICAgIElucHV0LFxuICAgIE91dHB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge3R1aUlzT2JzZXJ2ZWQsIHR1aUlzU3RyaW5nfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VFVJX0NMT1NFX1dPUkQsIFRVSV9DT01NT05fSUNPTlMsIFR1aUNvbW1vbkljb25zfSBmcm9tICdAdGFpZ2EtdWkvY29yZSc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1wdXNoJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vcHVzaC50ZW1wbGF0ZS5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9wdXNoLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBob3N0OiB7XG4gICAgICAgICdbc3R5bGUuLS10LWxpbmVzXSc6ICdsaW5lcycsXG4gICAgfSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpUHVzaENvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBoZWFkaW5nID0gJyc7XG5cbiAgICBASW5wdXQoKVxuICAgIHR5cGUgPSAnJztcblxuICAgIEBJbnB1dCgpXG4gICAgbGluZXMgPSAyO1xuXG4gICAgQElucHV0KClcbiAgICB0aW1lc3RhbXA6IG51bWJlciB8IHN0cmluZyA9ICcnO1xuXG4gICAgQE91dHB1dCgpXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhbmd1bGFyLWVzbGludC9uby1vdXRwdXQtbmF0aXZlXG4gICAgcmVhZG9ubHkgY2xvc2UgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgICByZWFkb25seSBpc1N0cmluZyA9IHR1aUlzU3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIEBJbmplY3QoVFVJX0NMT1NFX1dPUkQpIHJlYWRvbmx5IGNsb3NlV29yZCQ6IE9ic2VydmFibGU8c3RyaW5nPixcbiAgICAgICAgQEluamVjdChUVUlfQ09NTU9OX0lDT05TKSByZWFkb25seSBpY29uczogVHVpQ29tbW9uSWNvbnMsXG4gICAgKSB7fVxuXG4gICAgZ2V0IGNsb3NlYWJsZSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHR1aUlzT2JzZXJ2ZWQodGhpcy5jbG9zZSk7XG4gICAgfVxufVxuIiwiPGRpdiBjbGFzcz1cInQtaW1hZ2VcIj5cbiAgICA8bmctY29udGVudCBzZWxlY3Q9XCJpbWdcIj48L25nLWNvbnRlbnQ+XG48L2Rpdj5cbjxidXR0b25cbiAgICAqbmdJZj1cImNsb3NlYWJsZVwiXG4gICAgYXBwZWFyYW5jZT1cIlwiXG4gICAgc2hhcGU9XCJyb3VuZGVkXCJcbiAgICBzaXplPVwieHNcIlxuICAgIHR1aUljb25CdXR0b25cbiAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICBjbGFzcz1cInQtY2xvc2VcIlxuICAgIFtpY29uXT1cImljb25zLmNsb3NlXCJcbiAgICBbdGl0bGVdPVwiY2xvc2VXb3JkJCB8IGFzeW5jXCJcbiAgICAoY2xpY2spPVwiY2xvc2UuZW1pdCgpXCJcbj48L2J1dHRvbj5cbjxkaXYgY2xhc3M9XCJ0LXRvcFwiPlxuICAgIDxzcGFuIGNsYXNzPVwidC1pY29uXCI+XG4gICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cInR1aS1zdmdcIj48L25nLWNvbnRlbnQ+XG4gICAgPC9zcGFuPlxuICAgIHt7IHR5cGUgfX1cbiAgICA8c3BhblxuICAgICAgICAqbmdJZj1cInRpbWVzdGFtcFwiXG4gICAgICAgIGNsYXNzPVwidC10aW1lXCJcbiAgICAgICAgW3RleHRDb250ZW50XT1cImlzU3RyaW5nKHRpbWVzdGFtcCkgPyB0aW1lc3RhbXAgOiAodGltZXN0YW1wIHwgdHVpRm9ybWF0RGF0ZSB8IGFzeW5jKVwiXG4gICAgPjwvc3Bhbj5cbjwvZGl2PlxuPGgzXG4gICAgYXV0b21hdGlvbi1pZD1cInR1aS1wdXNoX19oZWFkaW5nXCJcbiAgICBjbGFzcz1cInQtaGVhZGluZ1wiXG4+XG4gICAge3sgaGVhZGluZyB9fVxuPC9oMz5cbjxkaXYgY2xhc3M9XCJ0LWNvbnRlbnRcIj5cbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG48L2Rpdj5cbjxkaXYgY2xhc3M9XCJ0LWFjdGlvbnNcIj5cbiAgICA8c3BhbiBjbGFzcz1cInQtYnV0dG9uXCI+XG4gICAgICAgIDxuZy1jb250ZW50IHNlbGVjdD1cIlt0dWlCdXR0b25dXCI+PC9uZy1jb250ZW50PlxuICAgIDwvc3Bhbj5cbiAgICA8c3BhbiBjbGFzcz1cInQtbGlua1wiPlxuICAgICAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbdHVpTGlua11cIj48L25nLWNvbnRlbnQ+XG4gICAgPC9zcGFuPlxuPC9kaXY+XG4iXX0=
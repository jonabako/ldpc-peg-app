import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, Inject, Input, Optional, Self, ViewChildren, } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, EMPTY_QUERY, TUI_DEFAULT_IDENTITY_MATCHER, tuiAsControl, tuiAsFocusableItemAccessor, tuiIsNativeFocusedIn, } from '@taiga-ui/cdk';
import { TuiRadioLabeledComponent } from '@taiga-ui/kit/components/radio-labeled';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/kit/components/radio-group";
import * as i2 from "@taiga-ui/kit/components/radio-labeled";
import * as i3 from "@angular/common";
import * as i4 from "@angular/forms";
import * as i5 from "@tinkoff/ng-polymorpheus";
export class TuiRadioListComponent extends AbstractTuiNullableControl {
    constructor(control, cdr, el) {
        super(control, cdr);
        this.el = el;
        this.radioButtons = EMPTY_QUERY;
        this.items = [];
        this.size = 'm';
        this.identityMatcher = TUI_DEFAULT_IDENTITY_MATCHER;
        this.orientation = 'vertical';
        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;
        // @bad TODO: Remove & { index: number }
        this.itemContent = ({ $implicit, }) => String($implicit);
    }
    get nativeFocusableElement() {
        var _a;
        const focusableRadioButton = this.radioButtons.find(radioButton => radioButton.nativeFocusableElement !== null);
        return (_a = focusableRadioButton === null || focusableRadioButton === void 0 ? void 0 : focusableRadioButton.nativeFocusableElement) !== null && _a !== void 0 ? _a : null;
    }
    get focused() {
        return tuiIsNativeFocusedIn(this.el.nativeElement);
    }
    computeId(index) {
        return `${this.id}-${index}`;
    }
    itemIsDisabled(item) {
        return this.disabledItemHandler(item);
    }
    /** @deprecated use 'value' setter */
    onModelChange(value) {
        this.value = value;
    }
    itemIsActive(item) {
        return this.value === null
            ? item === null
            : this.identityMatcher(this.value, item);
    }
}
TuiRadioListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRadioListComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Component });
TuiRadioListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiRadioListComponent, selector: "tui-radio-list", inputs: { items: "items", size: "size", identityMatcher: "identityMatcher", orientation: "orientation", disabledItemHandler: "disabledItemHandler", itemContent: "itemContent" }, host: { properties: { "attr.data-size": "this.size", "attr.data-orientation": "this.orientation" } }, providers: [
        tuiAsFocusableItemAccessor(TuiRadioListComponent),
        tuiAsControl(TuiRadioListComponent),
    ], viewQueries: [{ propertyName: "radioButtons", predicate: TuiRadioLabeledComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<tui-radio-group class=\"t-group\">\n    <tui-radio-labeled\n        *ngFor=\"let item of items; index as index\"\n        class=\"t-item\"\n        [disabled]=\"disabled\"\n        [identityMatcher]=\"identityMatcher\"\n        [item]=\"item\"\n        [nativeId]=\"computeId(index)\"\n        [pseudoDisabled]=\"itemIsDisabled(item)\"\n        [pseudoInvalid]=\"computedInvalid\"\n        [readOnly]=\"readOnly\"\n        [size]=\"size\"\n        [(ngModel)]=\"value\"\n    >\n        <ng-container\n            *polymorpheusOutlet=\"\n                itemContent as text;\n                context: {$implicit: item, index: index, active: itemIsActive(item)}\n            \"\n        >\n            {{ text }}\n        </ng-container>\n    </tui-radio-labeled>\n</tui-radio-group>\n", styles: [":host{display:block}:host._readonly{pointer-events:none}.t-group{align-items:inherit}:host[data-orientation=horizontal] .t-group{display:flex;justify-content:inherit}.t-item{align-items:inherit}:host[data-orientation=horizontal] .t-item:nth-child(n + 2){margin-left:1.5rem}:host[data-orientation=vertical] .t-item:nth-child(n + 2){margin-top:.75rem}:host[data-size=l][data-orientation=horizontal] .t-item:nth-child(n + 2){margin-left:2.5rem}:host[data-size=l][data-orientation=vertical] .t-item:nth-child(n + 2){margin-top:1rem}\n"], components: [{ type: i1.TuiRadioGroupComponent, selector: "tui-radio-group", inputs: ["name"] }, { type: i2.TuiRadioLabeledComponent, selector: "tui-radio-labeled", inputs: ["item", "size", "identityMatcher", "pseudoDisabled"] }], directives: [{ type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i5.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRadioListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-radio-list',
                    templateUrl: './radio-list.template.html',
                    styleUrls: ['./radio-list.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsFocusableItemAccessor(TuiRadioListComponent),
                        tuiAsControl(TuiRadioListComponent),
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i4.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; }, propDecorators: { radioButtons: [{
                type: ViewChildren,
                args: [TuiRadioLabeledComponent]
            }], items: [{
                type: Input
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], identityMatcher: [{
                type: Input
            }], orientation: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-orientation']
            }], disabledItemHandler: [{
                type: Input
            }], itemContent: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,
import { __decorate } from 'tslib';
import * as i0 from '@angular/core';
import { ChangeDetectorRef, Component, ChangeDetectionStrategy, Optional, Self, Inject, ViewChild, Input, HostBinding, Directive, NgModule } from '@angular/core';
import * as i4 from '@angular/forms';
import { NgControl } from '@angular/forms';
import { maskitoNumberOptionsGenerator } from '@maskito/kit';
import { AbstractTuiNullableControl, ALWAYS_FALSE_HANDLER, tuiAsFocusableItemAccessor, tuiAsControl, tuiPure } from '@taiga-ui/cdk';
import * as i1 from '@taiga-ui/core';
import { TUI_TEXTFIELD_SIZE, TuiPrimitiveTextfieldComponent, AbstractTuiTextfieldHost, tuiAsTextfieldHost, TuiHostedDropdownModule, TuiPrimitiveTextfieldModule, TuiPrimitiveYearPickerModule, TuiScrollbarModule, TuiTextfieldControllerModule, TuiTextfieldComponent } from '@taiga-ui/core';
import { TUI_INPUT_DATE_OPTIONS } from '@taiga-ui/kit/tokens';
import * as i2 from '@maskito/angular';
import { MaskitoModule } from '@maskito/angular';
import * as i3 from '@taiga-ui/kit/pipes';
import { TuiToYearPipeModule } from '@taiga-ui/kit/pipes';

const UP_TO_4_DIGITS_REG = /^\d{0,4}$/;
class TuiInputYearComponent extends AbstractTuiNullableControl {
    constructor(control, cdr, options, textfieldSize) {
        super(control, cdr);
        this.options = options;
        this.textfieldSize = textfieldSize;
        this.min = this.options.min.year;
        this.max = this.options.max.year;
        this.disabledItemHandler = ALWAYS_FALSE_HANDLER;
        this.open = false;
        this.nativeValue = '';
        this.initialItem = new Date().getFullYear();
    }
    get size() {
        return this.textfieldSize.size;
    }
    get computedMin() {
        var _a;
        return (_a = this.min) !== null && _a !== void 0 ? _a : this.options.min.year;
    }
    get computedMax() {
        var _a;
        return (_a = this.max) !== null && _a !== void 0 ? _a : this.options.max.year;
    }
    get nativeFocusableElement() {
        var _a;
        return ((_a = this.textfield) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) || null;
    }
    get focused() {
        var _a;
        return !!((_a = this.textfield) === null || _a === void 0 ? void 0 : _a.focused);
    }
    get calendarIcon() {
        return this.options.icon;
    }
    getMaskOptions(min, max) {
        return Object.assign(Object.assign({}, maskitoNumberOptionsGenerator({
            min,
            max,
            thousandSeparator: '',
        })), { mask: UP_TO_4_DIGITS_REG });
    }
    onValueChange(value) {
        this.value = value ? Number(value) : null;
    }
    onYearClick({ year }) {
        this.value = year;
        this.updateNativeValue(year);
        this.onOpenChange(false);
    }
    onFocused(focused) {
        this.updateFocused(focused);
    }
    onOpenChange(open) {
        this.open = open;
    }
    toggle() {
        this.open = !this.open;
    }
    writeValue(value) {
        super.writeValue(value);
        this.updateNativeValue(value);
    }
    updateNativeValue(value) {
        this.nativeValue = (value === null || value === void 0 ? void 0 : value.toString()) || '';
    }
}
TuiInputYearComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputYearComponent, deps: [{ token: NgControl, optional: true, self: true }, { token: ChangeDetectorRef }, { token: TUI_INPUT_DATE_OPTIONS }, { token: TUI_TEXTFIELD_SIZE }], target: i0.ɵɵFactoryTarget.Component });
TuiInputYearComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputYearComponent, selector: "tui-input-year", inputs: { min: "min", max: "max", disabledItemHandler: "disabledItemHandler" }, host: { properties: { "attr.data-size": "this.size" } }, providers: [
        tuiAsFocusableItemAccessor(TuiInputYearComponent),
        tuiAsControl(TuiInputYearComponent),
    ], viewQueries: [{ propertyName: "textfield", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: "<tui-hosted-dropdown\n    class=\"t-hosted\"\n    [canOpen]=\"interactive\"\n    [content]=\"dropdown\"\n    [open]=\"open && interactive\"\n    (click)=\"toggle()\"\n    (openChange)=\"onOpenChange($event)\"\n>\n    <tui-primitive-textfield\n        class=\"t-textfield\"\n        [disabled]=\"computedDisabled\"\n        [invalid]=\"computedInvalid\"\n        [maskito]=\"getMaskOptions(computedMin, computedMax)\"\n        [nativeId]=\"nativeId\"\n        [pseudoFocus]=\"pseudoFocus\"\n        [pseudoHover]=\"pseudoHover\"\n        [readOnly]=\"readOnly\"\n        [tuiTextfieldIcon]=\"calendarIcon\"\n        [(value)]=\"nativeValue\"\n        (focusedChange)=\"onFocused($event)\"\n        (valueChange)=\"onValueChange($event)\"\n    >\n        <ng-content></ng-content>\n        <ng-content\n            ngProjectAs=\"input\"\n            select=\"input\"\n        ></ng-content>\n    </tui-primitive-textfield>\n\n    <ng-template #dropdown>\n        <div class=\"t-container\">\n            <tui-scrollbar class=\"t-scrollbar\">\n                <tui-primitive-year-picker\n                    [disabledItemHandler]=\"disabledItemHandler\"\n                    [initialItem]=\"value || initialItem | tuiToYear\"\n                    [max]=\"computedMax | tuiToYear\"\n                    [min]=\"computedMin | tuiToYear\"\n                    [value]=\"value === null ? null : (value | tuiToYear)\"\n                    (mousedown.prevent.silent)=\"(0)\"\n                    (yearClick)=\"onYearClick($event)\"\n                ></tui-primitive-year-picker>\n            </tui-scrollbar>\n        </div>\n    </ng-template>\n</tui-hosted-dropdown>\n", styles: [":host{display:block;border-radius:var(--tui-radius-m);text-align:left}.t-hosted{display:block;border-radius:inherit}.t-container{width:15.75rem;padding:1rem 1.125rem}.t-scrollbar{max-height:18.25rem;width:16.875rem}.t-textfield{border-radius:inherit;text-align:inherit}\n"], components: [{ type: i1.TuiHostedDropdownComponent, selector: "tui-hosted-dropdown", inputs: ["content", "sided", "canOpen", "open"], outputs: ["openChange", "focusedChange"] }, { type: i1.TuiPrimitiveTextfieldComponent, selector: "tui-primitive-textfield", inputs: ["editable", "filler", "iconCleaner", "readOnly", "invalid", "disabled", "prefix", "postfix", "value"], outputs: ["valueChange"] }, { type: i1.TuiScrollbarComponent, selector: "tui-scrollbar", inputs: ["hidden"] }, { type: i1.TuiPrimitiveYearPickerComponent, selector: "tui-primitive-year-picker", inputs: ["value", "initialItem", "min", "max", "disabledItemHandler"], outputs: ["yearClick"] }], directives: [{ type: i1.TuiPrimitiveTextfieldDirective, selector: "tui-primitive-textfield" }, { type: i2.MaskitoDirective, selector: "[maskito]", inputs: ["maskito", "maskitoElement"] }, { type: i1.TuiTextfieldIconDirective, selector: "[tuiTextfieldIcon]", inputs: ["tuiTextfieldIcon"] }], pipes: { "tuiToYear": i3.TuiToYearPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiPure
], TuiInputYearComponent.prototype, "getMaskOptions", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputYearComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-input-year',
                    templateUrl: './input-year.template.html',
                    styleUrls: ['./input-year.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiAsFocusableItemAccessor(TuiInputYearComponent),
                        tuiAsControl(TuiInputYearComponent),
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i4.NgControl, decorators: [{
                    type: Optional
                }, {
                    type: Self
                }, {
                    type: Inject,
                    args: [NgControl]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_INPUT_DATE_OPTIONS]
                }] }, { type: i1.TuiTextfieldSizeDirective, decorators: [{
                    type: Inject,
                    args: [TUI_TEXTFIELD_SIZE]
                }] }]; }, propDecorators: { textfield: [{
                type: ViewChild,
                args: [TuiPrimitiveTextfieldComponent]
            }], min: [{
                type: Input
            }], max: [{
                type: Input
            }], disabledItemHandler: [{
                type: Input
            }], size: [{
                type: HostBinding,
                args: ['attr.data-size']
            }], getMaskOptions: [] } });

class TuiInputYearDirective extends AbstractTuiTextfieldHost {
    onValueChange(value) {
        this.host.onValueChange(value);
        this.host.nativeValue = value;
    }
    get value() {
        return this.host.nativeValue;
    }
    process(input) {
        input.inputMode = 'numeric';
    }
}
TuiInputYearDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputYearDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TuiInputYearDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputYearDirective, selector: "tui-input-year", providers: [tuiAsTextfieldHost(TuiInputYearDirective)], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputYearDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'tui-input-year',
                    providers: [tuiAsTextfieldHost(TuiInputYearDirective)],
                }]
        }] });

class TuiInputYearModule {
}
TuiInputYearModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputYearModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiInputYearModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputYearModule, declarations: [TuiInputYearComponent, TuiInputYearDirective], imports: [MaskitoModule,
        TuiHostedDropdownModule,
        TuiPrimitiveTextfieldModule,
        TuiPrimitiveYearPickerModule,
        TuiScrollbarModule,
        TuiTextfieldControllerModule,
        TuiToYearPipeModule], exports: [TuiInputYearComponent, TuiInputYearDirective, TuiTextfieldComponent] });
TuiInputYearModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputYearModule, imports: [[
            MaskitoModule,
            TuiHostedDropdownModule,
            TuiPrimitiveTextfieldModule,
            TuiPrimitiveYearPickerModule,
            TuiScrollbarModule,
            TuiTextfieldControllerModule,
            TuiToYearPipeModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiInputYearModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        MaskitoModule,
                        TuiHostedDropdownModule,
                        TuiPrimitiveTextfieldModule,
                        TuiPrimitiveYearPickerModule,
                        TuiScrollbarModule,
                        TuiTextfieldControllerModule,
                        TuiToYearPipeModule,
                    ],
                    declarations: [TuiInputYearComponent, TuiInputYearDirective],
                    exports: [TuiInputYearComponent, TuiInputYearDirective, TuiTextfieldComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiInputYearComponent, TuiInputYearDirective, TuiInputYearModule };
//# sourceMappingURL=taiga-ui-kit-components-input-year.js.map

import * as i0 from '@angular/core';
import { Directive, Input, NgModule } from '@angular/core';
import { maskitoTransform, MASKITO_DEFAULT_OPTIONS } from '@maskito/core';
import { AbstractTuiValueTransformer } from '@taiga-ui/cdk';
import { identity } from 'rxjs';

class TuiUnmaskHandlerDirective extends AbstractTuiValueTransformer {
    constructor() {
        super(...arguments);
        this.tuiUnmaskHandler = identity;
        this.maskito = null;
    }
    fromControlValue(controlValue) {
        return maskitoTransform(String(controlValue !== null && controlValue !== void 0 ? controlValue : ''), this.maskito || MASKITO_DEFAULT_OPTIONS);
    }
    toControlValue(value) {
        return this.tuiUnmaskHandler(value);
    }
}
TuiUnmaskHandlerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiUnmaskHandlerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TuiUnmaskHandlerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiUnmaskHandlerDirective, selector: "[maskito][tuiUnmaskHandler]", inputs: { tuiUnmaskHandler: "tuiUnmaskHandler", maskito: "maskito" }, providers: [
        {
            provide: AbstractTuiValueTransformer,
            useExisting: TuiUnmaskHandlerDirective,
        },
    ], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiUnmaskHandlerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[maskito][tuiUnmaskHandler]',
                    providers: [
                        {
                            provide: AbstractTuiValueTransformer,
                            useExisting: TuiUnmaskHandlerDirective,
                        },
                    ],
                }]
        }], propDecorators: { tuiUnmaskHandler: [{
                type: Input
            }], maskito: [{
                type: Input
            }] } });

class TuiUnmaskHandlerModule {
}
TuiUnmaskHandlerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiUnmaskHandlerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiUnmaskHandlerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiUnmaskHandlerModule, declarations: [TuiUnmaskHandlerDirective], exports: [TuiUnmaskHandlerDirective] });
TuiUnmaskHandlerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiUnmaskHandlerModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiUnmaskHandlerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiUnmaskHandlerDirective],
                    exports: [TuiUnmaskHandlerDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiUnmaskHandlerDirective, TuiUnmaskHandlerModule };
//# sourceMappingURL=taiga-ui-kit-directives-unmask-handler.js.map

{"version":3,"file":"taiga-ui-kit-components-input-range.js","sources":["../../../projects/kit/components/input-range/input-range.component.ts","../../../projects/kit/components/input-range/input-range.template.html","../../../projects/kit/components/input-range/input-range.module.ts","../../../projects/kit/components/input-range/taiga-ui-kit-components-input-range.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Inject,\n    Input,\n    Optional,\n    QueryList,\n    Self,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {\n    AbstractTuiControl,\n    EMPTY_QUERY,\n    TUI_IS_MOBILE,\n    tuiAsControl,\n    tuiAsFocusableItemAccessor,\n    tuiClamp,\n    TuiContextWithImplicit,\n    TuiFocusableElementAccessor,\n    tuiIsNativeFocused,\n    tuiIsNativeFocusedIn,\n    TuiNativeFocusableElement,\n    tuiPure,\n    tuiRound,\n} from '@taiga-ui/cdk';\nimport {\n    TEXTFIELD_CONTROLLER_PROVIDER,\n    TUI_TEXTFIELD_WATCHED_CONTROLLER,\n    TuiDecimal,\n    tuiGetFractionPartPadded,\n    TuiTextfieldController,\n    TuiWithOptionalMinMax,\n} from '@taiga-ui/core';\nimport {TuiInputNumberComponent} from '@taiga-ui/kit/components/input-number';\nimport {TuiRangeComponent} from '@taiga-ui/kit/components/range';\nimport {TUI_FLOATING_PRECISION} from '@taiga-ui/kit/constants';\nimport {TuiKeySteps} from '@taiga-ui/kit/types';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\n@Component({\n    selector: 'tui-input-range',\n    templateUrl: './input-range.template.html',\n    styleUrls: ['./input-range.style.less'],\n    host: {\n        '[attr.data-size]': 'controller.size',\n        '[class._label-outside]': 'controller.labelOutside',\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiInputRangeComponent),\n        tuiAsControl(TuiInputRangeComponent),\n        TEXTFIELD_CONTROLLER_PROVIDER,\n    ],\n})\nexport class TuiInputRangeComponent\n    extends AbstractTuiControl<[number, number]>\n    implements TuiWithOptionalMinMax<number>, TuiFocusableElementAccessor\n{\n    @ViewChildren(TuiInputNumberComponent)\n    private readonly inputNumberRefs: QueryList<TuiInputNumberComponent> = EMPTY_QUERY;\n\n    @ViewChild(TuiRangeComponent)\n    private readonly rangeRef: TuiRangeComponent | null = null;\n\n    @Input()\n    min = 0;\n\n    @Input()\n    max = 100;\n\n    @Input()\n    quantum = 1;\n\n    @Input()\n    steps = 0;\n\n    @Input()\n    segments = 1;\n\n    @Input()\n    keySteps: TuiKeySteps | null = null;\n\n    @Input()\n    leftValueContent: PolymorpheusContent<TuiContextWithImplicit<number>>;\n\n    @Input()\n    rightValueContent: PolymorpheusContent<TuiContextWithImplicit<number>>;\n\n    @Input()\n    pluralize: Record<string, string> | null = null;\n\n    leftTextfieldValue = this.safeCurrentValue[0];\n    rightTextfieldValue = this.safeCurrentValue[1];\n    lastActiveSide: 'left' | 'right' = 'left';\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef) cdr: ChangeDetectorRef,\n        @Inject(TUI_IS_MOBILE)\n        private readonly isMobile: boolean,\n        @Inject(ElementRef) private readonly el: ElementRef,\n        @Inject(TUI_TEXTFIELD_WATCHED_CONTROLLER)\n        readonly controller: TuiTextfieldController,\n    ) {\n        super(control, cdr);\n    }\n\n    get leftFocusableElement(): HTMLInputElement | null {\n        return this.inputNumberRefs.first?.nativeFocusableElement || null;\n    }\n\n    get rightFocusableElement(): HTMLInputElement | null {\n        return this.inputNumberRefs.last?.nativeFocusableElement || null;\n    }\n\n    get nativeFocusableElement(): TuiNativeFocusableElement | null {\n        return this.disabled\n            ? null\n            : this.leftFocusableElement || this.rightFocusableElement;\n    }\n\n    get focused(): boolean {\n        return tuiIsNativeFocusedIn(this.el.nativeElement);\n    }\n\n    get appearance(): string {\n        return this.controller.appearance;\n    }\n\n    get showLeftValueContent(): boolean {\n        return Boolean(\n            this.leftValueContent &&\n                !tuiIsNativeFocused(this.leftFocusableElement) &&\n                !(this.rangeRef?.focused && this.lastActiveSide === 'left'),\n        );\n    }\n\n    get showRightValueContent(): boolean {\n        return Boolean(\n            this.rightValueContent &&\n                !tuiIsNativeFocused(this.rightFocusableElement) &&\n                !(this.rangeRef?.focused && this.lastActiveSide === 'right'),\n        );\n    }\n\n    get precision(): number {\n        return tuiGetFractionPartPadded(this.quantum).length;\n    }\n\n    get decimal(): TuiDecimal {\n        return this.precision ? 'not-zero' : 'never';\n    }\n\n    get computedSteps(): number {\n        return this.steps || (this.max - this.min) / this.quantum;\n    }\n\n    get step(): number {\n        return (this.max - this.min) / this.computedSteps;\n    }\n\n    @tuiPure\n    computeKeySteps(keySteps: TuiKeySteps | null, min: number, max: number): TuiKeySteps {\n        return (\n            keySteps || [\n                [0, min],\n                [100, max],\n            ]\n        );\n    }\n\n    onActiveZone(active: boolean): void {\n        this.updateFocused(active);\n    }\n\n    onTextInputFocused(focused: boolean): void {\n        if (!focused) {\n            this.updateTextfieldValues(this.value);\n        }\n    }\n\n    changeByStep(\n        event: Event | KeyboardEvent,\n        [leftCoefficient, rightCoefficient]: [number, number],\n    ): void {\n        if (this.readOnly) {\n            return;\n        }\n\n        event.preventDefault();\n\n        const newValue = this.valueGuard([\n            this.value[0] + leftCoefficient * this.step,\n            this.value[1] + rightCoefficient * this.step,\n        ]);\n\n        if (newValue[0] !== this.value[0] || newValue[1] !== this.value[1]) {\n            this.onExternalValueUpdate(newValue);\n        }\n    }\n\n    onInputLeft(value: number | null): void {\n        this.safelyUpdateValue([value ?? this.safeCurrentValue[0], this.value[1]]);\n    }\n\n    onInputRight(value: number | null): void {\n        this.safelyUpdateValue([this.value[0], value ?? this.safeCurrentValue[1]]);\n    }\n\n    onExternalValueUpdate(value: [number, number]): void {\n        this.safelyUpdateValue(value);\n        this.updateTextfieldValues(this.value);\n    }\n\n    focusToTextInput(): void {\n        const element =\n            this.lastActiveSide === 'left'\n                ? this.leftFocusableElement\n                : this.rightFocusableElement;\n\n        if (!this.isMobile && element) {\n            element.focus();\n        }\n    }\n\n    onActiveThumbChange(activeThumb: 'left' | 'right'): void {\n        this.lastActiveSide = activeThumb;\n    }\n\n    override writeValue(value: [number, number]): void {\n        super.writeValue(value);\n        this.updateTextfieldValues(this.value);\n    }\n\n    protected getFallbackValue(): [number, number] {\n        return [0, 0];\n    }\n\n    private safelyUpdateValue(value: [number, number]): void {\n        this.value = this.valueGuard(value);\n    }\n\n    private valueGuard([leftValue, rightValue]: [number, number]): [number, number] {\n        const leftCalibratedValue = this.calibrate(leftValue);\n        const rightCalibratedValue = this.calibrate(rightValue);\n\n        return [\n            Math.min(leftCalibratedValue, this.value[1]),\n            Math.max(rightCalibratedValue, this.value[0]),\n        ];\n    }\n\n    private calibrate(value: number): number {\n        const roundedValue = tuiRound(\n            Math.round(value / this.quantum) * this.quantum,\n            TUI_FLOATING_PRECISION,\n        );\n\n        return tuiClamp(roundedValue, this.min, this.max);\n    }\n\n    private updateTextfieldValues([leftValue, rightValue]: [number, number]): void {\n        this.leftTextfieldValue = leftValue;\n        this.rightTextfieldValue = rightValue;\n    }\n}\n","<div\n    tuiWrapper\n    class=\"t-wrapper\"\n    [appearance]=\"appearance\"\n    [disabled]=\"disabled\"\n    [focus]=\"computedFocused\"\n    [hover]=\"pseudoHover\"\n    [invalid]=\"computedInvalid\"\n    [readOnly]=\"readOnly\"\n    (tuiActiveZoneChange)=\"onActiveZone($event)\"\n>\n    <tui-input-number\n        automation-id=\"tui-input-range__left-input\"\n        tuiTextfieldAppearance=\"none\"\n        class=\"t-left\"\n        [decimal]=\"decimal\"\n        [disabled]=\"computedDisabled\"\n        [max]=\"value[1]\"\n        [min]=\"min\"\n        [precision]=\"precision\"\n        [readOnly]=\"readOnly\"\n        [tuiTextfieldPostfix]=\"pluralize && !showLeftValueContent ? (value[0] | i18nPlural: pluralize) : ''\"\n        [(ngModel)]=\"leftTextfieldValue\"\n        (focusedChange)=\"onTextInputFocused($event)\"\n        (keydown.arrowDown)=\"changeByStep($event, [-1, 0])\"\n        (keydown.arrowUp)=\"changeByStep($event, [1, 0])\"\n        (ngModelChange)=\"onInputLeft($event)\"\n    >\n        <ng-content></ng-content>\n        <div\n            *ngIf=\"showLeftValueContent\"\n            ngProjectAs=\"tuiContent\"\n        >\n            <ng-container *polymorpheusOutlet=\"leftValueContent as text; context: {$implicit: value[0]}\">\n                {{ text }}\n            </ng-container>\n        </div>\n    </tui-input-number>\n\n    <tui-input-number\n        automation-id=\"tui-input-range__right-input\"\n        tuiTextfieldAppearance=\"none\"\n        class=\"t-right\"\n        [decimal]=\"decimal\"\n        [disabled]=\"computedDisabled\"\n        [max]=\"max\"\n        [min]=\"value[0]\"\n        [precision]=\"precision\"\n        [readOnly]=\"readOnly\"\n        [tuiTextfieldPostfix]=\"pluralize && !showRightValueContent ? (value[1] | i18nPlural: pluralize) : ''\"\n        [(ngModel)]=\"rightTextfieldValue\"\n        (focusedChange)=\"onTextInputFocused($event)\"\n        (keydown.arrowDown)=\"changeByStep($event, [0, -1])\"\n        (keydown.arrowUp)=\"changeByStep($event, [0, 1])\"\n        (ngModelChange)=\"onInputRight($event)\"\n    >\n        <div\n            *ngIf=\"showRightValueContent\"\n            ngProjectAs=\"tuiContent\"\n        >\n            <ng-container *polymorpheusOutlet=\"rightValueContent as text; context: {$implicit: value[1]}\">\n                {{ text }}\n            </ng-container>\n        </div>\n    </tui-input-number>\n\n    <tui-range\n        class=\"t-range\"\n        [disabled]=\"readOnly || disabled\"\n        [focusable]=\"false\"\n        [keySteps]=\"computeKeySteps(keySteps, min, max)\"\n        [max]=\"max\"\n        [min]=\"min\"\n        [ngModel]=\"value\"\n        [segments]=\"segments\"\n        [step]=\"step\"\n        (activeThumbChange)=\"onActiveThumbChange($event)\"\n        (ngModelChange)=\"onExternalValueUpdate($event)\"\n        (tuiPressedChange)=\"focusToTextInput()\"\n    ></tui-range>\n</div>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TuiActiveZoneModule, TuiPressedModule} from '@taiga-ui/cdk';\nimport {TuiTextfieldControllerModule, TuiWrapperModule} from '@taiga-ui/core';\nimport {TuiInputNumberModule} from '@taiga-ui/kit/components/input-number';\nimport {TuiRangeModule} from '@taiga-ui/kit/components/range';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiInputRangeComponent} from './input-range.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        PolymorpheusModule,\n        TuiActiveZoneModule,\n        TuiInputNumberModule,\n        TuiPressedModule,\n        TuiRangeModule,\n        TuiWrapperModule,\n        TuiTextfieldControllerModule,\n    ],\n    declarations: [TuiInputRangeComponent],\n    exports: [TuiInputRangeComponent],\n})\nexport class TuiInputRangeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
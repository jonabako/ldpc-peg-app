import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Inject, HostBinding, NgModule } from '@angular/core';
import * as i1 from '@taiga-ui/core';
import { tuiSizeBigger, TuiHostedDropdownComponent, TUI_TEXTFIELD_SIZE, TuiSvgModule } from '@taiga-ui/core';
import * as i2 from '@tinkoff/ng-polymorpheus';
import { PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';
import { tuiCreateToken, tuiProvideOptions } from '@taiga-ui/cdk';
import * as i3 from '@angular/common';
import { CommonModule } from '@angular/common';

/** Default values for arrow options */
const TUI_ARROW_DEFAULT_OPTIONS = {
    iconSmall: 'tuiIconChevronDown',
    iconLarge: 'tuiIconChevronDownLarge',
};
/**
 * Default parameters for arrow component
 */
const TUI_ARROW_OPTIONS = tuiCreateToken(TUI_ARROW_DEFAULT_OPTIONS);
function tuiArrowOptionsProvider(options) {
    return tuiProvideOptions(TUI_ARROW_OPTIONS, options, TUI_ARROW_DEFAULT_OPTIONS);
}

class TuiArrowComponent {
    constructor(dropdown, textfieldSize, options) {
        this.dropdown = dropdown;
        this.textfieldSize = textfieldSize;
        this.options = options;
    }
    get rotated() {
        return this.dropdown.open;
    }
    get arrowIcon() {
        return tuiSizeBigger(this.textfieldSize.size)
            ? this.options.iconLarge
            : this.options.iconSmall;
    }
}
TuiArrowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiArrowComponent, deps: [{ token: TuiHostedDropdownComponent }, { token: TUI_TEXTFIELD_SIZE }, { token: TUI_ARROW_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });
TuiArrowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiArrowComponent, selector: "tui-arrow", host: { properties: { "class._rotated": "this.rotated" } }, ngImport: i0, template: "<tui-svg\n    *polymorpheusOutlet=\"arrowIcon as src\"\n    [src]=\"src\"\n></tui-svg>\n<ng-container *ngIf=\"dropdown.openChange | async\"></ng-container>\n", styles: [":host{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:block;cursor:pointer;pointer-events:none}:host._rotated{transform:rotate(180deg)}\n"], components: [{ type: i1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], directives: [{ type: i2.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i3.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiArrowComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-arrow',
                    templateUrl: './arrow.template.html',
                    styleUrls: ['./arrow.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiHostedDropdownComponent, decorators: [{
                    type: Inject,
                    args: [TuiHostedDropdownComponent]
                }] }, { type: i1.TuiTextfieldSizeDirective, decorators: [{
                    type: Inject,
                    args: [TUI_TEXTFIELD_SIZE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ARROW_OPTIONS]
                }] }]; }, propDecorators: { rotated: [{
                type: HostBinding,
                args: ['class._rotated']
            }] } });
const TUI_ARROW = new PolymorpheusComponent(TuiArrowComponent);

class TuiArrowModule {
}
TuiArrowModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiArrowModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiArrowModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiArrowModule, declarations: [TuiArrowComponent], imports: [CommonModule, TuiSvgModule, PolymorpheusModule], exports: [TuiArrowComponent] });
TuiArrowModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiArrowModule, imports: [[CommonModule, TuiSvgModule, PolymorpheusModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiArrowModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, TuiSvgModule, PolymorpheusModule],
                    declarations: [TuiArrowComponent],
                    exports: [TuiArrowComponent],
                }]
        }] });

const TUI_ARROW_DEFAULT_MODE = {
    interactive: TUI_ARROW,
    disabled: TUI_ARROW,
};
/**
 * Type of icon in dropdowns for interactive or disable mode
 */
const TUI_ARROW_MODE = tuiCreateToken(TUI_ARROW_DEFAULT_MODE);
function tuiArrowModeProvider(options) {
    return tuiProvideOptions(TUI_ARROW_MODE, options, TUI_ARROW_DEFAULT_MODE);
}

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_ARROW, TUI_ARROW_DEFAULT_MODE, TUI_ARROW_DEFAULT_OPTIONS, TUI_ARROW_MODE, TUI_ARROW_OPTIONS, TuiArrowComponent, TuiArrowModule, tuiArrowModeProvider, tuiArrowOptionsProvider };
//# sourceMappingURL=taiga-ui-kit-components-arrow.js.map

{"version":3,"file":"taiga-ui-kit-components-input-number.js","sources":["../../../projects/kit/components/input-number/input-number.options.ts","../../../projects/kit/components/input-number/input-number.component.ts","../../../projects/kit/components/input-number/input-number.template.html","../../../projects/kit/components/input-number/input-number.directive.ts","../../../projects/kit/components/input-number/input-number.module.ts","../../../projects/kit/components/input-number/taiga-ui-kit-components-input-number.ts"],"sourcesContent":["import {Provider} from '@angular/core';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk';\nimport {TuiDecimal} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nexport interface TuiInputNumberOptions {\n    readonly decimal: TuiDecimal;\n    readonly icons: Readonly<{\n        down: PolymorpheusContent;\n        up: PolymorpheusContent;\n    }>;\n    readonly max: number;\n    readonly min: number;\n    readonly precision: number;\n    readonly step: number;\n}\n\n/** Default values for the input number options. */\nexport const TUI_INPUT_NUMBER_DEFAULT_OPTIONS: TuiInputNumberOptions = {\n    icons: {\n        up: 'tuiIconPlus',\n        down: 'tuiIconMinus',\n    },\n    min: Number.MIN_SAFE_INTEGER,\n    max: Number.MAX_SAFE_INTEGER,\n    step: 0,\n    decimal: 'not-zero',\n    precision: 2,\n};\n\n/**\n * Default parameters for input count component\n */\nexport const TUI_INPUT_NUMBER_OPTIONS = tuiCreateToken(TUI_INPUT_NUMBER_DEFAULT_OPTIONS);\n\nexport function tuiInputNumberOptionsProvider(\n    options: Partial<TuiInputNumberOptions>,\n): Provider {\n    return tuiProvideOptions(\n        TUI_INPUT_NUMBER_OPTIONS,\n        options,\n        TUI_INPUT_NUMBER_DEFAULT_OPTIONS,\n    );\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    HostBinding,\n    HostListener,\n    Inject,\n    InjectionToken,\n    Input,\n    Optional,\n    QueryList,\n    Self,\n    ViewChild,\n} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {MaskitoOptions} from '@maskito/core';\nimport {\n    maskitoCaretGuard,\n    maskitoNumberOptionsGenerator,\n    maskitoParseNumber,\n} from '@maskito/kit';\nimport {\n    AbstractTuiNullableControl,\n    AbstractTuiValueTransformer,\n    CHAR_HYPHEN,\n    CHAR_MINUS,\n    EMPTY_QUERY,\n    TUI_IS_IOS,\n    tuiAsControl,\n    tuiAsFocusableItemAccessor,\n    tuiClamp,\n    TuiFocusableElementAccessor,\n    TuiInputMode,\n    tuiPure,\n} from '@taiga-ui/cdk';\nimport {\n    TEXTFIELD_CONTROLLER_PROVIDER,\n    TUI_NUMBER_FORMAT,\n    TUI_TEXTFIELD_SIZE,\n    TUI_TEXTFIELD_WATCHED_CONTROLLER,\n    TuiDecimal,\n    tuiFormatNumber,\n    tuiGetFractionPartPadded,\n    TuiNumberFormatSettings,\n    TuiPrimitiveTextfieldComponent,\n    TuiSizeL,\n    TuiSizeS,\n    TuiTextfieldController,\n    TuiTextfieldSizeDirective,\n} from '@taiga-ui/core';\nimport {PolymorpheusOutletDirective} from '@tinkoff/ng-polymorpheus';\n\nimport {TUI_INPUT_NUMBER_OPTIONS, TuiInputNumberOptions} from './input-number.options';\n\nconst DEFAULT_MAX_LENGTH = 18;\n\nexport const TUI_NUMBER_VALUE_TRANSFORMER = new InjectionToken<\n    AbstractTuiValueTransformer<number | null>\n>('');\n\n@Component({\n    selector: 'tui-input-number',\n    templateUrl: './input-number.template.html',\n    styleUrls: ['./input-number.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsFocusableItemAccessor(TuiInputNumberComponent),\n        tuiAsControl(TuiInputNumberComponent),\n        TEXTFIELD_CONTROLLER_PROVIDER,\n    ],\n})\nexport class TuiInputNumberComponent\n    extends AbstractTuiNullableControl<number>\n    implements TuiFocusableElementAccessor\n{\n    @ViewChild(TuiPrimitiveTextfieldComponent)\n    private readonly textfield?: TuiPrimitiveTextfieldComponent;\n\n    private unfinishedValue: string | null = '';\n\n    @Input()\n    min: number | null = this.options.min;\n\n    @Input()\n    max: number | null = this.options.max;\n\n    @Input()\n    decimal = this.options.decimal;\n\n    @Input()\n    precision = this.options.precision;\n\n    @Input()\n    step = this.options.step;\n\n    /** @deprecated use `tuiTextfieldPrefix` from {@link TuiTextfieldControllerModule} instead */\n    @Input()\n    prefix = '';\n\n    /** @deprecated use `tuiTextfieldPostfix` from {@link TuiTextfieldControllerModule} instead */\n    @Input()\n    postfix = '';\n\n    @ContentChildren(PolymorpheusOutletDirective, {descendants: true})\n    readonly polymorpheusValueContent: QueryList<unknown> = EMPTY_QUERY;\n\n    constructor(\n        @Optional()\n        @Self()\n        @Inject(NgControl)\n        control: NgControl | null,\n        @Inject(ChangeDetectorRef)\n        cdr: ChangeDetectorRef,\n        @Optional()\n        @Inject(TUI_NUMBER_VALUE_TRANSFORMER)\n        transformer: AbstractTuiValueTransformer<number | null>,\n        @Inject(TUI_INPUT_NUMBER_OPTIONS) readonly options: TuiInputNumberOptions,\n        @Inject(TUI_NUMBER_FORMAT) private readonly numberFormat: TuiNumberFormatSettings,\n        @Inject(TUI_IS_IOS) private readonly isIOS: boolean,\n        @Inject(TUI_TEXTFIELD_SIZE)\n        private readonly textfieldSize: TuiTextfieldSizeDirective,\n        @Inject(TUI_TEXTFIELD_WATCHED_CONTROLLER)\n        readonly controller: TuiTextfieldController,\n    ) {\n        super(control, cdr, transformer);\n    }\n\n    @HostBinding('attr.data-size')\n    get size(): TuiSizeL | TuiSizeS {\n        return this.textfieldSize.size;\n    }\n\n    get computedMin(): number {\n        return this.computeMin(this.min, this.max);\n    }\n\n    get computedMax(): number {\n        return this.computeMax(this.min, this.max);\n    }\n\n    get nativeFocusableElement(): HTMLInputElement | null {\n        return !this.textfield || this.computedDisabled\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n\n    get focused(): boolean {\n        return !!this.textfield?.focused;\n    }\n\n    get isNegativeAllowed(): boolean {\n        return this.computedMin < 0;\n    }\n\n    get inputMode(): TuiInputMode {\n        if (this.isIOS && this.isNegativeAllowed) {\n            // iPhone does not have minus sign if inputMode is equal to 'numeric' / 'decimal'\n            return 'text';\n        }\n\n        return this.decimal === 'never' ? 'numeric' : 'decimal';\n    }\n\n    get calculatedMaxLength(): number {\n        const decimalPart =\n            this.decimal !== 'never' &&\n            this.nativeValue.includes(this.numberFormat.decimalSeparator);\n        const precision = decimalPart ? Math.min(this.precision + 1, 20) : 0;\n        const takeThousand = this.numberFormat.thousandSeparator.repeat(5).length;\n\n        return DEFAULT_MAX_LENGTH + precision + takeThousand;\n    }\n\n    get formattedValue(): string {\n        return this.value !== null ? this.getFormattedValue(this.value || 0) : '';\n    }\n\n    get computedValue(): string {\n        return this.focused ? this.nativeValue : this.formattedValue;\n    }\n\n    get canDecrement(): boolean {\n        return this.interactive && (this.value || 0) > this.computedMin;\n    }\n\n    get canIncrement(): boolean {\n        return this.interactive && (this.value || 0) < this.computedMax;\n    }\n\n    get computedPrefix(): string {\n        return this.prefix || this.controller.prefix;\n    }\n\n    get computedPostfix(): string {\n        const postfix = this.postfix || this.controller.postfix;\n\n        return postfix && ` ${postfix}`;\n    }\n\n    get mask(): MaskitoOptions {\n        return this.calculateMask(\n            this.precision,\n            this.decimal,\n            this.numberFormat.decimalSeparator,\n            this.numberFormat.thousandSeparator,\n            this.computedMin,\n            this.computedMax,\n            this.computedPrefix,\n            this.computedPostfix,\n        );\n    }\n\n    @HostListener('keydown.arrowDown', ['-step'])\n    @HostListener('keydown.arrowUp', ['step'])\n    onArrow(step: number | null): void {\n        if (!step) {\n            return;\n        }\n\n        this.value = tuiClamp(\n            (this.value || 0) + step,\n            this.computedMin,\n            this.computedMax,\n        );\n        this.nativeValue = this.formattedValue;\n    }\n\n    onValueChange(nativeValue: string): void {\n        const parsedValue = maskitoParseNumber(\n            nativeValue,\n            this.numberFormat.decimalSeparator,\n        );\n\n        this.unfinishedValue = null;\n\n        if (Number.isNaN(parsedValue)) {\n            this.value = null;\n\n            return;\n        }\n\n        if (this.isNativeValueNotFinished) {\n            this.unfinishedValue = nativeValue;\n\n            return;\n        }\n\n        if (parsedValue < this.computedMin || parsedValue > this.computedMax) {\n            return;\n        }\n\n        this.value = parsedValue;\n    }\n\n    onFocused(focused: boolean): void {\n        this.updateFocused(focused);\n\n        const nativeNumberValue = this.unfinishedValue\n            ? maskitoParseNumber(this.unfinishedValue, this.numberFormat.decimalSeparator)\n            : this.nativeNumberValue;\n\n        this.unfinishedValue = null;\n\n        if (Number.isNaN(nativeNumberValue)) {\n            this.nativeValue = focused ? this.computedPrefix + this.computedPostfix : '';\n            this.value = null;\n\n            return;\n        }\n\n        if (!focused) {\n            this.value = nativeNumberValue;\n            this.nativeValue = this.formattedValue;\n        }\n    }\n\n    getFormattedValue(value: number): string {\n        const absValue = Math.abs(value);\n        const hasFraction = absValue % 1 > 0;\n        let decimalLimit =\n            this.decimal === 'always' || (hasFraction && this.decimal !== 'never')\n                ? this.precision\n                : 0;\n\n        const fraction = hasFraction\n            ? tuiGetFractionPartPadded(value, this.precision)\n            : '';\n\n        if (this.focused && this.decimal !== 'always') {\n            decimalLimit = fraction.length;\n        }\n\n        return (\n            this.computedPrefix +\n            tuiFormatNumber(value, {\n                ...this.numberFormat,\n                decimalLimit,\n            }).replace(CHAR_HYPHEN, CHAR_MINUS) +\n            this.computedPostfix\n        );\n    }\n\n    private get isNativeValueNotFinished(): boolean {\n        const nativeNumberValue = this.nativeNumberValue;\n\n        return nativeNumberValue < 0\n            ? nativeNumberValue > this.computedMax\n            : nativeNumberValue < this.computedMin;\n    }\n\n    get nativeValue(): string {\n        return this.nativeFocusableElement?.value || '';\n    }\n\n    set nativeValue(value: string) {\n        if (!this.textfield || !this.nativeFocusableElement) {\n            return;\n        }\n\n        this.textfield.value = value;\n        this.nativeFocusableElement.value = value;\n    }\n\n    override writeValue(value: number | null): void {\n        super.writeValue(value);\n        this.nativeValue = this.formattedValue;\n    }\n\n    private get nativeNumberValue(): number {\n        return maskitoParseNumber(this.nativeValue, this.numberFormat.decimalSeparator);\n    }\n\n    @tuiPure\n    private computeMin(min: number | null, max: number | null): number {\n        return Math.min(\n            this.valueTransformer?.fromControlValue(min) ?? min ?? this.options.min,\n            this.valueTransformer?.fromControlValue(max) ?? max ?? this.options.max,\n        );\n    }\n\n    @tuiPure\n    private computeMax(min: number | null, max: number | null): number {\n        return Math.max(\n            this.valueTransformer?.fromControlValue(min) ?? min ?? this.options.min,\n            this.valueTransformer?.fromControlValue(max) ?? max ?? this.options.max,\n        );\n    }\n\n    @tuiPure\n    private calculateMask(\n        precision: number,\n        decimalMode: TuiDecimal,\n        decimalSeparator: string,\n        thousandSeparator: string,\n        min: number,\n        max: number,\n        prefix: string,\n        postfix: string,\n    ): MaskitoOptions {\n        const {plugins, ...options} = maskitoNumberOptionsGenerator({\n            decimalSeparator,\n            thousandSeparator,\n            min,\n            max,\n            prefix,\n            postfix,\n            precision: decimalMode === 'never' ? 0 : precision,\n            decimalZeroPadding: decimalMode === 'always',\n        });\n\n        return {\n            ...options,\n            plugins: [\n                ...plugins,\n                maskitoCaretGuard(value => [\n                    prefix.length,\n                    value.length - postfix.length,\n                ]),\n            ],\n        };\n    }\n}\n","<tui-primitive-textfield\n    #textfield\n    tuiTextfieldPostfix=\"\"\n    tuiTextfieldPrefix=\"\"\n    tuiValueAccessor\n    class=\"t-textfield\"\n    [disabled]=\"computedDisabled\"\n    [focusable]=\"focusable\"\n    [invalid]=\"computedInvalid\"\n    [maskito]=\"mask\"\n    [pseudoActive]=\"pseudoActive\"\n    [pseudoFocus]=\"computedFocused\"\n    [pseudoHover]=\"pseudoHover\"\n    [readOnly]=\"readOnly\"\n    [value]=\"computedValue\"\n    (focusedChange)=\"onFocused($event)\"\n    (valueChange)=\"onValueChange($event)\"\n>\n    <ng-content></ng-content>\n    <ng-content\n        ngProjectAs=\"input\"\n        select=\"input\"\n    ></ng-content>\n    <div\n        *ngIf=\"polymorpheusValueContent.length\"\n        ngProjectAs=\"tuiContent\"\n        class=\"t-value-content\"\n    >\n        <ng-container *polymorpheusOutlet=\"valueContent as text\">\n            {{ text }}\n        </ng-container>\n    </div>\n</tui-primitive-textfield>\n\n<section\n    *ngIf=\"step\"\n    class=\"t-buttons\"\n>\n    <button\n        size=\"s\"\n        tuiIconButton\n        type=\"button\"\n        class=\"t-button\"\n        [appearance]=\"textfield.appearance\"\n        [disabled]=\"!canIncrement\"\n        [focusable]=\"false\"\n        [icon]=\"options.icons.up\"\n        (click.prevent)=\"onArrow(step)\"\n        (mousedown.prevent)=\"nativeFocusableElement?.focus()\"\n    >\n        +\n    </button>\n    <button\n        size=\"s\"\n        tuiIconButton\n        type=\"button\"\n        class=\"t-button\"\n        [appearance]=\"textfield.appearance\"\n        [disabled]=\"!canDecrement\"\n        [focusable]=\"false\"\n        [icon]=\"options.icons.down\"\n        (click.prevent)=\"onArrow(-step)\"\n        (mousedown.prevent)=\"nativeFocusableElement?.focus()\"\n    >\n        -\n    </button>\n</section>\n\n<ng-container *ngIf=\"polymorpheusValueContent.changes | async\"></ng-container>\n\n<ng-template #valueContent>\n    <ng-content select=\"tuiContent\"></ng-content>\n</ng-template>\n","import {Directive, DoCheck} from '@angular/core';\nimport {AbstractTuiTextfieldHost, tuiAsTextfieldHost} from '@taiga-ui/core';\n\nimport {TuiInputNumberComponent} from './input-number.component';\n\n@Directive({\n    selector: 'tui-input-number',\n    providers: [tuiAsTextfieldHost(TuiInputNumberDirective)],\n})\nexport class TuiInputNumberDirective\n    extends AbstractTuiTextfieldHost<TuiInputNumberComponent>\n    implements DoCheck\n{\n    input?: HTMLInputElement;\n\n    override get value(): string {\n        return this.host.computedValue;\n    }\n\n    onValueChange(value: string): void {\n        this.host.onValueChange(value);\n    }\n\n    ngDoCheck(): void {\n        if (!this.host.nativeFocusableElement) {\n            return;\n        }\n\n        this.host.nativeFocusableElement.inputMode = this.host.inputMode;\n        this.host.nativeFocusableElement.maxLength =\n            this.host.nativeFocusableElement.maxLength > 0\n                ? this.host.nativeFocusableElement.maxLength\n                : this.host.calculatedMaxLength;\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MaskitoModule} from '@maskito/angular';\nimport {\n    TuiButtonModule,\n    TuiPrimitiveTextfieldModule,\n    TuiTextfieldComponent,\n    TuiTextfieldControllerModule,\n} from '@taiga-ui/core';\nimport {TuiValueAccessorModule} from '@taiga-ui/kit/directives';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiInputNumberComponent} from './input-number.component';\nimport {TuiInputNumberDirective} from './input-number.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaskitoModule,\n        TuiPrimitiveTextfieldModule,\n        TuiTextfieldControllerModule,\n        TuiValueAccessorModule,\n        PolymorpheusModule,\n        TuiButtonModule,\n    ],\n    declarations: [TuiInputNumberComponent, TuiInputNumberDirective],\n    exports: [TuiInputNumberComponent, TuiInputNumberDirective, TuiTextfieldComponent],\n})\nexport class TuiInputNumberModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
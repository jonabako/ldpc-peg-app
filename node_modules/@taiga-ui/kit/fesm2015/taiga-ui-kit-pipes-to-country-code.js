import * as i0 from '@angular/core';
import { Pipe, Inject, NgModule } from '@angular/core';
import { CHAR_PLUS } from '@taiga-ui/cdk';
import { TuiCountryIsoCode } from '@taiga-ui/i18n';
import { TUI_COUNTRIES_MASKS } from '@taiga-ui/kit/tokens';
import { tuiGetMaxAllowedPhoneLength, tuiIsoToCountryCode, tuiNotKzRegion } from '@taiga-ui/kit/utils';

class TuiToCountryCodePipe {
    constructor(countriesMasks) {
        this.countriesMasks = countriesMasks;
    }
    transform(value, countries) {
        return countries.find(countryIsoCode => {
            const ruCodeTest = countryIsoCode === TuiCountryIsoCode.RU &&
                /^[78]/.test(value) &&
                /^(?!880[1-9 ])/.test(value) &&
                value.length + 1 ===
                    tuiGetMaxAllowedPhoneLength(this.countriesMasks, TuiCountryIsoCode.RU);
            const matched = ruCodeTest ||
                (value.startsWith(tuiIsoToCountryCode(this.countriesMasks, countryIsoCode).replace(CHAR_PLUS, '')) &&
                    value.length + 1 ===
                        tuiGetMaxAllowedPhoneLength(this.countriesMasks, countryIsoCode));
            if (matched) {
                switch (countryIsoCode) {
                    case TuiCountryIsoCode.RU:
                        return tuiNotKzRegion(value);
                    case TuiCountryIsoCode.KZ:
                        return !tuiNotKzRegion(value);
                    default:
                        return true;
                }
            }
            return false;
        });
    }
}
TuiToCountryCodePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiToCountryCodePipe, deps: [{ token: TUI_COUNTRIES_MASKS }], target: i0.ɵɵFactoryTarget.Pipe });
TuiToCountryCodePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiToCountryCodePipe, name: "tuiToCountryCode" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiToCountryCodePipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'tuiToCountryCode',
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_COUNTRIES_MASKS]
                }] }]; } });

class TuiExtractCountryCodeModule {
}
TuiExtractCountryCodeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiExtractCountryCodeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiExtractCountryCodeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiExtractCountryCodeModule, declarations: [TuiToCountryCodePipe], exports: [TuiToCountryCodePipe] });
TuiExtractCountryCodeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiExtractCountryCodeModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiExtractCountryCodeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiToCountryCodePipe],
                    exports: [TuiToCountryCodePipe],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiExtractCountryCodeModule, TuiToCountryCodePipe };
//# sourceMappingURL=taiga-ui-kit-pipes-to-country-code.js.map

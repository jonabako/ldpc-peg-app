(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@taiga-ui/kit/tokens'), require('rxjs/operators'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/internal/primitive-calendar-range', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core', '@taiga-ui/kit/tokens', 'rxjs/operators', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].kit = global["taiga-ui"].kit || {}, global["taiga-ui"].kit.internal = global["taiga-ui"].kit.internal || {}, global["taiga-ui"].kit.internal["primitive-calendar-range"] = {}), global.ng.core, global.i2, global.i1, global["taiga-ui"].kit.tokens, global.rxjs.operators, global.rxjs));
})(this, (function (exports, i0, i2, i1, tokens, operators, i3) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);

    /**
     * @internal
     */
    var TuiPrimitiveCalendarRangeComponent = /** @class */ (function () {
        function TuiPrimitiveCalendarRangeComponent(valueChanges, cdr, destroy$) {
            var _this = this;
            this.disabledItemHandler = i2.ALWAYS_FALSE_HANDLER;
            this.markerHandler = i1.TUI_DEFAULT_MARKER_HANDLER;
            this.defaultViewedMonthFirst = i2.TuiMonth.currentLocal();
            this.defaultViewedMonthSecond = i2.TuiMonth.currentLocal().append({ month: 1 });
            this.min = i2.TUI_FIRST_DAY;
            this.max = i2.TUI_LAST_DAY;
            this.value = null;
            this.dayClick = new i0.EventEmitter();
            this.hoveredItem = null;
            this.userViewedMonthFirst = this.defaultViewedMonthFirst;
            this.userViewedMonthSecond = this.defaultViewedMonthSecond;
            this.monthOffset = function (value, offset) { return value.append({ month: offset }); };
            if (!valueChanges) {
                return;
            }
            valueChanges.pipe(i2.tuiWatch(cdr), operators.takeUntil(destroy$)).subscribe(function (value) {
                _this.value = value;
                _this.updateViewedMonths();
            });
        }
        Object.defineProperty(TuiPrimitiveCalendarRangeComponent.prototype, "cappedUserViewedMonthSecond", {
            get: function () {
                return this.userViewedMonthSecond.monthBefore(this.max)
                    ? this.userViewedMonthSecond
                    : this.max;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiPrimitiveCalendarRangeComponent.prototype, "cappedUserViewedMonthFirst", {
            get: function () {
                return this.userViewedMonthFirst.monthSameOrBefore(this.userViewedMonthSecond)
                    ? this.userViewedMonthFirst
                    : this.userViewedMonthSecond;
            },
            enumerable: false,
            configurable: true
        });
        TuiPrimitiveCalendarRangeComponent.prototype.ngOnInit = function () {
            this.setInitialMonths();
        };
        TuiPrimitiveCalendarRangeComponent.prototype.onSectionFirstViewedMonth = function (month) {
            this.userViewedMonthFirst = month;
            this.userViewedMonthSecond = this.userViewedMonthFirst.append({ month: 1 });
        };
        TuiPrimitiveCalendarRangeComponent.prototype.onSectionSecondViewedMonth = function (month) {
            this.userViewedMonthSecond = month;
            this.userViewedMonthFirst = this.userViewedMonthSecond.append({
                month: -1,
            });
        };
        TuiPrimitiveCalendarRangeComponent.prototype.onDayClick = function (day) {
            this.dayClick.emit(day);
        };
        TuiPrimitiveCalendarRangeComponent.prototype.setInitialMonths = function () {
            if (!this.value) {
                this.userViewedMonthSecond = this.updatedViewedMonthSecond(this.defaultViewedMonthSecond);
                this.userViewedMonthFirst = this.updatedViewedMonthFirst(this.defaultViewedMonthFirst);
            }
        };
        TuiPrimitiveCalendarRangeComponent.prototype.updatedViewedMonthSecond = function (month) {
            if (month.monthSameOrAfter(this.max)) {
                return this.max;
            }
            if (month.monthBefore(this.min)) {
                return this.min.append({ month: 1 });
            }
            return month;
        };
        TuiPrimitiveCalendarRangeComponent.prototype.updatedViewedMonthFirst = function (month) {
            if (month.monthSameOrAfter(this.userViewedMonthSecond)) {
                return this.userViewedMonthSecond.append({ month: -1 });
            }
            if (month.monthSameOrBefore(this.min)) {
                return this.min;
            }
            return month;
        };
        TuiPrimitiveCalendarRangeComponent.prototype.updateViewedMonths = function () {
            this.userViewedMonthFirst =
                this.value === null ? this.defaultViewedMonthFirst : this.value.from;
            this.userViewedMonthSecond = this.userViewedMonthFirst.append({ month: 1 });
        };
        return TuiPrimitiveCalendarRangeComponent;
    }());
    TuiPrimitiveCalendarRangeComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveCalendarRangeComponent, deps: [{ token: tokens.TUI_CALENDAR_DATE_STREAM, optional: true }, { token: i0.ChangeDetectorRef }, { token: i2.TuiDestroyService, self: true }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiPrimitiveCalendarRangeComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiPrimitiveCalendarRangeComponent, selector: "tui-primitive-calendar-range", inputs: { disabledItemHandler: "disabledItemHandler", markerHandler: "markerHandler", defaultViewedMonthFirst: "defaultViewedMonthFirst", defaultViewedMonthSecond: "defaultViewedMonthSecond", min: "min", max: "max", value: "value" }, outputs: { dayClick: "dayClick" }, providers: [i2.TuiDestroyService], ngImport: i0__namespace, template: "<tui-calendar\n    [disabledItemHandler]=\"disabledItemHandler\"\n    [markerHandler]=\"markerHandler\"\n    [max]=\"max\"\n    [maxViewedMonth]=\"cappedUserViewedMonthSecond | tuiMapper: monthOffset : -1\"\n    [min]=\"min\"\n    [month]=\"userViewedMonthFirst\"\n    [showAdjacent]=\"false\"\n    [value]=\"value\"\n    [(hoveredItem)]=\"hoveredItem\"\n    (dayClick)=\"onDayClick($event)\"\n    (monthChange)=\"onSectionFirstViewedMonth($event)\"\n></tui-calendar>\n<tui-calendar\n    class=\"t-border\"\n    [disabledItemHandler]=\"disabledItemHandler\"\n    [markerHandler]=\"markerHandler\"\n    [max]=\"max\"\n    [min]=\"min\"\n    [minViewedMonth]=\"cappedUserViewedMonthFirst | tuiMapper: monthOffset : 1\"\n    [month]=\"userViewedMonthSecond.monthSameOrBefore(min) ? (min | tuiMapper: monthOffset : 1) : userViewedMonthSecond\"\n    [showAdjacent]=\"false\"\n    [value]=\"value\"\n    [(hoveredItem)]=\"hoveredItem\"\n    (dayClick)=\"onDayClick($event)\"\n    (monthChange)=\"onSectionSecondViewedMonth($event)\"\n></tui-calendar>\n", styles: [":host{display:flex}.t-border{border-left:1px solid var(--tui-base-03)}\n"], components: [{ type: i1__namespace.TuiCalendarComponent, selector: "tui-calendar", inputs: ["initialView", "month", "disabledItemHandler", "min", "max", "minViewedMonth", "maxViewedMonth", "hoveredItem", "showAdjacent", "markerHandler", "value"], outputs: ["dayClick", "monthChange", "hoveredItemChange"] }], pipes: { "tuiMapper": i2__namespace.TuiMapperPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveCalendarRangeComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-primitive-calendar-range',
                        templateUrl: './primitive-calendar-range.template.html',
                        styleUrls: ['./primitive-calendar-range.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [i2.TuiDestroyService],
                    }]
            }], ctorParameters: function () {
            return [{ type: i3__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_CALENDAR_DATE_STREAM]
                        }, {
                            type: i0.Optional
                        }] }, { type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }, { type: i2__namespace.TuiDestroyService, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [i2.TuiDestroyService]
                        }] }];
        }, propDecorators: { disabledItemHandler: [{
                    type: i0.Input
                }], markerHandler: [{
                    type: i0.Input
                }], defaultViewedMonthFirst: [{
                    type: i0.Input
                }], defaultViewedMonthSecond: [{
                    type: i0.Input
                }], min: [{
                    type: i0.Input
                }], max: [{
                    type: i0.Input
                }], value: [{
                    type: i0.Input
                }], dayClick: [{
                    type: i0.Output
                }] } });

    /**
     * @internal
     */
    var TuiPrimitiveCalendarRangeModule = /** @class */ (function () {
        function TuiPrimitiveCalendarRangeModule() {
        }
        return TuiPrimitiveCalendarRangeModule;
    }());
    TuiPrimitiveCalendarRangeModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveCalendarRangeModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiPrimitiveCalendarRangeModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveCalendarRangeModule, declarations: [TuiPrimitiveCalendarRangeComponent], imports: [i2.TuiMapperPipeModule, i1.TuiScrollbarModule, i1.TuiCalendarModule], exports: [TuiPrimitiveCalendarRangeComponent] });
    TuiPrimitiveCalendarRangeModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveCalendarRangeModule, imports: [[i2.TuiMapperPipeModule, i1.TuiScrollbarModule, i1.TuiCalendarModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiPrimitiveCalendarRangeModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i2.TuiMapperPipeModule, i1.TuiScrollbarModule, i1.TuiCalendarModule],
                        declarations: [TuiPrimitiveCalendarRangeComponent],
                        exports: [TuiPrimitiveCalendarRangeComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiPrimitiveCalendarRangeComponent = TuiPrimitiveCalendarRangeComponent;
    exports.TuiPrimitiveCalendarRangeModule = TuiPrimitiveCalendarRangeModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-kit-internal-primitive-calendar-range.umd.js.map

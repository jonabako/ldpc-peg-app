{"version":3,"file":"taiga-ui-kit-components-tree.umd.js","sources":["../../../projects/kit/components/tree/directives/tree-children.directive.ts","../../../projects/kit/components/tree/components/tree-item-content/tree-item-content.component.ts","../../../projects/kit/components/tree/components/tree-item-content/tree-item-content.template.html","../../../projects/kit/components/tree/misc/tree.constants.ts","../../../projects/kit/components/tree/misc/tree.tokens.ts","../../../projects/kit/components/tree/components/tree-item/tree-item.providers.ts","../../../projects/kit/components/tree/components/tree-item/tree-item.component.ts","../../../projects/kit/components/tree/components/tree-item/tree-item.template.html","../../../projects/kit/components/tree/directives/tree-node.directive.ts","../../../projects/kit/components/tree/components/tree/tree.component.ts","../../../projects/kit/components/tree/components/tree/tree.template.html","../../../projects/kit/components/tree/directives/tree-controller.directive.ts","../../../projects/kit/components/tree/directives/tree-item-controller.directive.ts","../../../projects/kit/components/tree/misc/tree.service.ts","../../../projects/kit/components/tree/tree.module.ts","../../../projects/kit/components/tree/taiga-ui-kit-components-tree.ts"],"sourcesContent":["import {Directive, Input} from '@angular/core';\nimport {EMPTY_ARRAY, TuiHandler} from '@taiga-ui/cdk';\n\n@Directive({\n    selector: 'tui-tree[childrenHandler]',\n})\nexport class TuiTreeChildrenDirective<T> {\n    @Input()\n    childrenHandler: TuiHandler<T, readonly T[]> =\n        TuiTreeChildrenDirective.defaultHandler;\n\n    static defaultHandler<G>(item: G): readonly G[] {\n        return Array.isArray(item) ? item : EMPTY_ARRAY;\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    forwardRef,\n    HostBinding,\n    Inject,\n} from '@angular/core';\nimport {TUI_COMMON_ICONS, TuiCommonIcons} from '@taiga-ui/core';\nimport {POLYMORPHEUS_CONTEXT} from '@tinkoff/ng-polymorpheus';\n\nimport {TUI_DEFAULT_TREE_CONTROLLER} from '../../misc/tree.constants';\nimport type {TuiTreeController, TuiTreeItemContext} from '../../misc/tree.interfaces';\nimport {TUI_TREE_CONTROLLER} from '../../misc/tree.tokens';\n\n@Component({\n    selector: 'tui-tree-item-content',\n    templateUrl: './tree-item-content.template.html',\n    styleUrls: ['./tree-item-content.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiTreeItemContentComponent {\n    constructor(\n        @Inject(TUI_COMMON_ICONS) readonly icons: TuiCommonIcons,\n        @Inject(POLYMORPHEUS_CONTEXT) readonly context: TuiTreeItemContext,\n        @Inject(forwardRef(() => TUI_TREE_CONTROLLER))\n        private readonly controller: TuiTreeController,\n    ) {}\n\n    get isExpanded(): boolean {\n        return this.context.$implicit.isExpanded;\n    }\n\n    @HostBinding('class._expandable')\n    get isExpandable(): boolean {\n        return (\n            this.context.$implicit.isExpandable &&\n            this.controller !== TUI_DEFAULT_TREE_CONTROLLER\n        );\n    }\n\n    onClick(): void {\n        this.controller.toggle(this.context.$implicit);\n    }\n}\n","<button\n    *ngIf=\"isExpandable\"\n    appearance=\"flat\"\n    shape=\"rounded\"\n    size=\"xs\"\n    tuiIconButton\n    type=\"button\"\n    class=\"t-button\"\n    [class.t-button_expanded]=\"isExpanded\"\n    [icon]=\"icons.more\"\n    (click)=\"onClick()\"\n></button>\n<ng-container [ngTemplateOutlet]=\"context.template\"></ng-container>\n","import {ALWAYS_TRUE_HANDLER, EMPTY_FUNCTION} from '@taiga-ui/cdk';\nimport {PolymorpheusComponent} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiTreeItemContentComponent} from '../components/tree-item-content/tree-item-content.component';\nimport type {TuiTreeController} from './tree.interfaces';\n\nexport const TUI_TREE_ITEM_CONTENT = new PolymorpheusComponent(\n    TuiTreeItemContentComponent,\n);\n\nexport const TUI_DEFAULT_TREE_CONTROLLER: TuiTreeController = {\n    isExpanded: ALWAYS_TRUE_HANDLER,\n    toggle: EMPTY_FUNCTION as () => void,\n};\n","import {InjectionToken} from '@angular/core';\nimport {tuiCreateToken} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nimport {TUI_DEFAULT_TREE_CONTROLLER, TUI_TREE_ITEM_CONTENT} from './tree.constants';\nimport type {TuiTreeAccessor, TuiTreeItemContext, TuiTreeLoader} from './tree.interfaces';\n\n/**\n * Controller for tracking value - TuiTreeItemComponent pairs\n */\nexport const TUI_TREE_ACCESSOR = new InjectionToken<TuiTreeAccessor<unknown>>(\n    '[TUI_TREE_ACCESSOR]',\n);\n\n/**\n * Controller for expanding the tree\n */\nexport const TUI_TREE_CONTROLLER = tuiCreateToken(TUI_DEFAULT_TREE_CONTROLLER);\n\n/**\n * A node of a tree view\n */\nexport const TUI_TREE_NODE = new InjectionToken('[TUI_TREE_NODE]');\n\n/**\n * A tree node placeholder for loading\n */\nexport const TUI_TREE_LOADING = tuiCreateToken({});\n\n/**\n * A tree node starting point\n */\nexport const TUI_TREE_START = new InjectionToken('[TUI_TREE_START]');\n\n/**\n * A service to load tree progressively\n */\nexport const TUI_TREE_LOADER = new InjectionToken<TuiTreeLoader<unknown>>(\n    '[TUI_TREE_LOADER]',\n);\n\n/**\n * Content for a tree item\n */\nexport const TUI_TREE_CONTENT =\n    tuiCreateToken<PolymorpheusContent<TuiTreeItemContext>>(TUI_TREE_ITEM_CONTENT);\n\n/**\n * Nesting level of current TreeView node\n */\nexport const TUI_TREE_LEVEL = tuiCreateToken(-1);\n","import {forwardRef, Provider, SkipSelf} from '@angular/core';\n\nimport {TUI_TREE_LEVEL, TUI_TREE_NODE} from '../../misc/tree.tokens';\nimport {TuiTreeItemComponent} from './tree-item.component';\n\nexport const TUI_TREE_ITEM_PROVIDERS: Provider[] = [\n    {\n        provide: TUI_TREE_LEVEL,\n        deps: [[new SkipSelf(), TUI_TREE_LEVEL]],\n        useFactory: (level: number): number => ++level,\n    },\n    {\n        provide: TUI_TREE_NODE,\n        useExisting: forwardRef(() => TuiTreeItemComponent),\n    },\n];\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    Inject,\n    QueryList,\n} from '@angular/core';\nimport {EMPTY_QUERY} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Subject} from 'rxjs';\nimport {distinctUntilChanged, map, startWith} from 'rxjs/operators';\n\nimport type {TuiTreeController, TuiTreeItemContext} from '../../misc/tree.interfaces';\nimport {\n    TUI_TREE_CONTENT,\n    TUI_TREE_CONTROLLER,\n    TUI_TREE_LEVEL,\n    TUI_TREE_NODE,\n} from '../../misc/tree.tokens';\nimport {TUI_TREE_ITEM_PROVIDERS} from './tree-item.providers';\n\n@Component({\n    selector: 'tui-tree-item',\n    templateUrl: './tree-item.template.html',\n    styleUrls: ['./tree-item.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: TUI_TREE_ITEM_PROVIDERS,\n    host: {\n        role: 'treeitem',\n    },\n})\nexport class TuiTreeItemComponent implements DoCheck {\n    @ContentChildren(TUI_TREE_NODE as any)\n    private readonly nested: QueryList<unknown> = EMPTY_QUERY;\n\n    private readonly change$ = new Subject<void>();\n\n    readonly expanded$ = this.change$.pipe(\n        startWith(null),\n        map(() => this.isExpanded),\n    );\n\n    readonly attached$ = this.change$.pipe(\n        map(() => this.el.nativeElement.isConnected),\n        distinctUntilChanged(),\n    );\n\n    constructor(\n        @Inject(ElementRef)\n        private readonly el: ElementRef<HTMLElement>,\n        @Inject(forwardRef(() => TUI_TREE_CONTROLLER))\n        private readonly controller: TuiTreeController,\n        @Inject(forwardRef(() => TUI_TREE_LEVEL))\n        readonly level: number,\n        @Inject(forwardRef(() => TUI_TREE_CONTENT))\n        readonly content: PolymorpheusContent<TuiTreeItemContext>,\n    ) {}\n\n    @HostBinding('class._expandable')\n    get isExpandable(): boolean {\n        return !!this.nested.length;\n    }\n\n    get isExpanded(): boolean {\n        return this.controller.isExpanded(this);\n    }\n\n    ngDoCheck(): void {\n        this.checkChanges();\n    }\n\n    checkChanges(): void {\n        this.change$.next();\n    }\n}\n","<ng-template #template>\n    <ng-content></ng-content>\n</ng-template>\n<ng-container *polymorpheusOutlet=\"content as text; context: {$implicit: this, template: template}\">\n    {{ text }}\n</ng-container>\n<tui-expand\n    *ngIf=\"isExpandable\"\n    role=\"group\"\n    class=\"t-children\"\n    [expanded]=\"expanded$ | async\"\n>\n    <div>\n        <ng-content select=\"tui-tree-item\"></ng-content>\n        <ng-content select=\"tui-tree\"></ng-content>\n    </div>\n</tui-expand>\n<ng-container *ngIf=\"attached$ | async\"></ng-container>\n","import {Directive, Inject, Input, OnDestroy, Optional} from '@angular/core';\n\nimport {TuiTreeItemComponent} from '../components/tree-item/tree-item.component';\nimport {TuiTreeAccessor} from '../misc/tree.interfaces';\nimport {TUI_TREE_ACCESSOR} from '../misc/tree.tokens';\n\n@Directive({\n    selector: 'tui-tree-item[tuiTreeNode]',\n})\nexport class TuiTreeNodeDirective<T> implements OnDestroy {\n    @Input('tuiTreeNode')\n    set value(value: T) {\n        this.directive?.register(this.component, value);\n    }\n\n    constructor(\n        @Optional()\n        @Inject(TUI_TREE_ACCESSOR)\n        private readonly directive: TuiTreeAccessor<T>,\n        @Inject(TuiTreeItemComponent)\n        private readonly component: TuiTreeItemComponent,\n    ) {}\n\n    ngOnDestroy(): void {\n        this.directive?.unregister(this.component);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    DoCheck,\n    Inject,\n    Input,\n    Optional,\n    TrackByFunction,\n    ViewChild,\n} from '@angular/core';\nimport {TuiHandler} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Subject} from 'rxjs';\nimport {distinctUntilChanged, map, startWith} from 'rxjs/operators';\n\nimport {TuiTreeChildrenDirective} from '../../directives/tree-children.directive';\nimport {TuiTreeContext} from '../../misc/tree.interfaces';\nimport {TUI_TREE_NODE} from '../../misc/tree.tokens';\nimport {TuiTreeItemComponent} from '../tree-item/tree-item.component';\n\n@Component({\n    selector: 'tui-tree[value]',\n    templateUrl: './tree.template.html',\n    styleUrls: ['./tree.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: TUI_TREE_NODE,\n            useExisting: TuiTreeComponent,\n        },\n    ],\n    host: {\n        role: 'tree',\n    },\n})\nexport class TuiTreeComponent<T> implements DoCheck {\n    private readonly check$ = new Subject<void>();\n\n    @Input()\n    value!: T;\n\n    @ViewChild(TuiTreeItemComponent)\n    readonly item?: TuiTreeItemComponent;\n\n    @ViewChild(TuiTreeComponent)\n    readonly child?: TuiTreeComponent<T>;\n\n    readonly children$ = this.check$.pipe(\n        startWith(null),\n        map(() => this.handler(this.value)),\n        distinctUntilChanged(),\n    );\n\n    constructor(\n        @Optional()\n        @Inject(TuiTreeChildrenDirective)\n        readonly directive: TuiTreeChildrenDirective<T> | null,\n    ) {}\n\n    @Input()\n    trackBy: TrackByFunction<T> = (_: number, item: T) => item;\n\n    @Input()\n    content: PolymorpheusContent<TuiTreeContext<T>> = ({$implicit}) => String($implicit);\n\n    ngDoCheck(): void {\n        this.checkChanges();\n    }\n\n    checkChanges(): void {\n        this.check$.next();\n        this.item?.checkChanges();\n        this.child?.checkChanges();\n    }\n\n    private get handler(): TuiHandler<T, readonly T[]> {\n        return this.directive?.childrenHandler || TuiTreeChildrenDirective.defaultHandler;\n    }\n}\n","<tui-tree-item\n    *tuiLet=\"children$ | async as children\"\n    #view\n    [tuiTreeNode]=\"value\"\n>\n    <ng-container *ngIf=\"$any(value) !== children\">\n        <ng-container *polymorpheusOutlet=\"content as text; context: {$implicit: value, node: view}\">\n            {{ text }}\n        </ng-container>\n    </ng-container>\n    <tui-tree\n        *ngFor=\"let child of children; trackBy: trackBy\"\n        [content]=\"content\"\n        [trackBy]=\"trackBy\"\n        [value]=\"child\"\n    ></tui-tree>\n</tui-tree-item>\n","import {Directive, EventEmitter, Input, Output} from '@angular/core';\nimport {tuiIsPresent} from '@taiga-ui/cdk';\n\nimport {TuiTreeItemComponent} from '../components/tree-item/tree-item.component';\nimport {TuiTreeAccessor, TuiTreeController} from '../misc/tree.interfaces';\nimport {TUI_TREE_ACCESSOR, TUI_TREE_CONTROLLER} from '../misc/tree.tokens';\n\n@Directive({\n    selector: '[tuiTreeController][map]',\n    providers: [\n        {\n            provide: TUI_TREE_ACCESSOR,\n            useExisting: TuiTreeControllerDirective,\n        },\n        {\n            provide: TUI_TREE_CONTROLLER,\n            useExisting: TuiTreeControllerDirective,\n        },\n    ],\n    exportAs: 'tuiTreeController',\n})\nexport class TuiTreeControllerDirective<T>\n    implements TuiTreeController, TuiTreeAccessor<T>\n{\n    @Input('tuiTreeController')\n    fallback = true;\n\n    @Input()\n    map = new Map<T, boolean>();\n\n    @Output()\n    readonly toggled = new EventEmitter<T>();\n\n    readonly items = new Map<TuiTreeItemComponent, T>();\n\n    register(item: TuiTreeItemComponent, value: T): void {\n        this.items.set(item, value);\n    }\n\n    unregister(item: TuiTreeItemComponent): void {\n        this.items.delete(item);\n    }\n\n    isExpanded(item: TuiTreeItemComponent): boolean {\n        const value = this.items.get(item);\n\n        return (value && this.map.get(value)) ?? this.fallback;\n    }\n\n    toggle(item: TuiTreeItemComponent): void {\n        const value = this.items.get(item);\n        const expanded = this.isExpanded(item);\n\n        if (!tuiIsPresent(value)) {\n            return;\n        }\n\n        this.toggled.emit(value);\n        this.map.set(value, !expanded);\n    }\n}\n","import {Directive, Input} from '@angular/core';\n\nimport {TuiTreeItemComponent} from '../components/tree-item/tree-item.component';\nimport {TuiTreeController} from '../misc/tree.interfaces';\nimport {TUI_TREE_CONTROLLER} from '../misc/tree.tokens';\n\n@Directive({\n    selector: '[tuiTreeController]:not([map])',\n    providers: [\n        {\n            provide: TUI_TREE_CONTROLLER,\n            useExisting: TuiTreeItemControllerDirective,\n        },\n    ],\n    exportAs: 'tuiTreeController',\n})\nexport class TuiTreeItemControllerDirective implements TuiTreeController {\n    private readonly map = new WeakMap<TuiTreeItemComponent, boolean>();\n\n    @Input('tuiTreeController')\n    fallback = true;\n\n    isExpanded(item: TuiTreeItemComponent): boolean {\n        return this.map.get(item) ?? this.fallback;\n    }\n\n    toggle(item: TuiTreeItemComponent): void {\n        this.map.set(item, !this.isExpanded(item));\n    }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {map, startWith, switchMap, tap} from 'rxjs/operators';\n\nimport {TuiTreeLoader} from './tree.interfaces';\nimport {TUI_TREE_LOADER, TUI_TREE_LOADING, TUI_TREE_START} from './tree.tokens';\n\n@Injectable()\nexport class TuiTreeService<T> {\n    private readonly map = new Map<T, readonly T[]>([[this.loading, []]]);\n\n    private readonly load$ = new Subject<T>();\n\n    readonly data$ = this.load$.pipe(\n        switchMap(item =>\n            this.loader.loadChildren(item).pipe(\n                tap(children => this.map.set(item, children)),\n                map(children => children.filter(item => !this.loader.hasChildren(item))),\n                tap(children => children.forEach(child => this.map.set(child, []))),\n            ),\n        ),\n        startWith(null),\n        map(() => this.start),\n    );\n\n    constructor(\n        @Inject(TUI_TREE_LOADING) private readonly loading: T,\n        @Inject(TUI_TREE_START) private readonly start: T,\n        @Inject(TUI_TREE_LOADER) private readonly loader: TuiTreeLoader<T>,\n    ) {}\n\n    getChildren(item: T): readonly T[] {\n        return this.map.get(item) || [this.loading];\n    }\n\n    loadChildren(item: T): void {\n        if (this.map.get(item)) {\n            return;\n        }\n\n        this.map.set(item, [this.loading]);\n        this.load$.next(item);\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiLetModule} from '@taiga-ui/cdk';\nimport {TuiButtonModule, TuiExpandModule} from '@taiga-ui/core';\nimport {PolymorpheusModule} from '@tinkoff/ng-polymorpheus';\n\nimport {TuiTreeComponent} from './components/tree/tree.component';\nimport {TuiTreeItemComponent} from './components/tree-item/tree-item.component';\nimport {TuiTreeItemContentComponent} from './components/tree-item-content/tree-item-content.component';\nimport {TuiTreeChildrenDirective} from './directives/tree-children.directive';\nimport {TuiTreeControllerDirective} from './directives/tree-controller.directive';\nimport {TuiTreeItemControllerDirective} from './directives/tree-item-controller.directive';\nimport {TuiTreeNodeDirective} from './directives/tree-node.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PolymorpheusModule,\n        TuiExpandModule,\n        TuiLetModule,\n        TuiButtonModule,\n    ],\n    declarations: [\n        TuiTreeComponent,\n        TuiTreeItemComponent,\n        TuiTreeItemContentComponent,\n        TuiTreeChildrenDirective,\n        TuiTreeItemControllerDirective,\n        TuiTreeControllerDirective,\n        TuiTreeNodeDirective,\n    ],\n    exports: [\n        TuiTreeComponent,\n        TuiTreeItemComponent,\n        TuiTreeChildrenDirective,\n        TuiTreeItemControllerDirective,\n        TuiTreeControllerDirective,\n    ],\n})\nexport class TuiTreeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["EMPTY_ARRAY","i0","Directive","Input","TUI_COMMON_ICONS","POLYMORPHEUS_CONTEXT","forwardRef","i1","i2","Component","ChangeDetectionStrategy","Inject","HostBinding","PolymorpheusComponent","ALWAYS_TRUE_HANDLER","EMPTY_FUNCTION","InjectionToken","tuiCreateToken","SkipSelf","EMPTY_QUERY","Subject","startWith","map","distinctUntilChanged","ElementRef","i3","ContentChildren","Optional","i3.TuiTreeNodeDirective","i4","i5","ViewChild","EventEmitter","tuiIsPresent","Output","switchMap","tap","Injectable","CommonModule","PolymorpheusModule","TuiExpandModule","TuiLetModule","TuiButtonModule","NgModule"],"mappings":"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"}
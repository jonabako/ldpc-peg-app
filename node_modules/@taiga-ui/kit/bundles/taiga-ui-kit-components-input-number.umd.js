(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@maskito/kit'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@tinkoff/ng-polymorpheus'), require('@taiga-ui/kit/directives'), require('@maskito/angular'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/components/input-number', ['exports', '@angular/core', '@angular/forms', '@maskito/kit', '@taiga-ui/cdk', '@taiga-ui/core', '@tinkoff/ng-polymorpheus', '@taiga-ui/kit/directives', '@maskito/angular', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].kit = global["taiga-ui"].kit || {}, global["taiga-ui"].kit.components = global["taiga-ui"].kit.components || {}, global["taiga-ui"].kit.components["input-number"] = {}), global.ng.core, global.ng.forms, global.kit, global.i7, global.i1, global.i5, global["taiga-ui"].kit.directives, global.i3, global.ng.common));
})(this, (function (exports, i0, i6, kit, i7, i1, i5, i2, i3, i4) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    /** Default values for the input number options. */
    var TUI_INPUT_NUMBER_DEFAULT_OPTIONS = {
        icons: {
            up: 'tuiIconPlus',
            down: 'tuiIconMinus',
        },
        min: Number.MIN_SAFE_INTEGER,
        max: Number.MAX_SAFE_INTEGER,
        step: 0,
        decimal: 'not-zero',
        precision: 2,
    };
    /**
     * Default parameters for input count component
     */
    var TUI_INPUT_NUMBER_OPTIONS = i7.tuiCreateToken(TUI_INPUT_NUMBER_DEFAULT_OPTIONS);
    function tuiInputNumberOptionsProvider(options) {
        return i7.tuiProvideOptions(TUI_INPUT_NUMBER_OPTIONS, options, TUI_INPUT_NUMBER_DEFAULT_OPTIONS);
    }

    var DEFAULT_MAX_LENGTH = 18;
    var TUI_NUMBER_VALUE_TRANSFORMER = new i0.InjectionToken('');
    var TuiInputNumberComponent = /** @class */ (function (_super) {
        __extends(TuiInputNumberComponent, _super);
        function TuiInputNumberComponent(control, cdr, transformer, options, numberFormat, isIOS, textfieldSize, controller) {
            var _this = _super.call(this, control, cdr, transformer) || this;
            _this.options = options;
            _this.numberFormat = numberFormat;
            _this.isIOS = isIOS;
            _this.textfieldSize = textfieldSize;
            _this.controller = controller;
            _this.unfinishedValue = '';
            _this.min = _this.options.min;
            _this.max = _this.options.max;
            _this.decimal = _this.options.decimal;
            _this.precision = _this.options.precision;
            _this.step = _this.options.step;
            /** @deprecated use `tuiTextfieldPrefix` from {@link TuiTextfieldControllerModule} instead */
            _this.prefix = '';
            /** @deprecated use `tuiTextfieldPostfix` from {@link TuiTextfieldControllerModule} instead */
            _this.postfix = '';
            _this.polymorpheusValueContent = i7.EMPTY_QUERY;
            return _this;
        }
        Object.defineProperty(TuiInputNumberComponent.prototype, "size", {
            get: function () {
                return this.textfieldSize.size;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "computedMin", {
            get: function () {
                return this.computeMin(this.min, this.max);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "computedMax", {
            get: function () {
                return this.computeMax(this.min, this.max);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "nativeFocusableElement", {
            get: function () {
                return !this.textfield || this.computedDisabled
                    ? null
                    : this.textfield.nativeFocusableElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "focused", {
            get: function () {
                var _a;
                return !!((_a = this.textfield) === null || _a === void 0 ? void 0 : _a.focused);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "isNegativeAllowed", {
            get: function () {
                return this.computedMin < 0;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "inputMode", {
            get: function () {
                if (this.isIOS && this.isNegativeAllowed) {
                    // iPhone does not have minus sign if inputMode is equal to 'numeric' / 'decimal'
                    return 'text';
                }
                return this.decimal === 'never' ? 'numeric' : 'decimal';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "calculatedMaxLength", {
            get: function () {
                var decimalPart = this.decimal !== 'never' &&
                    this.nativeValue.includes(this.numberFormat.decimalSeparator);
                var precision = decimalPart ? Math.min(this.precision + 1, 20) : 0;
                var takeThousand = this.numberFormat.thousandSeparator.repeat(5).length;
                return DEFAULT_MAX_LENGTH + precision + takeThousand;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "formattedValue", {
            get: function () {
                return this.value !== null ? this.getFormattedValue(this.value || 0) : '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "computedValue", {
            get: function () {
                return this.focused ? this.nativeValue : this.formattedValue;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "canDecrement", {
            get: function () {
                return this.interactive && (this.value || 0) > this.computedMin;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "canIncrement", {
            get: function () {
                return this.interactive && (this.value || 0) < this.computedMax;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "computedPrefix", {
            get: function () {
                return this.prefix || this.controller.prefix;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "computedPostfix", {
            get: function () {
                var postfix = this.postfix || this.controller.postfix;
                return postfix && " " + postfix;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "mask", {
            get: function () {
                return this.calculateMask(this.precision, this.decimal, this.numberFormat.decimalSeparator, this.numberFormat.thousandSeparator, this.computedMin, this.computedMax, this.computedPrefix, this.computedPostfix);
            },
            enumerable: false,
            configurable: true
        });
        TuiInputNumberComponent.prototype.onArrow = function (step) {
            if (!step) {
                return;
            }
            this.value = i7.tuiClamp((this.value || 0) + step, this.computedMin, this.computedMax);
            this.nativeValue = this.formattedValue;
        };
        TuiInputNumberComponent.prototype.onValueChange = function (nativeValue) {
            var parsedValue = kit.maskitoParseNumber(nativeValue, this.numberFormat.decimalSeparator);
            this.unfinishedValue = null;
            if (Number.isNaN(parsedValue)) {
                this.value = null;
                return;
            }
            if (this.isNativeValueNotFinished) {
                this.unfinishedValue = nativeValue;
                return;
            }
            if (parsedValue < this.computedMin || parsedValue > this.computedMax) {
                return;
            }
            this.value = parsedValue;
        };
        TuiInputNumberComponent.prototype.onFocused = function (focused) {
            this.updateFocused(focused);
            var nativeNumberValue = this.unfinishedValue
                ? kit.maskitoParseNumber(this.unfinishedValue, this.numberFormat.decimalSeparator)
                : this.nativeNumberValue;
            this.unfinishedValue = null;
            if (Number.isNaN(nativeNumberValue)) {
                this.nativeValue = focused ? this.computedPrefix + this.computedPostfix : '';
                this.value = null;
                return;
            }
            if (!focused) {
                this.value = nativeNumberValue;
                this.nativeValue = this.formattedValue;
            }
        };
        TuiInputNumberComponent.prototype.getFormattedValue = function (value) {
            var absValue = Math.abs(value);
            var hasFraction = absValue % 1 > 0;
            var decimalLimit = this.decimal === 'always' || (hasFraction && this.decimal !== 'never')
                ? this.precision
                : 0;
            var fraction = hasFraction
                ? i1.tuiGetFractionPartPadded(value, this.precision)
                : '';
            if (this.focused && this.decimal !== 'always') {
                decimalLimit = fraction.length;
            }
            return (this.computedPrefix +
                i1.tuiFormatNumber(value, Object.assign(Object.assign({}, this.numberFormat), { decimalLimit: decimalLimit })).replace(i7.CHAR_HYPHEN, i7.CHAR_MINUS) +
                this.computedPostfix);
        };
        Object.defineProperty(TuiInputNumberComponent.prototype, "isNativeValueNotFinished", {
            get: function () {
                var nativeNumberValue = this.nativeNumberValue;
                return nativeNumberValue < 0
                    ? nativeNumberValue > this.computedMax
                    : nativeNumberValue < this.computedMin;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiInputNumberComponent.prototype, "nativeValue", {
            get: function () {
                var _a;
                return ((_a = this.nativeFocusableElement) === null || _a === void 0 ? void 0 : _a.value) || '';
            },
            set: function (value) {
                if (!this.textfield || !this.nativeFocusableElement) {
                    return;
                }
                this.textfield.value = value;
                this.nativeFocusableElement.value = value;
            },
            enumerable: false,
            configurable: true
        });
        TuiInputNumberComponent.prototype.writeValue = function (value) {
            _super.prototype.writeValue.call(this, value);
            this.nativeValue = this.formattedValue;
        };
        Object.defineProperty(TuiInputNumberComponent.prototype, "nativeNumberValue", {
            get: function () {
                return kit.maskitoParseNumber(this.nativeValue, this.numberFormat.decimalSeparator);
            },
            enumerable: false,
            configurable: true
        });
        TuiInputNumberComponent.prototype.computeMin = function (min, max) {
            var _a, _b, _c, _d, _e, _f;
            return Math.min((_c = (_b = (_a = this.valueTransformer) === null || _a === void 0 ? void 0 : _a.fromControlValue(min)) !== null && _b !== void 0 ? _b : min) !== null && _c !== void 0 ? _c : this.options.min, (_f = (_e = (_d = this.valueTransformer) === null || _d === void 0 ? void 0 : _d.fromControlValue(max)) !== null && _e !== void 0 ? _e : max) !== null && _f !== void 0 ? _f : this.options.max);
        };
        TuiInputNumberComponent.prototype.computeMax = function (min, max) {
            var _a, _b, _c, _d, _e, _f;
            return Math.max((_c = (_b = (_a = this.valueTransformer) === null || _a === void 0 ? void 0 : _a.fromControlValue(min)) !== null && _b !== void 0 ? _b : min) !== null && _c !== void 0 ? _c : this.options.min, (_f = (_e = (_d = this.valueTransformer) === null || _d === void 0 ? void 0 : _d.fromControlValue(max)) !== null && _e !== void 0 ? _e : max) !== null && _f !== void 0 ? _f : this.options.max);
        };
        TuiInputNumberComponent.prototype.calculateMask = function (precision, decimalMode, decimalSeparator, thousandSeparator, min, max, prefix, postfix) {
            var _a = kit.maskitoNumberOptionsGenerator({
                decimalSeparator: decimalSeparator,
                thousandSeparator: thousandSeparator,
                min: min,
                max: max,
                prefix: prefix,
                postfix: postfix,
                precision: decimalMode === 'never' ? 0 : precision,
                decimalZeroPadding: decimalMode === 'always',
            }), plugins = _a.plugins, options = __rest(_a, ["plugins"]);
            return Object.assign(Object.assign({}, options), { plugins: __spreadArray(__spreadArray([], __read(plugins)), [
                    kit.maskitoCaretGuard(function (value) { return [
                        prefix.length,
                        value.length - postfix.length,
                    ]; }),
                ]) });
        };
        return TuiInputNumberComponent;
    }(i7.AbstractTuiNullableControl));
    TuiInputNumberComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputNumberComponent, deps: [{ token: i6.NgControl, optional: true, self: true }, { token: i0.ChangeDetectorRef }, { token: TUI_NUMBER_VALUE_TRANSFORMER, optional: true }, { token: TUI_INPUT_NUMBER_OPTIONS }, { token: i1.TUI_NUMBER_FORMAT }, { token: i7.TUI_IS_IOS }, { token: i1.TUI_TEXTFIELD_SIZE }, { token: i1.TUI_TEXTFIELD_WATCHED_CONTROLLER }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiInputNumberComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputNumberComponent, selector: "tui-input-number", inputs: { min: "min", max: "max", decimal: "decimal", precision: "precision", step: "step", prefix: "prefix", postfix: "postfix" }, host: { listeners: { "keydown.arrowDown": "onArrow(-step)", "keydown.arrowUp": "onArrow(step)" }, properties: { "attr.data-size": "this.size" } }, providers: [
            i7.tuiAsFocusableItemAccessor(TuiInputNumberComponent),
            i7.tuiAsControl(TuiInputNumberComponent),
            i1.TEXTFIELD_CONTROLLER_PROVIDER,
        ], queries: [{ propertyName: "polymorpheusValueContent", predicate: i5.PolymorpheusOutletDirective, descendants: true }], viewQueries: [{ propertyName: "textfield", first: true, predicate: i1.TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0__namespace, template: "<tui-primitive-textfield\n    #textfield\n    tuiTextfieldPostfix=\"\"\n    tuiTextfieldPrefix=\"\"\n    tuiValueAccessor\n    class=\"t-textfield\"\n    [disabled]=\"computedDisabled\"\n    [focusable]=\"focusable\"\n    [invalid]=\"computedInvalid\"\n    [maskito]=\"mask\"\n    [pseudoActive]=\"pseudoActive\"\n    [pseudoFocus]=\"computedFocused\"\n    [pseudoHover]=\"pseudoHover\"\n    [readOnly]=\"readOnly\"\n    [value]=\"computedValue\"\n    (focusedChange)=\"onFocused($event)\"\n    (valueChange)=\"onValueChange($event)\"\n>\n    <ng-content></ng-content>\n    <ng-content\n        ngProjectAs=\"input\"\n        select=\"input\"\n    ></ng-content>\n    <div\n        *ngIf=\"polymorpheusValueContent.length\"\n        ngProjectAs=\"tuiContent\"\n        class=\"t-value-content\"\n    >\n        <ng-container *polymorpheusOutlet=\"valueContent as text\">\n            {{ text }}\n        </ng-container>\n    </div>\n</tui-primitive-textfield>\n\n<section\n    *ngIf=\"step\"\n    class=\"t-buttons\"\n>\n    <button\n        size=\"s\"\n        tuiIconButton\n        type=\"button\"\n        class=\"t-button\"\n        [appearance]=\"textfield.appearance\"\n        [disabled]=\"!canIncrement\"\n        [focusable]=\"false\"\n        [icon]=\"options.icons.up\"\n        (click.prevent)=\"onArrow(step)\"\n        (mousedown.prevent)=\"nativeFocusableElement?.focus()\"\n    >\n        +\n    </button>\n    <button\n        size=\"s\"\n        tuiIconButton\n        type=\"button\"\n        class=\"t-button\"\n        [appearance]=\"textfield.appearance\"\n        [disabled]=\"!canDecrement\"\n        [focusable]=\"false\"\n        [icon]=\"options.icons.down\"\n        (click.prevent)=\"onArrow(-step)\"\n        (mousedown.prevent)=\"nativeFocusableElement?.focus()\"\n    >\n        -\n    </button>\n</section>\n\n<ng-container *ngIf=\"polymorpheusValueContent.changes | async\"></ng-container>\n\n<ng-template #valueContent>\n    <ng-content select=\"tuiContent\"></ng-content>\n</ng-template>\n", styles: [":host{display:flex;border-radius:var(--tui-radius-m);text-align:left}.t-textfield{flex:1;max-width:100%;border-radius:inherit;text-align:inherit}.t-textfield:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.t-value-content{width:100%}.t-buttons{display:flex;flex-direction:column;align-items:stretch;margin-left:.125rem;border-radius:inherit}[data-size=s]+.t-buttons{flex-direction:row-reverse}[data-size=s]+.t-buttons .t-button:first-child{margin:0 0 0 .125rem;border-top-right-radius:inherit;border-bottom-right-radius:inherit}[data-size=s]+.t-buttons .t-button:last-child{border-radius:0}[data-size=m]+.t-buttons .t-button{width:calc(var(--tui-height-m) * .75)}[data-size=l]+.t-buttons .t-button{width:calc(var(--tui-height-l) * .75)}.t-button{display:flex;flex:1;height:auto;border-radius:0}.t-button:first-child{margin-bottom:.125rem;border-top-right-radius:inherit}.t-button:last-child{border-bottom-right-radius:inherit}\n"], components: [{ type: i1__namespace.TuiPrimitiveTextfieldComponent, selector: "tui-primitive-textfield", inputs: ["editable", "filler", "iconCleaner", "readOnly", "invalid", "disabled", "prefix", "postfix", "value"], outputs: ["valueChange"] }, { type: i1__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i1__namespace.TuiPrimitiveTextfieldDirective, selector: "tui-primitive-textfield" }, { type: i1__namespace.TuiTextfieldPostfixDirective, selector: "[tuiTextfieldPostfix]", inputs: ["tuiTextfieldPostfix"] }, { type: i1__namespace.TuiTextfieldPrefixDirective, selector: "[tuiTextfieldPrefix]", inputs: ["tuiTextfieldPrefix"] }, { type: i2__namespace.TuiValueAccessorDirective, selector: "[tuiValueAccessor]" }, { type: i3__namespace.MaskitoDirective, selector: "[maskito]", inputs: ["maskito", "maskitoElement"] }, { type: i4__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i4__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    __decorate([
        i7.tuiPure
    ], TuiInputNumberComponent.prototype, "computeMin", null);
    __decorate([
        i7.tuiPure
    ], TuiInputNumberComponent.prototype, "computeMax", null);
    __decorate([
        i7.tuiPure
    ], TuiInputNumberComponent.prototype, "calculateMask", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputNumberComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-input-number',
                        templateUrl: './input-number.template.html',
                        styleUrls: ['./input-number.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            i7.tuiAsFocusableItemAccessor(TuiInputNumberComponent),
                            i7.tuiAsControl(TuiInputNumberComponent),
                            i1.TEXTFIELD_CONTROLLER_PROVIDER,
                        ],
                    }]
            }], ctorParameters: function () {
            return [{ type: i6__namespace.NgControl, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [i6.NgControl]
                        }] }, { type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }, { type: i7__namespace.AbstractTuiValueTransformer, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [TUI_NUMBER_VALUE_TRANSFORMER]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_INPUT_NUMBER_OPTIONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_NUMBER_FORMAT]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i7.TUI_IS_IOS]
                        }] }, { type: i1__namespace.TuiTextfieldSizeDirective, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_TEXTFIELD_SIZE]
                        }] }, { type: i1__namespace.TuiTextfieldController, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_TEXTFIELD_WATCHED_CONTROLLER]
                        }] }];
        }, propDecorators: { textfield: [{
                    type: i0.ViewChild,
                    args: [i1.TuiPrimitiveTextfieldComponent]
                }], min: [{
                    type: i0.Input
                }], max: [{
                    type: i0.Input
                }], decimal: [{
                    type: i0.Input
                }], precision: [{
                    type: i0.Input
                }], step: [{
                    type: i0.Input
                }], prefix: [{
                    type: i0.Input
                }], postfix: [{
                    type: i0.Input
                }], polymorpheusValueContent: [{
                    type: i0.ContentChildren,
                    args: [i5.PolymorpheusOutletDirective, { descendants: true }]
                }], size: [{
                    type: i0.HostBinding,
                    args: ['attr.data-size']
                }], onArrow: [{
                    type: i0.HostListener,
                    args: ['keydown.arrowDown', ['-step']]
                }, {
                    type: i0.HostListener,
                    args: ['keydown.arrowUp', ['step']]
                }], computeMin: [], computeMax: [], calculateMask: [] } });

    var TuiInputNumberDirective = /** @class */ (function (_super) {
        __extends(TuiInputNumberDirective, _super);
        function TuiInputNumberDirective() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(TuiInputNumberDirective.prototype, "value", {
            get: function () {
                return this.host.computedValue;
            },
            enumerable: false,
            configurable: true
        });
        TuiInputNumberDirective.prototype.onValueChange = function (value) {
            this.host.onValueChange(value);
        };
        TuiInputNumberDirective.prototype.ngDoCheck = function () {
            if (!this.host.nativeFocusableElement) {
                return;
            }
            this.host.nativeFocusableElement.inputMode = this.host.inputMode;
            this.host.nativeFocusableElement.maxLength =
                this.host.nativeFocusableElement.maxLength > 0
                    ? this.host.nativeFocusableElement.maxLength
                    : this.host.calculatedMaxLength;
        };
        return TuiInputNumberDirective;
    }(i1.AbstractTuiTextfieldHost));
    TuiInputNumberDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputNumberDirective, deps: null, target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiInputNumberDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiInputNumberDirective, selector: "tui-input-number", providers: [i1.tuiAsTextfieldHost(TuiInputNumberDirective)], usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputNumberDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'tui-input-number',
                        providers: [i1.tuiAsTextfieldHost(TuiInputNumberDirective)],
                    }]
            }] });

    var TuiInputNumberModule = /** @class */ (function () {
        function TuiInputNumberModule() {
        }
        return TuiInputNumberModule;
    }());
    TuiInputNumberModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputNumberModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiInputNumberModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputNumberModule, declarations: [TuiInputNumberComponent, TuiInputNumberDirective], imports: [i4.CommonModule,
            i3.MaskitoModule,
            i1.TuiPrimitiveTextfieldModule,
            i1.TuiTextfieldControllerModule,
            i2.TuiValueAccessorModule,
            i5.PolymorpheusModule,
            i1.TuiButtonModule], exports: [TuiInputNumberComponent, TuiInputNumberDirective, i1.TuiTextfieldComponent] });
    TuiInputNumberModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputNumberModule, imports: [[
                i4.CommonModule,
                i3.MaskitoModule,
                i1.TuiPrimitiveTextfieldModule,
                i1.TuiTextfieldControllerModule,
                i2.TuiValueAccessorModule,
                i5.PolymorpheusModule,
                i1.TuiButtonModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiInputNumberModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i4.CommonModule,
                            i3.MaskitoModule,
                            i1.TuiPrimitiveTextfieldModule,
                            i1.TuiTextfieldControllerModule,
                            i2.TuiValueAccessorModule,
                            i5.PolymorpheusModule,
                            i1.TuiButtonModule,
                        ],
                        declarations: [TuiInputNumberComponent, TuiInputNumberDirective],
                        exports: [TuiInputNumberComponent, TuiInputNumberDirective, i1.TuiTextfieldComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_INPUT_NUMBER_DEFAULT_OPTIONS = TUI_INPUT_NUMBER_DEFAULT_OPTIONS;
    exports.TUI_INPUT_NUMBER_OPTIONS = TUI_INPUT_NUMBER_OPTIONS;
    exports.TUI_NUMBER_VALUE_TRANSFORMER = TUI_NUMBER_VALUE_TRANSFORMER;
    exports.TuiInputNumberComponent = TuiInputNumberComponent;
    exports.TuiInputNumberDirective = TuiInputNumberDirective;
    exports.TuiInputNumberModule = TuiInputNumberModule;
    exports.tuiInputNumberOptionsProvider = tuiInputNumberOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-kit-components-input-number.umd.js.map

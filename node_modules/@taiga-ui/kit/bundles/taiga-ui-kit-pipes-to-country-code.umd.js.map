{"version":3,"file":"taiga-ui-kit-pipes-to-country-code.umd.js","sources":["../../../projects/kit/pipes/to-country-code/to-country-code.pipe.ts","../../../projects/kit/pipes/to-country-code/to-country-code.module.ts","../../../projects/kit/pipes/to-country-code/taiga-ui-kit-pipes-to-country-code.ts"],"sourcesContent":["import {Inject, Pipe, PipeTransform} from '@angular/core';\nimport {CHAR_PLUS} from '@taiga-ui/cdk';\nimport {TuiCountryIsoCode} from '@taiga-ui/i18n';\nimport {TUI_COUNTRIES_MASKS} from '@taiga-ui/kit/tokens';\nimport {\n    tuiGetMaxAllowedPhoneLength,\n    tuiIsoToCountryCode,\n    tuiNotKzRegion,\n} from '@taiga-ui/kit/utils';\n\n@Pipe({\n    name: 'tuiToCountryCode',\n})\nexport class TuiToCountryCodePipe implements PipeTransform {\n    constructor(\n        @Inject(TUI_COUNTRIES_MASKS)\n        private readonly countriesMasks: Record<TuiCountryIsoCode, string>,\n    ) {}\n\n    transform(\n        value: string,\n        countries: readonly TuiCountryIsoCode[],\n    ): TuiCountryIsoCode | undefined {\n        return countries.find(countryIsoCode => {\n            const ruCodeTest =\n                countryIsoCode === TuiCountryIsoCode.RU &&\n                /^[78]/.test(value) &&\n                /^(?!880[1-9 ])/.test(value) &&\n                value.length + 1 ===\n                    tuiGetMaxAllowedPhoneLength(\n                        this.countriesMasks,\n                        TuiCountryIsoCode.RU,\n                    );\n\n            const matched =\n                ruCodeTest ||\n                (value.startsWith(\n                    tuiIsoToCountryCode(this.countriesMasks, countryIsoCode).replace(\n                        CHAR_PLUS,\n                        '',\n                    ),\n                ) &&\n                    value.length + 1 ===\n                        tuiGetMaxAllowedPhoneLength(this.countriesMasks, countryIsoCode));\n\n            if (matched) {\n                switch (countryIsoCode) {\n                    case TuiCountryIsoCode.RU:\n                        return tuiNotKzRegion(value);\n                    case TuiCountryIsoCode.KZ:\n                        return !tuiNotKzRegion(value);\n                    default:\n                        return true;\n                }\n            }\n\n            return false;\n        });\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiToCountryCodePipe} from './to-country-code.pipe';\n\n@NgModule({\n    declarations: [TuiToCountryCodePipe],\n    exports: [TuiToCountryCodePipe],\n})\nexport class TuiExtractCountryCodeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["TuiCountryIsoCode","tuiGetMaxAllowedPhoneLength","tuiIsoToCountryCode","CHAR_PLUS","tuiNotKzRegion","i0","TUI_COUNTRIES_MASKS","Pipe","Inject","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,QAAA,oBAAA,kBAAA,YAAA;IACI,IAAA,SAAA,oBAAA,CAEqB,cAAiD,EAAA;IAAjD,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAmC;SAClE;IAEJ,IAAA,oBAAA,CAAA,SAAA,CAAA,SAAS,GAAT,UACI,KAAa,EACb,SAAuC,EAAA;YAF3C,IAuCC,KAAA,GAAA,IAAA,CAAA;IAnCG,QAAA,OAAO,SAAS,CAAC,IAAI,CAAC,UAAA,cAAc,EAAA;IAChC,YAAA,IAAM,UAAU,GACZ,cAAc,KAAKA,sBAAiB,CAAC,EAAE;IACvC,gBAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;IACnB,gBAAA,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;oBAC5B,KAAK,CAAC,MAAM,GAAG,CAAC;wBACZC,iCAA2B,CACvB,KAAI,CAAC,cAAc,EACnBD,sBAAiB,CAAC,EAAE,CACvB,CAAC;gBAEV,IAAM,OAAO,GACT,UAAU;IACV,iBAAC,KAAK,CAAC,UAAU,CACbE,yBAAmB,CAAC,KAAI,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,OAAO,CAC5DC,aAAS,EACT,EAAE,CACL,CACJ;wBACG,KAAK,CAAC,MAAM,GAAG,CAAC;4BACZF,iCAA2B,CAAC,KAAI,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,CAAC;IAE9E,YAAA,IAAI,OAAO,EAAE;IACT,gBAAA,QAAQ,cAAc;wBAClB,KAAKD,sBAAiB,CAAC,EAAE;IACrB,wBAAA,OAAOI,oBAAc,CAAC,KAAK,CAAC,CAAC;wBACjC,KAAKJ,sBAAiB,CAAC,EAAE;IACrB,wBAAA,OAAO,CAACI,oBAAc,CAAC,KAAK,CAAC,CAAC;IAClC,oBAAA;IACI,wBAAA,OAAO,IAAI,CAAC;IACnB,iBAAA;IACJ,aAAA;IAED,YAAA,OAAO,KAAK,CAAC;IACjB,SAAC,CAAC,CAAC;SACN,CAAA;;;IA7CQ,oBAAA,CAAA,IAAA,GAAAC,aAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,oBAAoB,kBAEjBC,0BAAmB,EAAA,CAAA,EAAA,MAAA,EAAAD,aAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA;0IAFtB,oBAAoB,EAAA,IAAA,EAAA,kBAAA,EAAA,CAAA,CAAA;sHAApB,oBAAoB,EAAA,UAAA,EAAA,CAAA;sBAHhCE,OAAI;IAAC,YAAA,IAAA,EAAA,CAAA;IACF,oBAAA,IAAI,EAAE,kBAAkB;qBAC3B,CAAA;;;kCAGQC,SAAM;mCAACF,0BAAmB,CAAA;;;;ACPnC,QAAA,2BAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,2BAAA,GAAA;;;;mJAAa,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAD,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;oJAA3B,2BAA2B,EAAA,YAAA,EAAA,CAHrB,oBAAoB,CAAA,EAAA,OAAA,EAAA,CACzB,oBAAoB,CAAA,EAAA,CAAA,CAAA;oJAErB,2BAA2B,EAAA,CAAA,CAAA;sHAA3B,2BAA2B,EAAA,UAAA,EAAA,CAAA;sBAJvCI,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;wBACN,YAAY,EAAE,CAAC,oBAAoB,CAAC;wBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;qBAClC,CAAA;;;ICPD;;IAEG;;;;;;;;;;;"}
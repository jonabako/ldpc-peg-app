(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@taiga-ui/cdk'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/kit/directives/highlight', ['exports', '@angular/common', '@angular/core', '@taiga-ui/cdk', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].kit = global["taiga-ui"].kit || {}, global["taiga-ui"].kit.directives = global["taiga-ui"].kit.directives || {}, global["taiga-ui"].kit.directives.highlight = {}), global.ng.common, global.ng.core, global.cdk, global.rxjs));
})(this, (function (exports, common, i0, cdk, i1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    var TuiHighlightDirective = /** @class */ (function () {
        function TuiHighlightDirective(doc, el, renderer, resize$) {
            var _this = this;
            this.doc = doc;
            this.el = el;
            this.renderer = renderer;
            this.highlight = this.setUpHighlight();
            this.treeWalker = this.doc.createTreeWalker(this.el.nativeElement, NodeFilter.SHOW_TEXT, cdk.svgNodeFilter);
            this.tuiHighlight = '';
            this.tuiHighlightColor = 'var(--tui-selection)';
            resize$.subscribe(function () {
                _this.updateStyles();
            });
        }
        Object.defineProperty(TuiHighlightDirective.prototype, "match", {
            get: function () {
                return this.indexOf(this.el.nativeElement.textContent) !== -1;
            },
            enumerable: false,
            configurable: true
        });
        TuiHighlightDirective.prototype.ngOnChanges = function () {
            this.updateStyles();
        };
        TuiHighlightDirective.prototype.updateStyles = function () {
            this.highlight.style.display = 'none';
            if (!this.match) {
                return;
            }
            this.treeWalker.currentNode = this.el.nativeElement;
            do {
                var index = this.indexOf(this.treeWalker.currentNode.nodeValue);
                if (index === -1) {
                    continue;
                }
                var range = this.doc.createRange();
                range.setStart(this.treeWalker.currentNode, index);
                range.setEnd(this.treeWalker.currentNode, index + this.tuiHighlight.length);
                var hostRect = this.el.nativeElement.getBoundingClientRect();
                var _a = range.getBoundingClientRect(), left = _a.left, top = _a.top, width = _a.width, height = _a.height;
                var style = this.highlight.style;
                style.background = this.tuiHighlightColor;
                style.left = cdk.tuiPx(left - hostRect.left);
                style.top = cdk.tuiPx(top - hostRect.top);
                style.width = cdk.tuiPx(width);
                style.height = cdk.tuiPx(height);
                style.display = 'block';
                return;
            } while (this.treeWalker.nextNode());
        };
        TuiHighlightDirective.prototype.indexOf = function (source) {
            return !source || !this.tuiHighlight
                ? -1
                : source.toLowerCase().indexOf(this.tuiHighlight.toLowerCase());
        };
        TuiHighlightDirective.prototype.setUpHighlight = function () {
            var highlight = this.renderer.createElement('div');
            var style = highlight.style;
            style.background = this.tuiHighlightColor;
            style.zIndex = '-1';
            style.position = 'absolute';
            this.renderer.appendChild(this.el.nativeElement, highlight);
            return highlight;
        };
        return TuiHighlightDirective;
    }());
    TuiHighlightDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHighlightDirective, deps: [{ token: common.DOCUMENT }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: cdk.TuiResizeService }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiHighlightDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHighlightDirective, selector: "[tuiHighlight]", inputs: { tuiHighlight: "tuiHighlight", tuiHighlightColor: "tuiHighlightColor" }, host: { properties: { "style.position": "\"relative\"", "style.zIndex": "0" } }, providers: [cdk.TuiDestroyService, cdk.TuiResizeService], usesOnChanges: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHighlightDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiHighlight]',
                        providers: [cdk.TuiDestroyService, cdk.TuiResizeService],
                        host: {
                            '[style.position]': '"relative"',
                            '[style.zIndex]': '0',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: Document, decorators: [{
                            type: i0.Inject,
                            args: [common.DOCUMENT]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i0__namespace.Renderer2, decorators: [{
                            type: i0.Inject,
                            args: [i0.Renderer2]
                        }] }, { type: i1__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [cdk.TuiResizeService]
                        }] }];
        }, propDecorators: { tuiHighlight: [{
                    type: i0.Input
                }], tuiHighlightColor: [{
                    type: i0.Input
                }] } });

    var TuiHighlightModule = /** @class */ (function () {
        function TuiHighlightModule() {
        }
        return TuiHighlightModule;
    }());
    TuiHighlightModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHighlightModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiHighlightModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHighlightModule, declarations: [TuiHighlightDirective], exports: [TuiHighlightDirective] });
    TuiHighlightModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHighlightModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHighlightModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TuiHighlightDirective],
                        exports: [TuiHighlightDirective],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiHighlightDirective = TuiHighlightDirective;
    exports.TuiHighlightModule = TuiHighlightModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-kit-directives-highlight.umd.js.map

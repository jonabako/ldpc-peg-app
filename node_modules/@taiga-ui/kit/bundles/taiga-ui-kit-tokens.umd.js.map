{"version":3,"file":"taiga-ui-kit-tokens.umd.js","sources":["../../../projects/kit/tokens/calendar-date-stream.ts","../../../projects/kit/tokens/countries-masks.ts","../../../projects/kit/tokens/date-inputs-value-transformers.ts","../../../projects/kit/tokens/i18n.ts","../../../projects/kit/tokens/input-date-options.ts","../../../projects/kit/tokens/items-handlers.ts","../../../projects/kit/tokens/mobile-calendar.ts","../../../projects/kit/tokens/month-formatter.ts","../../../projects/kit/tokens/tab-margin.ts","../../../projects/kit/tokens/validation-errors.ts","../../../projects/kit/tokens/taiga-ui-kit-tokens.ts"],"sourcesContent":["import {InjectionToken, Optional, Provider, Self} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {TuiControlValueTransformer, TuiDay, TuiDayRange} from '@taiga-ui/cdk';\nimport {tuiControlValueFactory} from '@taiga-ui/kit/utils';\nimport {Observable} from 'rxjs';\n\n/**\n * Stream that emits calendar data change\n */\nexport const TUI_CALENDAR_DATE_STREAM = new InjectionToken<\n    Observable<TuiDay | TuiDayRange | null>\n>('[TUI_CALENDAR_DATE_STREAM]');\n\nexport function tuiDateStreamWithTransformer(\n    transformer: InjectionToken<TuiControlValueTransformer<any>>,\n): Provider {\n    return {\n        provide: TUI_CALENDAR_DATE_STREAM,\n        deps: [\n            [new Optional(), new Self(), NgControl],\n            [new Optional(), transformer],\n        ],\n        useFactory: tuiControlValueFactory,\n    };\n}\n","import {tuiCreateToken} from '@taiga-ui/cdk';\nimport {TuiCountryIsoCode} from '@taiga-ui/i18n';\n\nexport const TUI_COUNTRIES_MASKS = tuiCreateToken<Record<TuiCountryIsoCode, string>>({\n    [TuiCountryIsoCode.AD]: '+376###-###',\n    [TuiCountryIsoCode.AE]: '+971-##-###-####',\n    [TuiCountryIsoCode.AF]: '+93##-###-####',\n    [TuiCountryIsoCode.AG]: '+1(268) ###-####',\n    [TuiCountryIsoCode.AI]: '+1(264) ###-####',\n    [TuiCountryIsoCode.AL]: '+355(###) ###-###',\n    [TuiCountryIsoCode.AM]: '+374##-###-###',\n    [TuiCountryIsoCode.AO]: '+244(###) ###-###',\n    [TuiCountryIsoCode.AR]: '+54(###) ####-####',\n    [TuiCountryIsoCode.AT]: '+43(###) ###-####',\n    [TuiCountryIsoCode.AU]: '+61#-####-####',\n    [TuiCountryIsoCode.AW]: '+297###-####',\n    [TuiCountryIsoCode.AZ]: '+994##-###-##-##',\n    [TuiCountryIsoCode.BA]: '+387 ###-####-##',\n    [TuiCountryIsoCode.BB]: '+1(246) ###-####',\n    [TuiCountryIsoCode.BD]: '+880##-###-###',\n    [TuiCountryIsoCode.BE]: '+32(###) ###-###',\n    [TuiCountryIsoCode.BF]: '+226##-##-####',\n    [TuiCountryIsoCode.BG]: '+359(###) ###-###',\n    [TuiCountryIsoCode.BH]: '+973####-####',\n    [TuiCountryIsoCode.BI]: '+257##-##-####',\n    [TuiCountryIsoCode.BJ]: '+229##-##-####',\n    [TuiCountryIsoCode.BL]: '+590 ## ## ## ## ##',\n    [TuiCountryIsoCode.BM]: '+1(441) ###-####',\n    [TuiCountryIsoCode.BN]: '+673###-####',\n    [TuiCountryIsoCode.BO]: '+591#-###-####',\n    [TuiCountryIsoCode.BQ]: '+599-###-####',\n    [TuiCountryIsoCode.BR]: '+55(##) ####-#####',\n    [TuiCountryIsoCode.BS]: '+1(242) ###-####',\n    [TuiCountryIsoCode.BT]: '+975#-###-###',\n    [TuiCountryIsoCode.BW]: '+267##-###-###',\n    [TuiCountryIsoCode.BY]: '+375(##) ###-##-##',\n    [TuiCountryIsoCode.BZ]: '+501###-####',\n    [TuiCountryIsoCode.CA]: '+1(###) ###-####',\n    [TuiCountryIsoCode.CD]: '+243(###) ###-###',\n    [TuiCountryIsoCode.CF]: '+236-##-##-####',\n    [TuiCountryIsoCode.CG]: '+242##-###-####',\n    [TuiCountryIsoCode.CH]: '+41##-###-####',\n    [TuiCountryIsoCode.CI]: '+225##-##-###-###',\n    [TuiCountryIsoCode.CL]: '+56#-####-####',\n    [TuiCountryIsoCode.CM]: '+237#####-####',\n    [TuiCountryIsoCode.CN]: '+86(###) ####-####',\n    [TuiCountryIsoCode.CO]: '+57(###) ###-####',\n    [TuiCountryIsoCode.CR]: '+506####-####',\n    [TuiCountryIsoCode.CU]: '+53#-###-####',\n    [TuiCountryIsoCode.CV]: '+238(###) ##-##',\n    [TuiCountryIsoCode.CW]: '+5999-###-####',\n    [TuiCountryIsoCode.CY]: '+357##-###-###',\n    [TuiCountryIsoCode.CZ]: '+420(###) ###-###',\n    [TuiCountryIsoCode.DE]: '+49(###) ###-###-##',\n    [TuiCountryIsoCode.DJ]: '+253##-##-##-##',\n    [TuiCountryIsoCode.DK]: '+45##-##-##-##',\n    [TuiCountryIsoCode.DM]: '+1(767) ###-####',\n    [TuiCountryIsoCode.DO]: '+1(###) ###-####',\n    [TuiCountryIsoCode.DZ]: '+213##-###-####',\n    [TuiCountryIsoCode.EC]: '+593##-###-####',\n    [TuiCountryIsoCode.EE]: '+372####-####',\n    [TuiCountryIsoCode.EG]: '+20(###) ###-####',\n    [TuiCountryIsoCode.ER]: '+291#-###-###',\n    [TuiCountryIsoCode.ES]: '+34(###) ###-###',\n    [TuiCountryIsoCode.ET]: '+251##-###-####',\n    [TuiCountryIsoCode.FI]: '+358(###) ###-##-##',\n    [TuiCountryIsoCode.FJ]: '+679##-#####',\n    [TuiCountryIsoCode.FK]: '+500#####',\n    [TuiCountryIsoCode.FM]: '+691###-####',\n    [TuiCountryIsoCode.FR]: '+33 ## ## ## ## ##',\n    [TuiCountryIsoCode.GA]: '+241##-##-##-##',\n    [TuiCountryIsoCode.GB]: '+44##-####-####',\n    [TuiCountryIsoCode.GD]: '+1(473) ###-####',\n    [TuiCountryIsoCode.GE]: '+995(###) ###-###',\n    [TuiCountryIsoCode.GF]: '+594 ## ## ## ## ##',\n    [TuiCountryIsoCode.GH]: '+233(###) ###-###',\n    [TuiCountryIsoCode.GI]: '+350###-#####',\n    [TuiCountryIsoCode.GL]: '+299##-##-##',\n    [TuiCountryIsoCode.GM]: '+220(###) ##-##',\n    [TuiCountryIsoCode.GN]: '+224##-###-###',\n    [TuiCountryIsoCode.GP]: '+590 ## ## ## ## ##',\n    [TuiCountryIsoCode.GQ]: '+240##-###-####',\n    [TuiCountryIsoCode.GR]: '+30(###) ###-####',\n    [TuiCountryIsoCode.GT]: '+502#-###-####',\n    [TuiCountryIsoCode.GW]: '+245#-######',\n    [TuiCountryIsoCode.GY]: '+592###-####',\n    [TuiCountryIsoCode.HK]: '+852####-####',\n    [TuiCountryIsoCode.HN]: '+504####-####',\n    [TuiCountryIsoCode.HR]: '+385##-###-####',\n    [TuiCountryIsoCode.HT]: '+509##-##-####',\n    [TuiCountryIsoCode.HU]: '+36(###) ###-###',\n    [TuiCountryIsoCode.ID]: '+62(###) ###-##-###',\n    [TuiCountryIsoCode.IE]: '+353(###) ###-###',\n    [TuiCountryIsoCode.IL]: '+972##-###-####',\n    [TuiCountryIsoCode.IN]: '+91(####) ###-###',\n    [TuiCountryIsoCode.IQ]: '+964(###) ###-####',\n    [TuiCountryIsoCode.IR]: '+98(###) ###-####',\n    [TuiCountryIsoCode.IS]: '+354###-####',\n    [TuiCountryIsoCode.IT]: '+39(###) ####-###',\n    [TuiCountryIsoCode.JM]: '+1(876) ###-####',\n    [TuiCountryIsoCode.JO]: '+962#-####-####',\n    [TuiCountryIsoCode.JP]: '+81-##-####-####',\n    [TuiCountryIsoCode.KE]: '+254###-######',\n    [TuiCountryIsoCode.KG]: '+996(###) ###-###',\n    [TuiCountryIsoCode.KH]: '+855##-###-###',\n    [TuiCountryIsoCode.KM]: '+269##-#####',\n    [TuiCountryIsoCode.KN]: '+1(869) ###-####',\n    [TuiCountryIsoCode.KP]: '+850####-#############',\n    [TuiCountryIsoCode.KR]: '+82##-###-####',\n    [TuiCountryIsoCode.KW]: '+965####-####',\n    [TuiCountryIsoCode.KY]: '+1(345) ###-####',\n    [TuiCountryIsoCode.KZ]: '+7(###) ###-##-##',\n    [TuiCountryIsoCode.LA]: '+856##-##-###-###',\n    [TuiCountryIsoCode.LB]: '+961##-###-###',\n    [TuiCountryIsoCode.LC]: '+1(758) ###-####',\n    [TuiCountryIsoCode.LI]: '+423(###) ###-####',\n    [TuiCountryIsoCode.LK]: '+94##-###-####',\n    [TuiCountryIsoCode.LR]: '+231##-###-###',\n    [TuiCountryIsoCode.LS]: '+266#-###-####',\n    [TuiCountryIsoCode.LT]: '+370(###) ##-###',\n    [TuiCountryIsoCode.LU]: '+352(###) ###-###',\n    [TuiCountryIsoCode.LV]: '+371##-###-###',\n    [TuiCountryIsoCode.LY]: '+218##-###-####',\n    [TuiCountryIsoCode.MA]: '+212##-####-###',\n    [TuiCountryIsoCode.MC]: '+377###-###-###',\n    [TuiCountryIsoCode.MD]: '+373####-####',\n    [TuiCountryIsoCode.ME]: '+382##-###-###',\n    [TuiCountryIsoCode.MF]: '+590 ## ## ## ## ##',\n    [TuiCountryIsoCode.MG]: '+261##-##-#####',\n    [TuiCountryIsoCode.MK]: '+389##-###-###',\n    [TuiCountryIsoCode.ML]: '+223##-##-####',\n    [TuiCountryIsoCode.MM]: '+95##-###-###',\n    [TuiCountryIsoCode.MN]: '+976##-##-####',\n    [TuiCountryIsoCode.MO]: '+853####-####',\n    [TuiCountryIsoCode.MQ]: '+596 ## ## ## ## ##',\n    [TuiCountryIsoCode.MR]: '+222##-##-####',\n    [TuiCountryIsoCode.MS]: '+1(664) ###-####',\n    [TuiCountryIsoCode.MT]: '+356####-####',\n    [TuiCountryIsoCode.MU]: '+230####-####',\n    [TuiCountryIsoCode.MV]: '+960###-####',\n    [TuiCountryIsoCode.MW]: '+265#-####-####',\n    [TuiCountryIsoCode.MX]: '+52(###) ###-####',\n    [TuiCountryIsoCode.MY]: '+60(###) ###-###',\n    [TuiCountryIsoCode.MZ]: '+258##-###-###',\n    [TuiCountryIsoCode.NA]: '+264##-###-####',\n    [TuiCountryIsoCode.NC]: '+687 ### ###',\n    [TuiCountryIsoCode.NE]: '+227##-##-####',\n    [TuiCountryIsoCode.NG]: '+234(###) ###-####',\n    [TuiCountryIsoCode.NI]: '+505####-####',\n    [TuiCountryIsoCode.NL]: '+31##-###-####',\n    [TuiCountryIsoCode.NO]: '+47(###) ##-###',\n    [TuiCountryIsoCode.NP]: '+977##-###-###',\n    [TuiCountryIsoCode.NZ]: '+64(###) ###-####',\n    [TuiCountryIsoCode.OM]: '+968##-###-###',\n    [TuiCountryIsoCode.PA]: '+507###-####',\n    [TuiCountryIsoCode.PE]: '+51(###) ###-###',\n    [TuiCountryIsoCode.PF]: '+689 ## ## ## ##',\n    [TuiCountryIsoCode.PG]: '+675(###) ##-###',\n    [TuiCountryIsoCode.PH]: '+63(###) ###-####',\n    [TuiCountryIsoCode.PK]: '+92(###) ###-####',\n    [TuiCountryIsoCode.PL]: '+48(###) ###-###',\n    [TuiCountryIsoCode.PT]: '+351##-###-####',\n    [TuiCountryIsoCode.PW]: '+680###-####',\n    [TuiCountryIsoCode.PY]: '+595(###) ###-###',\n    [TuiCountryIsoCode.QA]: '+974####-####',\n    [TuiCountryIsoCode.RE]: '+262 ## ## ## ## ##',\n    [TuiCountryIsoCode.RO]: '+40##-###-####',\n    [TuiCountryIsoCode.RS]: '+381##-###-####',\n    [TuiCountryIsoCode.RU]: '+7### ###-##-##',\n    [TuiCountryIsoCode.RW]: '+250(###) ###-###',\n    [TuiCountryIsoCode.SA]: '+966#-####-####',\n    [TuiCountryIsoCode.SB]: '+677###-####',\n    [TuiCountryIsoCode.SC]: '+248#-###-###',\n    [TuiCountryIsoCode.SD]: '+249##-###-####',\n    [TuiCountryIsoCode.SE]: '+46##-###-####',\n    [TuiCountryIsoCode.SG]: '+65####-####',\n    [TuiCountryIsoCode.SH]: '+290####',\n    [TuiCountryIsoCode.SI]: '+386##-###-###',\n    [TuiCountryIsoCode.SK]: '+421(###) ###-###',\n    [TuiCountryIsoCode.SL]: '+232##-######',\n    [TuiCountryIsoCode.SM]: '+378####-######',\n    [TuiCountryIsoCode.SN]: '+221##-###-####',\n    [TuiCountryIsoCode.SO]: '+252##-###-###',\n    [TuiCountryIsoCode.SR]: '+597###-####',\n    [TuiCountryIsoCode.ST]: '+239##-#####',\n    [TuiCountryIsoCode.SV]: '+503##-##-####',\n    [TuiCountryIsoCode.SX]: '+1(721) ###-####',\n    [TuiCountryIsoCode.SY]: '+963##-####-###',\n    [TuiCountryIsoCode.SZ]: '+268##-##-####',\n    [TuiCountryIsoCode.TC]: '+1(649) ###-####',\n    [TuiCountryIsoCode.TD]: '+235##-##-##-##',\n    [TuiCountryIsoCode.TG]: '+228##-###-###',\n    [TuiCountryIsoCode.TH]: '+66##-###-####',\n    [TuiCountryIsoCode.TJ]: '+992##-###-####',\n    [TuiCountryIsoCode.TL]: '+670###-#####',\n    [TuiCountryIsoCode.TM]: '+993#-###-####',\n    [TuiCountryIsoCode.TN]: '+216##-###-###',\n    [TuiCountryIsoCode.TO]: '+676#####',\n    [TuiCountryIsoCode.TR]: '+90(###) ###-####',\n    [TuiCountryIsoCode.TT]: '+1(868) ###-####',\n    [TuiCountryIsoCode.TW]: '+886#-####-####',\n    [TuiCountryIsoCode.TZ]: '+255##-###-####',\n    [TuiCountryIsoCode.UA]: '+380(##) ###-##-##',\n    [TuiCountryIsoCode.UG]: '+256(###) ###-###',\n    [TuiCountryIsoCode.US]: '+1(###) ###-####',\n    [TuiCountryIsoCode.UY]: '+598#-###-##-##',\n    [TuiCountryIsoCode.UZ]: '+998##-###-####',\n    [TuiCountryIsoCode.VC]: '+1(784) ###-####',\n    [TuiCountryIsoCode.VE]: '+58(###) ###-####',\n    [TuiCountryIsoCode.VG]: '+1(284)###-####',\n    [TuiCountryIsoCode.VN]: '+84(###) ####-###',\n    [TuiCountryIsoCode.VU]: '+678##-#####',\n    [TuiCountryIsoCode.WS]: '+685##-####',\n    [TuiCountryIsoCode.XK]: '+383##-###-###',\n    [TuiCountryIsoCode.YE]: '+967###-###-###',\n    [TuiCountryIsoCode.YT]: '+262 ## ## ## ## ##',\n    [TuiCountryIsoCode.ZA]: '+27##-###-####',\n    [TuiCountryIsoCode.ZM]: '+260##-###-####',\n    [TuiCountryIsoCode.ZW]: '+263#-######',\n});\n","import {InjectionToken} from '@angular/core';\nimport {TuiControlValueTransformer, TuiDay, TuiDayRange, TuiTime} from '@taiga-ui/cdk';\n\n// TODO: Refactor to use `AbstractTuiValueTransformer` and add ability to provide it for all controls\n\n/**\n * Control value transformer of TuiDay to custom value format for InputDate* components\n */\nexport const TUI_DATE_VALUE_TRANSFORMER = new InjectionToken<\n    TuiControlValueTransformer<TuiDay | null>\n>('[TUI_DATE_VALUE_TRANSFORMER]');\n\n/**\n * Control value transformer for InputDateRange component\n */\nexport const TUI_DATE_RANGE_VALUE_TRANSFORMER = new InjectionToken<\n    TuiControlValueTransformer<TuiDayRange | null>\n>('[TUI_DATE_RANGE_VALUE_TRANSFORMER]');\n\n/**\n * Control value transformer for InputDateTime component\n */\nexport const TUI_DATE_TIME_VALUE_TRANSFORMER = new InjectionToken<\n    TuiControlValueTransformer<[TuiDay | null, TuiTime | null]>\n>('[TUI_DATE_TIME_VALUE_TRANSFORMER]');\n","import {tuiCreateTokenFromFactory, TuiDateMode} from '@taiga-ui/cdk';\nimport {TuiCountryIsoCode, tuiExtractI18n} from '@taiga-ui/i18n';\nimport {Observable} from 'rxjs';\n\nexport const TUI_PROMPT_WORDS = tuiCreateTokenFromFactory(tuiExtractI18n('prompt'));\n\nexport const TUI_CANCEL_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('cancel'));\n\nexport const TUI_DONE_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('done'));\n\nexport const TUI_MORE_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('more'));\n\nexport const TUI_HIDE_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('hide'));\n\nexport const TUI_SHOW_ALL_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('showAll'));\n\nexport const TUI_OTHER_DATE_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('otherDate'));\n\nexport const TUI_CHOOSE_DAY_OR_RANGE_TEXTS = tuiCreateTokenFromFactory(\n    tuiExtractI18n('mobileCalendarTexts'),\n);\n\nexport const TUI_FROM_TO_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('range'));\n\nexport const TUI_PLUS_MINUS_TEXTS = tuiCreateTokenFromFactory(\n    tuiExtractI18n('countTexts'),\n);\n\nexport const TUI_TIME_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('time'));\n\nexport const TUI_DATE_TEXTS = tuiCreateTokenFromFactory<\n    Observable<Record<TuiDateMode, string>>\n>(tuiExtractI18n('dateTexts'));\n\nexport const TUI_DIGITAL_INFORMATION_UNITS = tuiCreateTokenFromFactory(\n    tuiExtractI18n('digitalInformationUnits'),\n);\n\nexport const TUI_COPY_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('copyTexts'));\n\nexport const TUI_PASSWORD_TEXTS = tuiCreateTokenFromFactory(\n    tuiExtractI18n('passwordTexts'),\n);\n\nexport const TUI_CALENDAR_MONTHS = tuiCreateTokenFromFactory(\n    tuiExtractI18n('shortCalendarMonths'),\n);\n\nexport const TUI_FILE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('fileTexts'));\n\nexport const TUI_PAGINATION_TEXTS = tuiCreateTokenFromFactory(\n    tuiExtractI18n('pagination'),\n);\n\nexport const TUI_INPUT_FILE_TEXTS = tuiCreateTokenFromFactory(\n    tuiExtractI18n('inputFileTexts'),\n);\n\nexport const TUI_MULTI_SELECT_TEXTS = tuiCreateTokenFromFactory(\n    tuiExtractI18n('multiSelectTexts'),\n);\n\nexport const TUI_COUNTRIES = tuiCreateTokenFromFactory<\n    Observable<Record<TuiCountryIsoCode, string>>\n>(tuiExtractI18n('countries'));\n","import {Provider} from '@angular/core';\nimport {\n    TUI_FIRST_DAY,\n    TUI_LAST_DAY,\n    TuiContextWithImplicit,\n    tuiCreateToken,\n    TuiDay,\n    tuiProvideOptions,\n} from '@taiga-ui/cdk';\nimport {TuiSizeL, TuiSizeS} from '@taiga-ui/core';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nexport interface TuiInputDateOptions {\n    readonly icon: PolymorpheusContent<TuiContextWithImplicit<TuiSizeL | TuiSizeS>>;\n    readonly max: TuiDay;\n    readonly min: TuiDay;\n    readonly nativePicker: boolean;\n}\n\nexport const TUI_INPUT_DATE_DEFAULT_OPTIONS: TuiInputDateOptions = {\n    icon: ({$implicit}) =>\n        $implicit === 's' ? 'tuiIconCalendar' : 'tuiIconCalendarLarge',\n    min: TUI_FIRST_DAY,\n    max: TUI_LAST_DAY,\n    nativePicker: false,\n};\n\n/**\n * Default parameters for InputDate component\n */\nexport const TUI_INPUT_DATE_OPTIONS = tuiCreateToken(TUI_INPUT_DATE_DEFAULT_OPTIONS);\n\nexport function tuiInputDateOptionsProvider(\n    options: Partial<TuiInputDateOptions>,\n): Provider {\n    return tuiProvideOptions(\n        TUI_INPUT_DATE_OPTIONS,\n        options,\n        TUI_INPUT_DATE_DEFAULT_OPTIONS,\n    );\n}\n","import {Provider} from '@angular/core';\nimport {\n    ALWAYS_FALSE_HANDLER,\n    TUI_DEFAULT_IDENTITY_MATCHER,\n    TUI_DEFAULT_STRINGIFY,\n    TuiBooleanHandler,\n    tuiCreateToken,\n    TuiIdentityMatcher,\n    tuiProvideOptions,\n    TuiStringHandler,\n} from '@taiga-ui/cdk';\n\nexport interface TuiItemsHandlers<T> {\n    readonly disabledItemHandler: TuiBooleanHandler<T>;\n    readonly identityMatcher: TuiIdentityMatcher<T>;\n    readonly stringify: TuiStringHandler<T>;\n}\n\nexport const TUI_DEFAULT_ITEMS_HANDLERS: TuiItemsHandlers<unknown> = {\n    stringify: TUI_DEFAULT_STRINGIFY,\n    identityMatcher: TUI_DEFAULT_IDENTITY_MATCHER,\n    disabledItemHandler: ALWAYS_FALSE_HANDLER,\n};\n\n/**\n * Default items handlers for components\n */\nexport const TUI_ITEMS_HANDLERS = tuiCreateToken(TUI_DEFAULT_ITEMS_HANDLERS);\n\nexport function tuiItemsHandlersProvider<T>(\n    options: Partial<TuiItemsHandlers<T>>,\n): Provider {\n    return tuiProvideOptions(TUI_ITEMS_HANDLERS, options, TUI_DEFAULT_ITEMS_HANDLERS);\n}\n","import {InjectionToken, Type} from '@angular/core';\n\n/**\n * A component for mobile data picker\n */\nexport const TUI_MOBILE_CALENDAR = new InjectionToken<Type<unknown>>(\n    '[TUI_MOBILE_CALENDAR]',\n);\n","import {InjectionToken} from '@angular/core';\nimport {TuiHandler, TuiMonth} from '@taiga-ui/cdk';\nimport {Observable} from 'rxjs';\n\n/**\n * A function to get localized formatted month\n */\nexport const TUI_MONTH_FORMATTER = new InjectionToken<\n    TuiHandler<TuiMonth | null, Observable<string>>\n>('[TUI_MONTH_FORMATTER]');\n","import {tuiCreateToken} from '@taiga-ui/cdk';\n\n/**\n * Margin between tabs\n */\nexport const TUI_TAB_MARGIN = tuiCreateToken(24);\n","import {tuiCreateToken} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\nimport {Observable} from 'rxjs';\n\n/**\n * Validation errors\n */\nexport const TUI_VALIDATION_ERRORS = tuiCreateToken<\n    Record<string, Observable<PolymorpheusContent> | PolymorpheusContent>\n>({});\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["InjectionToken","Optional","Self","NgControl","tuiControlValueFactory","tuiCreateToken","TuiCountryIsoCode","tuiCreateTokenFromFactory","tuiExtractI18n","TUI_FIRST_DAY","TUI_LAST_DAY","tuiProvideOptions","TUI_DEFAULT_STRINGIFY","TUI_DEFAULT_IDENTITY_MATCHER","ALWAYS_FALSE_HANDLER"],"mappings":"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"}
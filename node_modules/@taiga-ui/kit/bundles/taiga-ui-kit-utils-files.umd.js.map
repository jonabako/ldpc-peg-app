{"version":3,"file":"taiga-ui-kit-utils-files.umd.js","sources":["../../../projects/kit/utils/files/format-size.ts","../../../projects/kit/utils/files/get-accept-array.ts","../../../projects/kit/utils/files/taiga-ui-kit-utils-files.ts"],"sourcesContent":["import {tuiRound} from '@taiga-ui/cdk';\n\nconst BYTES_PER_KIB = 1024;\nconst BYTES_PER_MIB = 1024 * BYTES_PER_KIB;\n\nexport function tuiFormatSize(\n    units: [string, string, string],\n    size?: number,\n): string | null {\n    if (size === undefined) {\n        return null;\n    }\n\n    if (size < BYTES_PER_KIB) {\n        return `${size} ${units[0]}`;\n    }\n\n    if (size < BYTES_PER_MIB) {\n        return `${(size / BYTES_PER_KIB).toFixed(0)} ${units[1]}`;\n    }\n\n    return `${tuiRound(size / BYTES_PER_MIB, 2).toLocaleString('ru-RU')} ${units[2]}`;\n}\n","export function tuiGetAcceptArray(accept: string): readonly string[] {\n    return accept\n        .toLowerCase()\n        .split(',')\n        .map(format => format.trim());\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tuiRound"],"mappings":";;;;;;IAEA,IAAM,aAAa,GAAG,IAAI,CAAC;IAC3B,IAAM,aAAa,GAAG,IAAI,GAAG,aAAa,CAAC;IAE3B,SAAA,aAAa,CACzB,KAA+B,EAC/B,IAAa,EAAA;QAEb,IAAI,IAAI,KAAK,SAAS,EAAE;IACpB,QAAA,OAAO,IAAI,CAAC;IACf,KAAA;QAED,IAAI,IAAI,GAAG,aAAa,EAAE;IACtB,QAAA,OAAU,IAAI,GAAI,GAAA,GAAA,KAAK,CAAC,CAAC,CAAG,CAAC;IAChC,KAAA;QAED,IAAI,IAAI,GAAG,aAAa,EAAE;IACtB,QAAA,OAAU,CAAC,IAAI,GAAG,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC,GAAI,GAAA,GAAA,KAAK,CAAC,CAAC,CAAG,CAAC;IAC7D,KAAA;IAED,IAAA,OAAUA,YAAQ,CAAC,IAAI,GAAG,aAAa,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,GAAA,GAAA,GAAI,KAAK,CAAC,CAAC,CAAG,CAAC;IACtF;;ICtBM,SAAU,iBAAiB,CAAC,MAAc,EAAA;IAC5C,IAAA,OAAO,MAAM;IACR,SAAA,WAAW,EAAE;aACb,KAAK,CAAC,GAAG,CAAC;IACV,SAAA,GAAG,CAAC,UAAA,MAAM,EAAA,EAAI,OAAA,MAAM,CAAC,IAAI,EAAE,CAAA,EAAA,CAAC,CAAC;IACtC;;ICLA;;IAEG;;;;;;;;;;;"}
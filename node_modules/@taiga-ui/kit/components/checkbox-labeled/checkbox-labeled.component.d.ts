import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiNullableControl, TuiFocusableElementAccessor, TuiNativeFocusableElement } from '@taiga-ui/cdk';
import { TuiBrightness, TuiCheckboxOptions, TuiSizeL } from '@taiga-ui/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class TuiCheckboxLabeledComponent extends AbstractTuiNullableControl<boolean> implements TuiFocusableElementAccessor {
    readonly mode$: Observable<TuiBrightness | null>;
    private readonly options;
    private readonly checkbox?;
    size: TuiSizeL;
    constructor(control: NgControl | null, cdr: ChangeDetectorRef, mode$: Observable<TuiBrightness | null>, options: TuiCheckboxOptions);
    get focused(): boolean;
    get nativeFocusableElement(): TuiNativeFocusableElement | null;
    onFocused(focused: boolean): void;
    /** @deprecated use 'value' setter */
    onModelChange(value: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiCheckboxLabeledComponent, [{ optional: true; self: true; }, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiCheckboxLabeledComponent, "tui-checkbox-labeled", never, { "size": "size"; }, {}, never, ["*"]>;
}

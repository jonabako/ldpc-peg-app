import { ChangeDetectorRef } from '@angular/core';
import { NgControl } from '@angular/forms';
import { AbstractTuiControl, AbstractTuiValueTransformer, TuiActiveZoneDirective, TuiContextWithImplicit, TuiFocusableElementAccessor } from '@taiga-ui/cdk';
import { TuiDataListHost, TuiSizeL, TuiSizeS, TuiTextfieldSizeDirective } from '@taiga-ui/core';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import * as i0 from "@angular/core";
export declare class TuiInputComponent extends AbstractTuiControl<string> implements TuiFocusableElementAccessor, TuiDataListHost<string> {
    private readonly textfieldSize;
    private readonly hostedDropdown?;
    private readonly textfield?;
    readonly datalist: PolymorpheusContent<TuiContextWithImplicit<TuiActiveZoneDirective>>;
    open: boolean;
    constructor(control: NgControl | null, cdr: ChangeDetectorRef, textfieldSize: TuiTextfieldSizeDirective, valueTransformer?: AbstractTuiValueTransformer<string> | null);
    get size(): TuiSizeL | TuiSizeS;
    get nativeFocusableElement(): HTMLInputElement | null;
    get focused(): boolean;
    get canOpen(): boolean;
    onValueChange(value: string): void;
    onActiveZone(active: boolean): void;
    handleOption(item: unknown): void;
    protected getFallbackValue(): string;
    private focusInput;
    private setNativeValue;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiInputComponent, [{ optional: true; self: true; }, null, null, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiInputComponent, "tui-input", never, {}, {}, ["datalist"], ["*", "input"]>;
}

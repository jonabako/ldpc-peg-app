import * as i0 from '@angular/core';
import { Component, ChangeDetectionStrategy, Inject, inject, Injectable, NgModule } from '@angular/core';
import { TUI_IS_IOS, tuiCreateToken, tuiProvideOptions, AbstractTuiDialogService, tuiAsDialog } from '@taiga-ui/cdk';
import * as i3 from '@tinkoff/ng-polymorpheus';
import { POLYMORPHEUS_CONTEXT, PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';
import * as i1 from '@taiga-ui/core';
import { TuiButtonModule } from '@taiga-ui/core';
import * as i2 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i4 from '@taiga-ui/addon-mobile/directives/ripple';
import { TuiRippleModule } from '@taiga-ui/addon-mobile/directives/ripple';

class TuiMobileDialogComponent {
    constructor(isIOS, context) {
        this.isIOS = isIOS;
        this.context = context;
    }
    onAction(index) {
        this.context.completeWith(index);
    }
}
TuiMobileDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileDialogComponent, deps: [{ token: TUI_IS_IOS }, { token: POLYMORPHEUS_CONTEXT }], target: i0.ɵɵFactoryTarget.Component });
TuiMobileDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiMobileDialogComponent, selector: "tui-mobile-dialog", host: { properties: { "class._ios": "isIOS" } }, ngImport: i0, template: "<h2\n    *ngIf=\"!!context.label\"\n    automation-id=\"tui-mobile-dialog__label\"\n    class=\"t-heading\"\n    [id]=\"context.id\"\n>\n    {{ context.label }}\n</h2>\n<div class=\"t-content\">\n    <!-- TODO: Polymorpheus fix type -->\n    <ng-container *polymorpheusOutlet=\"$any(context.content) as text; context: context\">\n        {{ text }}\n    </ng-container>\n</div>\n<button\n    *ngFor=\"let action of context.actions; let index = index\"\n    appearance=\"flat\"\n    size=\"s\"\n    tuiButton\n    tuiRipple\n    type=\"button\"\n    class=\"t-button\"\n    [class.t-button_column]=\"context.actions.length > 2\"\n    (click)=\"onAction(index)\"\n>\n    {{ action }}\n</button>\n", styles: [":host{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);display:block;background:var(--tui-base-01);word-break:break-word;overflow:hidden;padding:1.25rem .75rem 0 1.5rem}:host:not(._ios){max-width:17.5rem;border-radius:.125rem;text-align:left;box-shadow:0 1.5rem 1.5rem #00000052}:host._ios{max-width:16.875rem;padding:1.5rem 0 0;border-radius:.75rem;text-align:center}.t-heading{font-size:1rem}:host._ios .t-heading{font-weight:bold;font-size:1.125rem}.t-content{margin-top:.75rem;font-size:.875rem;line-height:1.25rem;padding-right:.75rem}:host._ios .t-content{margin-top:.25rem;padding-left:1.5rem;padding-right:1.5rem}.t-button{border-radius:0}:host._ios .t-button{border-top:#b8b8b8 1px solid;height:2.625rem;width:100%}:host._ios .t-button:first-of-type{margin-top:1.125rem}:host:not(._ios) .t-button{margin:.5rem 0 .5rem .5rem;float:right}:host:not(._ios) .t-button_column{display:block;float:none;margin-left:auto}\n"], components: [{ type: i1.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i4.TuiRippleDirective, selector: "[tuiRipple]", inputs: ["tuiRipple"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileDialogComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-mobile-dialog',
                    templateUrl: './mobile-dialog.template.html',
                    styleUrls: ['./mobile-dialog.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: {
                        '[class._ios]': 'isIOS',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_IOS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [POLYMORPHEUS_CONTEXT]
                }] }]; } });

const TUI_MOBILE_DIALOG_DEFAULT_OPTIONS = {
    label: '',
    actions: ['OK'],
};
/**
 * Default parameters for mobile dialog component
 */
const TUI_MOBILE_DIALOG_OPTIONS = tuiCreateToken(TUI_MOBILE_DIALOG_DEFAULT_OPTIONS);
function tuiMobileDialogOptionsProvider(options) {
    return tuiProvideOptions(TUI_MOBILE_DIALOG_OPTIONS, options, TUI_MOBILE_DIALOG_DEFAULT_OPTIONS);
}

const DIALOG = new PolymorpheusComponent(TuiMobileDialogComponent);
class TuiMobileDialogService extends AbstractTuiDialogService {
    constructor() {
        super(...arguments);
        this.component = DIALOG;
        this.defaultOptions = Object.assign(Object.assign({}, inject(TUI_MOBILE_DIALOG_OPTIONS)), { data: undefined });
    }
    open(content, options = {}) {
        return super.open(content, options);
    }
}
TuiMobileDialogService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileDialogService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
TuiMobileDialogService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileDialogService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileDialogService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }] });

class TuiMobileDialogModule {
}
TuiMobileDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiMobileDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileDialogModule, declarations: [TuiMobileDialogComponent], imports: [CommonModule, TuiButtonModule, TuiRippleModule, PolymorpheusModule], exports: [TuiMobileDialogComponent] });
TuiMobileDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileDialogModule, providers: [tuiAsDialog(TuiMobileDialogService)], imports: [[CommonModule, TuiButtonModule, TuiRippleModule, PolymorpheusModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiMobileDialogModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, TuiButtonModule, TuiRippleModule, PolymorpheusModule],
                    declarations: [TuiMobileDialogComponent],
                    providers: [tuiAsDialog(TuiMobileDialogService)],
                    exports: [TuiMobileDialogComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TUI_MOBILE_DIALOG_DEFAULT_OPTIONS, TUI_MOBILE_DIALOG_OPTIONS, TuiMobileDialogComponent, TuiMobileDialogModule, TuiMobileDialogService, tuiMobileDialogOptionsProvider };
//# sourceMappingURL=taiga-ui-addon-mobile-components-mobile-dialog.js.map

import * as i0 from '@angular/core';
import { TemplateRef, Injector, ChangeDetectorRef, Directive, Inject, Input, Component, ChangeDetectionStrategy, HostBinding, NgModule } from '@angular/core';
import { TUI_ANIMATION_OPTIONS, tuiSlideIn } from '@taiga-ui/core';
import * as i1 from '@taiga-ui/cdk';
import { TuiDropdownPortalService, TuiActiveZoneModule } from '@taiga-ui/cdk';
import * as i2 from '@tinkoff/ng-polymorpheus';
import { PolymorpheusTemplate, PolymorpheusComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';

class TuiSidebarDirective extends PolymorpheusTemplate {
    constructor(content, injector, portalService, cdr) {
        super(content, cdr);
        this.content = content;
        this.injector = injector;
        this.portalService = portalService;
        this.component = new PolymorpheusComponent(TuiSidebarComponent, this.injector);
        this.sidebarRef = null;
        this.direction = 'left';
        this.autoWidth = false;
    }
    set tuiSidebar(open) {
        if (open) {
            this.show();
        }
        else {
            this.hide();
        }
    }
    ngOnDestroy() {
        this.hide();
    }
    show() {
        if (this.sidebarRef !== null) {
            return;
        }
        this.sidebarRef = this.portalService.add(this.component);
        this.sidebarRef.changeDetectorRef.detectChanges();
    }
    hide() {
        if (this.sidebarRef === null) {
            return;
        }
        this.portalService.remove(this.sidebarRef);
        this.sidebarRef = null;
    }
}
TuiSidebarDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSidebarDirective, deps: [{ token: TemplateRef }, { token: Injector }, { token: TuiDropdownPortalService }, { token: ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });
TuiSidebarDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiSidebarDirective, selector: "[tuiSidebar]", inputs: { direction: ["tuiSidebarDirection", "direction"], autoWidth: ["tuiSidebarAutoWidth", "autoWidth"], tuiSidebar: "tuiSidebar" }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSidebarDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiSidebar]',
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{
                    type: Inject,
                    args: [TemplateRef]
                }] }, { type: i0.Injector, decorators: [{
                    type: Inject,
                    args: [Injector]
                }] }, { type: i1.TuiDropdownPortalService, decorators: [{
                    type: Inject,
                    args: [TuiDropdownPortalService]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }]; }, propDecorators: { direction: [{
                type: Input,
                args: ['tuiSidebarDirection']
            }], autoWidth: [{
                type: Input,
                args: ['tuiSidebarAutoWidth']
            }], tuiSidebar: [{
                type: Input
            }] } });

class TuiSidebarComponent {
    constructor(options, directive) {
        this.options = options;
        this.directive = directive;
        this.left = Object.assign(Object.assign({}, this.options), { value: 'left' });
        this.right = Object.assign(Object.assign({}, this.options), { value: 'right' });
    }
    get animation() {
        return this.direction === 'left' ? this.left : this.right;
    }
    get directionHostClass() {
        return `t-${this.directive.direction}`;
    }
    get direction() {
        return this.directive.direction;
    }
    get content() {
        return this.directive.content;
    }
    get autoWidth() {
        return this.directive.autoWidth;
    }
    ngDoCheck() {
        this.directive.check();
    }
}
TuiSidebarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSidebarComponent, deps: [{ token: TUI_ANIMATION_OPTIONS }, { token: TuiSidebarDirective }], target: i0.ɵɵFactoryTarget.Component });
TuiSidebarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiSidebarComponent, selector: "aside[tuiSidebar]", host: { properties: { "@tuiSlideIn": "this.animation", "class": "this.directionHostClass" } }, ngImport: i0, template: "<div\n    tuiActiveZone\n    class=\"t-wrapper\"\n    [class.t-wrapper_auto-width]=\"autoWidth\"\n>\n    <ng-container *polymorpheusOutlet=\"content as text\">\n        {{ text }}\n    </ng-container>\n</div>\n", styles: [":host{position:fixed;top:0;left:0;width:100%;height:100%;display:flex}:host:before,:host:after{position:absolute;top:0;left:0;width:100%;content:\"\";height:100%;background:rgba(0,0,0,.38);animation:tuiFadeIn var(--tui-duration)}:host:before{left:-100%;width:200%}:host:after{left:100%}:host.ng-animating:before,:host.ng-animating:after{opacity:0;transition:opacity var(--tui-duration)}:host.t-right{justify-content:flex-end}:host.t-left{justify-content:flex-start}.t-wrapper{position:relative;display:flex;flex-direction:column;background:var(--tui-base-01);box-shadow:0 10rem var(--tui-base-01);width:17.25rem}.t-wrapper_auto-width{width:auto}\n"], directives: [{ type: i1.TuiActiveZoneDirective, selector: "[tuiActiveZone]:not(ng-container), [tuiActiveZoneChange]:not(ng-container), [tuiActiveZoneParent]:not(ng-container)", inputs: ["tuiActiveZoneParent"], outputs: ["tuiActiveZoneChange"], exportAs: ["tuiActiveZone"] }, { type: i2.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], animations: [tuiSlideIn], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSidebarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'aside[tuiSidebar]',
                    templateUrl: './sidebar.template.html',
                    styleUrls: ['./sidebar.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    animations: [tuiSlideIn],
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ANIMATION_OPTIONS]
                }] }, { type: TuiSidebarDirective, decorators: [{
                    type: Inject,
                    args: [TuiSidebarDirective]
                }] }]; }, propDecorators: { animation: [{
                type: HostBinding,
                args: ['@tuiSlideIn']
            }], directionHostClass: [{
                type: HostBinding,
                args: ['class']
            }] } });

class TuiSidebarModule {
}
TuiSidebarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSidebarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiSidebarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSidebarModule, declarations: [TuiSidebarDirective, TuiSidebarComponent], imports: [TuiActiveZoneModule, PolymorpheusModule], exports: [TuiSidebarDirective] });
TuiSidebarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSidebarModule, imports: [[TuiActiveZoneModule, PolymorpheusModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSidebarModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [TuiActiveZoneModule, PolymorpheusModule],
                    declarations: [TuiSidebarDirective, TuiSidebarComponent],
                    exports: [TuiSidebarDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiSidebarComponent, TuiSidebarDirective, TuiSidebarModule };
//# sourceMappingURL=taiga-ui-addon-mobile-directives-sidebar.js.map

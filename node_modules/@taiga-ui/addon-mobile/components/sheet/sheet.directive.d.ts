import { ChangeDetectorRef, TemplateRef } from '@angular/core';
import { PolymorpheusTemplate } from '@tinkoff/ng-polymorpheus';
import { TuiSheet } from './sheet';
import { TuiSheetService } from './sheet.service';
import { TuiSheetOptions } from './sheet-options';
import * as i0 from "@angular/core";
/**
 * @deprecated: use {@link TuiSheetDialogDirective}
 * drop in v4.0
 */
export declare class TuiSheetDirective extends PolymorpheusTemplate<TuiSheet<never>> {
    private readonly service;
    private readonly open$;
    options: Partial<TuiSheetOptions>;
    set tuiSheet(open: boolean);
    readonly tuiSheetChange: import("rxjs").Observable<boolean>;
    constructor(cdr: ChangeDetectorRef, templateRef: TemplateRef<TuiSheet<never>>, service: TuiSheetService);
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiSheetDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TuiSheetDirective, "ng-template[tuiSheet]", never, { "options": "tuiSheetOptions"; "tuiSheet": "tuiSheet"; }, { "tuiSheetChange": "tuiSheetChange"; }, never>;
}

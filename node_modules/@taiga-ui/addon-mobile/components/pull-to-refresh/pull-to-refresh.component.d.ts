import { ElementRef, NgZone } from '@angular/core';
import { TuiContextWithImplicit, TuiHandler } from '@taiga-ui/cdk';
import { PolymorpheusContent } from '@tinkoff/ng-polymorpheus';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class TuiPullToRefreshComponent {
    private readonly isIOS;
    private readonly threshold;
    readonly component: PolymorpheusContent<TuiContextWithImplicit<number>>;
    readonly pulling$: Observable<number>;
    styleHandler: TuiHandler<number, Record<string, any> | null>;
    readonly pulled: Observable<unknown>;
    readonly dropped$: Observable<boolean>;
    constructor(zone: NgZone, destroy$: Observable<unknown>, { nativeElement }: ElementRef<HTMLElement>, isIOS: boolean, threshold: number, component: PolymorpheusContent<TuiContextWithImplicit<number>>, pulling$: Observable<number>);
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiPullToRefreshComponent, [null, { self: true; }, null, null, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiPullToRefreshComponent, "tui-pull-to-refresh", never, { "styleHandler": "styleHandler"; }, { "pulled": "pulled"; }, never, ["*"]>;
}

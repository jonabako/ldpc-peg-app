(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@taiga-ui/kit'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk/scrolling'), require('@taiga-ui/addon-mobile/internal/primitive-calendar-mobile'), require('@taiga-ui/addon-mobile/directives/ripple'), require('@taiga-ui/addon-mobile/directives/touchable')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/addon-mobile/components/mobile-calendar', ['exports', '@angular/common', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core', '@taiga-ui/kit', 'rxjs', 'rxjs/operators', '@angular/cdk/scrolling', '@taiga-ui/addon-mobile/internal/primitive-calendar-mobile', '@taiga-ui/addon-mobile/directives/ripple', '@taiga-ui/addon-mobile/directives/touchable'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"]["addon-mobile"] = global["taiga-ui"]["addon-mobile"] || {}, global["taiga-ui"]["addon-mobile"].components = global["taiga-ui"]["addon-mobile"].components || {}, global["taiga-ui"]["addon-mobile"].components["mobile-calendar"] = {}), global.ng.common, global.ng.core, global.i7, global.i1, global.kit, global.rxjs, global.rxjs.operators, global.ng.cdk.scrolling, global["taiga-ui"]["addon-mobile"].internal["primitive-calendar-mobile"], global["taiga-ui"]["addon-mobile"].directives.ripple, global["taiga-ui"]["addon-mobile"].directives.touchable));
})(this, (function (exports, i6, i0, i7, i1, kit, i8, operators, i2, i3, i4, i5) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i8__namespace = /*#__PURE__*/_interopNamespace(i8);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);

    function getCycle(options) {
        return Array.from({ length: options.yearCycle }, function (_, i) { return Array.from({ length: i7.MONTHS_IN_YEAR }, function (_, month) { return options.label +
            weekCount({ year: i, month: month, startingYear: options.startingYear }) *
                options.week; }); });
    }
    function weekCount(options) {
        var firstOfMonth = new Date(options.year + options.startingYear, options.month, 1);
        var lastOfMonth = new Date(options.year + options.startingYear, options.month + 1, 0);
        var days = lastOfMonth.getDate() + (firstOfMonth.getDay() || 7) - 1;
        return Math.ceil(days / 7);
    }
    var SCROLL_DEBOUNCE_TIME = 80;
    var YEARS_IN_ROW = 5;
    var STARTING_YEAR = 1900;
    var RANGE = 196;
    var BUFFER = 500;
    var ANDROID_LABEL = 64;
    var ANDROID_WEEK = 48;
    var IOS_LABEL = 50;
    var IOS_WEEK = 50;
    var YEARLY_CYCLE = 28;
    var ANDROID_CYCLE = getCycle({
        label: ANDROID_LABEL,
        week: ANDROID_WEEK,
        yearCycle: YEARLY_CYCLE,
        startingYear: STARTING_YEAR,
    });
    var IOS_CYCLE = getCycle({
        label: IOS_LABEL,
        week: IOS_WEEK,
        yearCycle: YEARLY_CYCLE,
        startingYear: STARTING_YEAR,
    });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var ANDROID_CYCLE_HEIGHT = reduceCycle(ANDROID_CYCLE);
    var IOS_CYCLE_HEIGHT = reduceCycle(IOS_CYCLE);
    function reduceCycle(cycle, lastYear, lastMonth) {
        if (lastYear === void 0) { lastYear = 28; }
        if (lastMonth === void 0) { lastMonth = 12; }
        return cycle.reduce(function (total, year, yearIndex) { return yearIndex <= lastYear
            ? total +
                year.reduce(function (sum, month, monthIndex) { return yearIndex < lastYear ||
                    (yearIndex === lastYear && monthIndex < lastMonth)
                    ? sum + month
                    : sum; }, 0)
            : total; }, 0);
    }
    /**
     * This scroll strategy is hard wired with styles for iOS and Android.
     * It is dependent on month height on those platforms and is designed to
     * work for {@link TuiMobileCalendarComponent} with years 1906 to 2102
     */
    var TuiMobileCalendarStrategy = /** @class */ (function () {
        function TuiMobileCalendarStrategy(isIos, scrollService) {
            this.isIos = isIos;
            this.scrollService = scrollService;
            this.index$ = new i8.Subject();
            this.viewport = null;
            this.destroy$ = new i8.Subject();
        }
        Object.defineProperty(TuiMobileCalendarStrategy.prototype, "scrolledIndexChange", {
            get: function () {
                return this.index$.pipe(operators.distinctUntilChanged());
            },
            enumerable: false,
            configurable: true
        });
        TuiMobileCalendarStrategy.prototype.attach = function (viewport) {
            var cycle = this.isIos ? IOS_CYCLE_HEIGHT : ANDROID_CYCLE_HEIGHT;
            this.viewport = viewport;
            this.viewport.setTotalContentSize(cycle * 7);
            this.updateRenderedRange(this.viewport);
        };
        TuiMobileCalendarStrategy.prototype.detach = function () {
            this.index$.complete();
            this.viewport = null;
            this.destroy$.next();
            this.destroy$.complete();
        };
        TuiMobileCalendarStrategy.prototype.onContentScrolled = function () {
            if (this.viewport) {
                this.updateRenderedRange(this.viewport);
            }
        };
        /** These do not matter for this case */
        TuiMobileCalendarStrategy.prototype.onDataLengthChanged = function () { };
        TuiMobileCalendarStrategy.prototype.onContentRendered = function () { };
        TuiMobileCalendarStrategy.prototype.onRenderedOffsetChanged = function () { };
        TuiMobileCalendarStrategy.prototype.scrollToIndex = function (index, behavior) {
            if (!this.viewport) {
                return;
            }
            var scrollTop = this.getOffsetForIndex(index);
            if (behavior !== 'smooth') {
                this.viewport.scrollToOffset(scrollTop, behavior);
                return;
            }
            this.scrollService
                .scroll$(this.viewport.elementRef.nativeElement, scrollTop)
                .pipe(operators.takeUntil(this.destroy$))
                .subscribe();
        };
        TuiMobileCalendarStrategy.prototype.getOffsetForIndex = function (index) {
            var month = index % i7.MONTHS_IN_YEAR;
            var year = (index - month) / i7.MONTHS_IN_YEAR;
            return this.computeHeight(year, month);
        };
        TuiMobileCalendarStrategy.prototype.getIndexForOffset = function (offset) {
            var cycle = this.isIos ? IOS_CYCLE : ANDROID_CYCLE;
            var cycleHeight = this.isIos ? IOS_CYCLE_HEIGHT : ANDROID_CYCLE_HEIGHT;
            var remainder = offset % cycleHeight;
            var years = ((offset - remainder) / cycleHeight) * YEARLY_CYCLE;
            var accumulator = 0;
            for (var year = 0; year < cycle.length; year++) {
                for (var month = 0; month < cycle[year].length; month++) {
                    accumulator += cycle[year][month];
                    if (accumulator - cycle[year][month] / 2 > remainder) {
                        return Math.max((years + year) * i7.MONTHS_IN_YEAR + month, 0);
                    }
                }
            }
            return RANGE;
        };
        TuiMobileCalendarStrategy.prototype.computeHeight = function (year, month) {
            var cycle = this.isIos ? IOS_CYCLE : ANDROID_CYCLE;
            var remainder = year % YEARLY_CYCLE;
            var remainderHeight = reduceCycle(cycle, remainder, month);
            var fullCycles = (year - remainder) / YEARLY_CYCLE;
            var fullCyclesHeight = this.isIos
                ? fullCycles * IOS_CYCLE_HEIGHT
                : fullCycles * ANDROID_CYCLE_HEIGHT;
            return fullCyclesHeight + remainderHeight;
        };
        TuiMobileCalendarStrategy.prototype.updateRenderedRange = function (viewport) {
            var offset = viewport.measureScrollOffset();
            var _a = viewport.getRenderedRange(), start = _a.start, end = _a.end;
            var viewportSize = viewport.getViewportSize();
            var dataLength = viewport.getDataLength();
            var newRange = { start: start, end: end };
            var firstVisibleIndex = this.getIndexForOffset(offset);
            var startBuffer = offset - this.getOffsetForIndex(start);
            if (startBuffer < BUFFER && start !== 0) {
                newRange.start = Math.max(0, this.getIndexForOffset(offset - BUFFER * 2));
                newRange.end = Math.min(dataLength, this.getIndexForOffset(offset + viewportSize + BUFFER));
            }
            else {
                var endBuffer = this.getOffsetForIndex(end) - offset - viewportSize;
                if (endBuffer < BUFFER && end !== dataLength) {
                    newRange.start = Math.max(0, this.getIndexForOffset(offset - BUFFER));
                    newRange.end = Math.min(dataLength, this.getIndexForOffset(offset + viewportSize + BUFFER * 2));
                }
            }
            viewport.setRenderedRange(newRange);
            viewport.setRenderedContentOffset(this.getOffsetForIndex(newRange.start));
            this.index$.next(firstVisibleIndex);
        };
        return TuiMobileCalendarStrategy;
    }());
    __decorate([
        i7.tuiPure
    ], TuiMobileCalendarStrategy.prototype, "scrolledIndexChange", null);

    /**
     * Stream for updating value
     */
    var TUI_VALUE_STREAM = new i0.InjectionToken('[TUI_VALUE_STREAM]');
    var TUI_MOBILE_CALENDAR_PROVIDERS = [
        i7.TuiDestroyService,
        i7.TuiScrollService,
        {
            provide: i2.VIRTUAL_SCROLL_STRATEGY,
            deps: [i7.TUI_IS_IOS, i7.TuiScrollService],
            useClass: TuiMobileCalendarStrategy,
        },
        {
            provide: TUI_VALUE_STREAM,
            deps: [
                [new i0.Optional(), kit.TUI_CALENDAR_DATE_STREAM],
                i7.TuiDestroyService,
                i0.ChangeDetectorRef,
            ],
            useFactory: function (value$, destroy$, cdr) { return (value$ || i8.EMPTY).pipe(i7.tuiWatch(cdr), operators.takeUntil(destroy$)); },
        },
    ];

    var TuiMobileCalendarComponent = /** @class */ (function () {
        function TuiMobileCalendarComponent(isIOS, isE2E, doc, destroy$, valueChanges, icons, closeWord$, cancelWord$, doneWord$, unorderedWeekDays$, chooseDayOrRangeTexts$, duration, ngZone) {
            var _this = this;
            this.isIOS = isIOS;
            this.isE2E = isE2E;
            this.doc = doc;
            this.destroy$ = destroy$;
            this.icons = icons;
            this.closeWord$ = closeWord$;
            this.cancelWord$ = cancelWord$;
            this.doneWord$ = doneWord$;
            this.unorderedWeekDays$ = unorderedWeekDays$;
            this.chooseDayOrRangeTexts$ = chooseDayOrRangeTexts$;
            this.duration = duration;
            this.ngZone = ngZone;
            this.today = i7.TuiDay.currentLocal();
            this.activeYear = 0;
            this.activeMonth = 0;
            this.single = true;
            this.multi = false;
            this.min = i7.TUI_FIRST_DAY;
            this.max = i7.TUI_LAST_DAY;
            this.disabledItemHandler = i7.ALWAYS_FALSE_HANDLER;
            this.cancel = new i0.EventEmitter();
            this.confirm = new i0.EventEmitter();
            this.value = null;
            this.years = Array.from({ length: RANGE }, function (_, i) { return i + STARTING_YEAR; });
            this.months = Array.from({ length: RANGE * 12 }, function (_, i) { return new i7.TuiMonth(Math.floor(i / i7.MONTHS_IN_YEAR) + STARTING_YEAR, i % i7.MONTHS_IN_YEAR); });
            this.initialized = false;
            this.disabledItemHandlerMapper = function (disabledItemHandler, min, max) { return function (item) { return item.dayBefore(min) ||
                (max !== null && item.dayAfter(max)) ||
                disabledItemHandler(item); }; };
            valueChanges.pipe(operators.takeUntil(this.destroy$)).subscribe(function (value) {
                _this.value = value;
            });
        }
        Object.defineProperty(TuiMobileCalendarComponent.prototype, "yearWidth", {
            get: function () {
                return this.doc.documentElement.clientWidth / YEARS_IN_ROW;
            },
            enumerable: false,
            configurable: true
        });
        TuiMobileCalendarComponent.prototype.ngAfterViewInit = function () {
            this.activeYear = this.initialYear;
            this.activeMonth = this.initialMonth;
            // Virtual scroll has not yet rendered items even in ngAfterViewInit
            this.waitScrolledChange();
        };
        TuiMobileCalendarComponent.prototype.onClose = function () {
            this.cancel.emit();
        };
        TuiMobileCalendarComponent.prototype.onConfirm = function () {
            if (this.value) {
                this.confirm.emit(this.value);
            }
            else {
                this.cancel.emit();
            }
        };
        TuiMobileCalendarComponent.prototype.onDayClick = function (day) {
            if (this.single) {
                this.value = day;
            }
            else if (this.isMultiValue(this.value)) {
                this.value = kit.tuiImmutableUpdateInputDateMulti(this.value, day);
            }
            else if (this.isSingleValue(this.value)) {
                this.value = new i7.TuiDayRange(day, day);
            }
            else if (this.value instanceof i7.TuiDayRange) {
                this.value = i7.TuiDayRange.sort(this.value.from, day);
            }
            else if (!this.value) {
                this.value = new i7.TuiDayRange(day, day);
            }
        };
        TuiMobileCalendarComponent.prototype.getState = function (index) {
            if (this.isYearActive(index)) {
                return 'active';
            }
            if (this.isYearActive(index - 1) || this.isYearActive(index + 1)) {
                return 'adjacent';
            }
            return null;
        };
        TuiMobileCalendarComponent.prototype.onMonthChange = function (month) {
            // Skipping initial callback where index === 0
            if (!month || this.activeMonth === month) {
                return;
            }
            this.activeMonth = month;
            var activeYear = this.monthToYear(month);
            if (activeYear === this.activeYear) {
                return;
            }
            this.activeYear = activeYear;
            this.scrollToActiveYear();
        };
        TuiMobileCalendarComponent.prototype.setYear = function (year) {
            var _this = this;
            if (this.activeYear === year) {
                return;
            }
            this.activeMonth += this.getMonthOffset(year);
            this.activeYear = year;
            this.scrollToActiveYear('smooth');
            // Delay is required to run months scroll in the next frame to prevent flicker
            i8.timer(0)
                .pipe(i7.tuiZonefree(this.ngZone), operators.takeUntil(this.destroy$))
                .subscribe(function () { return _this.scrollToActiveMonth(); });
        };
        TuiMobileCalendarComponent.prototype.isMultiValue = function (day) {
            return !(day instanceof i7.TuiDay) && !(day instanceof i7.TuiDayRange) && this.multi;
        };
        TuiMobileCalendarComponent.prototype.isSingleValue = function (day) {
            return day instanceof i7.TuiDay || (day instanceof i7.TuiDayRange && !day.isSingleDay);
        };
        Object.defineProperty(TuiMobileCalendarComponent.prototype, "initialYear", {
            get: function () {
                var _a, _b, _c;
                if (!this.value) {
                    return this.today.year;
                }
                if (this.value instanceof i7.TuiDay) {
                    return this.value.year;
                }
                if (!(this.value instanceof i7.TuiDayRange)) {
                    return (_c = (_b = (_a = this.value) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.year) !== null && _c !== void 0 ? _c : this.today.year;
                }
                return this.value.from.year;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiMobileCalendarComponent.prototype, "initialMonth", {
            get: function () {
                var _a, _b, _c, _d, _e, _f;
                if (!this.value) {
                    return this.today.month + (this.today.year - STARTING_YEAR) * i7.MONTHS_IN_YEAR;
                }
                if (this.value instanceof i7.TuiDay) {
                    return this.value.month + (this.value.year - STARTING_YEAR) * i7.MONTHS_IN_YEAR;
                }
                if (!(this.value instanceof i7.TuiDayRange)) {
                    return (((_c = (_b = (_a = this.value) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.month) !== null && _c !== void 0 ? _c : this.today.month) +
                        (((_f = (_e = (_d = this.value) === null || _d === void 0 ? void 0 : _d[0]) === null || _e === void 0 ? void 0 : _e.year) !== null && _f !== void 0 ? _f : this.today.year) - STARTING_YEAR) *
                            i7.MONTHS_IN_YEAR);
                }
                return (this.value.from.month +
                    (this.value.from.year - STARTING_YEAR) * i7.MONTHS_IN_YEAR);
            },
            enumerable: false,
            configurable: true
        });
        TuiMobileCalendarComponent.prototype.getYearsViewportSize = function () {
            var _a;
            return ((_a = this.yearsScrollRef) === null || _a === void 0 ? void 0 : _a.getViewportSize()) || 0;
        };
        TuiMobileCalendarComponent.prototype.updateViewportDimension = function () {
            var _a, _b;
            (_a = this.yearsScrollRef) === null || _a === void 0 ? void 0 : _a.checkViewportSize();
            (_b = this.monthsScrollRef) === null || _b === void 0 ? void 0 : _b.checkViewportSize();
        };
        TuiMobileCalendarComponent.prototype.lateInit = function () {
            return this.getYearsViewportSize() > 0 ? i8.identity : operators.delay(200);
        };
        TuiMobileCalendarComponent.prototype.waitScrolledChange = function () {
            var _this = this;
            var _a;
            this.updateViewportDimension();
            (_a = this.monthsScrollRef) === null || _a === void 0 ? void 0 : _a.scrolledIndexChange.pipe(operators.delay(this.duration), this.lateInit(), operators.take(1), operators.takeUntil(this.destroy$)).subscribe(function () {
                _this.initialized = true;
                _this.updateViewportDimension();
                _this.initYearScroll();
                _this.initMonthScroll();
                _this.scrollToActiveYear();
                _this.scrollToActiveMonth();
            });
        };
        TuiMobileCalendarComponent.prototype.initYearScroll = function () {
            var _this = this;
            var yearsScrollRef = this.yearsScrollRef;
            if (!yearsScrollRef) {
                return;
            }
            var touchstart$ = i7.tuiTypedFromEvent(yearsScrollRef.elementRef.nativeElement, 'touchstart', { passive: true });
            var touchend$ = i7.tuiTypedFromEvent(yearsScrollRef.elementRef.nativeElement, 'touchend', { passive: true });
            var click$ = i7.tuiTypedFromEvent(yearsScrollRef.elementRef.nativeElement, 'click');
            // Refresh activeYear
            yearsScrollRef
                .elementScrolled()
                .pipe(
            // Ignore smooth scroll resulting from click on the exact year
            operators.windowToggle(touchstart$, function () { return click$; }), operators.mergeMap(function (x) { return x; }), 
            // Delay is required to run months scroll in the next frame to prevent flicker
            operators.delay(0), operators.map(function () { return Math.round(yearsScrollRef.measureScrollOffset() / _this.yearWidth) +
                Math.floor(YEARS_IN_ROW / 2) +
                STARTING_YEAR; }), operators.filter(function (activeYear) { return activeYear !== _this.activeYear; }), operators.takeUntil(this.destroy$))
                .subscribe(function (activeYear) {
                _this.activeMonth += _this.getMonthOffset(activeYear);
                _this.activeYear = activeYear;
                _this.scrollToActiveMonth();
            });
            // Smooth scroll to activeYear after scrolling is done
            touchstart$
                .pipe(operators.switchMap(function () { return touchend$; }), operators.switchMap(function () { return i8.race(yearsScrollRef.elementScrolled(), i8.timer(SCROLL_DEBOUNCE_TIME)).pipe(operators.debounceTime(SCROLL_DEBOUNCE_TIME * 2), operators.take(1), operators.takeUntil(touchstart$)); }), operators.takeUntil(this.destroy$))
                .subscribe(function () { return _this.scrollToActiveYear('smooth'); });
        };
        TuiMobileCalendarComponent.prototype.initMonthScroll = function () {
            var _this = this;
            var monthsScrollRef = this.monthsScrollRef;
            if (!monthsScrollRef) {
                return;
            }
            var touchstart$ = i7.tuiTypedFromEvent(monthsScrollRef.elementRef.nativeElement, 'touchstart', { passive: true });
            var touchend$ = i7.tuiTypedFromEvent(monthsScrollRef.elementRef.nativeElement, 'touchend', { passive: true });
            // Smooth scroll to the closest month after scrolling is done
            touchstart$
                .pipe(operators.switchMap(function () { return touchend$; }), operators.switchMap(function () { return i8.race(monthsScrollRef.elementScrolled(), i8.timer(SCROLL_DEBOUNCE_TIME)).pipe(operators.debounceTime(SCROLL_DEBOUNCE_TIME * 2), operators.take(1), operators.takeUntil(touchstart$)); }), operators.takeUntil(this.destroy$))
                .subscribe(function () { return _this.scrollToActiveMonth('smooth'); });
        };
        TuiMobileCalendarComponent.prototype.scrollToActiveYear = function (behavior) {
            if (behavior === void 0) { behavior = 'auto'; }
            var _a;
            (_a = this.yearsScrollRef) === null || _a === void 0 ? void 0 : _a.scrollToIndex(Math.max(this.activeYear - STARTING_YEAR - 2, 0), this.isE2E ? 'auto' : behavior);
        };
        TuiMobileCalendarComponent.prototype.scrollToActiveMonth = function (behavior) {
            if (behavior === void 0) { behavior = 'auto'; }
            var _a;
            (_a = this.monthsScrollRef) === null || _a === void 0 ? void 0 : _a.scrollToIndex(this.activeMonth, this.isE2E ? 'auto' : behavior);
        };
        TuiMobileCalendarComponent.prototype.isYearActive = function (index) {
            return index === this.activeYear;
        };
        TuiMobileCalendarComponent.prototype.monthToYear = function (month) {
            return Math.ceil((month + 1) / i7.MONTHS_IN_YEAR) + STARTING_YEAR - 1;
        };
        TuiMobileCalendarComponent.prototype.getMonthOffset = function (year) {
            return (year - this.activeYear) * i7.MONTHS_IN_YEAR;
        };
        return TuiMobileCalendarComponent;
    }());
    TuiMobileCalendarComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMobileCalendarComponent, deps: [{ token: i7.TUI_IS_IOS }, { token: i7.TUI_IS_E2E }, { token: i6.DOCUMENT }, { token: i7.TuiDestroyService, self: true }, { token: TUI_VALUE_STREAM }, { token: i1.TUI_COMMON_ICONS }, { token: i1.TUI_CLOSE_WORD }, { token: kit.TUI_CANCEL_WORD }, { token: kit.TUI_DONE_WORD }, { token: i1.TUI_SHORT_WEEK_DAYS }, { token: kit.TUI_CHOOSE_DAY_OR_RANGE_TEXTS }, { token: i1.TUI_ANIMATIONS_DURATION }, { token: i0.NgZone }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiMobileCalendarComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiMobileCalendarComponent, selector: "tui-mobile-calendar", inputs: { single: "single", multi: "multi", min: "min", max: "max", disabledItemHandler: "disabledItemHandler" }, outputs: { cancel: "cancel", confirm: "confirm" }, host: { properties: { "class._ios": "isIOS", "class._initialized": "initialized" } }, providers: TUI_MOBILE_CALENDAR_PROVIDERS, viewQueries: [{ propertyName: "yearsScrollRef", first: true, predicate: ["yearsScrollRef"], descendants: true }, { propertyName: "monthsScrollRef", first: true, predicate: ["monthsScrollRef"], descendants: true }], ngImport: i0__namespace, template: "<header class=\"t-header\">\n    <button\n        appearance=\"\"\n        automation-id=\"tui-mobile-calendar__cancel\"\n        shape=\"rounded\"\n        tuiIconButton\n        tuiRipple\n        type=\"button\"\n        class=\"t-close\"\n        [icon]=\"icons.close\"\n        [title]=\"closeWord$ | async\"\n        (click)=\"onClose()\"\n    ></button>\n    <button\n        tuiLink\n        tuiTouchable=\"opacity\"\n        type=\"button\"\n        class=\"t-link t-link_close\"\n        (click)=\"onClose()\"\n    >\n        {{ cancelWord$ | async }}\n    </button>\n    <h2\n        *ngIf=\"chooseDayOrRangeTexts$ | async as texts\"\n        automation-id=\"tui-mobile-calendar__label\"\n        class=\"t-label\"\n    >\n        {{ single ? texts?.[0] : multi ? texts?.[2] : texts?.[1] }}\n    </h2>\n    <button\n        automation-id=\"tui-mobile-calendar__confirm\"\n        tuiLink\n        tuiTouchable=\"opacity\"\n        type=\"button\"\n        class=\"t-link\"\n        (click)=\"onConfirm()\"\n    >\n        {{ doneWord$ | async }}\n    </button>\n</header>\n<cdk-virtual-scroll-viewport\n    #yearsScrollRef\n    orientation=\"horizontal\"\n    class=\"t-years\"\n    [itemSize]=\"yearWidth\"\n>\n    <div class=\"t-years-wrapper\">\n        <button\n            *cdkVirtualFor=\"let index of years\"\n            type=\"button\"\n            class=\"t-year\"\n            [attr.data-state]=\"getState(index)\"\n            (click)=\"setYear(index)\"\n        >\n            {{ index }}\n        </button>\n    </div>\n</cdk-virtual-scroll-viewport>\n<div class=\"t-week\">\n    <div\n        *ngFor=\"let day of unorderedWeekDays$ | tuiOrderWeekDays | async\"\n        class=\"t-day\"\n    >\n        {{ day }}\n    </div>\n</div>\n<cdk-virtual-scroll-viewport\n    #monthsScrollRef\n    class=\"t-months\"\n    (scrolledIndexChange)=\"onMonthChange($event)\"\n>\n    <section\n        *cdkVirtualFor=\"let month of months; templateCacheSize: 10\"\n        class=\"t-month-wrapper\"\n    >\n        <h2 class=\"t-month\">{{ month | tuiMonth | async }}</h2>\n        <tui-primitive-calendar-mobile\n            class=\"t-calendar\"\n            [disabledItemHandler]=\"disabledItemHandler | tuiMapper: disabledItemHandlerMapper : min : max\"\n            [month]=\"month\"\n            [value]=\"value\"\n            (dayClick)=\"onDayClick($event)\"\n        ></tui-primitive-calendar-mobile>\n    </section>\n</cdk-virtual-scroll-viewport>\n", styles: [":host{display:block;height:100%;font-family:-apple-system,BlinkMacSystemFont,Roboto,sans-serif;color:var(--tui-text-01);-webkit-tap-highlight-color:transparent}.t-header{position:relative;display:flex;align-items:center;height:3.5rem;padding:0 1rem;border-bottom:.5px solid var(--tui-base-03)}:host._ios .t-header{height:2.75rem;border-bottom:none}.t-close{width:1.5rem;height:1.5rem;margin-right:2rem}:host._ios .t-close{display:none}.t-link{margin-left:auto;flex-shrink:0;font-size:.875rem;line-height:1rem;font-weight:500;text-transform:uppercase;color:var(--tui-link)}.t-link_close{display:none}:host._ios .t-link{min-width:3.75rem;text-align:right;font-size:.9375rem;line-height:1.125rem;font-weight:400;letter-spacing:.018125rem;text-transform:none}:host._ios .t-link_close{display:block;margin:0 auto 0 0;text-align:left}.t-label{flex-grow:1;margin:0;font-size:1.25rem;line-height:3.5rem;font-weight:500;letter-spacing:-.0125rem;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.t-label+.t-link{padding-left:1rem}:host._ios .t-label{font-size:1.0625rem;font-weight:600;letter-spacing:-.025625rem;text-align:center}.t-years{scrollbar-width:none;-ms-overflow-style:none;height:4.0625rem;background-color:var(--tui-base-01);box-shadow:0 .5px var(--tui-base-03)}.t-years::-webkit-scrollbar,.t-years::-webkit-scrollbar-thumb{display:none}:host._ios .t-years{background-color:transparent}.t-years-wrapper{display:flex;height:4.0625rem}.t-year{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;text-decoration:none;outline:none;width:20vw;flex-shrink:0;font-size:.9375rem;font-weight:700;letter-spacing:.015625rem;cursor:pointer;opacity:.1;transform:scale(.73);transition:color,opacity,transform .2s}.t-year[data-state=adjacent]{transform:scale(.86);opacity:.3}.t-year[data-state=active]{color:var(--tui-link);opacity:1;transform:scale(1)}.t-week{display:flex;align-items:center;height:1.875rem;width:20.75rem;max-width:100%;margin:0 auto;font-size:.75rem}:host._ios .t-week{width:22.625rem;font-size:.6875rem;font-weight:500;color:var(--tui-text-02)}.t-day{flex:1;text-align:center}.t-months{scrollbar-width:none;-ms-overflow-style:none;height:calc(100% - 9.5rem);box-shadow:0 -1px var(--tui-base-03);overflow-x:hidden}.t-months::-webkit-scrollbar,.t-months::-webkit-scrollbar-thumb{display:none}:host._ios .t-months{height:calc(100% - 8.75rem)}.t-month-wrapper{margin:.625rem 0 -.625rem}.t-month{height:2.75rem;line-height:2.75rem;padding-left:1rem;font-size:.875rem;font-weight:500;text-transform:uppercase;margin:0 0 1.25rem;box-sizing:border-box;border-bottom:.5px solid var(--tui-base-03)}:host._ios .t-month{height:3.125rem;margin:0;border-bottom:none;text-transform:none;font-size:1.375rem;line-height:3.125rem;letter-spacing:.02rem;font-weight:700}.t-calendar{margin:0 auto;font-family:inherit;font-size:1.125rem;transition:opacity .2s}:host._ios .t-calendar{font-size:1.0625rem}.t-week,.t-years,.t-months{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;opacity:0}:host(._initialized) .t-week,:host(._initialized) .t-years,:host(._initialized) .t-months{opacity:1}\n"], components: [{ type: i1__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }, { type: i1__namespace.TuiLinkComponent, selector: "a[tuiLink], button[tuiLink]", inputs: ["pseudo", "icon", "iconAlign", "iconRotated", "mode"], exportAs: ["tuiLink"] }, { type: i2__namespace.CdkVirtualScrollViewport, selector: "cdk-virtual-scroll-viewport", inputs: ["orientation", "appendOnly"], outputs: ["scrolledIndexChange"] }, { type: i3__namespace.TuiPrimitiveCalendarMobileComponent, selector: "tui-primitive-calendar-mobile" }], directives: [{ type: i4__namespace.TuiRippleDirective, selector: "[tuiRipple]", inputs: ["tuiRipple"] }, { type: i5__namespace.TuiTouchableDirective, selector: "[tuiTouchable]", inputs: ["tuiTouchable"] }, { type: i6__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.CdkFixedSizeVirtualScroll, selector: "cdk-virtual-scroll-viewport[itemSize]", inputs: ["itemSize", "minBufferPx", "maxBufferPx"] }, { type: i2__namespace.CdkVirtualForOf, selector: "[cdkVirtualFor][cdkVirtualForOf]", inputs: ["cdkVirtualForOf", "cdkVirtualForTrackBy", "cdkVirtualForTemplate", "cdkVirtualForTemplateCacheSize"] }, { type: i6__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i6__namespace.AsyncPipe, "tuiOrderWeekDays": i1__namespace.TuiOrderWeekDaysPipe, "tuiMonth": i1__namespace.TuiMonthPipe, "tuiMapper": i7__namespace.TuiMapperPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMobileCalendarComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-mobile-calendar',
                        templateUrl: './mobile-calendar.template.html',
                        styleUrls: ['./mobile-calendar.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: TUI_MOBILE_CALENDAR_PROVIDERS,
                        host: { '[class._ios]': 'isIOS', '[class._initialized]': 'initialized' },
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i7.TUI_IS_IOS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i7.TUI_IS_E2E]
                        }] }, { type: Document, decorators: [{
                            type: i0.Inject,
                            args: [i6.DOCUMENT]
                        }] }, { type: i7__namespace.TuiDestroyService, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [i7.TuiDestroyService]
                        }] }, { type: i8__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [TUI_VALUE_STREAM]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_COMMON_ICONS]
                        }] }, { type: i8__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_CLOSE_WORD]
                        }] }, { type: i8__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [kit.TUI_CANCEL_WORD]
                        }] }, { type: i8__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [kit.TUI_DONE_WORD]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_SHORT_WEEK_DAYS]
                        }] }, { type: i8__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [kit.TUI_CHOOSE_DAY_OR_RANGE_TEXTS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_ANIMATIONS_DURATION]
                        }] }, { type: i0__namespace.NgZone, decorators: [{
                            type: i0.Inject,
                            args: [i0.NgZone]
                        }] }];
        }, propDecorators: { yearsScrollRef: [{
                    type: i0.ViewChild,
                    args: ['yearsScrollRef']
                }], monthsScrollRef: [{
                    type: i0.ViewChild,
                    args: ['monthsScrollRef']
                }], single: [{
                    type: i0.Input
                }], multi: [{
                    type: i0.Input
                }], min: [{
                    type: i0.Input
                }], max: [{
                    type: i0.Input
                }], disabledItemHandler: [{
                    type: i0.Input
                }], cancel: [{
                    type: i0.Output
                }], confirm: [{
                    type: i0.Output
                }] } });

    var TuiMobileCalendarModule = /** @class */ (function () {
        function TuiMobileCalendarModule() {
        }
        return TuiMobileCalendarModule;
    }());
    TuiMobileCalendarModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMobileCalendarModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiMobileCalendarModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMobileCalendarModule, declarations: [TuiMobileCalendarComponent], imports: [i6.CommonModule,
            i2.ScrollingModule,
            i5.TuiTouchableModule,
            i4.TuiRippleModule,
            i7.TuiMapperPipeModule,
            i1.TuiLinkModule,
            i3.TuiPrimitiveCalendarMobileModule,
            i1.TuiButtonModule,
            i1.TuiMonthPipeModule,
            i1.TuiOrderWeekDaysPipeModule], exports: [TuiMobileCalendarComponent] });
    TuiMobileCalendarModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMobileCalendarModule, imports: [[
                i6.CommonModule,
                i2.ScrollingModule,
                i5.TuiTouchableModule,
                i4.TuiRippleModule,
                i7.TuiMapperPipeModule,
                i1.TuiLinkModule,
                i3.TuiPrimitiveCalendarMobileModule,
                i1.TuiButtonModule,
                i1.TuiMonthPipeModule,
                i1.TuiOrderWeekDaysPipeModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiMobileCalendarModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i6.CommonModule,
                            i2.ScrollingModule,
                            i5.TuiTouchableModule,
                            i4.TuiRippleModule,
                            i7.TuiMapperPipeModule,
                            i1.TuiLinkModule,
                            i3.TuiPrimitiveCalendarMobileModule,
                            i1.TuiButtonModule,
                            i1.TuiMonthPipeModule,
                            i1.TuiOrderWeekDaysPipeModule,
                        ],
                        declarations: [TuiMobileCalendarComponent],
                        exports: [TuiMobileCalendarComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ANDROID_CYCLE = ANDROID_CYCLE;
    exports.ANDROID_LABEL = ANDROID_LABEL;
    exports.ANDROID_WEEK = ANDROID_WEEK;
    exports.BUFFER = BUFFER;
    exports.IOS_CYCLE = IOS_CYCLE;
    exports.IOS_LABEL = IOS_LABEL;
    exports.IOS_WEEK = IOS_WEEK;
    exports.RANGE = RANGE;
    exports.SCROLL_DEBOUNCE_TIME = SCROLL_DEBOUNCE_TIME;
    exports.STARTING_YEAR = STARTING_YEAR;
    exports.TUI_MOBILE_CALENDAR_PROVIDERS = TUI_MOBILE_CALENDAR_PROVIDERS;
    exports.TUI_VALUE_STREAM = TUI_VALUE_STREAM;
    exports.TuiMobileCalendarComponent = TuiMobileCalendarComponent;
    exports.TuiMobileCalendarModule = TuiMobileCalendarModule;
    exports.TuiMobileCalendarStrategy = TuiMobileCalendarStrategy;
    exports.YEARLY_CYCLE = YEARLY_CYCLE;
    exports.YEARS_IN_ROW = YEARS_IN_ROW;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-addon-mobile-components-mobile-calendar.umd.js.map

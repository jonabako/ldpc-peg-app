(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@angular/common'), require('rxjs/operators'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/addon-mobile/components/tab-bar', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core', '@angular/common', 'rxjs/operators', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"]["addon-mobile"] = global["taiga-ui"]["addon-mobile"] || {}, global["taiga-ui"]["addon-mobile"].components = global["taiga-ui"]["addon-mobile"].components || {}, global["taiga-ui"]["addon-mobile"].components["tab-bar"] = {}), global.ng.core, global.i1$1, global.i1, global.ng.common, global.rxjs.operators, global.rxjs));
})(this, (function (exports, i0, i1$1, i1, i2, operators, i1$2) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);

    var TuiTabBarItemComponent = /** @class */ (function () {
        function TuiTabBarItemComponent(animation) {
            this.animation = animation;
            this.icon = '';
            this.badge = null;
        }
        TuiTabBarItemComponent.prototype.format = function (value) {
            return value > 999 ? '999+' : String(value);
        };
        return TuiTabBarItemComponent;
    }());
    TuiTabBarItemComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabBarItemComponent, deps: [{ token: i1.TUI_ANIMATION_OPTIONS }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTabBarItemComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTabBarItemComponent, selector: "button[tuiTabBarItem], a[tuiTabBarItem]", inputs: { icon: "icon", badge: "badge" }, ngImport: i0__namespace, template: "<tui-svg\n    class=\"t-icon\"\n    [src]=\"icon\"\n></tui-svg>\n<span class=\"t-wrapper\">\n    <span\n        *ngIf=\"badge as value\"\n        class=\"t-badge\"\n        [@tuiScaleIn]=\"animation\"\n    >\n        {{ format(value) }}\n    </span>\n</span>\n<span class=\"t-text\">\n    <ng-content></ng-content>\n</span>\n", styles: [":host{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;text-decoration:none;transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:relative;display:flex;flex:1 0;font:inherit;flex-direction:column;align-items:center;overflow:hidden}:host:nth-child(1){color:var(--tui-tab-1, inherit)}:host:nth-child(2){color:var(--tui-tab-2, inherit)}:host:nth-child(3){color:var(--tui-tab-3, inherit)}:host:nth-child(4){color:var(--tui-tab-4, inherit)}:host:nth-child(5){color:var(--tui-tab-5, inherit)}:host:nth-child(6){color:var(--tui-tab-6, inherit)}:host:nth-child(7){color:var(--tui-tab-7, inherit)}:host:nth-child(8){color:var(--tui-tab-8, inherit)}:host:nth-child(9){color:var(--tui-tab-9, inherit)}:host:nth-child(10){color:var(--tui-tab-10, inherit)}.t-icon{width:1.75rem;height:1.75rem;margin:.375rem 0 .125rem;pointer-events:none}.t-wrapper{position:absolute;top:.125rem;left:1rem;display:flex;width:100%;justify-content:center;pointer-events:none}.t-badge{display:flex;height:1.125rem;min-width:1.125rem;align-items:center;justify-content:center;padding:0 .25rem;border-radius:1rem;font-size:.8125rem;box-sizing:border-box;color:var(--tui-base-01);background:var(--tui-error-fill)}.t-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:100%;pointer-events:none}\n"], components: [{ type: i1__namespace.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], animations: [i1.tuiScaleIn], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabBarItemComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'button[tuiTabBarItem], a[tuiTabBarItem]',
                        templateUrl: './tab-bar-item.template.html',
                        styleUrls: ['./tab-bar-item.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        animations: [i1.tuiScaleIn],
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_ANIMATION_OPTIONS]
                        }] }];
        }, propDecorators: { icon: [{
                    type: i0.Input
                }], badge: [{
                    type: i0.Input
                }] } });

    var TuiTabBarComponent = /** @class */ (function () {
        function TuiTabBarComponent() {
            this.tabs = i1$1.EMPTY_QUERY;
            this.quantity = 4;
            this.activeItemIndex = NaN;
            this.activeItemIndexChange = new i0.EventEmitter();
        }
        TuiTabBarComponent.prototype.setActive = function (tab) {
            if (i1$1.tuiIsElement(tab)) {
                this.updateIndex(this.tabs.toArray().findIndex(function (_a) {
                    var nativeElement = _a.nativeElement;
                    return nativeElement === tab;
                }));
            }
        };
        Object.defineProperty(TuiTabBarComponent.prototype, "style", {
            get: function () {
                return "--tui-tab-" + (this.activeItemIndex + 1) + ": var(--tui-active-color)";
            },
            enumerable: false,
            configurable: true
        });
        TuiTabBarComponent.prototype.updateIndex = function (index) {
            this.activeItemIndex = index;
            this.activeItemIndexChange.emit(index);
        };
        return TuiTabBarComponent;
    }());
    TuiTabBarComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabBarComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTabBarComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTabBarComponent, selector: "nav[tuiTabBar]", inputs: { quantity: "quantity", activeItemIndex: "activeItemIndex" }, outputs: { activeItemIndexChange: "activeItemIndexChange" }, host: { listeners: { "click": "setActive($event.target)" }, properties: { "style": "this.style" } }, queries: [{ propertyName: "tabs", predicate: i0__namespace.forwardRef(function () { return TuiTabBarItemComponent; }), read: i0.ElementRef }], ngImport: i0__namespace, template: "<ng-content></ng-content>\n<div class=\"t-skeletons\">\n    <div\n        *tuiRepeatTimes=\"let index of quantity\"\n        class=\"t-skeleton\"\n    ></div>\n</div>\n", styles: [":host{--tui-active-color: var(--tui-primary);position:relative;display:flex;align-items:flex-start;font:normal .625rem/.75rem -apple-system,BlinkMacSystemFont,system-ui,Roboto,\"Segoe UI\",sans-serif;height:var(--tui-height-l);color:var(--tui-text-03);-webkit-backdrop-filter:blur(.25rem);backdrop-filter:blur(.25rem)}:host:before{position:absolute;top:0;left:0;width:100%;height:100%;content:\"\";background:var(--tui-elevation-01);box-shadow:inset 0 1px var(--tui-base-04);opacity:.9}.t-skeletons{display:none;height:100%;width:100%;justify-content:space-around}.t-skeletons:first-child{display:flex}.t-skeleton{display:flex;flex-direction:column;align-items:center;justify-content:center;animation:tuiSkeletonVibe ease-in-out 1s infinite alternate}.t-skeleton:before{content:\"\";width:1.375rem;height:1.375rem;margin-bottom:.5rem;border-radius:100%;background:var(--tui-clear-hover)}.t-skeleton:after{content:\"\";width:2.5rem;height:.375rem;border-radius:1rem;background:var(--tui-clear-hover)}\n"], directives: [{ type: i1__namespace$1.TuiRepeatTimesDirective, selector: "[tuiRepeatTimes][tuiRepeatTimesOf]", inputs: ["tuiRepeatTimesOf"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabBarComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'nav[tuiTabBar]',
                        templateUrl: './tab-bar.template.html',
                        styleUrls: ['./tab-bar.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { tabs: [{
                    type: i0.ContentChildren,
                    args: [i0.forwardRef(function () { return TuiTabBarItemComponent; }), { read: i0.ElementRef }]
                }], quantity: [{
                    type: i0.Input
                }], activeItemIndex: [{
                    type: i0.Input
                }], activeItemIndexChange: [{
                    type: i0.Output
                }], setActive: [{
                    type: i0.HostListener,
                    args: ['click', ['$event.target']]
                }], style: [{
                    type: i0.HostBinding,
                    args: ['style']
                }] } });

    var TuiTabBarItemDirective = /** @class */ (function () {
        function TuiTabBarItemDirective(destroy$, active$, tabs, _a, cdr) {
            var nativeElement = _a.nativeElement;
            active$
                .pipe(operators.filter(Boolean), i1$1.tuiWatch(cdr), operators.takeUntil(destroy$))
                .subscribe(function () {
                tabs.setActive(nativeElement);
            });
        }
        return TuiTabBarItemDirective;
    }());
    TuiTabBarItemDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabBarItemDirective, deps: [{ token: i1$1.TuiDestroyService, self: true }, { token: i1.TuiRouterLinkActiveService }, { token: TuiTabBarComponent }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiTabBarItemDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTabBarItemDirective, selector: "[tuiTabBarItem][routerLinkActive]", providers: [i1.TuiRouterLinkActiveService, i1$1.TuiDestroyService], ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabBarItemDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiTabBarItem][routerLinkActive]',
                        providers: [i1.TuiRouterLinkActiveService, i1$1.TuiDestroyService],
                    }]
            }], ctorParameters: function () {
            return [{ type: i1__namespace$2.Observable, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [i1$1.TuiDestroyService]
                        }] }, { type: i1__namespace$2.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i1.TuiRouterLinkActiveService]
                        }] }, { type: TuiTabBarComponent, decorators: [{
                            type: i0.Inject,
                            args: [TuiTabBarComponent]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }];
        } });

    var TuiTabBarModule = /** @class */ (function () {
        function TuiTabBarModule() {
        }
        return TuiTabBarModule;
    }());
    TuiTabBarModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabBarModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiTabBarModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabBarModule, declarations: [TuiTabBarComponent, TuiTabBarItemComponent, TuiTabBarItemDirective], imports: [i2.CommonModule, i1.TuiSvgModule, i1$1.TuiRepeatTimesModule], exports: [TuiTabBarComponent, TuiTabBarItemComponent, TuiTabBarItemDirective] });
    TuiTabBarModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabBarModule, imports: [[i2.CommonModule, i1.TuiSvgModule, i1$1.TuiRepeatTimesModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTabBarModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i2.CommonModule, i1.TuiSvgModule, i1$1.TuiRepeatTimesModule],
                        declarations: [TuiTabBarComponent, TuiTabBarItemComponent, TuiTabBarItemDirective],
                        exports: [TuiTabBarComponent, TuiTabBarItemComponent, TuiTabBarItemDirective],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiTabBarComponent = TuiTabBarComponent;
    exports.TuiTabBarItemComponent = TuiTabBarItemComponent;
    exports.TuiTabBarItemDirective = TuiTabBarItemDirective;
    exports.TuiTabBarModule = TuiTabBarModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-addon-mobile-components-tab-bar.umd.js.map

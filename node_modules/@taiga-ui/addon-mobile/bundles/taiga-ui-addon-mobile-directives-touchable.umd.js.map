{"version":3,"file":"taiga-ui-addon-mobile-directives-touchable.umd.js","sources":["../../../projects/addon-mobile/directives/touchable/touchable.directive.ts","../../../projects/addon-mobile/directives/touchable/touchable.module.ts","../../../projects/addon-mobile/directives/touchable/taiga-ui-addon-mobile-directives-touchable.ts"],"sourcesContent":["import {\n    Directive,\n    ElementRef,\n    Inject,\n    Input,\n    Optional,\n    Renderer2,\n    Self,\n} from '@angular/core';\nimport {TuiTouchMode} from '@taiga-ui/addon-mobile/types';\nimport {tuiFindTouchIndex} from '@taiga-ui/addon-mobile/utils';\nimport {TUI_IS_IOS, TuiDestroyService, tuiTypedFromEvent} from '@taiga-ui/cdk';\nimport {TUI_ELEMENT_REF} from '@taiga-ui/core';\nimport {race} from 'rxjs';\nimport {filter, map, switchMap, take, takeUntil, tap} from 'rxjs/operators';\n\nconst STYLE = {\n    transform: 'scale(0.95)',\n    opacity: '0.6',\n    background: 'rgba(146, 153, 162, 0.12)',\n} as const;\n\n@Directive({\n    selector: '[tuiTouchable]',\n    providers: [TuiDestroyService],\n})\nexport class TuiTouchableDirective {\n    @Input()\n    tuiTouchable: TuiTouchMode | '' = '';\n\n    constructor(\n        @Optional() @Inject(TUI_ELEMENT_REF) el: ElementRef<HTMLElement> | null,\n        @Inject(TUI_IS_IOS) isIos: boolean,\n        @Inject(ElementRef) {nativeElement}: ElementRef<HTMLElement>,\n        @Inject(Renderer2) renderer: Renderer2,\n        @Self() @Inject(TuiDestroyService) destroy$: TuiDestroyService,\n    ) {\n        if (!isIos) {\n            return;\n        }\n\n        const element = el?.nativeElement || nativeElement;\n\n        tuiTypedFromEvent(element, 'touchstart', {passive: true})\n            .pipe(\n                tap(() => {\n                    this.onTouchStart(renderer, element);\n                }),\n                map(({touches}) => touches[touches.length - 1].identifier),\n                switchMap(identifier =>\n                    race(\n                        tuiTypedFromEvent(element, 'touchmove', {passive: true}).pipe(\n                            filter(({touches}) =>\n                                this.hasTouchLeft(element, touches, identifier),\n                            ),\n                        ),\n                        tuiTypedFromEvent(element, 'touchend'),\n                    ).pipe(take(1)),\n                ),\n                takeUntil(destroy$),\n            )\n            .subscribe(() => {\n                renderer.removeStyle(element, 'transform');\n                renderer.removeStyle(element, 'opacity');\n                renderer.removeStyle(element, 'background');\n            });\n    }\n\n    get style(): TuiTouchMode {\n        return this.tuiTouchable || 'transform';\n    }\n\n    private hasTouchLeft(\n        element: HTMLElement,\n        touches: TouchList,\n        identifier: number,\n    ): boolean {\n        const {ownerDocument} = element;\n        const id = tuiFindTouchIndex(touches, identifier);\n\n        if (!ownerDocument || id === -1) {\n            return true;\n        }\n\n        const {clientX, clientY} = touches[id];\n\n        return !element.contains(ownerDocument.elementFromPoint(clientX, clientY));\n    }\n\n    private onTouchStart(renderer: Renderer2, element: HTMLElement): void {\n        if (this.style !== 'transform') {\n            renderer.removeStyle(element, 'transition');\n        } else {\n            renderer.setStyle(element, 'transition', 'transform 0.2s');\n        }\n\n        renderer.setStyle(element, this.style, STYLE[this.style]);\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiTouchableDirective} from './touchable.directive';\n\n@NgModule({\n    declarations: [TuiTouchableDirective],\n    exports: [TuiTouchableDirective],\n})\nexport class TuiTouchableModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tuiTypedFromEvent","tap","map","switchMap","race","filter","take","takeUntil","tuiFindTouchIndex","TUI_ELEMENT_REF","TUI_IS_IOS","ElementRef","Renderer2","TuiDestroyService","i0","Directive","Optional","Inject","Self","Input","NgModule"],"mappings":"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"}
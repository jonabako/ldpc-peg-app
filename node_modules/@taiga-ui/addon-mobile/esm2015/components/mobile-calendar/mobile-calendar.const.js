import { MONTHS_IN_YEAR } from '@taiga-ui/cdk';
function getCycle(options) {
    return Array.from({ length: options.yearCycle }, (_, i) => Array.from({ length: MONTHS_IN_YEAR }, (_, month) => options.label +
        weekCount({ year: i, month, startingYear: options.startingYear }) *
            options.week));
}
function weekCount(options) {
    const firstOfMonth = new Date(options.year + options.startingYear, options.month, 1);
    const lastOfMonth = new Date(options.year + options.startingYear, options.month + 1, 0);
    const days = lastOfMonth.getDate() + (firstOfMonth.getDay() || 7) - 1;
    return Math.ceil(days / 7);
}
export const SCROLL_DEBOUNCE_TIME = 80;
export const YEARS_IN_ROW = 5;
export const STARTING_YEAR = 1900;
export const RANGE = 196;
export const BUFFER = 500;
export const ANDROID_LABEL = 64;
export const ANDROID_WEEK = 48;
export const IOS_LABEL = 50;
export const IOS_WEEK = 50;
export const YEARLY_CYCLE = 28;
export const ANDROID_CYCLE = getCycle({
    label: ANDROID_LABEL,
    week: ANDROID_WEEK,
    yearCycle: YEARLY_CYCLE,
    startingYear: STARTING_YEAR,
});
export const IOS_CYCLE = getCycle({
    label: IOS_LABEL,
    week: IOS_WEEK,
    yearCycle: YEARLY_CYCLE,
    startingYear: STARTING_YEAR,
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9iaWxlLWNhbGVuZGFyLmNvbnN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tbW9iaWxlL2NvbXBvbmVudHMvbW9iaWxlLWNhbGVuZGFyL21vYmlsZS1jYWxlbmRhci5jb25zdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTdDLFNBQVMsUUFBUSxDQUFDLE9BS2pCO0lBQ0csT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxTQUFTLEVBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUNwRCxLQUFLLENBQUMsSUFBSSxDQUNOLEVBQUMsTUFBTSxFQUFFLGNBQWMsRUFBQyxFQUN4QixDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUNULE9BQU8sQ0FBQyxLQUFLO1FBQ2IsU0FBUyxDQUFDLEVBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLE9BQU8sQ0FBQyxZQUFZLEVBQUMsQ0FBQztZQUMzRCxPQUFPLENBQUMsSUFBSSxDQUN2QixDQUNKLENBQUM7QUFDTixDQUFDO0FBRUQsU0FBUyxTQUFTLENBQUMsT0FBNEQ7SUFDM0UsTUFBTSxZQUFZLEdBQUcsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsWUFBWSxFQUFFLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDckYsTUFBTSxXQUFXLEdBQUcsSUFBSSxJQUFJLENBQ3hCLE9BQU8sQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLFlBQVksRUFDbkMsT0FBTyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQ2pCLENBQUMsQ0FDSixDQUFDO0lBQ0YsTUFBTSxJQUFJLEdBQUcsV0FBVyxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUV0RSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQy9CLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxFQUFFLENBQUM7QUFDdkMsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLENBQUMsQ0FBQztBQUM5QixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDO0FBQ2xDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUM7QUFDekIsTUFBTSxDQUFDLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQztBQUMxQixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsRUFBRSxDQUFDO0FBQ2hDLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxFQUFFLENBQUM7QUFDL0IsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQztBQUM1QixNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDO0FBQzNCLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxFQUFFLENBQUM7QUFFL0IsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLFFBQVEsQ0FBQztJQUNsQyxLQUFLLEVBQUUsYUFBYTtJQUNwQixJQUFJLEVBQUUsWUFBWTtJQUNsQixTQUFTLEVBQUUsWUFBWTtJQUN2QixZQUFZLEVBQUUsYUFBYTtDQUM5QixDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDO0lBQzlCLEtBQUssRUFBRSxTQUFTO0lBQ2hCLElBQUksRUFBRSxRQUFRO0lBQ2QsU0FBUyxFQUFFLFlBQVk7SUFDdkIsWUFBWSxFQUFFLGFBQWE7Q0FDOUIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtNT05USFNfSU5fWUVBUn0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5cbmZ1bmN0aW9uIGdldEN5Y2xlKG9wdGlvbnM6IHtcbiAgICBsYWJlbDogbnVtYmVyO1xuICAgIHdlZWs6IG51bWJlcjtcbiAgICB5ZWFyQ3ljbGU6IG51bWJlcjtcbiAgICBzdGFydGluZ1llYXI6IG51bWJlcjtcbn0pOiBSZWFkb25seUFycmF5PHJlYWRvbmx5IG51bWJlcltdPiB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20oe2xlbmd0aDogb3B0aW9ucy55ZWFyQ3ljbGV9LCAoXywgaSkgPT5cbiAgICAgICAgQXJyYXkuZnJvbShcbiAgICAgICAgICAgIHtsZW5ndGg6IE1PTlRIU19JTl9ZRUFSfSxcbiAgICAgICAgICAgIChfLCBtb250aCkgPT5cbiAgICAgICAgICAgICAgICBvcHRpb25zLmxhYmVsICtcbiAgICAgICAgICAgICAgICB3ZWVrQ291bnQoe3llYXI6IGksIG1vbnRoLCBzdGFydGluZ1llYXI6IG9wdGlvbnMuc3RhcnRpbmdZZWFyfSkgKlxuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLndlZWssXG4gICAgICAgICksXG4gICAgKTtcbn1cblxuZnVuY3Rpb24gd2Vla0NvdW50KG9wdGlvbnM6IHt5ZWFyOiBudW1iZXI7IG1vbnRoOiBudW1iZXI7IHN0YXJ0aW5nWWVhcjogbnVtYmVyfSk6IG51bWJlciB7XG4gICAgY29uc3QgZmlyc3RPZk1vbnRoID0gbmV3IERhdGUob3B0aW9ucy55ZWFyICsgb3B0aW9ucy5zdGFydGluZ1llYXIsIG9wdGlvbnMubW9udGgsIDEpO1xuICAgIGNvbnN0IGxhc3RPZk1vbnRoID0gbmV3IERhdGUoXG4gICAgICAgIG9wdGlvbnMueWVhciArIG9wdGlvbnMuc3RhcnRpbmdZZWFyLFxuICAgICAgICBvcHRpb25zLm1vbnRoICsgMSxcbiAgICAgICAgMCxcbiAgICApO1xuICAgIGNvbnN0IGRheXMgPSBsYXN0T2ZNb250aC5nZXREYXRlKCkgKyAoZmlyc3RPZk1vbnRoLmdldERheSgpIHx8IDcpIC0gMTtcblxuICAgIHJldHVybiBNYXRoLmNlaWwoZGF5cyAvIDcpO1xufVxuXG5leHBvcnQgY29uc3QgU0NST0xMX0RFQk9VTkNFX1RJTUUgPSA4MDtcbmV4cG9ydCBjb25zdCBZRUFSU19JTl9ST1cgPSA1O1xuZXhwb3J0IGNvbnN0IFNUQVJUSU5HX1lFQVIgPSAxOTAwO1xuZXhwb3J0IGNvbnN0IFJBTkdFID0gMTk2O1xuZXhwb3J0IGNvbnN0IEJVRkZFUiA9IDUwMDtcbmV4cG9ydCBjb25zdCBBTkRST0lEX0xBQkVMID0gNjQ7XG5leHBvcnQgY29uc3QgQU5EUk9JRF9XRUVLID0gNDg7XG5leHBvcnQgY29uc3QgSU9TX0xBQkVMID0gNTA7XG5leHBvcnQgY29uc3QgSU9TX1dFRUsgPSA1MDtcbmV4cG9ydCBjb25zdCBZRUFSTFlfQ1lDTEUgPSAyODtcblxuZXhwb3J0IGNvbnN0IEFORFJPSURfQ1lDTEUgPSBnZXRDeWNsZSh7XG4gICAgbGFiZWw6IEFORFJPSURfTEFCRUwsXG4gICAgd2VlazogQU5EUk9JRF9XRUVLLFxuICAgIHllYXJDeWNsZTogWUVBUkxZX0NZQ0xFLFxuICAgIHN0YXJ0aW5nWWVhcjogU1RBUlRJTkdfWUVBUixcbn0pO1xuXG5leHBvcnQgY29uc3QgSU9TX0NZQ0xFID0gZ2V0Q3ljbGUoe1xuICAgIGxhYmVsOiBJT1NfTEFCRUwsXG4gICAgd2VlazogSU9TX1dFRUssXG4gICAgeWVhckN5Y2xlOiBZRUFSTFlfQ1lDTEUsXG4gICAgc3RhcnRpbmdZZWFyOiBTVEFSVElOR19ZRUFSLFxufSk7XG4iXX0=
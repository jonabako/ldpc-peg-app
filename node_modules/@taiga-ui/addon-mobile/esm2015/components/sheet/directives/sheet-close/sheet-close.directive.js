import { Directive, ElementRef, Inject, NgZone, Output } from '@angular/core';
import { WINDOW } from '@ng-web-apis/common';
import { tuiIfMap, tuiIsFalsy, tuiTypedFromEvent, tuiZonefull } from '@taiga-ui/cdk';
import { merge } from 'rxjs';
import { distinctUntilChanged, filter, startWith } from 'rxjs/operators';
import { TuiSheetComponent } from '../../components/sheet/sheet.component';
import { TUI_SHEET_CLOSE } from '../../components/sheet-heading/sheet-heading.component';
import { TUI_SHEET_DRAGGED, TUI_SHEET_SCROLL } from '../../sheet-tokens';
import * as i0 from "@angular/core";
import * as i1 from "rxjs";
import * as i2 from "../../components/sheet/sheet.component";
export class TuiSheetCloseDirective {
    constructor(zone, dragged$, scroll$, win, el, sheet) {
        this.zone = zone;
        this.dragged$ = dragged$;
        this.scroll$ = scroll$;
        this.win = win;
        this.el = el;
        this.sheet = sheet;
        this.close = merge(tuiTypedFromEvent(this.el.nativeElement, TUI_SHEET_CLOSE), this.dragged$.pipe(tuiIfMap(() => this.scroll$.pipe(startWith(this.el.nativeElement.scrollTop)), tuiIsFalsy), filter(y => { var _a; return ((_a = this.sheet.item) === null || _a === void 0 ? void 0 : _a.closeable) && this.shouldClose(y); }), distinctUntilChanged(), tuiZonefull(this.zone)));
    }
    shouldClose(scrollTop) {
        const height = Math.min(this.win.innerHeight, this.el.nativeElement.scrollHeight - this.win.innerHeight);
        const min = Math.min(height, this.sheet.stops[0] || Infinity);
        return scrollTop < min / 2;
    }
}
TuiSheetCloseDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSheetCloseDirective, deps: [{ token: NgZone }, { token: TUI_SHEET_DRAGGED }, { token: TUI_SHEET_SCROLL }, { token: WINDOW }, { token: ElementRef }, { token: TuiSheetComponent }], target: i0.ɵɵFactoryTarget.Directive });
TuiSheetCloseDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiSheetCloseDirective, selector: "tui-sheet[close]", outputs: { close: "close" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSheetCloseDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'tui-sheet[close]',
                }]
        }], ctorParameters: function () { return [{ type: i0.NgZone, decorators: [{
                    type: Inject,
                    args: [NgZone]
                }] }, { type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_SHEET_DRAGGED]
                }] }, { type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_SHEET_SCROLL]
                }] }, { type: Window, decorators: [{
                    type: Inject,
                    args: [WINDOW]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i2.TuiSheetComponent, decorators: [{
                    type: Inject,
                    args: [TuiSheetComponent]
                }] }]; }, propDecorators: { close: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hlZXQtY2xvc2UuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tbW9iaWxlL2NvbXBvbmVudHMvc2hlZXQvZGlyZWN0aXZlcy9zaGVldC1jbG9zZS9zaGVldC1jbG9zZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxRQUFRLEVBQUUsVUFBVSxFQUFFLGlCQUFpQixFQUFFLFdBQVcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNuRixPQUFPLEVBQUMsS0FBSyxFQUFhLE1BQU0sTUFBTSxDQUFDO0FBQ3ZDLE9BQU8sRUFBQyxvQkFBb0IsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFdkUsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sd0NBQXdDLENBQUM7QUFDekUsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLHdEQUF3RCxDQUFDO0FBQ3ZGLE9BQU8sRUFBQyxpQkFBaUIsRUFBRSxnQkFBZ0IsRUFBQyxNQUFNLG9CQUFvQixDQUFDOzs7O0FBS3ZFLE1BQU0sT0FBTyxzQkFBc0I7SUFnQi9CLFlBQ3FDLElBQVksRUFDRCxRQUE2QixFQUM5QixPQUEyQixFQUNyQyxHQUFXLEVBQ1AsRUFBMkIsRUFDcEIsS0FBaUM7UUFMNUMsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUNELGFBQVEsR0FBUixRQUFRLENBQXFCO1FBQzlCLFlBQU8sR0FBUCxPQUFPLENBQW9CO1FBQ3JDLFFBQUcsR0FBSCxHQUFHLENBQVE7UUFDUCxPQUFFLEdBQUYsRUFBRSxDQUF5QjtRQUNwQixVQUFLLEdBQUwsS0FBSyxDQUE0QjtRQW5CeEUsVUFBSyxHQUF3QixLQUFLLENBQ3ZDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLGVBQWUsQ0FBQyxFQUN6RCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FDZCxRQUFRLENBQ0osR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQ25FLFVBQVUsQ0FDYixFQUNELE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxXQUFDLE9BQUEsQ0FBQSxNQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSwwQ0FBRSxTQUFTLEtBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFBLENBQUMsRUFDOUQsb0JBQW9CLEVBQUUsRUFDdEIsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FDekIsQ0FDSixDQUFDO0lBU0MsQ0FBQztJQUVJLFdBQVcsQ0FBQyxTQUFpQjtRQUNqQyxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUNuQixJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFDcEIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUM1RCxDQUFDO1FBQ0YsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksUUFBUSxDQUFDLENBQUM7UUFFOUQsT0FBTyxTQUFTLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQztJQUMvQixDQUFDOztvSEFqQ1Esc0JBQXNCLGtCQWlCbkIsTUFBTSxhQUNOLGlCQUFpQixhQUNqQixnQkFBZ0IsYUFDaEIsTUFBTSxhQUNOLFVBQVUsYUFDVixpQkFBaUI7d0dBdEJwQixzQkFBc0I7NEZBQXRCLHNCQUFzQjtrQkFIbEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsa0JBQWtCO2lCQUMvQjs7MEJBa0JRLE1BQU07MkJBQUMsTUFBTTs7MEJBQ2IsTUFBTTsyQkFBQyxpQkFBaUI7OzBCQUN4QixNQUFNOzJCQUFDLGdCQUFnQjs4QkFDYyxNQUFNOzBCQUEzQyxNQUFNOzJCQUFDLE1BQU07OzBCQUNiLE1BQU07MkJBQUMsVUFBVTs7MEJBQ2pCLE1BQU07MkJBQUMsaUJBQWlCOzRDQW5CcEIsS0FBSztzQkFGYixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEluamVjdCwgTmdab25lLCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtXSU5ET1d9IGZyb20gJ0BuZy13ZWItYXBpcy9jb21tb24nO1xuaW1wb3J0IHt0dWlJZk1hcCwgdHVpSXNGYWxzeSwgdHVpVHlwZWRGcm9tRXZlbnQsIHR1aVpvbmVmdWxsfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7bWVyZ2UsIE9ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtkaXN0aW5jdFVudGlsQ2hhbmdlZCwgZmlsdGVyLCBzdGFydFdpdGh9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0IHtUdWlTaGVldENvbXBvbmVudH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9zaGVldC9zaGVldC5jb21wb25lbnQnO1xuaW1wb3J0IHtUVUlfU0hFRVRfQ0xPU0V9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvc2hlZXQtaGVhZGluZy9zaGVldC1oZWFkaW5nLmNvbXBvbmVudCc7XG5pbXBvcnQge1RVSV9TSEVFVF9EUkFHR0VELCBUVUlfU0hFRVRfU0NST0xMfSBmcm9tICcuLi8uLi9zaGVldC10b2tlbnMnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ3R1aS1zaGVldFtjbG9zZV0nLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlTaGVldENsb3NlRGlyZWN0aXZlIHtcbiAgICBAT3V0cHV0KClcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L25vLW91dHB1dC1uYXRpdmVcbiAgICByZWFkb25seSBjbG9zZTogT2JzZXJ2YWJsZTx1bmtub3duPiA9IG1lcmdlKFxuICAgICAgICB0dWlUeXBlZEZyb21FdmVudCh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsIFRVSV9TSEVFVF9DTE9TRSksXG4gICAgICAgIHRoaXMuZHJhZ2dlZCQucGlwZShcbiAgICAgICAgICAgIHR1aUlmTWFwKFxuICAgICAgICAgICAgICAgICgpID0+IHRoaXMuc2Nyb2xsJC5waXBlKHN0YXJ0V2l0aCh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuc2Nyb2xsVG9wKSksXG4gICAgICAgICAgICAgICAgdHVpSXNGYWxzeSxcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBmaWx0ZXIoeSA9PiB0aGlzLnNoZWV0Lml0ZW0/LmNsb3NlYWJsZSAmJiB0aGlzLnNob3VsZENsb3NlKHkpKSxcbiAgICAgICAgICAgIGRpc3RpbmN0VW50aWxDaGFuZ2VkKCksXG4gICAgICAgICAgICB0dWlab25lZnVsbCh0aGlzLnpvbmUpLFxuICAgICAgICApLFxuICAgICk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChOZ1pvbmUpIHByaXZhdGUgcmVhZG9ubHkgem9uZTogTmdab25lLFxuICAgICAgICBASW5qZWN0KFRVSV9TSEVFVF9EUkFHR0VEKSBwcml2YXRlIHJlYWRvbmx5IGRyYWdnZWQkOiBPYnNlcnZhYmxlPGJvb2xlYW4+LFxuICAgICAgICBASW5qZWN0KFRVSV9TSEVFVF9TQ1JPTEwpIHByaXZhdGUgcmVhZG9ubHkgc2Nyb2xsJDogT2JzZXJ2YWJsZTxudW1iZXI+LFxuICAgICAgICBASW5qZWN0KFdJTkRPVykgcHJpdmF0ZSByZWFkb25seSB3aW46IFdpbmRvdyxcbiAgICAgICAgQEluamVjdChFbGVtZW50UmVmKSBwcml2YXRlIHJlYWRvbmx5IGVsOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PixcbiAgICAgICAgQEluamVjdChUdWlTaGVldENvbXBvbmVudCkgcHJpdmF0ZSByZWFkb25seSBzaGVldDogVHVpU2hlZXRDb21wb25lbnQ8dW5rbm93bj4sXG4gICAgKSB7fVxuXG4gICAgcHJpdmF0ZSBzaG91bGRDbG9zZShzY3JvbGxUb3A6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgICAgICBjb25zdCBoZWlnaHQgPSBNYXRoLm1pbihcbiAgICAgICAgICAgIHRoaXMud2luLmlubmVySGVpZ2h0LFxuICAgICAgICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnNjcm9sbEhlaWdodCAtIHRoaXMud2luLmlubmVySGVpZ2h0LFxuICAgICAgICApO1xuICAgICAgICBjb25zdCBtaW4gPSBNYXRoLm1pbihoZWlnaHQsIHRoaXMuc2hlZXQuc3RvcHNbMF0gfHwgSW5maW5pdHkpO1xuXG4gICAgICAgIHJldHVybiBzY3JvbGxUb3AgPCBtaW4gLyAyO1xuICAgIH1cbn1cbiJdfQ==
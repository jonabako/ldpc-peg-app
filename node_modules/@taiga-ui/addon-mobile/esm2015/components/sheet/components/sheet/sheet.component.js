import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, HostListener, Inject, Input, NgZone, Self, ViewChild, ViewChildren, } from '@angular/core';
import { EMPTY_QUERY, TUI_IS_IOS, TuiDestroyService, tuiPure, tuiZonefull, } from '@taiga-ui/cdk';
import { tuiSlideInTop } from '@taiga-ui/core';
import { TUI_MORE_WORD } from '@taiga-ui/kit';
import { timer } from 'rxjs';
import { map, takeUntil } from 'rxjs/operators';
import { TUI_SHEET_SCROLL } from '../../sheet-tokens';
import { TUI_SHEET_ID } from '../sheet-heading/sheet-heading.component';
import { TUI_SHEET_PROVIDERS } from './sheet.providers';
import * as i0 from "@angular/core";
import * as i1 from "../sheet-bar/sheet-bar.component";
import * as i2 from "../sheet-heading/sheet-heading.component";
import * as i3 from "@angular/common";
import * as i4 from "../../directives/sheet-top/sheet-top.directive";
import * as i5 from "@tinkoff/ng-polymorpheus";
import * as i6 from "../../directives/sheet-stop/sheet-stop.directive";
import * as i7 from "rxjs";
export class TuiSheetComponent {
    constructor(scroll$, el, zone, isIos, moreWord$, destroy$) {
        this.scroll$ = scroll$;
        this.el = el;
        this.zone = zone;
        this.isIos = isIos;
        this.moreWord$ = moreWord$;
        this.destroy$ = destroy$;
        this.stopsRefs = EMPTY_QUERY;
        this.id = '';
        this.stuck$ = this.scroll$.pipe(map(y => Math.floor(y) > this.contentTop));
    }
    get stops() {
        return this.getStops(this.stopsRefs);
    }
    get imageStop() {
        return (this.item.imageSlide && this.stops[this.stops.length - 1]) || 0;
    }
    get imageHeight() {
        return this.contentTop - this.sheetTop;
    }
    get context() {
        return Object.assign(Object.assign({}, this.item), { scroll$: this.scroll$.pipe(tuiZonefull(this.zone)) });
    }
    onId(id) {
        this.id = id;
    }
    ngAfterViewInit() {
        this.el.nativeElement.scrollTop = [...this.stops, this.sheetTop, this.contentTop][this.item.initial];
    }
    scrollTo(top = this.sheetTop) {
        const { nativeElement } = this.el;
        if (this.isIos) {
            const offset = top - nativeElement.scrollTop - 16;
            nativeElement.style.transition = 'none';
            nativeElement.style.transform = `scaleX(-1) translate3d(0, ${offset}px, 0)`;
            timer(0)
                .pipe(takeUntil(this.destroy$))
                .subscribe(() => {
                nativeElement.style.transition = '';
                nativeElement.style.transform = '';
            });
        }
        nativeElement.scrollTo({ top, behavior: 'smooth' });
    }
    close() {
        if (this.context.closeable) {
            this.context.$implicit.complete();
        }
    }
    get contentTop() {
        var _a, _b;
        return (_b = (_a = this.content) === null || _a === void 0 ? void 0 : _a.nativeElement.offsetTop) !== null && _b !== void 0 ? _b : Infinity;
    }
    get sheetTop() {
        var _a, _b;
        return (_b = (_a = this.sheet) === null || _a === void 0 ? void 0 : _a.nativeElement.offsetTop) !== null && _b !== void 0 ? _b : Infinity;
    }
    getStops(stops) {
        return stops.map(({ nativeElement }) => nativeElement.offsetTop + nativeElement.clientHeight);
    }
}
TuiSheetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSheetComponent, deps: [{ token: TUI_SHEET_SCROLL }, { token: ElementRef }, { token: NgZone }, { token: TUI_IS_IOS }, { token: TUI_MORE_WORD }, { token: TuiDestroyService, self: true }], target: i0.ɵɵFactoryTarget.Component });
TuiSheetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiSheetComponent, selector: "tui-sheet", inputs: { item: "item" }, host: { attributes: { "role": "dialog" }, listeners: { "$.class._stuck": "stuck$", "tui-sheet-id": "onId($event.detail)" }, properties: { "attr.aria-labelledby": "id", "class._ios": "isIos", "$.class._stuck": "stuck$" } }, providers: TUI_SHEET_PROVIDERS, viewQueries: [{ propertyName: "sheet", first: true, predicate: ["sheet"], descendants: true }, { propertyName: "content", first: true, predicate: ["content"], descendants: true }, { propertyName: "stopsRefs", predicate: ["stops"], descendants: true }], ngImport: i0, template: "<div\n    class=\"t-bumpers\"\n    (click)=\"close()\"\n>\n    <div\n        *ngFor=\"let stop of item.stops\"\n        #stops\n        class=\"t-bumper\"\n        [style.marginTop]=\"stop\"\n    ></div>\n</div>\n<div\n    #sheet\n    class=\"t-wrapper\"\n    [class.t-wrapper_shadow]=\"!item.image\"\n>\n    <header\n        *ngIf=\"item.image\"\n        class=\"t-top\"\n        [tuiSheetTop]=\"imageStop\"\n    >\n        <img\n            *polymorpheusOutlet=\"item.image as src; context: context\"\n            alt=\"\"\n            class=\"t-image\"\n            [src]=\"src\"\n        />\n    </header>\n    <section\n        #content\n        tuiSheetStop\n        class=\"t-sheet\"\n    >\n        <div class=\"t-bar\"></div>\n        <tui-sheet-bar>\n            <button\n                type=\"button\"\n                class=\"t-button\"\n                [title]=\"moreWord$ | async\"\n                (click)=\"scrollTo(stops[1])\"\n            ></button>\n        </tui-sheet-bar>\n        <div class=\"t-content\">\n            <h2\n                *polymorpheusOutlet=\"item.content as text; context: context\"\n                tuiSheetHeading\n                class=\"t-heading\"\n            >\n                {{ text }}\n            </h2>\n        </div>\n    </section>\n</div>\n", styles: [":host{scrollbar-width:none;-ms-overflow-style:none;position:absolute;top:0;left:0;bottom:0;right:0;transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;top:auto;border-radius:.75rem .75rem 0 0;overflow-y:auto;overflow-x:hidden;scroll-snap-type:y mandatory;box-shadow:0 50vh var(--tui-elevation-01);padding-right:1rem;margin-left:-1rem;transform:scaleX(-1);-webkit-clip-path:inset(0 1rem 0 0 round .75rem .75rem 0 0);clip-path:inset(0 1rem 0 0 round .75rem .75rem 0 0)}:host::-webkit-scrollbar,:host::-webkit-scrollbar-thumb{display:none}:host._stuck{scroll-snap-type:none}@supports (-moz-appearance: none){:host{scroll-snap-type:none}}.t-bumpers{display:flex;height:100%}:host-context(.t-wrapper_closeable) .t-bumpers{scroll-snap-stop:always;scroll-snap-align:start;scroll-margin:-1px}.t-bumper{scroll-snap-stop:always;scroll-snap-align:start;height:1rem;width:1rem}.t-wrapper{border-radius:inherit;scroll-snap-stop:always;scroll-snap-align:start}.t-wrapper_shadow{box-shadow:var(--tui-shadow)}.t-top{position:-webkit-sticky;position:sticky;top:0;border-radius:.8rem .8rem 0 0;box-shadow:var(--tui-shadow);transform:scaleX(-1);overflow:hidden}.t-top._clickthrough{pointer-events:none}:host-context(._overlay:not(._visible)) .t-top{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;transform:scaleX(-1)!important}.t-image{display:block;width:100%}.t-sheet{position:relative;border-radius:inherit;scroll-snap-stop:always;scroll-snap-align:start;transform:scaleX(-1)}.t-top:not(._rounded)~.t-sheet .t-bar{border-radius:0}.t-bar{transition-property:border-radius;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:-webkit-sticky;position:sticky;top:0;z-index:1;height:1.5rem;margin-bottom:-1.5rem;border-radius:inherit;background:var(--tui-elevation-01);box-shadow:inset 0 1px #ffffff40}.t-button{position:absolute;top:0;height:1.5rem;width:3rem;padding:0;border:0;opacity:0}.t-content{padding:1rem;margin-top:-1rem;border-radius:inherit;background:var(--tui-elevation-01)}.t-heading{padding-bottom:.5rem;background:var(--tui-elevation-01)}\n"], components: [{ type: i1.TuiSheetBarComponent, selector: "tui-sheet-bar" }, { type: i2.TuiSheetHeadingComponent, selector: "[tuiSheetHeading]" }], directives: [{ type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.TuiSheetTopDirective, selector: "[tuiSheetTop]", inputs: ["tuiSheetTop"] }, { type: i5.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i6.TuiSheetStopDirective, selector: "[tuiSheetStop]" }], pipes: { "async": i3.AsyncPipe }, animations: [tuiSlideInTop], changeDetection: i0.ChangeDetectionStrategy.OnPush });
__decorate([
    tuiPure
], TuiSheetComponent.prototype, "context", null);
__decorate([
    tuiPure
], TuiSheetComponent.prototype, "getStops", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSheetComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-sheet',
                    templateUrl: './sheet.template.html',
                    styleUrls: ['./sheet.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: TUI_SHEET_PROVIDERS,
                    host: {
                        role: 'dialog',
                        '[attr.aria-labelledby]': 'id',
                        '[class._ios]': 'isIos',
                        // '[class._stuck]': 'true', // Initially disable snapping for Firefox
                        '[$.class._stuck]': 'stuck$',
                        '($.class._stuck)': 'stuck$',
                    },
                    animations: [tuiSlideInTop],
                }]
        }], ctorParameters: function () { return [{ type: i7.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_SHEET_SCROLL]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }, { type: i0.NgZone, decorators: [{
                    type: Inject,
                    args: [NgZone]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_IOS]
                }] }, { type: i7.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_MORE_WORD]
                }] }, { type: i7.Observable, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDestroyService]
                }] }]; }, propDecorators: { sheet: [{
                type: ViewChild,
                args: ['sheet']
            }], content: [{
                type: ViewChild,
                args: ['content']
            }], stopsRefs: [{
                type: ViewChildren,
                args: ['stops']
            }], item: [{
                type: Input
            }], context: [], onId: [{
                type: HostListener,
                args: [TUI_SHEET_ID, ['$event.detail']]
            }], getStops: [] } });
//# sourceMappingURL=data:application/json;base64,
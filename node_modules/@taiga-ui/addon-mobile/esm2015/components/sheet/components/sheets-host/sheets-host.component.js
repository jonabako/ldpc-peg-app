import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Self, } from '@angular/core';
import { TUI_WINDOW_HEIGHT, TuiDestroyService } from '@taiga-ui/cdk';
import { TUI_ANIMATION_OPTIONS, tuiFadeIn, tuiSlideInTop } from '@taiga-ui/core';
import { takeUntil } from 'rxjs/operators';
import { TuiSheetService } from '../../sheet.service';
import * as i0 from "@angular/core";
import * as i1 from "../sheet/sheet.component";
import * as i2 from "@angular/common";
import * as i3 from "../../directives/sheet-wrapper/sheet-wrapper.directive";
import * as i4 from "../../directives/sheet-close/sheet-close.directive";
import * as i5 from "@taiga-ui/cdk";
import * as i6 from "@taiga-ui/core";
import * as i7 from "../../sheet.service";
import * as i8 from "rxjs";
export class TuiSheetsHostComponent {
    constructor(options, service, height$, destroy$, cdr) {
        this.options = options;
        this.service = service;
        this.height$ = height$;
        this.destroy$ = destroy$;
        this.cdr = cdr;
        this.sheets = [];
    }
    ngOnInit() {
        // Due to this view being parallel to app content, `markForCheck` from `async` pipe
        // can happen after view was checked, so calling `detectChanges` instead
        this.service.sheets$.pipe(takeUntil(this.destroy$)).subscribe(sheets => {
            this.sheets = sheets;
            this.cdr.detectChanges();
        });
    }
    close({ closeable, $implicit }) {
        if (closeable) {
            $implicit.complete();
        }
    }
}
TuiSheetsHostComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSheetsHostComponent, deps: [{ token: TUI_ANIMATION_OPTIONS }, { token: TuiSheetService }, { token: TUI_WINDOW_HEIGHT }, { token: TuiDestroyService, self: true }, { token: ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
TuiSheetsHostComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiSheetsHostComponent, selector: "tui-sheets-host", providers: [TuiDestroyService], ngImport: i0, template: "<div\n    *ngFor=\"let item of sheets\"\n    #wrapper=\"tuiSheetWrapper\"\n    class=\"t-wrapper\"\n    [@tuiFadeIn]=\"options\"\n    [@tuiSlideInTop]=\"options\"\n    [class.t-wrapper_closeable]=\"item.closeable\"\n    [class.t-wrapper_overlay]=\"item.overlay || (wrapper.overlay$ | async)\"\n    [class.t-wrapper_visible]=\"wrapper.visible$ | async\"\n    [style.height.px]=\"wrapper.height$ | async\"\n    [tuiSheetWrapper]=\"item.offset\"\n    (click.self)=\"close(item)\"\n>\n    <tui-sheet\n        tuiOverscroll=\"all\"\n        tuiScrollRef\n        [item]=\"item\"\n        [style.height.px]=\"((height$ | async) || 0) - item.offset\"\n        (close)=\"close(item)\"\n    ></tui-sheet>\n</div>\n<div\n    class=\"t-overlay\"\n    (click)=\"close(sheets[0])\"\n></div>\n", styles: [":host{position:-webkit-sticky;position:sticky;bottom:0;display:block;height:0}.t-overlay{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:fixed;top:0;left:0;width:100%;z-index:-1;height:100%;background:#000;opacity:.001;pointer-events:none}.t-wrapper_overlay~.t-overlay{opacity:.8;pointer-events:auto;touch-action:none}.t-wrapper{position:absolute;bottom:0;z-index:0;width:100%;height:100vh;overflow:hidden}.t-wrapper_visible{overflow:visible}\n"], components: [{ type: i1.TuiSheetComponent, selector: "tui-sheet", inputs: ["item"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.TuiSheetWrapperDirective, selector: "[tuiSheetWrapper]", inputs: ["tuiSheetWrapper"], exportAs: ["tuiSheetWrapper"] }, { type: i4.TuiSheetCloseDirective, selector: "tui-sheet[close]", outputs: ["close"] }, { type: i5.TuiOverscrollDirective, selector: "[tuiOverscroll]", inputs: ["tuiOverscroll"] }, { type: i6.TuiScrollRefDirective, selector: "[tuiScrollRef]" }], pipes: { "async": i2.AsyncPipe }, animations: [tuiSlideInTop, tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiSheetsHostComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-sheets-host',
                    templateUrl: './sheets-host.template.html',
                    styleUrls: ['./sheets-host.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [TuiDestroyService],
                    animations: [tuiSlideInTop, tuiFadeIn],
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ANIMATION_OPTIONS]
                }] }, { type: i7.TuiSheetService, decorators: [{
                    type: Inject,
                    args: [TuiSheetService]
                }] }, { type: i8.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_WINDOW_HEIGHT]
                }] }, { type: i8.Observable, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDestroyService]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hlZXRzLWhvc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tbW9iaWxlL2NvbXBvbmVudHMvc2hlZXQvY29tcG9uZW50cy9zaGVldHMtaG9zdC9zaGVldHMtaG9zdC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hZGRvbi1tb2JpbGUvY29tcG9uZW50cy9zaGVldC9jb21wb25lbnRzL3NoZWV0cy1ob3N0L3NoZWV0cy1ob3N0LnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUNILHVCQUF1QixFQUN2QixpQkFBaUIsRUFDakIsU0FBUyxFQUNULE1BQU0sRUFFTixJQUFJLEdBQ1AsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLGlCQUFpQixFQUFFLGlCQUFpQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBQyxxQkFBcUIsRUFBRSxTQUFTLEVBQUUsYUFBYSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFL0UsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBR3pDLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQzs7Ozs7Ozs7OztBQVVwRCxNQUFNLE9BQU8sc0JBQXNCO0lBRy9CLFlBQzRDLE9BQXlCLEVBQ3ZCLE9BQXdCLEVBQzlCLE9BQTJCLEVBQ1gsUUFBMEIsRUFDbEMsR0FBc0I7UUFKMUIsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFDdkIsWUFBTyxHQUFQLE9BQU8sQ0FBaUI7UUFDOUIsWUFBTyxHQUFQLE9BQU8sQ0FBb0I7UUFDWCxhQUFRLEdBQVIsUUFBUSxDQUFrQjtRQUNsQyxRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQVB0RSxXQUFNLEdBQWlDLEVBQUUsQ0FBQztJQVF2QyxDQUFDO0lBRUosUUFBUTtRQUNKLG1GQUFtRjtRQUNuRix3RUFBd0U7UUFDeEUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDbkUsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7WUFDckIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUM3QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxLQUFLLENBQUMsRUFBQyxTQUFTLEVBQUUsU0FBUyxFQUFvQjtRQUMzQyxJQUFJLFNBQVMsRUFBRTtZQUNYLFNBQVMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUN4QjtJQUNMLENBQUM7O29IQXhCUSxzQkFBc0Isa0JBSW5CLHFCQUFxQixhQUNyQixlQUFlLGFBQ2YsaUJBQWlCLGFBQ1QsaUJBQWlCLHlCQUN6QixpQkFBaUI7d0dBUnBCLHNCQUFzQiwwQ0FIcEIsQ0FBQyxpQkFBaUIsQ0FBQywwQkN0QmxDLDZ3QkF5QkEsd29DREZnQixDQUFDLGFBQWEsRUFBRSxTQUFTLENBQUM7NEZBRTdCLHNCQUFzQjtrQkFSbEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixXQUFXLEVBQUUsNkJBQTZCO29CQUMxQyxTQUFTLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQztvQkFDdkMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFNBQVMsRUFBRSxDQUFDLGlCQUFpQixDQUFDO29CQUM5QixVQUFVLEVBQUUsQ0FBQyxhQUFhLEVBQUUsU0FBUyxDQUFDO2lCQUN6Qzs7MEJBS1EsTUFBTTsyQkFBQyxxQkFBcUI7OzBCQUM1QixNQUFNOzJCQUFDLGVBQWU7OzBCQUN0QixNQUFNOzJCQUFDLGlCQUFpQjs7MEJBQ3hCLElBQUk7OzBCQUFJLE1BQU07MkJBQUMsaUJBQWlCOzswQkFDaEMsTUFBTTsyQkFBQyxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FuaW1hdGlvbk9wdGlvbnN9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHtcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBDb21wb25lbnQsXG4gICAgSW5qZWN0LFxuICAgIE9uSW5pdCxcbiAgICBTZWxmLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VFVJX1dJTkRPV19IRUlHSFQsIFR1aURlc3Ryb3lTZXJ2aWNlfSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcbmltcG9ydCB7VFVJX0FOSU1BVElPTl9PUFRJT05TLCB0dWlGYWRlSW4sIHR1aVNsaWRlSW5Ub3B9IGZyb20gJ0B0YWlnYS11aS9jb3JlJztcbmltcG9ydCB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge3Rha2VVbnRpbH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5pbXBvcnQge1R1aVNoZWV0fSBmcm9tICcuLi8uLi9zaGVldCc7XG5pbXBvcnQge1R1aVNoZWV0U2VydmljZX0gZnJvbSAnLi4vLi4vc2hlZXQuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLXNoZWV0cy1ob3N0JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vc2hlZXRzLWhvc3QudGVtcGxhdGUuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vc2hlZXRzLWhvc3Quc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHByb3ZpZGVyczogW1R1aURlc3Ryb3lTZXJ2aWNlXSxcbiAgICBhbmltYXRpb25zOiBbdHVpU2xpZGVJblRvcCwgdHVpRmFkZUluXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpU2hlZXRzSG9zdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgc2hlZXRzOiBSZWFkb25seUFycmF5PFR1aVNoZWV0PGFueT4+ID0gW107XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUVUlfQU5JTUFUSU9OX09QVElPTlMpIHJlYWRvbmx5IG9wdGlvbnM6IEFuaW1hdGlvbk9wdGlvbnMsXG4gICAgICAgIEBJbmplY3QoVHVpU2hlZXRTZXJ2aWNlKSBwcml2YXRlIHJlYWRvbmx5IHNlcnZpY2U6IFR1aVNoZWV0U2VydmljZSxcbiAgICAgICAgQEluamVjdChUVUlfV0lORE9XX0hFSUdIVCkgcmVhZG9ubHkgaGVpZ2h0JDogT2JzZXJ2YWJsZTxudW1iZXI+LFxuICAgICAgICBAU2VsZigpIEBJbmplY3QoVHVpRGVzdHJveVNlcnZpY2UpIHByaXZhdGUgcmVhZG9ubHkgZGVzdHJveSQ6IE9ic2VydmFibGU8dm9pZD4sXG4gICAgICAgIEBJbmplY3QoQ2hhbmdlRGV0ZWN0b3JSZWYpIHByaXZhdGUgcmVhZG9ubHkgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICApIHt9XG5cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICAgICAgLy8gRHVlIHRvIHRoaXMgdmlldyBiZWluZyBwYXJhbGxlbCB0byBhcHAgY29udGVudCwgYG1hcmtGb3JDaGVja2AgZnJvbSBgYXN5bmNgIHBpcGVcbiAgICAgICAgLy8gY2FuIGhhcHBlbiBhZnRlciB2aWV3IHdhcyBjaGVja2VkLCBzbyBjYWxsaW5nIGBkZXRlY3RDaGFuZ2VzYCBpbnN0ZWFkXG4gICAgICAgIHRoaXMuc2VydmljZS5zaGVldHMkLnBpcGUodGFrZVVudGlsKHRoaXMuZGVzdHJveSQpKS5zdWJzY3JpYmUoc2hlZXRzID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2hlZXRzID0gc2hlZXRzO1xuICAgICAgICAgICAgdGhpcy5jZHIuZGV0ZWN0Q2hhbmdlcygpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjbG9zZSh7Y2xvc2VhYmxlLCAkaW1wbGljaXR9OiBUdWlTaGVldDx1bmtub3duPik6IHZvaWQge1xuICAgICAgICBpZiAoY2xvc2VhYmxlKSB7XG4gICAgICAgICAgICAkaW1wbGljaXQuY29tcGxldGUoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIjxkaXZcbiAgICAqbmdGb3I9XCJsZXQgaXRlbSBvZiBzaGVldHNcIlxuICAgICN3cmFwcGVyPVwidHVpU2hlZXRXcmFwcGVyXCJcbiAgICBjbGFzcz1cInQtd3JhcHBlclwiXG4gICAgW0B0dWlGYWRlSW5dPVwib3B0aW9uc1wiXG4gICAgW0B0dWlTbGlkZUluVG9wXT1cIm9wdGlvbnNcIlxuICAgIFtjbGFzcy50LXdyYXBwZXJfY2xvc2VhYmxlXT1cIml0ZW0uY2xvc2VhYmxlXCJcbiAgICBbY2xhc3MudC13cmFwcGVyX292ZXJsYXldPVwiaXRlbS5vdmVybGF5IHx8ICh3cmFwcGVyLm92ZXJsYXkkIHwgYXN5bmMpXCJcbiAgICBbY2xhc3MudC13cmFwcGVyX3Zpc2libGVdPVwid3JhcHBlci52aXNpYmxlJCB8IGFzeW5jXCJcbiAgICBbc3R5bGUuaGVpZ2h0LnB4XT1cIndyYXBwZXIuaGVpZ2h0JCB8IGFzeW5jXCJcbiAgICBbdHVpU2hlZXRXcmFwcGVyXT1cIml0ZW0ub2Zmc2V0XCJcbiAgICAoY2xpY2suc2VsZik9XCJjbG9zZShpdGVtKVwiXG4+XG4gICAgPHR1aS1zaGVldFxuICAgICAgICB0dWlPdmVyc2Nyb2xsPVwiYWxsXCJcbiAgICAgICAgdHVpU2Nyb2xsUmVmXG4gICAgICAgIFtpdGVtXT1cIml0ZW1cIlxuICAgICAgICBbc3R5bGUuaGVpZ2h0LnB4XT1cIigoaGVpZ2h0JCB8IGFzeW5jKSB8fCAwKSAtIGl0ZW0ub2Zmc2V0XCJcbiAgICAgICAgKGNsb3NlKT1cImNsb3NlKGl0ZW0pXCJcbiAgICA+PC90dWktc2hlZXQ+XG48L2Rpdj5cbjxkaXZcbiAgICBjbGFzcz1cInQtb3ZlcmxheVwiXG4gICAgKGNsaWNrKT1cImNsb3NlKHNoZWV0c1swXSlcIlxuPjwvZGl2PlxuIl19
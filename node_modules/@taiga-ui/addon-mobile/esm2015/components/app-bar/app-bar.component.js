import { ChangeDetectionStrategy, Component, Inject, ViewChildren, } from '@angular/core';
import { MutationObserverService } from '@ng-web-apis/mutation-observer';
import { EMPTY_QUERY, TuiResizeService } from '@taiga-ui/cdk';
import { merge } from 'rxjs';
import { map } from 'rxjs/operators';
import { TUI_APP_BAR_PROVIDERS } from './app-bar.providers';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "rxjs";
export class TuiAppBarComponent {
    constructor(resize$, mutation$) {
        this.resize$ = resize$;
        this.mutation$ = mutation$;
        this.side = EMPTY_QUERY;
        this.width$ = merge(this.resize$, this.mutation$).pipe(map(() => {
            var _a, _b;
            return 2 *
                Math.max((_a = this.side.first) === null || _a === void 0 ? void 0 : _a.nativeElement.clientWidth, (_b = this.side.last) === null || _b === void 0 ? void 0 : _b.nativeElement.clientWidth);
        }));
    }
}
TuiAppBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAppBarComponent, deps: [{ token: TuiResizeService }, { token: MutationObserverService }], target: i0.ɵɵFactoryTarget.Component });
TuiAppBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiAppBarComponent, selector: "tui-app-bar", providers: TUI_APP_BAR_PROVIDERS, viewQueries: [{ propertyName: "side", predicate: ["side"], descendants: true }], ngImport: i0, template: "<div\n    #side\n    class=\"t-left\"\n>\n    <ng-content select=\"[tuiSlot='left']\"></ng-content>\n</div>\n<div\n    class=\"t-content\"\n    [style.--sides.px]=\"width$ | async\"\n>\n    <ng-content></ng-content>\n</div>\n<div\n    #side\n    class=\"t-right\"\n>\n    <ng-content select=\"[tuiSlot='right']\"></ng-content>\n</div>\n", styles: [":host{--tui-padding: .625rem;position:relative;display:flex;height:3rem;align-items:center;justify-content:space-between;border:solid transparent;border-width:0 .375rem;box-sizing:border-box;font:var(--tui-font-text-m);font-weight:bold;color:var(--tui-text-01);background:var(--tui-base-01)}:host ::ng-deep [tuiButton][data-size=m]{font-weight:normal}.t-content{top:50%;left:50%;transform:translate(-50%,-50%);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;position:absolute;max-width:calc(100% - var(--sides, 0px));flex:1;padding:0 .375rem;box-sizing:border-box;text-align:center;color:var(--tui-text-01)}\n"], pipes: { "async": i1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAppBarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-app-bar',
                    templateUrl: './app-bar.template.html',
                    styleUrls: ['./app-bar.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: TUI_APP_BAR_PROVIDERS,
                }]
        }], ctorParameters: function () { return [{ type: i2.Observable, decorators: [{
                    type: Inject,
                    args: [TuiResizeService]
                }] }, { type: i2.Observable, decorators: [{
                    type: Inject,
                    args: [MutationObserverService]
                }] }]; }, propDecorators: { side: [{
                type: ViewChildren,
                args: ['side']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLWJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hZGRvbi1tb2JpbGUvY29tcG9uZW50cy9hcHAtYmFyL2FwcC1iYXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tbW9iaWxlL2NvbXBvbmVudHMvYXBwLWJhci9hcHAtYmFyLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBRVQsTUFBTSxFQUVOLFlBQVksR0FDZixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN2RSxPQUFPLEVBQUMsV0FBVyxFQUFFLGdCQUFnQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBQyxLQUFLLEVBQWEsTUFBTSxNQUFNLENBQUM7QUFDdkMsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRW5DLE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLHFCQUFxQixDQUFDOzs7O0FBUzFELE1BQU0sT0FBTyxrQkFBa0I7SUFlM0IsWUFDK0MsT0FBNEIsRUFDckIsU0FBOEI7UUFEckMsWUFBTyxHQUFQLE9BQU8sQ0FBcUI7UUFDckIsY0FBUyxHQUFULFNBQVMsQ0FBcUI7UUFmbkUsU0FBSSxHQUF1QyxXQUFXLENBQUM7UUFFL0QsV0FBTSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQ3RELEdBQUcsQ0FDQyxHQUFHLEVBQUU7O1lBQ0QsT0FBQSxDQUFDO2dCQUNELElBQUksQ0FBQyxHQUFHLENBQ0osTUFBQSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssMENBQUUsYUFBYSxDQUFDLFdBQVcsRUFDMUMsTUFBQSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksMENBQUUsYUFBYSxDQUFDLFdBQVcsQ0FDNUMsQ0FBQTtTQUFBLENBQ1IsQ0FDSixDQUFDO0lBS0MsQ0FBQzs7Z0hBbEJLLGtCQUFrQixrQkFnQmYsZ0JBQWdCLGFBQ2hCLHVCQUF1QjtvR0FqQjFCLGtCQUFrQixzQ0FGaEIscUJBQXFCLDJHQ3BCcEMsa1ZBa0JBOzRGRElhLGtCQUFrQjtrQkFQOUIsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsV0FBVyxFQUFFLHlCQUF5QjtvQkFDdEMsU0FBUyxFQUFFLENBQUMsc0JBQXNCLENBQUM7b0JBQ25DLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxTQUFTLEVBQUUscUJBQXFCO2lCQUNuQzs7MEJBaUJRLE1BQU07MkJBQUMsZ0JBQWdCOzswQkFDdkIsTUFBTTsyQkFBQyx1QkFBdUI7NENBZmxCLElBQUk7c0JBRHBCLFlBQVk7dUJBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEVsZW1lbnRSZWYsXG4gICAgSW5qZWN0LFxuICAgIFF1ZXJ5TGlzdCxcbiAgICBWaWV3Q2hpbGRyZW4sXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtNdXRhdGlvbk9ic2VydmVyU2VydmljZX0gZnJvbSAnQG5nLXdlYi1hcGlzL211dGF0aW9uLW9ic2VydmVyJztcbmltcG9ydCB7RU1QVFlfUVVFUlksIFR1aVJlc2l6ZVNlcnZpY2V9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHttZXJnZSwgT2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5pbXBvcnQge1RVSV9BUFBfQkFSX1BST1ZJREVSU30gZnJvbSAnLi9hcHAtYmFyLnByb3ZpZGVycyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndHVpLWFwcC1iYXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9hcHAtYmFyLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2FwcC1iYXIuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIHByb3ZpZGVyczogVFVJX0FQUF9CQVJfUFJPVklERVJTLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlBcHBCYXJDb21wb25lbnQge1xuICAgIEBWaWV3Q2hpbGRyZW4oJ3NpZGUnKVxuICAgIHByaXZhdGUgcmVhZG9ubHkgc2lkZTogUXVlcnlMaXN0PEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+PiA9IEVNUFRZX1FVRVJZO1xuXG4gICAgcmVhZG9ubHkgd2lkdGgkID0gbWVyZ2UodGhpcy5yZXNpemUkLCB0aGlzLm11dGF0aW9uJCkucGlwZShcbiAgICAgICAgbWFwKFxuICAgICAgICAgICAgKCkgPT5cbiAgICAgICAgICAgICAgICAyICpcbiAgICAgICAgICAgICAgICBNYXRoLm1heChcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaWRlLmZpcnN0Py5uYXRpdmVFbGVtZW50LmNsaWVudFdpZHRoLFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNpZGUubGFzdD8ubmF0aXZlRWxlbWVudC5jbGllbnRXaWR0aCxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICApLFxuICAgICk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgQEluamVjdChUdWlSZXNpemVTZXJ2aWNlKSBwcml2YXRlIHJlYWRvbmx5IHJlc2l6ZSQ6IE9ic2VydmFibGU8dW5rbm93bj4sXG4gICAgICAgIEBJbmplY3QoTXV0YXRpb25PYnNlcnZlclNlcnZpY2UpIHByaXZhdGUgcmVhZG9ubHkgbXV0YXRpb24kOiBPYnNlcnZhYmxlPHVua25vd24+LFxuICAgICkge31cbn1cbiIsIjxkaXZcbiAgICAjc2lkZVxuICAgIGNsYXNzPVwidC1sZWZ0XCJcbj5cbiAgICA8bmctY29udGVudCBzZWxlY3Q9XCJbdHVpU2xvdD0nbGVmdCddXCI+PC9uZy1jb250ZW50PlxuPC9kaXY+XG48ZGl2XG4gICAgY2xhc3M9XCJ0LWNvbnRlbnRcIlxuICAgIFtzdHlsZS4tLXNpZGVzLnB4XT1cIndpZHRoJCB8IGFzeW5jXCJcbj5cbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG48L2Rpdj5cbjxkaXZcbiAgICAjc2lkZVxuICAgIGNsYXNzPVwidC1yaWdodFwiXG4+XG4gICAgPG5nLWNvbnRlbnQgc2VsZWN0PVwiW3R1aVNsb3Q9J3JpZ2h0J11cIj48L25nLWNvbnRlbnQ+XG48L2Rpdj5cbiJdfQ==
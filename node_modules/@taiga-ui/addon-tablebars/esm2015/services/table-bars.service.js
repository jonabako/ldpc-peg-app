import { Injectable } from '@angular/core';
import { tuiAssert, tuiIsObserved } from '@taiga-ui/cdk';
import { Observable, ReplaySubject } from 'rxjs';
import { TuiTableBar } from '../classes/table-bar';
import * as i0 from "@angular/core";
const NO_HOST = 'Table bars are disabled, enable support by adding TuiTableBarsHostModule to your main app module ' +
    'and tui-table-bars-host component to app template';
export class TuiTableBarsService {
    constructor() {
        this.bar$ = new ReplaySubject(1);
    }
    open(content, options) {
        return new Observable(observer => {
            ngDevMode && tuiAssert.assert(tuiIsObserved(this.bar$), NO_HOST);
            const tableBar = new TuiTableBar(observer, content, options);
            this.bar$.next(tableBar);
            return () => {
                this.bar$.next(null);
            };
        });
    }
}
TuiTableBarsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTableBarsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
TuiTableBarsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTableBarsService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTableBarsService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtYmFycy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tdGFibGViYXJzL3NlcnZpY2VzL3RhYmxlLWJhcnMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxTQUFTLEVBQUUsYUFBYSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRXZELE9BQU8sRUFBQyxVQUFVLEVBQUUsYUFBYSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBRS9DLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQzs7QUFHakQsTUFBTSxPQUFPLEdBQ1QsbUdBQW1HO0lBQ25HLG1EQUFtRCxDQUFDO0FBS3hELE1BQU0sT0FBTyxtQkFBbUI7SUFIaEM7UUFJYSxTQUFJLEdBQUcsSUFBSSxhQUFhLENBQXFCLENBQUMsQ0FBQyxDQUFDO0tBZTVEO0lBYkcsSUFBSSxDQUFDLE9BQTRCLEVBQUUsT0FBNEI7UUFDM0QsT0FBTyxJQUFJLFVBQVUsQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUM3QixTQUFTLElBQUksU0FBUyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBRWpFLE1BQU0sUUFBUSxHQUFHLElBQUksV0FBVyxDQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFFN0QsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFFekIsT0FBTyxHQUFHLEVBQUU7Z0JBQ1IsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDekIsQ0FBQyxDQUFDO1FBQ04sQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDOztpSEFmUSxtQkFBbUI7cUhBQW5CLG1CQUFtQixjQUZoQixNQUFNOzRGQUVULG1CQUFtQjtrQkFIL0IsVUFBVTttQkFBQztvQkFDUixVQUFVLEVBQUUsTUFBTTtpQkFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHt0dWlBc3NlcnQsIHR1aUlzT2JzZXJ2ZWR9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtQb2x5bW9ycGhldXNDb250ZW50fSBmcm9tICdAdGlua29mZi9uZy1wb2x5bW9ycGhldXMnO1xuaW1wb3J0IHtPYnNlcnZhYmxlLCBSZXBsYXlTdWJqZWN0fSBmcm9tICdyeGpzJztcblxuaW1wb3J0IHtUdWlUYWJsZUJhcn0gZnJvbSAnLi4vY2xhc3Nlcy90YWJsZS1iYXInO1xuaW1wb3J0IHtUdWlUYWJsZUJhck9wdGlvbnN9IGZyb20gJy4uL2ludGVyZmFjZXMvdGFibGUtYmFyLW9wdGlvbnMnO1xuXG5jb25zdCBOT19IT1NUID1cbiAgICAnVGFibGUgYmFycyBhcmUgZGlzYWJsZWQsIGVuYWJsZSBzdXBwb3J0IGJ5IGFkZGluZyBUdWlUYWJsZUJhcnNIb3N0TW9kdWxlIHRvIHlvdXIgbWFpbiBhcHAgbW9kdWxlICcgK1xuICAgICdhbmQgdHVpLXRhYmxlLWJhcnMtaG9zdCBjb21wb25lbnQgdG8gYXBwIHRlbXBsYXRlJztcblxuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgVHVpVGFibGVCYXJzU2VydmljZSB7XG4gICAgcmVhZG9ubHkgYmFyJCA9IG5ldyBSZXBsYXlTdWJqZWN0PFR1aVRhYmxlQmFyIHwgbnVsbD4oMSk7XG5cbiAgICBvcGVuKGNvbnRlbnQ6IFBvbHltb3JwaGV1c0NvbnRlbnQsIG9wdGlvbnM/OiBUdWlUYWJsZUJhck9wdGlvbnMpOiBPYnNlcnZhYmxlPG5ldmVyPiB7XG4gICAgICAgIHJldHVybiBuZXcgT2JzZXJ2YWJsZShvYnNlcnZlciA9PiB7XG4gICAgICAgICAgICBuZ0Rldk1vZGUgJiYgdHVpQXNzZXJ0LmFzc2VydCh0dWlJc09ic2VydmVkKHRoaXMuYmFyJCksIE5PX0hPU1QpO1xuXG4gICAgICAgICAgICBjb25zdCB0YWJsZUJhciA9IG5ldyBUdWlUYWJsZUJhcihvYnNlcnZlciwgY29udGVudCwgb3B0aW9ucyk7XG5cbiAgICAgICAgICAgIHRoaXMuYmFyJC5uZXh0KHRhYmxlQmFyKTtcblxuICAgICAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmJhciQubmV4dChudWxsKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiJdfQ==
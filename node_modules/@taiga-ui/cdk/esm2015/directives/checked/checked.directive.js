import { Directive, EventEmitter, HostBinding, HostListener, Input, Output, } from '@angular/core';
import * as i0 from "@angular/core";
export class TuiCheckedDirective {
    constructor() {
        this.indeterminate = false;
        this.checked = false;
        this.tuiCheckedChange = new EventEmitter();
    }
    get isChecked() {
        return this.checked;
    }
    get isIndeterminate() {
        return this.indeterminate;
    }
    set tuiChecked(checked) {
        this.checked = checked || false;
        this.indeterminate = checked === null;
    }
    onChange({ checked }) {
        this.checked = checked;
        this.indeterminate = false;
        this.tuiCheckedChange.emit(checked);
    }
}
TuiCheckedDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckedDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
TuiCheckedDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiCheckedDirective, selector: "input[tuiChecked], input[tuiCheckedChange]", inputs: { tuiChecked: "tuiChecked" }, outputs: { tuiCheckedChange: "tuiCheckedChange" }, host: { listeners: { "change": "onChange($event.target)" }, properties: { "checked": "this.isChecked", "indeterminate": "this.isIndeterminate" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckedDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'input[tuiChecked], input[tuiCheckedChange]',
                }]
        }], propDecorators: { isChecked: [{
                type: HostBinding,
                args: ['checked']
            }], isIndeterminate: [{
                type: HostBinding,
                args: ['indeterminate']
            }], tuiChecked: [{
                type: Input
            }], tuiCheckedChange: [{
                type: Output
            }], onChange: [{
                type: HostListener,
                args: ['change', ['$event.target']]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tlZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jZGsvZGlyZWN0aXZlcy9jaGVja2VkL2NoZWNrZWQuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxZQUFZLEVBQ1osS0FBSyxFQUNMLE1BQU0sR0FDVCxNQUFNLGVBQWUsQ0FBQzs7QUFLdkIsTUFBTSxPQUFPLG1CQUFtQjtJQUhoQztRQUlZLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFtQmYscUJBQWdCLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztLQVEzRDtJQXpCRyxJQUNJLFNBQVM7UUFDVCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDeEIsQ0FBQztJQUVELElBQ0ksZUFBZTtRQUNmLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM5QixDQUFDO0lBRUQsSUFDSSxVQUFVLENBQUMsT0FBdUI7UUFDbEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLElBQUksS0FBSyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxhQUFhLEdBQUcsT0FBTyxLQUFLLElBQUksQ0FBQztJQUMxQyxDQUFDO0lBTUQsUUFBUSxDQUFDLEVBQUMsT0FBTyxFQUFtQjtRQUNoQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztRQUMzQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3hDLENBQUM7O2lIQTVCUSxtQkFBbUI7cUdBQW5CLG1CQUFtQjs0RkFBbkIsbUJBQW1CO2tCQUgvQixTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSw0Q0FBNEM7aUJBQ3pEOzhCQU1PLFNBQVM7c0JBRFosV0FBVzt1QkFBQyxTQUFTO2dCQU1sQixlQUFlO3NCQURsQixXQUFXO3VCQUFDLGVBQWU7Z0JBTXhCLFVBQVU7c0JBRGIsS0FBSztnQkFPRyxnQkFBZ0I7c0JBRHhCLE1BQU07Z0JBSVAsUUFBUTtzQkFEUCxZQUFZO3VCQUFDLFFBQVEsRUFBRSxDQUFDLGVBQWUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgRGlyZWN0aXZlLFxuICAgIEV2ZW50RW1pdHRlcixcbiAgICBIb3N0QmluZGluZyxcbiAgICBIb3N0TGlzdGVuZXIsXG4gICAgSW5wdXQsXG4gICAgT3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdpbnB1dFt0dWlDaGVja2VkXSwgaW5wdXRbdHVpQ2hlY2tlZENoYW5nZV0nLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlDaGVja2VkRGlyZWN0aXZlIHtcbiAgICBwcml2YXRlIGluZGV0ZXJtaW5hdGUgPSBmYWxzZTtcbiAgICBwcml2YXRlIGNoZWNrZWQgPSBmYWxzZTtcblxuICAgIEBIb3N0QmluZGluZygnY2hlY2tlZCcpXG4gICAgZ2V0IGlzQ2hlY2tlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2hlY2tlZDtcbiAgICB9XG5cbiAgICBASG9zdEJpbmRpbmcoJ2luZGV0ZXJtaW5hdGUnKVxuICAgIGdldCBpc0luZGV0ZXJtaW5hdGUoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmluZGV0ZXJtaW5hdGU7XG4gICAgfVxuXG4gICAgQElucHV0KClcbiAgICBzZXQgdHVpQ2hlY2tlZChjaGVja2VkOiBib29sZWFuIHwgbnVsbCkge1xuICAgICAgICB0aGlzLmNoZWNrZWQgPSBjaGVja2VkIHx8IGZhbHNlO1xuICAgICAgICB0aGlzLmluZGV0ZXJtaW5hdGUgPSBjaGVja2VkID09PSBudWxsO1xuICAgIH1cblxuICAgIEBPdXRwdXQoKVxuICAgIHJlYWRvbmx5IHR1aUNoZWNrZWRDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG5cbiAgICBASG9zdExpc3RlbmVyKCdjaGFuZ2UnLCBbJyRldmVudC50YXJnZXQnXSlcbiAgICBvbkNoYW5nZSh7Y2hlY2tlZH06IEhUTUxJbnB1dEVsZW1lbnQpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jaGVja2VkID0gY2hlY2tlZDtcbiAgICAgICAgdGhpcy5pbmRldGVybWluYXRlID0gZmFsc2U7XG4gICAgICAgIHRoaXMudHVpQ2hlY2tlZENoYW5nZS5lbWl0KGNoZWNrZWQpO1xuICAgIH1cbn1cbiJdfQ==
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@ng-web-apis/common'), require('@taiga-ui/cdk/utils'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/cdk/directives/copy-processor', ['exports', '@angular/core', '@ng-web-apis/common', '@taiga-ui/cdk/utils', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].cdk = global["taiga-ui"].cdk || {}, global["taiga-ui"].cdk.directives = global["taiga-ui"].cdk.directives || {}, global["taiga-ui"].cdk.directives["copy-processor"] = {}), global.ng.core, global.common, global["taiga-ui"].cdk.utils, global.rxjs));
})(this, (function (exports, i0, common, utils, rxjs) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    var TuiCopyProcessorDirective = /** @class */ (function () {
        function TuiCopyProcessorDirective(win) {
            this.win = win;
            this.tuiCopyProcessor = rxjs.identity;
        }
        TuiCopyProcessorDirective.prototype.onCopy = function (event) {
            var _a;
            var text = utils.tuiGetSelectedText(this.win);
            if (text) {
                (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.setData('text/plain', this.tuiCopyProcessor(text));
            }
        };
        return TuiCopyProcessorDirective;
    }());
    TuiCopyProcessorDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCopyProcessorDirective, deps: [{ token: common.WINDOW }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiCopyProcessorDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiCopyProcessorDirective, selector: "[tuiCopyProcessor]", inputs: { tuiCopyProcessor: "tuiCopyProcessor" }, host: { listeners: { "copy.prevent": "onCopy($event)" } }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCopyProcessorDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiCopyProcessor]',
                    }]
            }], ctorParameters: function () {
            return [{ type: Window, decorators: [{
                            type: i0.Inject,
                            args: [common.WINDOW]
                        }] }];
        }, propDecorators: { tuiCopyProcessor: [{
                    type: i0.Input
                }], onCopy: [{
                    type: i0.HostListener,
                    args: ['copy.prevent', ['$event']]
                }] } });

    var TuiCopyProcessorModule = /** @class */ (function () {
        function TuiCopyProcessorModule() {
        }
        return TuiCopyProcessorModule;
    }());
    TuiCopyProcessorModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCopyProcessorModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiCopyProcessorModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCopyProcessorModule, declarations: [TuiCopyProcessorDirective], exports: [TuiCopyProcessorDirective] });
    TuiCopyProcessorModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCopyProcessorModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCopyProcessorModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TuiCopyProcessorDirective],
                        exports: [TuiCopyProcessorDirective],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiCopyProcessorDirective = TuiCopyProcessorDirective;
    exports.TuiCopyProcessorModule = TuiCopyProcessorModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-cdk-directives-copy-processor.umd.js.map

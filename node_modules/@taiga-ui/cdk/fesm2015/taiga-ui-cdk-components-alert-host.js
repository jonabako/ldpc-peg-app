import * as i0 from '@angular/core';
import { Injector, INJECTOR, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Self, NgModule } from '@angular/core';
import { TUI_PARENT_ANIMATION } from '@taiga-ui/cdk/constants';
import { TuiDestroyService } from '@taiga-ui/cdk/services';
import { TUI_ALERTS } from '@taiga-ui/cdk/tokens';
import { POLYMORPHEUS_CONTEXT } from '@tinkoff/ng-polymorpheus';
import * as i3 from 'rxjs';
import { combineLatest } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import * as i1 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i2 from '@taiga-ui/cdk/pipes';
import { TuiMapperPipeModule } from '@taiga-ui/cdk/pipes';

class TuiAlertHostComponent {
    constructor(allAlerts, injector, destroy$, cdr) {
        this.allAlerts = allAlerts;
        this.injector = injector;
        this.destroy$ = destroy$;
        this.cdr = cdr;
        this.alerts = [];
        this.trackBy = (index) => index;
        this.mapper = useValue => Injector.create({
            providers: [
                {
                    provide: POLYMORPHEUS_CONTEXT,
                    useValue,
                },
            ],
            parent: this.injector,
        });
    }
    ngOnInit() {
        // Due to this view being parallel to app content, `markForCheck` from `async` pipe
        // can happen after view was checked, so calling `detectChanges` instead
        combineLatest(this.allAlerts)
            .pipe(takeUntil(this.destroy$))
            .subscribe(alerts => {
            this.alerts = alerts;
            this.cdr.detectChanges();
        });
    }
}
TuiAlertHostComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAlertHostComponent, deps: [{ token: TUI_ALERTS }, { token: INJECTOR }, { token: TuiDestroyService, self: true }, { token: ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
TuiAlertHostComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiAlertHostComponent, selector: "tui-alert-host", providers: [TuiDestroyService], ngImport: i0, template: "<div\n    *ngFor=\"let alert of alerts; trackBy: trackBy\"\n    class=\"t-wrapper\"\n    @tuiParentAnimation\n>\n    <ng-container\n        *ngFor=\"let item of alert\"\n        [ngComponentOutlet]=\"item.component.component\"\n        [ngComponentOutletInjector]=\"item | tuiMapper: mapper\"\n    ></ng-container>\n</div>\n", styles: ["tui-alert-host>.t-wrapper{position:fixed;top:0;left:0;display:flex;width:100%;height:100%;flex-direction:column;pointer-events:none}tui-alert-host>.t-wrapper>*{pointer-events:auto}\n"], directives: [{ type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.NgComponentOutlet, selector: "[ngComponentOutlet]", inputs: ["ngComponentOutlet", "ngComponentOutletInjector", "ngComponentOutletContent", "ngComponentOutletNgModuleFactory"] }], pipes: { "tuiMapper": i2.TuiMapperPipe }, animations: [TUI_PARENT_ANIMATION], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAlertHostComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-alert-host',
                    templateUrl: './alert-host.template.html',
                    styleUrls: ['./alert-host.style.less'],
                    encapsulation: ViewEncapsulation.None,
                    // So that we do not force OnPush on custom alerts
                    // eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection
                    changeDetection: ChangeDetectionStrategy.Default,
                    providers: [TuiDestroyService],
                    animations: [TUI_PARENT_ANIMATION],
                }]
        }], ctorParameters: function () { return [{ type: Array, decorators: [{
                    type: Inject,
                    args: [TUI_ALERTS]
                }] }, { type: i0.Injector, decorators: [{
                    type: Inject,
                    args: [INJECTOR]
                }] }, { type: i3.Observable, decorators: [{
                    type: Self
                }, {
                    type: Inject,
                    args: [TuiDestroyService]
                }] }, { type: i0.ChangeDetectorRef, decorators: [{
                    type: Inject,
                    args: [ChangeDetectorRef]
                }] }]; } });

class TuiAlertHostModule {
}
TuiAlertHostModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAlertHostModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiAlertHostModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAlertHostModule, declarations: [TuiAlertHostComponent], imports: [CommonModule, TuiMapperPipeModule], exports: [TuiAlertHostComponent] });
TuiAlertHostModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAlertHostModule, imports: [[CommonModule, TuiMapperPipeModule]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiAlertHostModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, TuiMapperPipeModule],
                    declarations: [TuiAlertHostComponent],
                    exports: [TuiAlertHostComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiAlertHostComponent, TuiAlertHostModule };
//# sourceMappingURL=taiga-ui-cdk-components-alert-host.js.map

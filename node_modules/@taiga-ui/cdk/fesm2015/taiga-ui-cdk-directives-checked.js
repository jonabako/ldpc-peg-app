import * as i0 from '@angular/core';
import { EventEmitter, Directive, HostBinding, Input, Output, HostListener, NgModule } from '@angular/core';

class TuiCheckedDirective {
    constructor() {
        this.indeterminate = false;
        this.checked = false;
        this.tuiCheckedChange = new EventEmitter();
    }
    get isChecked() {
        return this.checked;
    }
    get isIndeterminate() {
        return this.indeterminate;
    }
    set tuiChecked(checked) {
        this.checked = checked || false;
        this.indeterminate = checked === null;
    }
    onChange({ checked }) {
        this.checked = checked;
        this.indeterminate = false;
        this.tuiCheckedChange.emit(checked);
    }
}
TuiCheckedDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckedDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
TuiCheckedDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiCheckedDirective, selector: "input[tuiChecked], input[tuiCheckedChange]", inputs: { tuiChecked: "tuiChecked" }, outputs: { tuiCheckedChange: "tuiCheckedChange" }, host: { listeners: { "change": "onChange($event.target)" }, properties: { "checked": "this.isChecked", "indeterminate": "this.isIndeterminate" } }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckedDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'input[tuiChecked], input[tuiCheckedChange]',
                }]
        }], propDecorators: { isChecked: [{
                type: HostBinding,
                args: ['checked']
            }], isIndeterminate: [{
                type: HostBinding,
                args: ['indeterminate']
            }], tuiChecked: [{
                type: Input
            }], tuiCheckedChange: [{
                type: Output
            }], onChange: [{
                type: HostListener,
                args: ['change', ['$event.target']]
            }] } });

class TuiCheckedModule {
}
TuiCheckedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiCheckedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckedModule, declarations: [TuiCheckedDirective], exports: [TuiCheckedDirective] });
TuiCheckedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckedModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiCheckedModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TuiCheckedDirective],
                    exports: [TuiCheckedDirective],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiCheckedDirective, TuiCheckedModule };
//# sourceMappingURL=taiga-ui-cdk-directives-checked.js.map

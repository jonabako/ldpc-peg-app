"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateToV3_36 = void 0;
const tasks_1 = require("@angular-devkit/schematics/tasks");
const ng_morph_1 = require("ng-morph");
const constants_1 = require("../../constants");
const colored_log_1 = require("../../utils/colored-log");
const get_file_system_1 = require("../utils/get-file-system");
const replace_text_1 = require("../utils/replace-text");
const OLD_PACKAGE = '@taiga-ui/addon-editor';
const NEW_PACKAGE = '@tinkoff/tui-editor';
const NEW_PACKAGE_VERSION = '^1.0.1';
function updateToV3_36(options) {
    return (tree, context) => {
        if (!ng_morph_1.getPackageJsonDependency(tree, OLD_PACKAGE)) {
            !options['skip-logs'] &&
                colored_log_1.titleLog(`${colored_log_1.FINISH_SYMBOL} No migrations required for ${OLD_PACKAGE}\n`);
            return;
        }
        const fileSystem = get_file_system_1.getFileSystem(tree);
        !options['skip-logs'] &&
            colored_log_1.infoLog(`${colored_log_1.SMALL_TAB_SYMBOL}${colored_log_1.REPLACE_SYMBOL} replacing imports for ${OLD_PACKAGE}...`);
        replace_text_1.replaceText([{ from: OLD_PACKAGE, to: NEW_PACKAGE }], constants_1.ALL_TS_FILES);
        ng_morph_1.removePackageJsonDependency(tree, OLD_PACKAGE);
        ng_morph_1.addPackageJsonDependency(tree, { name: NEW_PACKAGE, version: NEW_PACKAGE_VERSION });
        context.addTask(new tasks_1.NodePackageInstallTask());
        fileSystem.commitEdits();
        ng_morph_1.saveActiveProject();
        !options['skip-logs'] && colored_log_1.titleLog(`${colored_log_1.FINISH_SYMBOL} successfully migrated \n`);
    };
}
exports.updateToV3_36 = updateToV3_36;

(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/addon-table/tokens'), require('@taiga-ui/cdk'), require('@taiga-ui/kit'), require('@taiga-ui/core'), require('@angular/common'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/addon-table/components/reorder', ['exports', '@angular/core', '@taiga-ui/addon-table/tokens', '@taiga-ui/cdk', '@taiga-ui/kit', '@taiga-ui/core', '@angular/common', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"]["addon-table"] = global["taiga-ui"]["addon-table"] || {}, global["taiga-ui"]["addon-table"].components = global["taiga-ui"]["addon-table"].components || {}, global["taiga-ui"]["addon-table"].components.reorder = {}), global.ng.core, global["taiga-ui"]["addon-table"].tokens, global.cdk, global.i1, global.i2, global.ng.common, global.rxjs));
})(this, (function (exports, i0, tokens, cdk, i1, i2, i3, i4) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);

    var TUI_REORDER_DEFAULT_OPTIONS = {
        icons: {
            hide: 'tuiIconEye',
            show: 'tuiIconEyeOff',
            drag: 'tuiIconDrag',
        },
    };
    var TUI_REORDER_OPTIONS = cdk.tuiCreateToken(TUI_REORDER_DEFAULT_OPTIONS);
    function tuiReorderOptionsProvider(options) {
        return cdk.tuiProvideOptions(TUI_REORDER_OPTIONS, options, TUI_REORDER_DEFAULT_OPTIONS);
    }

    var TuiReorderComponent = /** @class */ (function () {
        function TuiReorderComponent(options, showHideText$) {
            this.options = options;
            this.showHideText$ = showHideText$;
            this.dragging = false;
            this.enabled = [];
            this.itemsChange = new i0.EventEmitter();
            this.enabledChange = new i0.EventEmitter();
            this.order = new Map();
            this.unsortedItems = [];
        }
        Object.defineProperty(TuiReorderComponent.prototype, "items", {
            set: function (items) {
                var _this = this;
                if (items.length !== this.unsortedItems.length ||
                    !items.every(function (item) { return _this.unsortedItems.includes(item); })) {
                    this.unsortedItems = items;
                }
            },
            enumerable: false,
            configurable: true
        });
        TuiReorderComponent.prototype.noop = function () { };
        TuiReorderComponent.prototype.onDrag = function () {
            this.dragging = true;
        };
        TuiReorderComponent.prototype.onDrop = function () {
            if (!this.dragging) {
                return;
            }
            this.dragging = false;
            this.updateItems();
        };
        TuiReorderComponent.prototype.isEnabled = function (item) {
            return this.enabled.includes(item);
        };
        TuiReorderComponent.prototype.getIcon = function (item) {
            return this.isEnabled(item) ? this.options.icons.hide : this.options.icons.show;
        };
        TuiReorderComponent.prototype.toggle = function (toggled) {
            this.enabled = this.isEnabled(toggled)
                ? this.enabled.filter(function (item) { return item !== toggled; })
                : this.enabled.concat(toggled);
            this.updateEnabled();
        };
        TuiReorderComponent.prototype.move = function (index, direction) {
            var _a;
            var oldIndex = (_a = this.order.get(index)) !== null && _a !== void 0 ? _a : index;
            if ((!oldIndex && direction < 0) ||
                (oldIndex === this.unsortedItems.length - 1 && direction > 0)) {
                return;
            }
            var newIndex = oldIndex + direction;
            var oldItem = Array.from(this.order.values()).findIndex(function (item) { return item === newIndex; });
            this.order.set(index, newIndex);
            this.order.set(oldItem, oldIndex);
            this.order = new Map(this.order);
            this.updateItems();
        };
        TuiReorderComponent.prototype.getSortedItems = function () {
            var _this = this;
            var items = new Array(this.unsortedItems.length);
            this.unsortedItems.forEach(function (item, index) {
                var _a;
                items[(_a = _this.order.get(index)) !== null && _a !== void 0 ? _a : index] = item;
            });
            return items;
        };
        TuiReorderComponent.prototype.updateItems = function () {
            this.itemsChange.emit(this.getSortedItems());
            this.updateEnabled();
        };
        TuiReorderComponent.prototype.updateEnabled = function () {
            var _this = this;
            var enabled = this.getSortedItems().filter(function (item) { return _this.isEnabled(item); });
            this.enabled = enabled;
            this.enabledChange.emit(enabled);
        };
        return TuiReorderComponent;
    }());
    TuiReorderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReorderComponent, deps: [{ token: TUI_REORDER_OPTIONS }, { token: tokens.TUI_TABLE_SHOW_HIDE_MESSAGE }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiReorderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiReorderComponent, selector: "tui-reorder", inputs: { items: "items", enabled: "enabled" }, outputs: { itemsChange: "itemsChange", enabledChange: "enabledChange" }, host: { listeners: { "focusout.stop": "noop()", "pointerdown.silent": "onDrag()", "document:pointerup.silent": "onDrop()" } }, ngImport: i0__namespace, template: "<tui-tiles\n    class=\"t-wrapper\"\n    [(order)]=\"order\"\n>\n    <tui-tile\n        *ngFor=\"let item of unsortedItems; let index = index\"\n        [style.order]=\"order.get(index)\"\n    >\n        <div class=\"t-item\">\n            <div\n                tuiTileHandle\n                class=\"t-draggable\"\n            >\n                <tui-svg\n                    class=\"t-icon\"\n                    [src]=\"options.icons.drag\"\n                ></tui-svg>\n                {{ item }}\n            </div>\n            <button\n                appearance=\"icon\"\n                size=\"xs\"\n                tuiIconButton\n                type=\"button\"\n                class=\"t-button\"\n                [class.t-button_hidden]=\"!isEnabled(item)\"\n                [icon]=\"getIcon(item)\"\n                [title]=\"showHideText$ | async\"\n                (click)=\"toggle(item)\"\n                (keydown.arrowDown.prevent)=\"move(index, 1)\"\n                (keydown.arrowUp.prevent)=\"move(index, -1)\"\n            ></button>\n        </div>\n    </tui-tile>\n</tui-tiles>\n", styles: [":host{display:block;font:var(--tui-font-text-s);padding:.5rem 0;-webkit-user-select:none;-moz-user-select:none;user-select:none}.t-wrapper{grid-auto-rows:2rem}.t-draggable{cursor:ns-resize;flex:1 1 auto}.t-item{transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:flex;height:2rem;align-items:center;padding:0 .75rem;background:var(--tui-base-01)}.t-item:hover{background:var(--tui-base-02)}.t-item:hover .t-button{opacity:1}.t-icon{margin-right:.5rem;color:var(--tui-base-05)}.t-button{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;margin-left:auto;opacity:0}.t-button_hidden,.t-button:focus{opacity:1}\n"], components: [{ type: i1__namespace.TuiTilesComponent, selector: "tui-tiles", inputs: ["debounce", "order"], outputs: ["orderChange"] }, { type: i1__namespace.TuiTileComponent, selector: "tui-tile", inputs: ["width", "height"] }, { type: i2__namespace.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: i2__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i3__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1__namespace.TuiTileHandleDirective, selector: "[tuiTileHandle]" }], pipes: { "async": i3__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReorderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-reorder',
                        templateUrl: './reorder.template.html',
                        styleUrls: ['./reorder.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_REORDER_OPTIONS]
                        }] }, { type: i4__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_TABLE_SHOW_HIDE_MESSAGE]
                        }] }];
        }, propDecorators: { items: [{
                    type: i0.Input
                }], enabled: [{
                    type: i0.Input
                }], itemsChange: [{
                    type: i0.Output
                }], enabledChange: [{
                    type: i0.Output
                }], noop: [{
                    type: i0.HostListener,
                    args: ['focusout.stop']
                }], onDrag: [{
                    type: i0.HostListener,
                    args: ['pointerdown.silent']
                }], onDrop: [{
                    type: i0.HostListener,
                    args: ['document:pointerup.silent']
                }] } });

    var TuiReorderModule = /** @class */ (function () {
        function TuiReorderModule() {
        }
        return TuiReorderModule;
    }());
    TuiReorderModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReorderModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiReorderModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReorderModule, declarations: [TuiReorderComponent], imports: [i3.CommonModule, i2.TuiSvgModule, i2.TuiButtonModule, i1.TuiTilesModule], exports: [TuiReorderComponent] });
    TuiReorderModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReorderModule, imports: [[i3.CommonModule, i2.TuiSvgModule, i2.TuiButtonModule, i1.TuiTilesModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiReorderModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule, i2.TuiSvgModule, i2.TuiButtonModule, i1.TuiTilesModule],
                        declarations: [TuiReorderComponent],
                        exports: [TuiReorderComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_REORDER_DEFAULT_OPTIONS = TUI_REORDER_DEFAULT_OPTIONS;
    exports.TUI_REORDER_OPTIONS = TUI_REORDER_OPTIONS;
    exports.TuiReorderComponent = TuiReorderComponent;
    exports.TuiReorderModule = TuiReorderModule;
    exports.tuiReorderOptionsProvider = tuiReorderOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-addon-table-components-reorder.umd.js.map

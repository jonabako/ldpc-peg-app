(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/operators'), require('@ng-web-apis/intersection-observer'), require('@taiga-ui/cdk'), require('@taiga-ui/core'), require('@taiga-ui/kit'), require('rxjs'), require('@angular/common'), require('@tinkoff/ng-polymorpheus'), require('@angular/forms')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/addon-table/components/table', ['exports', '@angular/core', 'rxjs/operators', '@ng-web-apis/intersection-observer', '@taiga-ui/cdk', '@taiga-ui/core', '@taiga-ui/kit', 'rxjs', '@angular/common', '@tinkoff/ng-polymorpheus', '@angular/forms'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"]["addon-table"] = global["taiga-ui"]["addon-table"] || {}, global["taiga-ui"]["addon-table"].components = global["taiga-ui"]["addon-table"].components || {}, global["taiga-ui"]["addon-table"].components.table = {}), global.ng.core, global.rxjs.operators, global.intersectionObserver, global.i4, global.i1, global.kit, global.rxjs, global.ng.common, global.i3, global.ng.forms));
})(this, (function (exports, i0, operators, intersectionObserver, i4, i1, kit, i1$1, i2, i3, forms) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1$1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);

    var TuiCellDirective = /** @class */ (function () {
        function TuiCellDirective(template) {
            this.template = template;
            this.tuiCell = '';
        }
        return TuiCellDirective;
    }());
    TuiCellDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCellDirective, deps: [{ token: i0.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiCellDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiCellDirective, selector: "ng-template[tuiCell]", inputs: { tuiCell: "tuiCell" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCellDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ng-template[tuiCell]',
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.TemplateRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.TemplateRef]
                        }] }];
        }, propDecorators: { tuiCell: [{
                    type: i0.Input
                }] } });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    /**
     * Stream of sticky stuck events
     */
    var TUI_STUCK = new i0.InjectionToken('[TUI_STUCK]');
    var TUI_STUCK_PROVIDER = {
        provide: TUI_STUCK,
        deps: [i0.ElementRef, intersectionObserver.IntersectionObserverService],
        useFactory: function (_a, entries$) {
            var nativeElement = _a.nativeElement;
            var stream$ = entries$.pipe(operators.map(function (_a) {
                var _b = __read(_a, 1), intersectionRatio = _b[0].intersectionRatio;
                return intersectionRatio < 1;
            }));
            nativeElement['$.class._stuck'] = stream$;
            return stream$;
        },
    };

    var TUI_TABLE_PROVIDERS = [
        {
            provide: intersectionObserver.INTERSECTION_ROOT_MARGIN,
            useValue: '10000px 10000px 10000px 0px',
        },
        {
            provide: intersectionObserver.INTERSECTION_THRESHOLD,
            useValue: [0, 1],
        },
        {
            provide: i1.TUI_TEXTFIELD_APPEARANCE_DIRECTIVE,
            useFactory: function () {
                var directive = new i1.TuiTextfieldAppearanceDirective();
                directive.appearance = i1.TuiAppearance.Table;
                return directive;
            },
        },
        {
            provide: i1.TUI_TEXTFIELD_LABEL_OUTSIDE,
            useValue: {
                labelOutside: true,
            },
        },
        {
            provide: kit.TUI_INPUT_COUNT_OPTIONS,
            deps: [[new i0.SkipSelf(), kit.TUI_INPUT_COUNT_OPTIONS]],
            useFactory: function (options) { return (Object.assign(Object.assign({}, options), { hideButtons: true })); },
        },
        {
            provide: i1.TUI_TEXTFIELD_SIZE,
            useExisting: i0.forwardRef(function () { return TuiTableDirective; }),
        },
        intersectionObserver.IntersectionObserverService,
        i1.MODE_PROVIDER,
        TUI_STUCK_PROVIDER,
    ];

    var TUI_TABLE_DEFAULT_OPTIONS = {
        sticky: false,
        resizable: false,
        open: true,
        size: 'm',
        direction: 1,
        sortIcons: {
            asc: 'tuiIconSortAscending',
            desc: 'tuiIconSortDescending',
            off: 'tuiIconSortOff',
        },
    };
    var TUI_TABLE_OPTIONS = i4.tuiCreateToken(TUI_TABLE_DEFAULT_OPTIONS);
    function tuiTableOptionsProvider(options) {
        return i4.tuiProvideOptions(TUI_TABLE_OPTIONS, options, TUI_TABLE_DEFAULT_OPTIONS);
    }

    var TuiTableDirective = /** @class */ (function (_super) {
        __extends(TuiTableDirective, _super);
        function TuiTableDirective(entries$, mode$, stuck$, options, cdr) {
            var _this = _super.call(this) || this;
            _this.entries$ = entries$;
            _this.mode$ = mode$;
            _this.stuck$ = stuck$;
            _this.options = options;
            _this.cdr = cdr;
            _this.columns = [];
            _this.size = _this.options.size;
            _this.direction = _this.options.direction;
            _this.directionChange = new i0.EventEmitter();
            _this.sorterChange = new i0.EventEmitter();
            _this.sorter = function () { return 0; };
            return _this;
        }
        TuiTableDirective.prototype.updateSorterAndDirection = function (sorter) {
            if (this.sorter === sorter) {
                this.updateDirection(this.direction === 1 ? -1 : 1);
            }
            else {
                this.updateSorter(sorter);
                this.updateDirection(1);
            }
        };
        TuiTableDirective.prototype.ngAfterViewInit = function () {
            this.cdr.detectChanges();
        };
        TuiTableDirective.prototype.updateSorter = function (sorter) {
            this.sorter = sorter || (function () { return 0; });
            this.sorterChange.emit(this.sorter);
            this.change$.next();
        };
        TuiTableDirective.prototype.updateDirection = function (direction) {
            this.direction = direction;
            this.directionChange.emit(this.direction);
            this.change$.next();
        };
        return TuiTableDirective;
    }(i4.AbstractTuiController));
    TuiTableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTableDirective, deps: [{ token: intersectionObserver.IntersectionObserverService }, { token: i1.TUI_MODE }, { token: TUI_STUCK }, { token: TUI_TABLE_OPTIONS }, { token: i0.ChangeDetectorRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiTableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTableDirective, selector: "table[tuiTable]", inputs: { columns: "columns", size: "size", direction: "direction", sorter: "sorter" }, outputs: { directionChange: "directionChange", sorterChange: "sorterChange" }, host: { listeners: { "$.data-mode.attr": "mode$", "$.class._stuck": "stuck$" }, properties: { "attr.data-size": "this.size" }, styleAttribute: "border-collapse: separate" }, providers: TUI_TABLE_PROVIDERS, usesInheritance: true, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'table[tuiTable]',
                        providers: TUI_TABLE_PROVIDERS,
                        host: {
                            '($.data-mode.attr)': 'mode$',
                            '($.class._stuck)': 'stuck$',
                            style: 'border-collapse: separate',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: i1__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [intersectionObserver.IntersectionObserverService]
                        }] }, { type: i1__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_MODE]
                        }] }, { type: i1__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [TUI_STUCK]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_TABLE_OPTIONS]
                        }] }, { type: i0__namespace.ChangeDetectorRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ChangeDetectorRef]
                        }] }];
        }, propDecorators: { columns: [{
                    type: i0.Input
                }], size: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['attr.data-size']
                }], direction: [{
                    type: i0.Input
                }], directionChange: [{
                    type: i0.Output
                }], sorterChange: [{
                    type: i0.Output
                }], sorter: [{
                    type: i0.Input
                }] } });

    var TuiDirectionOrderDirective = /** @class */ (function () {
        function TuiDirectionOrderDirective(table) {
            this.table = table;
            this.directionOrderChange = this.table.directionChange.pipe(operators.map(function (dir) { return (dir === 1 ? 'asc' : 'desc'); }));
        }
        Object.defineProperty(TuiDirectionOrderDirective.prototype, "directionOrder", {
            set: function (order) {
                this.table.direction = order === 'asc' ? 1 : -1;
            },
            enumerable: false,
            configurable: true
        });
        return TuiDirectionOrderDirective;
    }());
    TuiDirectionOrderDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDirectionOrderDirective, deps: [{ token: TuiTableDirective }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiDirectionOrderDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiDirectionOrderDirective, selector: "table[tuiTable][tuiDirectionOrder]", inputs: { directionOrder: "directionOrder" }, outputs: { directionOrderChange: "directionOrderChange" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiDirectionOrderDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'table[tuiTable][tuiDirectionOrder]',
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiTableDirective, decorators: [{
                            type: i0.Inject,
                            args: [TuiTableDirective]
                        }] }];
        }, propDecorators: { directionOrder: [{
                    type: i0.Input
                }], directionOrderChange: [{
                    type: i0.Output
                }] } });

    var TuiHeadDirective = /** @class */ (function () {
        function TuiHeadDirective(template) {
            this.template = template;
            this.tuiHead = '';
        }
        return TuiHeadDirective;
    }());
    TuiHeadDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHeadDirective, deps: [{ token: i0.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiHeadDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHeadDirective, selector: "[tuiHead]", inputs: { tuiHead: "tuiHead" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiHeadDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiHead]',
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.TemplateRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.TemplateRef]
                        }] }];
        }, propDecorators: { tuiHead: [{
                    type: i0.Input
                }] } });

    var TuiResizedDirective = /** @class */ (function () {
        function TuiResizedDirective(doc, el, parentRef) {
            var _this = this;
            this.doc = doc;
            this.el = el;
            this.parentRef = parentRef;
            this.tuiResized = i4.tuiTypedFromEvent(this.el.nativeElement, 'mousedown').pipe(i4.tuiPreventDefault(), operators.switchMap(function () {
                var _a = _this.parentRef.nativeElement.getBoundingClientRect(), width = _a.width, right = _a.right;
                return i4.tuiTypedFromEvent(_this.doc, 'mousemove').pipe(operators.distinctUntilChanged(), operators.map(function (_a) {
                    var clientX = _a.clientX;
                    return width + clientX - right;
                }), operators.takeUntil(i4.tuiTypedFromEvent(_this.doc, 'mouseup')));
            }));
        }
        return TuiResizedDirective;
    }());
    TuiResizedDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiResizedDirective, deps: [{ token: i2.DOCUMENT }, { token: i0.ElementRef }, { token: i1.TUI_ELEMENT_REF }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiResizedDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiResizedDirective, selector: "[tuiResized]", outputs: { tuiResized: "tuiResized" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiResizedDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiResized]',
                    }]
            }], ctorParameters: function () {
            return [{ type: Document, decorators: [{
                            type: i0.Inject,
                            args: [i2.DOCUMENT]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_ELEMENT_REF]
                        }] }];
        }, propDecorators: { tuiResized: [{
                    type: i0.Output
                }] } });

    /**
     * @deprecated use `*ngFor` + `tuiTableSort`-pipe instead.
     * See example {@link https://taiga-ui.dev/components/table/Setup}
     * ___
     * TODO v4.0 delete it.
     */
    var TuiRowDirective = /** @class */ (function () {
        function TuiRowDirective(template) {
            this.template = template;
            this.tuiRowOf = [];
        }
        TuiRowDirective.ngTemplateContextGuard = function (_dir, _ctx) {
            return true;
        };
        return TuiRowDirective;
    }());
    TuiRowDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiRowDirective, deps: [{ token: i0.TemplateRef }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiRowDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiRowDirective, selector: "ng-template[tuiRow]", inputs: { tuiRowOf: "tuiRowOf" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiRowDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'ng-template[tuiRow]',
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.TemplateRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.TemplateRef]
                        }] }];
        }, propDecorators: { tuiRowOf: [{
                    type: i0.Input
                }] } });

    var TuiThComponent = /** @class */ (function () {
        function TuiThComponent(options, head, table) {
            var _this = this;
            this.options = options;
            this.head = head;
            this.table = table;
            this.sorter = this.head
                ? function (a, b) { return i4.tuiDefaultSort(a[_this.key], b[_this.key]); }
                : null;
            this.resizable = this.options.resizable;
            this.sticky = this.options.sticky;
            this.width = null;
        }
        Object.defineProperty(TuiThComponent.prototype, "key", {
            get: function () {
                if (!this.head) {
                    throw new i4.TuiTableSortKeyException();
                }
                return this.head.tuiHead;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiThComponent.prototype, "isCurrent", {
            get: function () {
                return !!this.sorter && !!this.table && this.sorter === this.table.sorter;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiThComponent.prototype, "icon", {
            get: function () {
                var _a;
                if (this.isCurrent) {
                    return ((_a = this.table) === null || _a === void 0 ? void 0 : _a.direction) === 1
                        ? this.options.sortIcons.desc
                        : this.options.sortIcons.asc;
                }
                return this.options.sortIcons.off;
            },
            enumerable: false,
            configurable: true
        });
        TuiThComponent.prototype.updateSorterAndDirection = function () {
            var _a;
            (_a = this.table) === null || _a === void 0 ? void 0 : _a.updateSorterAndDirection(this.isCurrentAndAscDirection ? null : this.sorter);
        };
        TuiThComponent.prototype.onResized = function (width) {
            this.width = width;
        };
        Object.defineProperty(TuiThComponent.prototype, "isCurrentAndAscDirection", {
            get: function () {
                var _a, _b;
                return this.sorter === ((_a = this.table) === null || _a === void 0 ? void 0 : _a.sorter) && ((_b = this.table) === null || _b === void 0 ? void 0 : _b.direction) === -1;
            },
            enumerable: false,
            configurable: true
        });
        return TuiThComponent;
    }());
    TuiThComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiThComponent, deps: [{ token: TUI_TABLE_OPTIONS }, { token: TuiHeadDirective, optional: true }, { token: i0.forwardRef(function () { return TuiTableDirective; }), optional: true }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiThComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiThComponent, selector: "th[tuiTh]", inputs: { sorter: "sorter", resizable: "resizable", sticky: "sticky" }, host: { properties: { "class._sticky": "this.sticky", "style.width.px": "this.width" } }, providers: [
            {
                provide: i1.TUI_ELEMENT_REF,
                useExisting: i0.ElementRef,
            },
        ], ngImport: i0__namespace, template: "<button\n    *ngIf=\"sorter && table; else content\"\n    type=\"button\"\n    class=\"t-sort\"\n    [class.t-sort_sorted]=\"isCurrent\"\n    (click)=\"updateSorterAndDirection()\"\n>\n    <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n    {{ table.change$ | async }}\n    <tui-svg\n        class=\"t-sort-icon\"\n        [src]=\"icon\"\n    ></tui-svg>\n</button>\n<ng-template #content>\n    <ng-content></ng-content>\n</ng-template>\n<div\n    *ngIf=\"resizable\"\n    class=\"t-bar\"\n    (tuiResized)=\"onResized($event)\"\n></div>\n", styles: [":host{transition-property:box-shadow;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:relative;top:0;height:var(--tui-height-m);font:var(--tui-font-text-s);text-align:left;font-weight:bold;color:var(--tui-text-02);background:var(--tui-base-01);cursor:default;padding:0 .75rem;box-sizing:border-box;box-shadow:0 .3125rem #ededed00;border:1px solid var(--tui-base-04);filter:opacity(1)}@supports (-webkit-hyphens: none){:host{transform:translate(0)}}:host:not(:first-child){border-left:none}:host._sticky,:host-context(._stuck) :host._sticky{position:-webkit-sticky;position:sticky;z-index:30}:host._sticky:first-child,:host-context(._stuck) :host._sticky:first-child{left:0}:host._sticky:after,:host-context(._stuck) :host._sticky:after{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;content:\"\";position:absolute;top:0;left:100%;bottom:0;width:.3125rem;pointer-events:none;background:rgba(237,237,237,.7);opacity:0}:host-context(._stuck) :host{z-index:20}:host-context(tr:not(:first-child)){border-top:none}:host-context(table[data-size=\"l\"]){height:var(--tui-height-l);font:var(--tui-font-text-m);font-weight:bold;padding:0 1rem}:host-context(thead[tuiThead]){position:-webkit-sticky;position:sticky}:host-context(table._stuck)._sticky:after{opacity:1}:host-context(thead[tuiThead]._stuck){box-shadow:0 .3125rem #edededb3}:host-context(table[data-mode=\"onDark\"]):after{background:rgba(60,60,60,.9)}:host-context(table[data-mode=\"onDark\"] thead[tuiThead]._stuck){box-shadow:0 .3125rem #3c3c3ce6}:host-context(table[data-mode=\"onDark\"] thead[tuiThead]._stuck):first-child{box-shadow:.0625rem .3125rem #3c3c3ce6}:host-context(table[data-size=\"l\"] thead[tuiThead] tr:nth-child(2)){top:var(--tui-height-l)}:host-context(table[data-size=\"m\"] thead[tuiThead] tr:nth-child(2)){top:var(--tui-height-m)}:host-context(table[data-size=\"s\"] thead[tuiThead] tr:nth-child(2)){top:var(--tui-height-s)}.t-sort{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;text-decoration:none;display:inline-flex;flex-direction:inherit;align-items:center;outline:none;font-weight:bold;cursor:pointer}.t-sort_sorted{color:var(--tui-text-01)}.t-sort:focus-visible{background:var(--tui-selection)}.t-sort:hover{color:var(--tui-text-01)}.t-bar{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;top:0;bottom:0;right:-1px;width:3px;justify-self:flex-end;border-left:2px solid transparent;background:var(--tui-support-12);background-clip:content-box;cursor:ew-resize;opacity:0}.t-bar:hover,.t-bar:active{opacity:1}\n"], components: [{ type: i1__namespace$1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: TuiResizedDirective, selector: "[tuiResized]", outputs: ["tuiResized"] }], pipes: { "async": i2__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiThComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'th[tuiTh]',
                        templateUrl: './th.template.html',
                        styleUrls: ['./th.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [
                            {
                                provide: i1.TUI_ELEMENT_REF,
                                useExisting: i0.ElementRef,
                            },
                        ],
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_TABLE_OPTIONS]
                        }] }, { type: TuiHeadDirective, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [TuiHeadDirective]
                        }] }, { type: TuiTableDirective, decorators: [{
                            type: i0.Optional
                        }, {
                            type: i0.Inject,
                            args: [i0.forwardRef(function () { return TuiTableDirective; })]
                        }] }];
        }, propDecorators: { sorter: [{
                    type: i0.Input
                }], resizable: [{
                    type: i0.Input
                }], sticky: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['class._sticky']
                }], width: [{
                    type: i0.HostBinding,
                    args: ['style.width.px']
                }] } });

    var TuiSortableDirective = /** @class */ (function () {
        function TuiSortableDirective(sortBy, table, th) {
            this.sortBy = sortBy;
            this.table = table;
            this.th = th;
            this.sorter = function () { return 0; };
        }
        Object.defineProperty(TuiSortableDirective.prototype, "key", {
            get: function () {
                return this.th.key;
            },
            enumerable: false,
            configurable: true
        });
        TuiSortableDirective.prototype.ngOnInit = function () {
            this.sorter = this.match ? this.table.sorter : this.sorter;
            this.th.sorter = this.sorter;
        };
        TuiSortableDirective.prototype.check = function () {
            if (this.match && this.table.sorter !== this.sorter) {
                this.table.updateSorter(this.sorter);
            }
        };
        Object.defineProperty(TuiSortableDirective.prototype, "match", {
            get: function () {
                return this.sortBy.tuiSortBy === this.key;
            },
            enumerable: false,
            configurable: true
        });
        return TuiSortableDirective;
    }());
    TuiSortableDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSortableDirective, deps: [{ token: i0.forwardRef(function () { return TuiSortByDirective; }) }, { token: TuiTableDirective }, { token: TuiThComponent }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiSortableDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiSortableDirective, selector: "th[tuiTh][tuiSortable]", ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSortableDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'th[tuiTh][tuiSortable]',
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiSortByDirective, decorators: [{
                            type: i0.Inject,
                            args: [i0.forwardRef(function () { return TuiSortByDirective; })]
                        }] }, { type: TuiTableDirective, decorators: [{
                            type: i0.Inject,
                            args: [TuiTableDirective]
                        }] }, { type: TuiThComponent, decorators: [{
                            type: i0.Inject,
                            args: [TuiThComponent]
                        }] }];
        } });

    var TuiSortByDirective = /** @class */ (function () {
        function TuiSortByDirective(table) {
            var _this = this;
            this.table = table;
            this.sortables = i4.EMPTY_QUERY;
            this.tuiSortByChange = this.table.sorterChange.pipe(
            // delay is for getting actual ContentChildren (sortables) https://github.com/angular/angular/issues/38976
            operators.delay(0), operators.filter(function () { return !!_this.sortables.length; }), operators.map(function (sorter) { return _this.getKey(sorter); }));
            this.tuiSortBy = null;
        }
        Object.defineProperty(TuiSortByDirective.prototype, "sortBy", {
            set: function (sortBy) {
                this.tuiSortBy = sortBy;
                this.checkSortables();
            },
            enumerable: false,
            configurable: true
        });
        TuiSortByDirective.prototype.checkSortables = function () {
            this.sortables.forEach(function (s) { return s.check(); });
        };
        TuiSortByDirective.prototype.getKey = function (sorter) {
            var _a;
            return ((_a = this.sortables.find(function (s) { return s.sorter === sorter; })) === null || _a === void 0 ? void 0 : _a.key) || null;
        };
        return TuiSortByDirective;
    }());
    TuiSortByDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSortByDirective, deps: [{ token: TuiTableDirective }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiSortByDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiSortByDirective, selector: "table[tuiTable][tuiSortBy]", inputs: { sortBy: ["tuiSortBy", "sortBy"] }, outputs: { tuiSortByChange: "tuiSortByChange" }, queries: [{ propertyName: "sortables", predicate: TuiSortableDirective, descendants: true }], ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiSortByDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'table[tuiTable][tuiSortBy]',
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiTableDirective, decorators: [{
                            type: i0.Inject,
                            args: [TuiTableDirective]
                        }] }];
        }, propDecorators: { sortables: [{
                    type: i0.ContentChildren,
                    args: [TuiSortableDirective, { descendants: true }]
                }], sortBy: [{
                    type: i0.Input,
                    args: ['tuiSortBy']
                }], tuiSortByChange: [{
                    type: i0.Output
                }] } });

    var TuiTheadDirective = /** @class */ (function () {
        function TuiTheadDirective(stuck$) {
            this.stuck$ = stuck$;
        }
        return TuiTheadDirective;
    }());
    TuiTheadDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTheadDirective, deps: [{ token: TUI_STUCK }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiTheadDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTheadDirective, selector: "thead[tuiThead]", host: { listeners: { "$.class._stuck": "stuck$" } }, providers: [
            TUI_STUCK_PROVIDER,
            intersectionObserver.IntersectionObserverService,
            {
                provide: intersectionObserver.INTERSECTION_ROOT_MARGIN,
                useValue: '0px 10000px 10000px 10000px',
            },
        ], ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTheadDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: 'thead[tuiThead]',
                        providers: [
                            TUI_STUCK_PROVIDER,
                            intersectionObserver.IntersectionObserverService,
                            {
                                provide: intersectionObserver.INTERSECTION_ROOT_MARGIN,
                                useValue: '0px 10000px 10000px 10000px',
                            },
                        ],
                        host: {
                            '($.class._stuck)': 'stuck$',
                        },
                    }]
            }], ctorParameters: function () {
            return [{ type: i1__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [TUI_STUCK]
                        }] }];
        } });

    var TuiTableSortPipe = /** @class */ (function () {
        function TuiTableSortPipe(table) {
            this.table = table;
        }
        TuiTableSortPipe.prototype.transform = function (data) {
            return this.sort(data, this.table.sorter, this.table.direction);
        };
        TuiTableSortPipe.prototype.sort = function (data, sorter, direction) {
            return __spreadArray([], __read(data)).sort(function (a, b) { return direction * sorter(a, b); });
        };
        return TuiTableSortPipe;
    }());
    TuiTableSortPipe.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTableSortPipe, deps: [{ token: TuiTableDirective }], target: i0__namespace.ɵɵFactoryTarget.Pipe });
    TuiTableSortPipe.ɵpipe = i0__namespace.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTableSortPipe, name: "tuiTableSort", pure: false });
    __decorate([
        i4.tuiPure
    ], TuiTableSortPipe.prototype, "sort", null);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTableSortPipe, decorators: [{
                type: i0.Pipe,
                args: [{
                        name: 'tuiTableSort',
                        pure: false,
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiTableDirective, decorators: [{
                            type: i0.Inject,
                            args: [TuiTableDirective]
                        }] }];
        }, propDecorators: { sort: [] } });

    var TUI_TABLE_PROVIDER = [
        i4.TuiDestroyService,
        TuiTableSortPipe,
        {
            provide: TuiTableDirective,
            deps: [[new i0.SkipSelf(), TuiTableDirective], i0.ChangeDetectorRef, i4.TuiDestroyService],
            useFactory: i1.tuiWatchedControllerFactory,
        },
    ];

    var TuiTdComponent = /** @class */ (function () {
        function TuiTdComponent() {
        }
        return TuiTdComponent;
    }());
    TuiTdComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTdComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTdComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTdComponent, selector: "th[tuiTd], td[tuiTd]", host: { properties: { "class._editable": "this.control" } }, queries: [{ propertyName: "control", first: true, predicate: forms.NgControl, descendants: true }], ngImport: i0__namespace, template: "\n        <ng-content></ng-content>\n    ", isInline: true, styles: [":host{position:relative;height:var(--tui-height-m);font:var(--tui-font-text-s);text-align:left;padding:0 .75rem;background:var(--tui-base-01);border:1px solid var(--tui-base-04);border-top:none;box-sizing:border-box;filter:opacity(1)}@supports (-webkit-hyphens: none){:host{transform:translate(0)}}:host:first-child{left:0}:host:not(:first-child){border-left:none}:host._editable:focus-within{z-index:1}:host._editable{padding:0;vertical-align:top}:host(th){position:-webkit-sticky;position:sticky;z-index:1}:host(th):after{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;content:\"\";position:absolute;top:0;bottom:0;left:100%;width:.3125rem;pointer-events:none;background:rgba(237,237,237,.7);opacity:0}:host(th):focus-within:not(:disabled){z-index:11}:host-context(table[data-mode=\"onDark\"]):after{background:rgba(60,60,60,.9)}:host-context(table._stuck){z-index:10}:host-context(table._stuck):last-of-type:after{opacity:1}:host-context(table[data-size=\"l\"]){font:var(--tui-font-text-m);height:var(--tui-height-l);padding-left:1rem;padding-right:1rem}:host-context(table[data-size=\"l\"])._editable{padding:0}:host(td):focus-within{z-index:1}:host(td):not(:focus-within){z-index:0}\n"], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTdComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'th[tuiTd], td[tuiTd]',
                        template: "\n        <ng-content></ng-content>\n    ",
                        styleUrls: ['./td.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { control: [{
                    type: i0.HostBinding,
                    args: ['class._editable']
                }, {
                    type: i0.ContentChild,
                    args: [forms.NgControl]
                }] } });

    var TuiTrComponent = /** @class */ (function () {
        function TuiTrComponent(table, body) {
            var _this = this;
            this.table = table;
            this.body = body;
            this.cells = i4.EMPTY_QUERY;
            this.contentReady$ = new i1$1.ReplaySubject(1);
            this.cells$ = this.contentReady$.pipe(operators.switchMap(function () { return i4.tuiQueryListChanges(_this.cells); }), operators.map(function (cells) { return cells.reduce(function (record, item) {
                var _a;
                return (Object.assign(Object.assign({}, record), (_a = {}, _a[item.tuiCell] = item, _a)));
            }, {}); }));
            this.item$ = this.contentReady$.pipe(operators.switchMap(function () { return i4.tuiQueryListChanges(_this.body.rows); }), operators.map(function (rows) {
                /**
                 * TODO v4.0 replace `this.body.sorted` with `this.body.data` (don't forget to drop `sorted`-getter).
                 */
                return _this.body.sorted[rows.findIndex(function (row) { return row === _this; })];
            }));
        }
        TuiTrComponent.prototype.ngAfterContentInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, Promise.resolve()];
                        case 1:
                            _a.sent();
                            this.contentReady$.next(true);
                            return [2 /*return*/];
                    }
                });
            });
        };
        return TuiTrComponent;
    }());
    TuiTrComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTrComponent, deps: [{ token: i0.forwardRef(function () { return TuiTableDirective; }) }, { token: i0.forwardRef(function () { return TuiTbodyComponent; }) }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTrComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTrComponent, selector: "tr[tuiTr]", providers: [TUI_TABLE_PROVIDER], queries: [{ propertyName: "cells", predicate: i0__namespace.forwardRef(function () { return TuiCellDirective; }) }], ngImport: i0__namespace, template: "<ng-container *ngIf=\"cells$ | async as items\">\n    <ng-container\n        *ngFor=\"let key of table.columns\"\n        [ngTemplateOutlet]=\"items[key]?.template || plain\"\n    >\n        <ng-template #plain>\n            <td\n                *ngIf=\"item$ | async as item\"\n                tuiTd\n            >\n                {{ item[key] }}\n            </td>\n        </ng-template>\n    </ng-container>\n</ng-container>\n", components: [{ type: TuiTdComponent, selector: "th[tuiTd], td[tuiTd]" }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "async": i2__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTrComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tr[tuiTr]',
                        templateUrl: './tr.template.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [TUI_TABLE_PROVIDER],
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiTableDirective, decorators: [{
                            type: i0.Inject,
                            args: [i0.forwardRef(function () { return TuiTableDirective; })]
                        }] }, { type: TuiTbodyComponent, decorators: [{
                            type: i0.Inject,
                            args: [i0.forwardRef(function () { return TuiTbodyComponent; })]
                        }] }];
        }, propDecorators: { cells: [{
                    type: i0.ContentChildren,
                    args: [i0.forwardRef(function () { return TuiCellDirective; })]
                }] } });

    var TuiTbodyComponent = /** @class */ (function () {
        function TuiTbodyComponent(pipe, options, arrowOptions, table) {
            this.pipe = pipe;
            this.options = options;
            this.arrowOptions = arrowOptions;
            this.table = table;
            this.data = [];
            this.open = this.options.open;
            this.openChange = new i0.EventEmitter();
            this.rows = i4.EMPTY_QUERY;
            this.toContext = function ($implicit, index) { return ({ $implicit: $implicit, index: index }); };
        }
        Object.defineProperty(TuiTbodyComponent.prototype, "sorted", {
            get: function () {
                return this.pipe.transform(this.data);
            },
            enumerable: false,
            configurable: true
        });
        TuiTbodyComponent.prototype.onClick = function () {
            this.open = !this.open;
            this.openChange.emit(this.open);
        };
        return TuiTbodyComponent;
    }());
    TuiTbodyComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTbodyComponent, deps: [{ token: TuiTableSortPipe }, { token: TUI_TABLE_OPTIONS }, { token: kit.TUI_ARROW_OPTIONS }, { token: i0.forwardRef(function () { return TuiTableDirective; }) }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTbodyComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTbodyComponent, selector: "tbody[tuiTbody]", inputs: { data: "data", heading: "heading", open: "open" }, outputs: { openChange: "openChange" }, providers: TUI_TABLE_PROVIDER, queries: [{ propertyName: "row", first: true, predicate: i0__namespace.forwardRef(function () { return TuiRowDirective; }), descendants: true }, { propertyName: "rows", predicate: i0__namespace.forwardRef(function () { return TuiTrComponent; }) }], ngImport: i0__namespace, template: "<tr *ngIf=\"heading\">\n    <th\n        class=\"t-heading\"\n        [colSpan]=\"table.columns.length\"\n    >\n        <button\n            type=\"button\"\n            class=\"t-expand\"\n            (click)=\"onClick()\"\n        >\n            <span class=\"t-name\">\n                <ng-container *polymorpheusOutlet=\"heading as text\">\n                    {{ text }}\n                </ng-container>\n            </span>\n            <tui-svg\n                class=\"t-chevron\"\n                [class.t-chevron_rotated]=\"open\"\n                [src]=\"arrowOptions.iconLarge\"\n            ></tui-svg>\n        </button>\n    </th>\n</tr>\n<ng-container *ngIf=\"open\">\n    <ng-content></ng-content>\n</ng-container>\n<ng-container *ngIf=\"open && row\">\n    <ng-container\n        *ngFor=\"let item of sorted; let index = index\"\n        [ngTemplateOutlet]=\"row.template\"\n        [ngTemplateOutletContext]=\"item | tuiMapper: toContext : index\"\n    ></ng-container>\n</ng-container>\n", styles: [":host{border-color:var(--tui-base-04)}:host tr{border-color:inherit}.t-expand{-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:0;border:0;background:none;font-size:inherit;line-height:inherit;text-decoration:none;display:flex;width:100%;height:100%;align-items:center;box-sizing:border-box;outline:none;font-weight:bold;cursor:pointer;border-color:inherit}.t-expand:focus-visible .t-name{background:var(--tui-selection)}.t-expand:before,.t-expand:after{content:\"\";position:-webkit-sticky;position:sticky;height:100%;border-left:1px solid;border-color:inherit}.t-expand:before{left:0}.t-expand:after{right:0}.t-heading{transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;height:var(--tui-height-m);font:var(--tui-font-text-s);padding:0;background:var(--tui-base-02);border-bottom:1px solid var(--tui-base-04);border-color:inherit}.t-heading:hover{background:var(--tui-base-03)}:host-context(table[data-size=\"l\"]) .t-heading{font:var(--tui-font-text-m);height:var(--tui-height-l)}.t-name{position:-webkit-sticky;position:sticky;left:.75rem;display:inline-block}:host-context(table[data-size=\"l\"]) .t-name{left:1rem}.t-chevron{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:-webkit-sticky;position:sticky;right:.75rem;margin:0 .6875rem 0 auto}.t-chevron_rotated{transform:rotate(180deg)}\n"], components: [{ type: i1__namespace$1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "tuiMapper": i4__namespace.TuiMapperPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTbodyComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tbody[tuiTbody]',
                        templateUrl: './tbody.template.html',
                        styleUrls: ['./tbody.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: TUI_TABLE_PROVIDER,
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiTableSortPipe, decorators: [{
                            type: i0.Inject,
                            args: [TuiTableSortPipe]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_TABLE_OPTIONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [kit.TUI_ARROW_OPTIONS]
                        }] }, { type: TuiTableDirective, decorators: [{
                            type: i0.Inject,
                            args: [i0.forwardRef(function () { return TuiTableDirective; })]
                        }] }];
        }, propDecorators: { data: [{
                    type: i0.Input
                }], heading: [{
                    type: i0.Input
                }], open: [{
                    type: i0.Input
                }], openChange: [{
                    type: i0.Output
                }], row: [{
                    type: i0.ContentChild,
                    args: [i0.forwardRef(function () { return TuiRowDirective; })]
                }], rows: [{
                    type: i0.ContentChildren,
                    args: [i0.forwardRef(function () { return TuiTrComponent; })]
                }] } });

    var TuiThGroupComponent = /** @class */ (function () {
        function TuiThGroupComponent(table) {
            this.table = table;
            this.heads = i4.EMPTY_QUERY;
            this.heads$ = null;
        }
        TuiThGroupComponent.prototype.ngAfterContentInit = function () {
            var _this = this;
            this.heads$ = this.heads.changes.pipe(operators.startWith(null), operators.map(function () { return _this.heads.reduce(function (record, item) {
                var _a;
                return (Object.assign(Object.assign({}, record), (_a = {}, _a[item.tuiHead] = item, _a)));
            }, {}); }));
        };
        return TuiThGroupComponent;
    }());
    TuiThGroupComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiThGroupComponent, deps: [{ token: i0.forwardRef(function () { return TuiTableDirective; }) }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiThGroupComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiThGroupComponent, selector: "tr[tuiThGroup]", providers: [TUI_TABLE_PROVIDER], queries: [{ propertyName: "th", first: true, predicate: i0__namespace.forwardRef(function () { return TuiThComponent; }), descendants: true }, { propertyName: "heads", predicate: i0__namespace.forwardRef(function () { return TuiHeadDirective; }) }], ngImport: i0__namespace, template: "<ng-content></ng-content>\n<ng-container *ngIf=\"heads$ | async as headings\">\n    <ng-container\n        *ngFor=\"let key of table.columns\"\n        [ngTemplateOutlet]=\"headings[key.toString()]?.template || plain\"\n    >\n        <ng-template #plain>\n            <th\n                *ngIf=\"!th && !heads.length\"\n                tuiTh\n            >\n                {{ key.toString() }}\n            </th>\n        </ng-template>\n    </ng-container>\n</ng-container>\n", components: [{ type: TuiThComponent, selector: "th[tuiTh]", inputs: ["sorter", "resizable", "sticky"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "async": i2__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiThGroupComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tr[tuiThGroup]',
                        templateUrl: './th-group.template.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [TUI_TABLE_PROVIDER],
                    }]
            }], ctorParameters: function () {
            return [{ type: TuiTableDirective, decorators: [{
                            type: i0.Inject,
                            args: [i0.forwardRef(function () { return TuiTableDirective; })]
                        }] }];
        }, propDecorators: { th: [{
                    type: i0.ContentChild,
                    args: [i0.forwardRef(function () { return TuiThComponent; })]
                }], heads: [{
                    type: i0.ContentChildren,
                    args: [i0.forwardRef(function () { return TuiHeadDirective; })]
                }] } });

    var TuiTableModule = /** @class */ (function () {
        function TuiTableModule() {
        }
        return TuiTableModule;
    }());
    TuiTableModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTableModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiTableModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTableModule, declarations: [TuiTableDirective,
            TuiTbodyComponent,
            TuiThGroupComponent,
            TuiThComponent,
            TuiTdComponent,
            TuiTrComponent,
            TuiCellDirective,
            TuiHeadDirective,
            TuiRowDirective,
            TuiSortByDirective,
            TuiSortableDirective,
            TuiTheadDirective,
            TuiResizedDirective,
            TuiTableSortPipe,
            TuiDirectionOrderDirective], imports: [i2.CommonModule, i3.PolymorpheusModule, i4.TuiMapperPipeModule, i1.TuiSvgModule], exports: [TuiTableDirective,
            TuiTbodyComponent,
            TuiThGroupComponent,
            TuiThComponent,
            TuiTdComponent,
            TuiTrComponent,
            TuiCellDirective,
            TuiHeadDirective,
            TuiRowDirective,
            TuiSortByDirective,
            TuiSortableDirective,
            TuiTheadDirective,
            TuiTableSortPipe,
            TuiDirectionOrderDirective] });
    TuiTableModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTableModule, imports: [[i2.CommonModule, i3.PolymorpheusModule, i4.TuiMapperPipeModule, i1.TuiSvgModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTableModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i2.CommonModule, i3.PolymorpheusModule, i4.TuiMapperPipeModule, i1.TuiSvgModule],
                        declarations: [
                            TuiTableDirective,
                            TuiTbodyComponent,
                            TuiThGroupComponent,
                            TuiThComponent,
                            TuiTdComponent,
                            TuiTrComponent,
                            TuiCellDirective,
                            TuiHeadDirective,
                            TuiRowDirective,
                            TuiSortByDirective,
                            TuiSortableDirective,
                            TuiTheadDirective,
                            TuiResizedDirective,
                            TuiTableSortPipe,
                            TuiDirectionOrderDirective,
                        ],
                        exports: [
                            TuiTableDirective,
                            TuiTbodyComponent,
                            TuiThGroupComponent,
                            TuiThComponent,
                            TuiTdComponent,
                            TuiTrComponent,
                            TuiCellDirective,
                            TuiHeadDirective,
                            TuiRowDirective,
                            TuiSortByDirective,
                            TuiSortableDirective,
                            TuiTheadDirective,
                            TuiTableSortPipe,
                            TuiDirectionOrderDirective,
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_STUCK = TUI_STUCK;
    exports.TUI_STUCK_PROVIDER = TUI_STUCK_PROVIDER;
    exports.TUI_TABLE_DEFAULT_OPTIONS = TUI_TABLE_DEFAULT_OPTIONS;
    exports.TUI_TABLE_OPTIONS = TUI_TABLE_OPTIONS;
    exports.TUI_TABLE_PROVIDER = TUI_TABLE_PROVIDER;
    exports.TUI_TABLE_PROVIDERS = TUI_TABLE_PROVIDERS;
    exports.TuiCellDirective = TuiCellDirective;
    exports.TuiDirectionOrderDirective = TuiDirectionOrderDirective;
    exports.TuiHeadDirective = TuiHeadDirective;
    exports.TuiResizedDirective = TuiResizedDirective;
    exports.TuiRowDirective = TuiRowDirective;
    exports.TuiSortByDirective = TuiSortByDirective;
    exports.TuiSortableDirective = TuiSortableDirective;
    exports.TuiTableDirective = TuiTableDirective;
    exports.TuiTableModule = TuiTableModule;
    exports.TuiTableSortPipe = TuiTableSortPipe;
    exports.TuiTbodyComponent = TuiTbodyComponent;
    exports.TuiTdComponent = TuiTdComponent;
    exports.TuiThComponent = TuiThComponent;
    exports.TuiThGroupComponent = TuiThGroupComponent;
    exports.TuiTheadDirective = TuiTheadDirective;
    exports.TuiTrComponent = TuiTrComponent;
    exports.tuiTableOptionsProvider = tuiTableOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-addon-table-components-table.umd.js.map

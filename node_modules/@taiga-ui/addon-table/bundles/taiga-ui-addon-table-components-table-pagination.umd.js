(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/addon-table/tokens'), require('@taiga-ui/core'), require('@taiga-ui/cdk'), require('@angular/common'), require('@tinkoff/ng-polymorpheus'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/addon-table/components/table-pagination', ['exports', '@angular/core', '@taiga-ui/addon-table/tokens', '@taiga-ui/core', '@taiga-ui/cdk', '@angular/common', '@tinkoff/ng-polymorpheus', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"]["addon-table"] = global["taiga-ui"]["addon-table"] || {}, global["taiga-ui"]["addon-table"].components = global["taiga-ui"]["addon-table"].components || {}, global["taiga-ui"]["addon-table"].components["table-pagination"] = {}), global.ng.core, global["taiga-ui"]["addon-table"].tokens, global.i1, global.cdk, global.ng.common, global.i3, global.rxjs));
})(this, (function (exports, i0, tokens, i1, cdk, i2, i3, i4) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);

    function defaultSizeOptionContent(_a) {
        var $implicit = _a.$implicit;
        return "" + $implicit;
    }
    var TUI_TABLE_PAGINATION_DEFAULT_OPTIONS = {
        sizeOptionContent: defaultSizeOptionContent,
        showPages: true,
        items: [10, 20, 50, 100],
        size: 10,
    };
    /**
     * Default parameters for TablePagination component
     */
    var TUI_TABLE_PAGINATION_OPTIONS = cdk.tuiCreateToken(TUI_TABLE_PAGINATION_DEFAULT_OPTIONS);
    function tuiTablePaginationOptionsProvider(options) {
        return cdk.tuiProvideOptions(TUI_TABLE_PAGINATION_OPTIONS, options, TUI_TABLE_PAGINATION_DEFAULT_OPTIONS);
    }

    var TuiTablePaginationComponent = /** @class */ (function () {
        function TuiTablePaginationComponent(icons, spinTexts$, texts$, options, commonIcons) {
            this.icons = icons;
            this.spinTexts$ = spinTexts$;
            this.texts$ = texts$;
            this.options = options;
            this.commonIcons = commonIcons;
            this.items = this.options.items;
            this.total = 0;
            this.page = 0;
            this.size = this.options.size;
            /**
             * TODO: Remove in 4.0
             * @deprecated use paginationChange
             */
            this.pageChange = new i0.EventEmitter();
            /**
             * TODO: Remove in 4.0
             * @deprecated use paginationChange
             */
            this.sizeChange = new i0.EventEmitter();
            this.paginationChange = new i0.EventEmitter();
            this.open = false;
        }
        Object.defineProperty(TuiTablePaginationComponent.prototype, "pages", {
            get: function () {
                return Math.ceil(this.total / this.size);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTablePaginationComponent.prototype, "start", {
            get: function () {
                return this.page * this.size;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTablePaginationComponent.prototype, "end", {
            get: function () {
                return Math.min(this.start + this.size, this.total);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTablePaginationComponent.prototype, "leftDisabled", {
            get: function () {
                return !this.start;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTablePaginationComponent.prototype, "rightDisabled", {
            get: function () {
                return this.end === this.total;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiTablePaginationComponent.prototype, "pagination", {
            get: function () {
                return {
                    page: this.page,
                    size: this.size,
                };
            },
            enumerable: false,
            configurable: true
        });
        TuiTablePaginationComponent.prototype.onItem = function (size) {
            var start = this.start;
            this.size = size;
            this.sizeChange.emit(size);
            this.open = false;
            this.page = Math.floor(start / this.size);
            this.pageChange.emit(this.page);
            this.paginationChange.emit(this.pagination);
        };
        TuiTablePaginationComponent.prototype.back = function () {
            this.page--;
            this.pageChange.emit(this.page);
            this.paginationChange.emit(this.pagination);
        };
        TuiTablePaginationComponent.prototype.forth = function () {
            this.page++;
            this.pageChange.emit(this.page);
            this.paginationChange.emit(this.pagination);
        };
        return TuiTablePaginationComponent;
    }());
    TuiTablePaginationComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTablePaginationComponent, deps: [{ token: i1.TUI_SPIN_ICONS }, { token: i1.TUI_SPIN_TEXTS }, { token: tokens.TUI_TABLE_PAGINATION_TEXTS }, { token: TUI_TABLE_PAGINATION_OPTIONS }, { token: i1.TUI_COMMON_ICONS }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiTablePaginationComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiTablePaginationComponent, selector: "tui-table-pagination", inputs: { items: "items", total: "total", page: "page", size: "size" }, outputs: { pageChange: "pageChange", sizeChange: "sizeChange", paginationChange: "paginationChange" }, ngImport: i0__namespace, template: "<ng-container *ngIf=\"texts$ | async as texts\">\n    <span class=\"t-pages\">\n        <ng-container *ngIf=\"options.showPages\">\n            {{ texts.pages }}\n            <strong class=\"t-strong\">{{ pages }}</strong>\n        </ng-container>\n    </span>\n    <span automation-id=\"tui-table-pagination__lines-per-page-wrapper\">\n        {{ texts.linesPerPage }}\n        <tui-hosted-dropdown\n            [content]=\"content\"\n            [(open)]=\"open\"\n        >\n            <button\n                tuiLink\n                type=\"button\"\n            >\n                <strong>{{ start + 1 }}\u2013{{ end }}</strong>\n            </button>\n            <ng-template #content>\n                <tui-data-list size=\"s\">\n                    <ng-container *ngFor=\"let item of items\">\n                        <button\n                            tuiOption\n                            class=\"t-item\"\n                            (click)=\"onItem(item)\"\n                        >\n                            <ng-container\n                                *polymorpheusOutlet=\"\n                                    options.sizeOptionContent as text;\n                                    context: {$implicit: item, total: total}\n                                \"\n                            >\n                                {{ text }}\n                            </ng-container>\n                            <tui-svg\n                                *ngIf=\"item === size; else fakeIcon\"\n                                class=\"t-checkmark\"\n                                [src]=\"commonIcons.check\"\n                            ></tui-svg>\n\n                            <ng-template #fakeIcon>\n                                <span class=\"t-checkmark\"></span>\n                            </ng-template>\n                        </button>\n                    </ng-container>\n                </tui-data-list>\n            </ng-template>\n        </tui-hosted-dropdown>\n        {{ texts.of }}\n        <strong class=\"t-strong\">{{ total }}</strong>\n    </span>\n    <ng-container *ngIf=\"spinTexts$ | async as spinTexts\">\n        <button\n            appearance=\"icon\"\n            size=\"xs\"\n            tuiIconButton\n            type=\"button\"\n            class=\"t-back\"\n            [disabled]=\"leftDisabled\"\n            [icon]=\"icons.decrement\"\n            [title]=\"spinTexts[0]\"\n            (click)=\"back()\"\n        ></button>\n        <button\n            appearance=\"icon\"\n            size=\"xs\"\n            tuiIconButton\n            type=\"button\"\n            [disabled]=\"rightDisabled\"\n            [icon]=\"icons.increment\"\n            [title]=\"spinTexts[1]\"\n            (click)=\"forth()\"\n        ></button>\n    </ng-container>\n</ng-container>\n", styles: [":host{display:flex;font:var(--tui-font-text-s);align-items:center;color:var(--tui-text-03)}.t-strong{color:var(--tui-text-01)}.t-pages{margin-right:auto}.t-item{min-width:5.5rem;box-sizing:border-box}.t-checkmark{min-width:1.5rem;border-left:5px solid transparent}.t-back{margin:0 .25rem 0 1.5rem}\n"], components: [{ type: i1__namespace.TuiHostedDropdownComponent, selector: "tui-hosted-dropdown", inputs: ["content", "sided", "canOpen", "open"], outputs: ["openChange", "focusedChange"] }, { type: i1__namespace.TuiLinkComponent, selector: "a[tuiLink], button[tuiLink]", inputs: ["pseudo", "icon", "iconAlign", "iconRotated", "mode"], exportAs: ["tuiLink"] }, { type: i1__namespace.TuiDataListComponent, selector: "tui-data-list", inputs: ["role", "emptyContent", "size"] }, { type: i1__namespace.TuiOptionComponent, selector: "button[tuiOption], a[tuiOption]", inputs: ["size", "role", "disabled", "value"] }, { type: i1__namespace.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: i1__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i2__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTablePaginationComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-table-pagination',
                        templateUrl: './table-pagination.template.html',
                        styleUrls: ['./table-pagination.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_SPIN_ICONS]
                        }] }, { type: i4__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_SPIN_TEXTS]
                        }] }, { type: i4__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_TABLE_PAGINATION_TEXTS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_TABLE_PAGINATION_OPTIONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i1.TUI_COMMON_ICONS]
                        }] }];
        }, propDecorators: { items: [{
                    type: i0.Input
                }], total: [{
                    type: i0.Input
                }], page: [{
                    type: i0.Input
                }], size: [{
                    type: i0.Input
                }], pageChange: [{
                    type: i0.Output
                }], sizeChange: [{
                    type: i0.Output
                }], paginationChange: [{
                    type: i0.Output
                }] } });

    var TuiTablePaginationModule = /** @class */ (function () {
        function TuiTablePaginationModule() {
        }
        return TuiTablePaginationModule;
    }());
    TuiTablePaginationModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTablePaginationModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiTablePaginationModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTablePaginationModule, declarations: [TuiTablePaginationComponent], imports: [i2.CommonModule,
            i1.TuiButtonModule,
            i1.TuiLinkModule,
            i1.TuiHostedDropdownModule,
            i1.TuiDataListModule,
            i1.TuiSvgModule,
            i3.PolymorpheusModule], exports: [TuiTablePaginationComponent] });
    TuiTablePaginationModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTablePaginationModule, imports: [[
                i2.CommonModule,
                i1.TuiButtonModule,
                i1.TuiLinkModule,
                i1.TuiHostedDropdownModule,
                i1.TuiDataListModule,
                i1.TuiSvgModule,
                i3.PolymorpheusModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiTablePaginationModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i2.CommonModule,
                            i1.TuiButtonModule,
                            i1.TuiLinkModule,
                            i1.TuiHostedDropdownModule,
                            i1.TuiDataListModule,
                            i1.TuiSvgModule,
                            i3.PolymorpheusModule,
                        ],
                        declarations: [TuiTablePaginationComponent],
                        exports: [TuiTablePaginationComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_TABLE_PAGINATION_DEFAULT_OPTIONS = TUI_TABLE_PAGINATION_DEFAULT_OPTIONS;
    exports.TUI_TABLE_PAGINATION_OPTIONS = TUI_TABLE_PAGINATION_OPTIONS;
    exports.TuiTablePaginationComponent = TuiTablePaginationComponent;
    exports.TuiTablePaginationModule = TuiTablePaginationModule;
    exports.tuiTablePaginationOptionsProvider = tuiTablePaginationOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-addon-table-components-table-pagination.umd.js.map

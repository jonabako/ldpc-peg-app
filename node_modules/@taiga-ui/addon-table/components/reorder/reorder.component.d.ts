import { EventEmitter } from '@angular/core';
import { Observable } from 'rxjs';
import { TuiReorderOptions } from './reorder.options';
import * as i0 from "@angular/core";
export declare class TuiReorderComponent<T> {
    readonly options: TuiReorderOptions;
    readonly showHideText$: Observable<string>;
    private dragging;
    set items(items: readonly T[]);
    enabled: readonly T[];
    readonly itemsChange: EventEmitter<T[]>;
    readonly enabledChange: EventEmitter<T[]>;
    order: Map<number, number>;
    unsortedItems: readonly T[];
    constructor(options: TuiReorderOptions, showHideText$: Observable<string>);
    noop(): void;
    onDrag(): void;
    onDrop(): void;
    isEnabled(item: T): boolean;
    getIcon(item: T): string;
    toggle(toggled: T): void;
    move(index: number, direction: number): void;
    private getSortedItems;
    private updateItems;
    private updateEnabled;
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiReorderComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiReorderComponent<any>, "tui-reorder", never, { "items": "items"; "enabled": "enabled"; }, { "itemsChange": "itemsChange"; "enabledChange": "enabledChange"; }, never, never>;
}

import { TuiComparator } from '@taiga-ui/addon-table/types';
import { TuiHeadDirective } from '../directives/head.directive';
import { TuiTableDirective } from '../directives/table.directive';
import { TuiTableOptions } from '../table.options';
import * as i0 from "@angular/core";
export declare class TuiThComponent<T extends Partial<Record<keyof T, any>>> {
    private readonly options;
    private readonly head;
    readonly table: TuiTableDirective<T> | null;
    sorter: TuiComparator<T> | null;
    resizable: boolean;
    sticky: boolean;
    width: number | null;
    constructor(options: TuiTableOptions, head: TuiHeadDirective<T> | null, table: TuiTableDirective<T> | null);
    get key(): keyof T;
    get isCurrent(): boolean;
    get icon(): string;
    updateSorterAndDirection(): void;
    onResized(width: number): void;
    private get isCurrentAndAscDirection();
    static ɵfac: i0.ɵɵFactoryDeclaration<TuiThComponent<any>, [null, { optional: true; }, { optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TuiThComponent<any>, "th[tuiTh]", never, { "sorter": "sorter"; "resizable": "resizable"; "sticky": "sticky"; }, {}, never, ["*"]>;
}

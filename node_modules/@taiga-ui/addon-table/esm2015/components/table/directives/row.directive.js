import { Directive, Inject, Input, TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @deprecated use `*ngFor` + `tuiTableSort`-pipe instead.
 * See example {@link https://taiga-ui.dev/components/table/Setup}
 * ___
 * TODO v4.0 delete it.
 */
export class TuiRowDirective {
    constructor(template) {
        this.template = template;
        this.tuiRowOf = [];
    }
    static ngTemplateContextGuard(_dir, _ctx) {
        return true;
    }
}
TuiRowDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRowDirective, deps: [{ token: TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
TuiRowDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiRowDirective, selector: "ng-template[tuiRow]", inputs: { tuiRowOf: "tuiRowOf" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRowDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ng-template[tuiRow]',
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{
                    type: Inject,
                    args: [TemplateRef]
                }] }]; }, propDecorators: { tuiRowOf: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93LmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FkZG9uLXRhYmxlL2NvbXBvbmVudHMvdGFibGUvZGlyZWN0aXZlcy9yb3cuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7O0FBR3BFOzs7OztHQUtHO0FBSUgsTUFBTSxPQUFPLGVBQWU7SUFJeEIsWUFBMEMsUUFBdUM7UUFBdkMsYUFBUSxHQUFSLFFBQVEsQ0FBK0I7UUFGakYsYUFBUSxHQUFpQixFQUFFLENBQUM7SUFFd0QsQ0FBQztJQUVyRixNQUFNLENBQUMsc0JBQXNCLENBQ3pCLElBQXdCLEVBQ3hCLElBQWE7UUFFYixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOzs2R0FYUSxlQUFlLGtCQUlKLFdBQVc7aUdBSnRCLGVBQWU7NEZBQWYsZUFBZTtrQkFIM0IsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUscUJBQXFCO2lCQUNsQzs7MEJBS2dCLE1BQU07MkJBQUMsV0FBVzs0Q0FGL0IsUUFBUTtzQkFEUCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEluamVjdCwgSW5wdXQsIFRlbXBsYXRlUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpUm93Q29udGV4dH0gZnJvbSAnQHRhaWdhLXVpL2FkZG9uLXRhYmxlL2ludGVyZmFjZXMnO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIHVzZSBgKm5nRm9yYCArIGB0dWlUYWJsZVNvcnRgLXBpcGUgaW5zdGVhZC5cbiAqIFNlZSBleGFtcGxlIHtAbGluayBodHRwczovL3RhaWdhLXVpLmRldi9jb21wb25lbnRzL3RhYmxlL1NldHVwfVxuICogX19fXG4gKiBUT0RPIHY0LjAgZGVsZXRlIGl0LlxuICovXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ25nLXRlbXBsYXRlW3R1aVJvd10nLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlSb3dEaXJlY3RpdmU8VCBleHRlbmRzIFBhcnRpYWw8UmVjb3JkPGtleW9mIFQsIGFueT4+PiB7XG4gICAgQElucHV0KClcbiAgICB0dWlSb3dPZjogcmVhZG9ubHkgVFtdID0gW107XG5cbiAgICBjb25zdHJ1Y3RvcihASW5qZWN0KFRlbXBsYXRlUmVmKSByZWFkb25seSB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8VHVpUm93Q29udGV4dDxUPj4pIHt9XG5cbiAgICBzdGF0aWMgbmdUZW1wbGF0ZUNvbnRleHRHdWFyZDxUPihcbiAgICAgICAgX2RpcjogVHVpUm93RGlyZWN0aXZlPFQ+LFxuICAgICAgICBfY3R4OiB1bmtub3duLFxuICAgICk6IF9jdHggaXMgVHVpUm93Q29udGV4dDxUPiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbn1cbiJdfQ==
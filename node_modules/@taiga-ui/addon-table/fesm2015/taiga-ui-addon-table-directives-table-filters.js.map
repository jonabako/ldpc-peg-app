{"version":3,"file":"taiga-ui-addon-table-directives-table-filters.js","sources":["../../../projects/addon-table/directives/table-filters/abstract-table-filter.ts","../../../projects/addon-table/directives/table-filters/generic-filter.directive.ts","../../../projects/addon-table/directives/table-filters/table-filters.directive.ts","../../../projects/addon-table/directives/table-filters/table-filter.directive.ts","../../../projects/addon-table/directives/table-filters/table-filters.pipe.ts","../../../projects/addon-table/directives/table-filters/table-filters.module.ts","../../../projects/addon-table/directives/table-filters/taiga-ui-addon-table-directives-table-filters.ts"],"sourcesContent":["export abstract class AbstractTuiTableFilter<T, G> {\n    abstract filter(item: T, value: G): boolean;\n}\n","import {Directive, Input} from '@angular/core';\nimport {ALWAYS_TRUE_HANDLER} from '@taiga-ui/cdk';\n\nimport {AbstractTuiTableFilter} from './abstract-table-filter';\n\n@Directive({\n    selector: '[tuiGenericFilter]',\n    providers: [\n        {\n            provide: AbstractTuiTableFilter,\n            useExisting: TuiGenericFilterDirective,\n        },\n    ],\n})\nexport class TuiGenericFilterDirective<T, G> extends AbstractTuiTableFilter<T, G> {\n    @Input('tuiGenericFilter')\n    filter: (item: T, value: G) => boolean = ALWAYS_TRUE_HANDLER;\n}\n","import {Directive} from '@angular/core';\nimport {identity, merge, Observable, ReplaySubject} from 'rxjs';\nimport {map, startWith, switchMap} from 'rxjs/operators';\n\nimport {TuiTableFilter} from './table-filter';\n\n@Directive({\n    selector: '[tuiTableFilters]',\n})\nexport class TuiTableFiltersDirective<T> {\n    private readonly refresh$ = new ReplaySubject<Observable<unknown>>(1);\n\n    private filters: ReadonlyArray<TuiTableFilter<T>> = [];\n\n    register(filter: TuiTableFilter<T>): void {\n        this.filters = this.filters.concat(filter);\n        this.update();\n    }\n\n    unregister(filter: TuiTableFilter<T>): void {\n        this.filters = this.filters.filter(item => item !== filter);\n        this.update();\n    }\n\n    filter(items: readonly T[]): Observable<readonly T[]> {\n        return this.refresh$.pipe(\n            switchMap(identity),\n            startWith(null),\n            map(() => items.filter(item => this.check(item))),\n        );\n    }\n\n    private check(item: T): boolean {\n        return this.filters.every(filter => filter.filter(item));\n    }\n\n    private update(): void {\n        this.refresh$.next(merge(...this.filters.map(({refresh$}) => refresh$)));\n    }\n}\n","import {Directive, Inject, Input, OnDestroy, OnInit, Optional} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {TuiHeadDirective} from '@taiga-ui/addon-table/components';\nimport {TuiValuesOf} from '@taiga-ui/cdk';\nimport {defer, EMPTY, merge} from 'rxjs';\nimport {distinctUntilChanged} from 'rxjs/operators';\n\nimport {AbstractTuiTableFilter} from './abstract-table-filter';\nimport {TuiTableFilter} from './table-filter';\nimport {TuiTableFiltersDirective} from './table-filters.directive';\n\n@Directive({\n    selector: '[tuiTableFilter]',\n})\nexport class TuiTableFilterDirective<T> implements OnInit, OnDestroy, TuiTableFilter<T> {\n    @Input()\n    tuiTableFilter?: keyof T;\n\n    readonly refresh$ = defer(() =>\n        merge(\n            this.control.valueChanges || EMPTY,\n            this.control.statusChanges?.pipe(distinctUntilChanged()) || EMPTY,\n        ),\n    );\n\n    constructor(\n        @Optional()\n        @Inject(TuiHeadDirective)\n        private readonly head: TuiHeadDirective<T> | null,\n        @Inject(AbstractTuiTableFilter)\n        private readonly delegate: AbstractTuiTableFilter<TuiValuesOf<T>, any>,\n        @Inject(NgControl) private readonly control: NgControl,\n        @Inject(TuiTableFiltersDirective) readonly filters: TuiTableFiltersDirective<T>,\n    ) {}\n\n    ngOnInit(): void {\n        this.filters.register(this);\n    }\n\n    ngOnDestroy(): void {\n        this.filters.unregister(this);\n    }\n\n    filter(item: T): boolean {\n        const {disabled, value} = this.control;\n\n        return (\n            !!disabled ||\n            !this.key ||\n            this.delegate.filter(item[this.key as keyof T], value)\n        );\n    }\n\n    private get key(): string | keyof T | undefined {\n        return this.tuiTableFilter || this.head?.tuiHead;\n    }\n}\n","import {Inject, Pipe, PipeTransform} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {TuiTableFiltersDirective} from './table-filters.directive';\n\n@Pipe({\n    name: 'tuiTableFilters',\n})\nexport class TuiTableFiltersPipe<T> implements PipeTransform {\n    constructor(\n        @Inject(TuiTableFiltersDirective)\n        private readonly filters: TuiTableFiltersDirective<T>,\n    ) {}\n\n    transform(items: readonly T[]): Observable<readonly T[]> {\n        return this.filters.filter(items);\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {TuiGenericFilterDirective} from './generic-filter.directive';\nimport {TuiTableFilterDirective} from './table-filter.directive';\nimport {TuiTableFiltersDirective} from './table-filters.directive';\nimport {TuiTableFiltersPipe} from './table-filters.pipe';\n\n@NgModule({\n    declarations: [\n        TuiTableFiltersDirective,\n        TuiTableFilterDirective,\n        TuiTableFiltersPipe,\n        TuiGenericFilterDirective,\n    ],\n    exports: [\n        TuiTableFiltersDirective,\n        TuiTableFilterDirective,\n        TuiTableFiltersPipe,\n        TuiGenericFilterDirective,\n    ],\n})\nexport class TuiTableFiltersModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
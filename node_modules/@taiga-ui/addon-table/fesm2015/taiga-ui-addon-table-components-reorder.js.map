{"version":3,"file":"taiga-ui-addon-table-components-reorder.js","sources":["../../../projects/addon-table/components/reorder/reorder.options.ts","../../../projects/addon-table/components/reorder/reorder.component.ts","../../../projects/addon-table/components/reorder/reorder.template.html","../../../projects/addon-table/components/reorder/reorder.module.ts","../../../projects/addon-table/components/reorder/taiga-ui-addon-table-components-reorder.ts"],"sourcesContent":["import {Provider} from '@angular/core';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk';\n\nexport interface TuiReorderOptions {\n    readonly icons: {\n        readonly drag: string;\n        readonly hide: string;\n        readonly show: string;\n    };\n}\n\nexport const TUI_REORDER_DEFAULT_OPTIONS: TuiReorderOptions = {\n    icons: {\n        hide: 'tuiIconEye',\n        show: 'tuiIconEyeOff',\n        drag: 'tuiIconDrag',\n    },\n};\n\nexport const TUI_REORDER_OPTIONS = tuiCreateToken(TUI_REORDER_DEFAULT_OPTIONS);\n\nexport function tuiReorderOptionsProvider(options: Partial<TuiReorderOptions>): Provider {\n    return tuiProvideOptions(TUI_REORDER_OPTIONS, options, TUI_REORDER_DEFAULT_OPTIONS);\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    HostListener,\n    Inject,\n    Input,\n    Output,\n} from '@angular/core';\nimport {TUI_TABLE_SHOW_HIDE_MESSAGE} from '@taiga-ui/addon-table/tokens';\nimport {Observable} from 'rxjs';\n\nimport {TUI_REORDER_OPTIONS, TuiReorderOptions} from './reorder.options';\n\n@Component({\n    selector: 'tui-reorder',\n    templateUrl: './reorder.template.html',\n    styleUrls: ['./reorder.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiReorderComponent<T> {\n    private dragging = false;\n\n    @Input()\n    set items(items: readonly T[]) {\n        if (\n            items.length !== this.unsortedItems.length ||\n            !items.every(item => this.unsortedItems.includes(item))\n        ) {\n            this.unsortedItems = items;\n        }\n    }\n\n    @Input()\n    enabled: readonly T[] = [];\n\n    @Output()\n    readonly itemsChange = new EventEmitter<T[]>();\n\n    @Output()\n    readonly enabledChange = new EventEmitter<T[]>();\n\n    order = new Map<number, number>();\n\n    unsortedItems: readonly T[] = [];\n\n    constructor(\n        @Inject(TUI_REORDER_OPTIONS) readonly options: TuiReorderOptions,\n        @Inject(TUI_TABLE_SHOW_HIDE_MESSAGE) readonly showHideText$: Observable<string>,\n    ) {}\n\n    @HostListener('focusout.stop')\n    noop(): void {}\n\n    @HostListener('pointerdown.silent')\n    onDrag(): void {\n        this.dragging = true;\n    }\n\n    @HostListener('document:pointerup.silent')\n    onDrop(): void {\n        if (!this.dragging) {\n            return;\n        }\n\n        this.dragging = false;\n        this.updateItems();\n    }\n\n    isEnabled(item: T): boolean {\n        return this.enabled.includes(item);\n    }\n\n    getIcon(item: T): string {\n        return this.isEnabled(item) ? this.options.icons.hide : this.options.icons.show;\n    }\n\n    toggle(toggled: T): void {\n        this.enabled = this.isEnabled(toggled)\n            ? this.enabled.filter(item => item !== toggled)\n            : this.enabled.concat(toggled);\n\n        this.updateEnabled();\n    }\n\n    move(index: number, direction: number): void {\n        const oldIndex = this.order.get(index) ?? index;\n\n        if (\n            (!oldIndex && direction < 0) ||\n            (oldIndex === this.unsortedItems.length - 1 && direction > 0)\n        ) {\n            return;\n        }\n\n        const newIndex = oldIndex + direction;\n        const oldItem = Array.from(this.order.values()).findIndex(\n            item => item === newIndex,\n        );\n\n        this.order.set(index, newIndex);\n        this.order.set(oldItem, oldIndex);\n        this.order = new Map(this.order);\n\n        this.updateItems();\n    }\n\n    private getSortedItems(): T[] {\n        const items = new Array(this.unsortedItems.length);\n\n        this.unsortedItems.forEach((item, index) => {\n            items[this.order.get(index) ?? index] = item;\n        });\n\n        return items;\n    }\n\n    private updateItems(): void {\n        this.itemsChange.emit(this.getSortedItems());\n        this.updateEnabled();\n    }\n\n    private updateEnabled(): void {\n        const enabled = this.getSortedItems().filter(item => this.isEnabled(item));\n\n        this.enabled = enabled;\n        this.enabledChange.emit(enabled);\n    }\n}\n","<tui-tiles\n    class=\"t-wrapper\"\n    [(order)]=\"order\"\n>\n    <tui-tile\n        *ngFor=\"let item of unsortedItems; let index = index\"\n        [style.order]=\"order.get(index)\"\n    >\n        <div class=\"t-item\">\n            <div\n                tuiTileHandle\n                class=\"t-draggable\"\n            >\n                <tui-svg\n                    class=\"t-icon\"\n                    [src]=\"options.icons.drag\"\n                ></tui-svg>\n                {{ item }}\n            </div>\n            <button\n                appearance=\"icon\"\n                size=\"xs\"\n                tuiIconButton\n                type=\"button\"\n                class=\"t-button\"\n                [class.t-button_hidden]=\"!isEnabled(item)\"\n                [icon]=\"getIcon(item)\"\n                [title]=\"showHideText$ | async\"\n                (click)=\"toggle(item)\"\n                (keydown.arrowDown.prevent)=\"move(index, 1)\"\n                (keydown.arrowUp.prevent)=\"move(index, -1)\"\n            ></button>\n        </div>\n    </tui-tile>\n</tui-tiles>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiButtonModule, TuiSvgModule} from '@taiga-ui/core';\nimport {TuiTilesModule} from '@taiga-ui/kit';\n\nimport {TuiReorderComponent} from './reorder.component';\n\n@NgModule({\n    imports: [CommonModule, TuiSvgModule, TuiButtonModule, TuiTilesModule],\n    declarations: [TuiReorderComponent],\n    exports: [TuiReorderComponent],\n})\nexport class TuiReorderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core/constants'), require('@taiga-ui/core/components/scrollbar'), require('@taiga-ui/core/components/primitive-year-picker'), require('@taiga-ui/core/internal/primitive-year-month-pagination'), require('@taiga-ui/core/components/primitive-calendar'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/components/calendar', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core/constants', '@taiga-ui/core/components/scrollbar', '@taiga-ui/core/components/primitive-year-picker', '@taiga-ui/core/internal/primitive-year-month-pagination', '@taiga-ui/core/components/primitive-calendar', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].core = global["taiga-ui"].core || {}, global["taiga-ui"].core.components = global["taiga-ui"].core.components || {}, global["taiga-ui"].core.components.calendar = {}), global.ng.core, global.i6, global["taiga-ui"].core.constants, global["taiga-ui"].core.components.scrollbar, global["taiga-ui"].core.components["primitive-year-picker"], global["taiga-ui"].core.internal["primitive-year-month-pagination"], global["taiga-ui"].core.components["primitive-calendar"], global.ng.common));
})(this, (function (exports, i0, i6, constants, i1, i2, i3, i4, i5) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);

    var TuiCalendarComponent = /** @class */ (function () {
        function TuiCalendarComponent() {
            this.day = null;
            this.view = 'month';
            this.month = i6.TuiMonth.currentLocal();
            this.disabledItemHandler = i6.ALWAYS_FALSE_HANDLER;
            this.min = i6.TUI_FIRST_DAY;
            this.max = i6.TUI_LAST_DAY;
            this.minViewedMonth = i6.TUI_FIRST_DAY;
            this.maxViewedMonth = i6.TUI_LAST_DAY;
            this.hoveredItem = null;
            this.showAdjacent = true;
            this.markerHandler = constants.TUI_DEFAULT_MARKER_HANDLER;
            this.dayClick = new i0.EventEmitter();
            this.monthChange = new i0.EventEmitter();
            this.hoveredItemChange = new i0.EventEmitter();
            this.disabledItemHandlerMapper = function (disabledItemHandler, min, max) { return function (item) { return item.dayBefore(min) || item.dayAfter(max) || disabledItemHandler(item); }; };
        }
        Object.defineProperty(TuiCalendarComponent.prototype, "initialView", {
            set: function (view) {
                this.view = view;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiCalendarComponent.prototype, "value", {
            get: function () {
                return this.day;
            },
            set: function (value) {
                this.day = value;
                if (this.showAdjacent && value instanceof i6.TuiDay) {
                    this.month = value;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiCalendarComponent.prototype, "isInYearView", {
            get: function () {
                return this.view === 'year';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiCalendarComponent.prototype, "computedMin", {
            get: function () {
                var _a;
                return (_a = this.min) !== null && _a !== void 0 ? _a : i6.TUI_FIRST_DAY;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiCalendarComponent.prototype, "computedMax", {
            get: function () {
                var _a;
                return (_a = this.max) !== null && _a !== void 0 ? _a : i6.TUI_LAST_DAY;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiCalendarComponent.prototype, "computedMinViewedMonth", {
            get: function () {
                var _a;
                var min = this.computedMin;
                var minViewed = (_a = this.minViewedMonth) !== null && _a !== void 0 ? _a : i6.TUI_FIRST_DAY;
                return minViewed.monthSameOrAfter(min) ? minViewed : min;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiCalendarComponent.prototype, "computedMaxViewedMonth", {
            get: function () {
                var _a;
                var max = this.computedMax;
                var maxViewed = (_a = this.maxViewedMonth) !== null && _a !== void 0 ? _a : i6.TUI_LAST_DAY;
                return maxViewed.monthSameOrBefore(max) ? maxViewed : max;
            },
            enumerable: false,
            configurable: true
        });
        TuiCalendarComponent.prototype.onPaginationYearClick = function () {
            this.view = 'year';
        };
        TuiCalendarComponent.prototype.onPickerYearClick = function (_b) {
            var year = _b.year;
            this.view = 'month';
            this.updateViewedMonth(new i6.TuiMonth(year, this.month.month));
        };
        TuiCalendarComponent.prototype.onPaginationValueChange = function (month) {
            this.updateViewedMonth(month);
        };
        TuiCalendarComponent.prototype.onDayClick = function (day) {
            this.dayClick.emit(day);
        };
        TuiCalendarComponent.prototype.onHoveredItemChange = function (day) {
            this.updateHoveredDay(day);
        };
        TuiCalendarComponent.prototype.updateViewedMonth = function (month) {
            if (this.month.monthSame(month)) {
                return;
            }
            this.month = month;
            this.monthChange.emit(month);
        };
        TuiCalendarComponent.prototype.updateHoveredDay = function (day) {
            if (i6.tuiNullableSame(this.hoveredItem, day, function (a, b) { return a.daySame(b); })) {
                return;
            }
            this.hoveredItem = day;
            this.hoveredItemChange.emit(day);
        };
        return TuiCalendarComponent;
    }());
    TuiCalendarComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCalendarComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiCalendarComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiCalendarComponent, selector: "tui-calendar", inputs: { initialView: "initialView", month: "month", disabledItemHandler: "disabledItemHandler", min: "min", max: "max", minViewedMonth: "minViewedMonth", maxViewedMonth: "maxViewedMonth", hoveredItem: "hoveredItem", showAdjacent: "showAdjacent", markerHandler: "markerHandler", value: "value" }, outputs: { dayClick: "dayClick", monthChange: "monthChange", hoveredItemChange: "hoveredItemChange" }, ngImport: i0__namespace, template: "<tui-scrollbar\n    *ngIf=\"isInYearView; else calendar\"\n    automation-id=\"tui-calendar__scrollbar\"\n    class=\"t-scrollbar\"\n>\n    <tui-primitive-year-picker\n        automation-id=\"tui-calendar__year\"\n        [initialItem]=\"month\"\n        [max]=\"computedMax\"\n        [min]=\"computedMin\"\n        [value]=\"value\"\n        (yearClick)=\"onPickerYearClick($event)\"\n    ></tui-primitive-year-picker>\n</tui-scrollbar>\n<ng-template #calendar>\n    <tui-primitive-year-month-pagination\n        automation-id=\"tui-calendar__pagination\"\n        class=\"t-pagination\"\n        [max]=\"computedMaxViewedMonth\"\n        [min]=\"computedMinViewedMonth\"\n        [value]=\"month\"\n        (valueChange)=\"onPaginationValueChange($event)\"\n        (yearClick)=\"onPaginationYearClick()\"\n    ></tui-primitive-year-month-pagination>\n    <tui-primitive-calendar\n        automation-id=\"tui-calendar__calendar\"\n        [disabledItemHandler]=\"disabledItemHandler | tuiMapper: disabledItemHandlerMapper : computedMin : computedMax\"\n        [hoveredItem]=\"hoveredItem\"\n        [markerHandler]=\"markerHandler\"\n        [month]=\"month\"\n        [showAdjacent]=\"showAdjacent\"\n        [value]=\"value\"\n        (dayClick)=\"onDayClick($event)\"\n        (hoveredItemChange)=\"onHoveredItemChange($event)\"\n    ></tui-primitive-calendar>\n</ng-template>\n", styles: [":host{display:block;height:18.25rem;width:15.75rem;padding:1rem 1.125rem;box-sizing:content-box}.t-scrollbar{height:18.25rem;width:16.875rem}.t-pagination{margin-bottom:1rem}\n"], components: [{ type: i1__namespace.TuiScrollbarComponent, selector: "tui-scrollbar", inputs: ["hidden"] }, { type: i2__namespace.TuiPrimitiveYearPickerComponent, selector: "tui-primitive-year-picker", inputs: ["value", "initialItem", "min", "max", "disabledItemHandler"], outputs: ["yearClick"] }, { type: i3__namespace.TuiPrimitiveYearMonthPaginationComponent, selector: "tui-primitive-year-month-pagination", inputs: ["value", "min", "max"], outputs: ["valueChange", "yearClick"] }, { type: i4__namespace.TuiPrimitiveCalendarComponent, selector: "tui-primitive-calendar", inputs: ["month", "disabledItemHandler", "markerHandler", "value", "hoveredItem", "showAdjacent"], outputs: ["hoveredItemChange", "dayClick"] }], directives: [{ type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "tuiMapper": i6__namespace.TuiMapperPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCalendarComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-calendar',
                        templateUrl: './calendar.template.html',
                        styleUrls: ['./calendar.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], propDecorators: { initialView: [{
                    type: i0.Input
                }], month: [{
                    type: i0.Input
                }], disabledItemHandler: [{
                    type: i0.Input
                }], min: [{
                    type: i0.Input
                }], max: [{
                    type: i0.Input
                }], minViewedMonth: [{
                    type: i0.Input
                }], maxViewedMonth: [{
                    type: i0.Input
                }], hoveredItem: [{
                    type: i0.Input
                }], showAdjacent: [{
                    type: i0.Input
                }], markerHandler: [{
                    type: i0.Input
                }], value: [{
                    type: i0.Input
                }], dayClick: [{
                    type: i0.Output
                }], monthChange: [{
                    type: i0.Output
                }], hoveredItemChange: [{
                    type: i0.Output
                }] } });

    var TuiCalendarModule = /** @class */ (function () {
        function TuiCalendarModule() {
        }
        return TuiCalendarModule;
    }());
    TuiCalendarModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCalendarModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiCalendarModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCalendarModule, declarations: [TuiCalendarComponent], imports: [i5.CommonModule,
            i3.TuiPrimitiveYearMonthPaginationModule,
            i4.TuiPrimitiveCalendarModule,
            i2.TuiPrimitiveYearPickerModule,
            i1.TuiScrollbarModule,
            i6.TuiMapperPipeModule], exports: [TuiCalendarComponent] });
    TuiCalendarModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCalendarModule, imports: [[
                i5.CommonModule,
                i3.TuiPrimitiveYearMonthPaginationModule,
                i4.TuiPrimitiveCalendarModule,
                i2.TuiPrimitiveYearPickerModule,
                i1.TuiScrollbarModule,
                i6.TuiMapperPipeModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiCalendarModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i5.CommonModule,
                            i3.TuiPrimitiveYearMonthPaginationModule,
                            i4.TuiPrimitiveCalendarModule,
                            i2.TuiPrimitiveYearPickerModule,
                            i1.TuiScrollbarModule,
                            i6.TuiMapperPipeModule,
                        ],
                        declarations: [TuiCalendarComponent],
                        exports: [TuiCalendarComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiCalendarComponent = TuiCalendarComponent;
    exports.TuiCalendarModule = TuiCalendarModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-core-components-calendar.umd.js.map

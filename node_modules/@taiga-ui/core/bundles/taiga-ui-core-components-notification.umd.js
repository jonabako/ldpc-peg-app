(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core/tokens'), require('@taiga-ui/core/components/svg'), require('@taiga-ui/core/components/button'), require('@angular/common'), require('@tinkoff/ng-polymorpheus'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/components/notification', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core/tokens', '@taiga-ui/core/components/svg', '@taiga-ui/core/components/button', '@angular/common', '@tinkoff/ng-polymorpheus', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].core = global["taiga-ui"].core || {}, global["taiga-ui"].core.components = global["taiga-ui"].core.components || {}, global["taiga-ui"].core.components.notification = {}), global.ng.core, global.cdk, global["taiga-ui"].core.tokens, global["taiga-ui"].core.components.svg, global["taiga-ui"].core.components.button, global.ng.common, global.i4, global.rxjs));
})(this, (function (exports, i0, cdk, tokens, i1, i2, i3, i4, i5) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);

    var TuiNotificationComponent = /** @class */ (function () {
        function TuiNotificationComponent(closeWord$, icons, options) {
            this.closeWord$ = closeWord$;
            this.icons = icons;
            this.options = options;
            /**
             * @deprecated Use {@link TuiNotificationComponent.icon} input or TUI_NOTIFICATION_OPTIONS instead
             */
            this.hasIcon = this.options.hasIcon;
            this.icon = this.options.icon;
            this.status = this.options.status;
            this.size = this.options.size;
            this.hideClose = false;
            this.close = new i0.EventEmitter();
        }
        Object.defineProperty(TuiNotificationComponent.prototype, "hasClose", {
            get: function () {
                return !this.hideClose && cdk.tuiIsObserved(this.close);
            },
            enumerable: false,
            configurable: true
        });
        return TuiNotificationComponent;
    }());
    TuiNotificationComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNotificationComponent, deps: [{ token: tokens.TUI_CLOSE_WORD }, { token: tokens.TUI_COMMON_ICONS }, { token: tokens.TUI_NOTIFICATION_OPTIONS }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiNotificationComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiNotificationComponent, selector: "tui-notification,a[tuiNotification],button[tuiNotification]", inputs: { hasIcon: "hasIcon", icon: "icon", status: "status", size: "size", hideClose: "hideClose" }, outputs: { close: "close" }, host: { properties: { "attr.data-status": "this.status", "attr.data-size": "this.size" } }, ngImport: i0__namespace, template: "<ng-container *ngIf=\"icon && hasIcon\">\n    <tui-svg\n        *polymorpheusOutlet=\"icon as iconName; context: {$implicit: status}\"\n        automation-id=\"tui-notification__icon\"\n        class=\"t-icon\"\n        [src]=\"iconName\"\n    ></tui-svg>\n</ng-container>\n<div class=\"t-content\">\n    <ng-content></ng-content>\n</div>\n<button\n    *ngIf=\"hasClose\"\n    appearance=\"icon\"\n    automation-id=\"tui-notification__close\"\n    size=\"xs\"\n    tuiIconButton\n    type=\"button\"\n    class=\"t-close\"\n    [icon]=\"icons.close\"\n    [title]=\"closeWord$ | async\"\n    (click)=\"close.emit()\"\n></button>\n<tui-svg\n    automation-id=\"tui-notification__more\"\n    class=\"t-more\"\n    [src]=\"icons.more\"\n></tui-svg>\n", styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:flex;padding:.75rem 1rem;border-radius:var(--tui-radius-m);background:#fff;background:var(--tui-base-01);box-sizing:border-box;overflow:hidden;text-align:left}:host .t-more{display:none}:hostbutton,:hosta{border:none;cursor:pointer}:hostbutton .t-more,:hosta .t-more{display:inline-flex;color:var(--tui-text-01);opacity:.5}:host[data-size=s]{padding:.375rem .625rem}:host[data-size=s] .t-icon{width:1rem;height:1.25rem;margin:0 .375rem 0 -.125rem}:host[data-size=s] .t-close{margin:-.125rem -.375rem -.125rem .75rem}:host[data-size=s] .t-more{margin:-.125rem -.375rem -.125rem 0}:host[data-size=m]{padding:.75rem}:host[data-size=m] .t-icon{width:1.25rem;height:1.25rem;margin-right:.5rem}:host[data-size=m] .t-close{margin:-.125rem -.125rem -.125rem 1rem}:host[data-size=m] .t-more{margin:-.125rem -.375rem -.125rem 0}:host[data-size=l]{padding:1rem;font:var(--tui-font-text-m);border-radius:var(--tui-radius-l)}:host[data-size=l] .t-icon{width:1.5rem;height:1.5rem;margin-right:.5rem}:host[data-size=l] .t-more{margin-right:-.5rem}:host[data-status=info]{color:var(--tui-info-fill);background:linear-gradient(var(--tui-info-bg),var(--tui-info-bg)),var(--tui-base-01)}:host[data-status=success]{color:var(--tui-success-fill);background:linear-gradient(var(--tui-success-bg),var(--tui-success-bg)),var(--tui-base-01)}:host[data-status=error]{color:var(--tui-error-fill);background:linear-gradient(var(--tui-error-bg),var(--tui-error-bg)),var(--tui-base-01)}:host[data-status=warning]{color:var(--tui-warning-fill);background:linear-gradient(var(--tui-warning-bg),var(--tui-warning-bg)),var(--tui-base-01)}:host[data-status=neutral]{color:var(--tui-neutral-fill);background:linear-gradient(var(--tui-neutral-bg),var(--tui-neutral-bg)),var(--tui-base-01)}.t-content{flex:1;word-break:break-word;color:var(--tui-text-01);text-align:inherit;align-self:center}\n"], components: [{ type: i1__namespace.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: i2__namespace.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i3__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i3__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNotificationComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-notification,a[tuiNotification],button[tuiNotification]',
                        templateUrl: './notification.template.html',
                        styleUrls: ['./notification.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: i5__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_CLOSE_WORD]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_COMMON_ICONS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_NOTIFICATION_OPTIONS]
                        }] }];
        }, propDecorators: { hasIcon: [{
                    type: i0.Input
                }], icon: [{
                    type: i0.Input
                }], status: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['attr.data-status']
                }], size: [{
                    type: i0.Input
                }, {
                    type: i0.HostBinding,
                    args: ['attr.data-size']
                }], hideClose: [{
                    type: i0.Input
                }], close: [{
                    type: i0.Output
                }] } });

    var TuiNotificationModule = /** @class */ (function () {
        function TuiNotificationModule() {
        }
        return TuiNotificationModule;
    }());
    TuiNotificationModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNotificationModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiNotificationModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNotificationModule, declarations: [TuiNotificationComponent], imports: [i3.CommonModule, i1.TuiSvgModule, i2.TuiButtonModule, i4.PolymorpheusModule], exports: [TuiNotificationComponent] });
    TuiNotificationModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNotificationModule, imports: [[i3.CommonModule, i1.TuiSvgModule, i2.TuiButtonModule, i4.PolymorpheusModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiNotificationModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i3.CommonModule, i1.TuiSvgModule, i2.TuiButtonModule, i4.PolymorpheusModule],
                        declarations: [TuiNotificationComponent],
                        exports: [TuiNotificationComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiNotificationComponent = TuiNotificationComponent;
    exports.TuiNotificationModule = TuiNotificationModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-core-components-notification.umd.js.map

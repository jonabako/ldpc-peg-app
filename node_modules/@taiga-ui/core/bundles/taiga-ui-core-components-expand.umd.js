(function (global, factory) {
        typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core/constants'), require('rxjs'), require('rxjs/operators'), require('@taiga-ui/core/components/loader'), require('@angular/common')) :
        typeof define === 'function' && define.amd ? define('@taiga-ui/core/components/expand', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core/constants', 'rxjs', 'rxjs/operators', '@taiga-ui/core/components/loader', '@angular/common'], factory) :
        (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].core = global["taiga-ui"].core || {}, global["taiga-ui"].core.components = global["taiga-ui"].core.components || {}, global["taiga-ui"].core.components.expand = {}), global.ng.core, global.cdk, global["taiga-ui"].core.constants, global.rxjs, global.rxjs.operators, global["taiga-ui"].core.components.loader, global.ng.common));
})(this, (function (exports, i0, cdk, constants, i3, operators, i1, i2) { 'use strict';

        function _interopNamespace(e) {
                if (e && e.__esModule) return e;
                var n = Object.create(null);
                if (e) {
                        Object.keys(e).forEach(function (k) {
                                if (k !== 'default') {
                                        var d = Object.getOwnPropertyDescriptor(e, k);
                                        Object.defineProperty(n, k, d.get ? d : {
                                                enumerable: true,
                                                get: function () { return e[k]; }
                                        });
                                }
                        });
                }
                n["default"] = e;
                return Object.freeze(n);
        }

        var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
        var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
        var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
        var i2__namespace = /*#__PURE__*/_interopNamespace(i2);

        var TuiExpandContentDirective = /** @class */ (function () {
            function TuiExpandContentDirective() {
            }
            return TuiExpandContentDirective;
        }());
        TuiExpandContentDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiExpandContentDirective, deps: [], target: i0__namespace.ɵɵFactoryTarget.Directive });
        TuiExpandContentDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiExpandContentDirective, selector: "[tuiExpandContent]", ngImport: i0__namespace });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiExpandContentDirective, decorators: [{
                    type: i0.Directive,
                    args: [{
                            selector: '[tuiExpandContent]',
                        }]
                }] });

        var State = {
            Idle: 0,
            Loading: 1,
            Prepared: 2,
            Animated: 3,
        };
        var LOADER_HEIGHT = 48;
        var TuiExpandComponent = /** @class */ (function () {
            function TuiExpandComponent(cdr, destroy$) {
                this.cdr = cdr;
                this.destroy$ = destroy$;
                this.state = State.Idle;
                this.async = false;
                this.content = null;
                this.expanded = null;
            }
            Object.defineProperty(TuiExpandComponent.prototype, "expandedSetter", {
                set: function (expanded) {
                    if (this.expanded === null) {
                        this.expanded = expanded;
                        return;
                    }
                    if (this.state !== State.Idle) {
                        this.expanded = expanded;
                        this.state = State.Animated;
                        return;
                    }
                    this.expanded = expanded;
                    this.retrigger(this.async && expanded ? State.Loading : State.Animated);
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(TuiExpandComponent.prototype, "overflow", {
                get: function () {
                    return this.state !== State.Idle;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(TuiExpandComponent.prototype, "loading", {
                get: function () {
                    return !!this.expanded && this.async && this.state === State.Loading;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(TuiExpandComponent.prototype, "height", {
                get: function () {
                    var _a = this, expanded = _a.expanded, state = _a.state, contentWrapper = _a.contentWrapper;
                    if ((expanded && state === State.Prepared) ||
                        (!expanded && state === State.Animated)) {
                        return 0;
                    }
                    if (contentWrapper &&
                        ((!expanded && state === State.Prepared) ||
                            (expanded && state === State.Animated))) {
                        return contentWrapper.nativeElement.offsetHeight;
                    }
                    if (contentWrapper && expanded && state === State.Loading) {
                        return Math.max(contentWrapper.nativeElement.offsetHeight, LOADER_HEIGHT);
                    }
                    return null;
                },
                enumerable: false,
                configurable: true
            });
            Object.defineProperty(TuiExpandComponent.prototype, "contentVisible", {
                get: function () {
                    return this.expanded || this.state !== State.Idle;
                },
                enumerable: false,
                configurable: true
            });
            TuiExpandComponent.prototype.onTransitionEnd = function (_a) {
                var propertyName = _a.propertyName;
                if (propertyName === 'opacity' && this.state === State.Animated) {
                    this.state = State.Idle;
                }
            };
            TuiExpandComponent.prototype.onExpandLoaded = function (event) {
                event.stopPropagation();
                if (this.state === State.Loading) {
                    this.retrigger(State.Animated);
                }
            };
            TuiExpandComponent.prototype.retrigger = function (state) {
                var _this = this;
                this.state = State.Prepared;
                i3.timer(0)
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function () {
                    // We need delay to re-trigger CSS height transition from the correct number
                    if (_this.state !== State.Prepared) {
                        return;
                    }
                    _this.state = state;
                    _this.cdr.markForCheck();
                });
            };
            return TuiExpandComponent;
        }());
        TuiExpandComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiExpandComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: cdk.TuiDestroyService, self: true }], target: i0__namespace.ɵɵFactoryTarget.Component });
        TuiExpandComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiExpandComponent, selector: "tui-expand", inputs: { async: "async", expandedSetter: ["expanded", "expandedSetter"] }, host: { listeners: { "transitionend.self": "onTransitionEnd($event)", "tui-expand-loaded": "onExpandLoaded($event)" }, properties: { "class._expanded": "this.expanded", "attr.aria-expanded": "this.expanded", "class._overflow": "this.overflow", "class._loading": "this.loading", "style.height.px": "this.height" } }, providers: [cdk.TuiDestroyService], queries: [{ propertyName: "content", first: true, predicate: TuiExpandContentDirective, descendants: true, read: i0.TemplateRef }], viewQueries: [{ propertyName: "contentWrapper", first: true, predicate: ["wrapper"], descendants: true }], ngImport: i0__namespace, template: "<div\n    #wrapper\n    class=\"t-wrapper\"\n    @tuiParentAnimation\n    [@.disabled]=\"overflow\"\n>\n    <ng-container *ngIf=\"contentVisible\">\n        <ng-content></ng-content>\n        <tui-loader\n            *ngIf=\"async; else content\"\n            size=\"l\"\n            [overlay]=\"true\"\n            [showLoader]=\"loading\"\n        >\n            <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n        </tui-loader>\n    </ng-container>\n</div>\n", styles: [":host{transition-property:opacity,height,visibility;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;display:block;opacity:0;transition-delay:1ms}:host._overflow{overflow:hidden}:host._expanded{opacity:1;transform:translate(0)}:host._loading{opacity:.99}.t-wrapper:before,.t-wrapper:after{content:\"\";display:table}\n"], components: [{ type: i1__namespace.TuiLoaderComponent, selector: "tui-loader", inputs: ["size", "inheritColor", "overlay", "textContent", "showLoader"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], animations: [cdk.TUI_PARENT_ANIMATION], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiExpandComponent, decorators: [{
                    type: i0.Component,
                    args: [{
                            selector: 'tui-expand',
                            templateUrl: './expand.template.html',
                            styleUrls: ['./expand.style.less'],
                            changeDetection: i0.ChangeDetectionStrategy.OnPush,
                            providers: [cdk.TuiDestroyService],
                            animations: [cdk.TUI_PARENT_ANIMATION],
                        }]
                }], ctorParameters: function () {
                return [{ type: i0__namespace.ChangeDetectorRef, decorators: [{
                                type: i0.Inject,
                                args: [i0.ChangeDetectorRef]
                            }] }, { type: i3__namespace.Observable, decorators: [{
                                type: i0.Self
                            }, {
                                type: i0.Inject,
                                args: [cdk.TuiDestroyService]
                            }] }];
            }, propDecorators: { contentWrapper: [{
                        type: i0.ViewChild,
                        args: ['wrapper']
                    }], async: [{
                        type: i0.Input
                    }], expandedSetter: [{
                        type: i0.Input,
                        args: ['expanded']
                    }], content: [{
                        type: i0.ContentChild,
                        args: [TuiExpandContentDirective, { read: i0.TemplateRef }]
                    }], expanded: [{
                        type: i0.HostBinding,
                        args: ['class._expanded']
                    }, {
                        type: i0.HostBinding,
                        args: ['attr.aria-expanded']
                    }], overflow: [{
                        type: i0.HostBinding,
                        args: ['class._overflow']
                    }], loading: [{
                        type: i0.HostBinding,
                        args: ['class._loading']
                    }], height: [{
                        type: i0.HostBinding,
                        args: ['style.height.px']
                    }], onTransitionEnd: [{
                        type: i0.HostListener,
                        args: ['transitionend.self', ['$event']]
                    }], onExpandLoaded: [{
                        type: i0.HostListener,
                        args: [constants.TUI_EXPAND_LOADED, ['$event']]
                    }] } });

        var TuiExpandModule = /** @class */ (function () {
            function TuiExpandModule() {
            }
            return TuiExpandModule;
        }());
        TuiExpandModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiExpandModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
        TuiExpandModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiExpandModule, declarations: [TuiExpandComponent, TuiExpandContentDirective], imports: [i2.CommonModule, i1.TuiLoaderModule], exports: [TuiExpandComponent, TuiExpandContentDirective] });
        TuiExpandModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiExpandModule, imports: [[i2.CommonModule, i1.TuiLoaderModule]] });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiExpandModule, decorators: [{
                    type: i0.NgModule,
                    args: [{
                            imports: [i2.CommonModule, i1.TuiLoaderModule],
                            declarations: [TuiExpandComponent, TuiExpandContentDirective],
                            exports: [TuiExpandComponent, TuiExpandContentDirective],
                        }]
                }] });

        /**
         * Generated bundle index. Do not edit.
         */

        exports.TuiExpandComponent = TuiExpandComponent;
        exports.TuiExpandContentDirective = TuiExpandContentDirective;
        exports.TuiExpandModule = TuiExpandModule;

        Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-core-components-expand.umd.js.map

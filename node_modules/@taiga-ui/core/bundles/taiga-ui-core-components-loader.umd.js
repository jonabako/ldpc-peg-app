(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core/utils/miscellaneous'), require('@tinkoff/ng-polymorpheus')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/components/loader', ['exports', '@angular/common', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core/utils/miscellaneous', '@tinkoff/ng-polymorpheus'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].core = global["taiga-ui"].core || {}, global["taiga-ui"].core.components = global["taiga-ui"].core.components || {}, global["taiga-ui"].core.components.loader = {}), global.ng.common, global.ng.core, global.cdk, global["taiga-ui"].core.utils.miscellaneous, global.i2));
})(this, (function (exports, i1, i0, cdk, miscellaneous, i2) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);

    /** Default values for the loader options. */
    var TUI_LOADER_DEFAULT_OPTIONS = {
        size: 'm',
        inheritColor: false,
        overlay: false,
    };
    /**
     * Default parameters for loader component
     */
    var TUI_LOADER_OPTIONS = cdk.tuiCreateToken(TUI_LOADER_DEFAULT_OPTIONS);
    function tuiLoaderOptionsProvider(options) {
        return cdk.tuiProvideOptions(TUI_LOADER_OPTIONS, options, TUI_LOADER_DEFAULT_OPTIONS);
    }

    var TuiLoaderComponent = /** @class */ (function () {
        function TuiLoaderComponent(doc, el, isIos, options) {
            this.doc = doc;
            this.el = el;
            this.isIos = isIos;
            this.options = options;
            this.size = this.options.size;
            this.inheritColor = this.options.inheritColor;
            this.overlay = this.options.overlay;
            this.loading = true;
            this.isApple = cdk.tuiIsSafari(this.el.nativeElement) || this.isIos;
        }
        Object.defineProperty(TuiLoaderComponent.prototype, "showLoader", {
            set: function (value) {
                // @bad TODO: https://github.com/angular/angular/issues/32083 think of a better way
                if (value && this.focused) {
                    cdk.tuiBlurNativeFocused(this.doc);
                }
                this.loading = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiLoaderComponent.prototype, "hasOverlay", {
            get: function () {
                return this.overlay && this.loading;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiLoaderComponent.prototype, "hasText", {
            get: function () {
                return !!this.textContent;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiLoaderComponent.prototype, "isHorizontal", {
            get: function () {
                return !miscellaneous.tuiSizeBigger(this.size);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(TuiLoaderComponent.prototype, "focused", {
            get: function () {
                return cdk.tuiIsNativeFocusedIn(this.el.nativeElement);
            },
            enumerable: false,
            configurable: true
        });
        return TuiLoaderComponent;
    }());
    TuiLoaderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLoaderComponent, deps: [{ token: i1.DOCUMENT }, { token: i0.ElementRef }, { token: cdk.TUI_IS_IOS }, { token: TUI_LOADER_OPTIONS }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiLoaderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiLoaderComponent, selector: "tui-loader", inputs: { size: "size", inheritColor: "inheritColor", overlay: "overlay", textContent: "textContent", showLoader: "showLoader" }, host: { properties: { "class._loading": "this.loading" } }, ngImport: i0__namespace, template: "<fieldset\n    class=\"t-content\"\n    [attr.inert]=\"loading || null\"\n    [class.t-content_has-overlay]=\"hasOverlay\"\n    [class.t-content_loading]=\"loading\"\n    [disabled]=\"loading && !isApple\"\n>\n    <ng-content></ng-content>\n</fieldset>\n\n<div\n    *ngIf=\"loading\"\n    class=\"t-loader\"\n    [attr.data-size]=\"size\"\n    [class.t-loader_horizontal]=\"isHorizontal\"\n    [class.t-loader_inherit-color]=\"inheritColor\"\n>\n    <svg\n        automation-id=\"tui-loader__loader\"\n        focusable=\"false\"\n        viewBox=\"0 0 100 100\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"t-icon\"\n    >\n        <circle\n            cx=\"50\"\n            cy=\"50\"\n            r=\"50\"\n            stroke-dasharray=\"314\"\n            class=\"t-circle\"\n        ></circle>\n    </svg>\n\n    <div\n        *ngIf=\"hasText\"\n        automation-id=\"tui-loader__text\"\n        class=\"t-text\"\n        [class.t-text_horizontal]=\"isHorizontal\"\n    >\n        <ng-container *polymorpheusOutlet=\"textContent as text\">\n            {{ text }}\n        </ng-container>\n    </div>\n</div>\n", styles: ["@keyframes tuiLoaderDashOffset{0%{stroke-dashoffset:-66}50%{stroke-dashoffset:-314}to{stroke-dashoffset:-66}}@keyframes tuiLoaderRotate{0%{transform:rotate(0)}50%{transform:rotate(1turn)}to{transform:rotate(3turn)}}:host{position:relative;display:flex;min-width:1.5rem}:host._loading{overflow:hidden}.t-content{z-index:0;min-width:100%;height:100%;padding:0;margin:0;border:none}.t-content_has-overlay{opacity:.3}.t-content_loading{pointer-events:none}.t-loader{position:relative;left:-100%;display:flex;flex-direction:column;align-items:center;justify-content:center;min-width:100%;flex-shrink:0;align-self:center;color:var(--tui-text-01);stroke:var(--tui-primary);animation:tuiFadeIn var(--tui-duration)}.t-loader.t-loader_horizontal{flex-direction:row}.t-loader.t-loader_inherit-color{color:inherit;stroke:currentColor}.t-loader[data-size=xs]{font-size:.75rem;stroke-width:38}.t-loader[data-size=s]{font-size:1rem;stroke-width:25}.t-loader[data-size=m]{font-size:1.5rem;stroke-width:17}.t-loader[data-size=l]{font-size:2.5rem;stroke-width:15}.t-loader[data-size=xl]{font-size:3.5rem;stroke-width:14}.t-loader[data-size=xxl]{font-size:5rem;stroke-width:10}.t-text{font:var(--tui-font-text-s);color:var(--tui-text-01);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-top:1rem;color:inherit;max-width:100%;text-align:center;stroke-width:0}.t-text_horizontal{margin:0 0 0 1rem}.t-icon{display:block;min-width:1em;max-width:1em;min-height:1em;max-height:1em;margin:.25rem -.5em;border-radius:100%;overflow:hidden;transform:scaleY(-1);animation:tuiLoaderRotate 3s linear infinite}@supports (-webkit-hyphens: none){.t-icon{overflow:visible}}.t-circle{fill:none;stroke:inherit;stroke-width:inherit;animation:tuiLoaderDashOffset 3s linear infinite}\n"], directives: [{ type: i1__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLoaderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-loader',
                        templateUrl: './loader.template.html',
                        styleUrls: ['./loader.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () {
            return [{ type: Document, decorators: [{
                            type: i0.Inject,
                            args: [i1.DOCUMENT]
                        }] }, { type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [cdk.TUI_IS_IOS]
                        }] }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [TUI_LOADER_OPTIONS]
                        }] }];
        }, propDecorators: { size: [{
                    type: i0.Input
                }], inheritColor: [{
                    type: i0.Input
                }], overlay: [{
                    type: i0.Input
                }], textContent: [{
                    type: i0.Input
                }], showLoader: [{
                    type: i0.Input
                }], loading: [{
                    type: i0.HostBinding,
                    args: ['class._loading']
                }] } });

    var TuiLoaderModule = /** @class */ (function () {
        function TuiLoaderModule() {
        }
        return TuiLoaderModule;
    }());
    TuiLoaderModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLoaderModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiLoaderModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLoaderModule, declarations: [TuiLoaderComponent], imports: [i1.CommonModule, i2.PolymorpheusModule], exports: [TuiLoaderComponent] });
    TuiLoaderModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLoaderModule, imports: [[i1.CommonModule, i2.PolymorpheusModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiLoaderModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i1.CommonModule, i2.PolymorpheusModule],
                        declarations: [TuiLoaderComponent],
                        exports: [TuiLoaderComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TUI_LOADER_DEFAULT_OPTIONS = TUI_LOADER_DEFAULT_OPTIONS;
    exports.TUI_LOADER_OPTIONS = TUI_LOADER_OPTIONS;
    exports.TuiLoaderComponent = TuiLoaderComponent;
    exports.TuiLoaderModule = TuiLoaderModule;
    exports.tuiLoaderOptionsProvider = tuiLoaderOptionsProvider;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-core-components-loader.umd.js.map

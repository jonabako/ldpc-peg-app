{"version":3,"file":"taiga-ui-core-utils-miscellaneous.umd.js","sources":["../../../projects/core/utils/miscellaneous/get-border.ts","../../../projects/core/utils/miscellaneous/icons-path-factory.ts","../../../projects/core/utils/miscellaneous/is-editing-key.ts","../../../projects/core/utils/miscellaneous/is-obscured.ts","../../../projects/core/utils/miscellaneous/is-presumed-html-string.ts","../../../projects/core/utils/miscellaneous/override-options.ts","../../../projects/core/utils/miscellaneous/size-bigger.ts","../../../projects/core/utils/miscellaneous/taiga-ui-core-utils-miscellaneous.ts"],"sourcesContent":["import {TuiSizeL, TuiSizeS} from '@taiga-ui/core/types';\n\nconst ITEM_SIZE = 1.5;\nconst CONTENT_SIZE = 2.5;\n\nexport function tuiGetBorder(\n    hasIcon: boolean,\n    hasCleaner: boolean = false,\n    hasTooltip: boolean = false,\n    hasContent: boolean = false,\n    size: TuiSizeL | TuiSizeS = 'm',\n): number {\n    const offset = size === 's' ? 0 : 0.25;\n    let border = 0;\n\n    if (hasIcon) {\n        border += ITEM_SIZE + offset;\n    }\n\n    if (hasCleaner) {\n        border += ITEM_SIZE + offset;\n    }\n\n    if (hasTooltip) {\n        border += ITEM_SIZE + offset;\n    }\n\n    if (hasContent) {\n        border += CONTENT_SIZE + offset;\n    }\n\n    return border;\n}\n","import {TuiStringHandler} from '@taiga-ui/cdk';\nimport {DEFAULT_ICONS_PATH, TUI_CACHE_BUSTING_PAYLOAD} from '@taiga-ui/core/constants';\n\nexport function tuiIconsPathFactory(staticPath: string): TuiStringHandler<string> {\n    const base = staticPath.endsWith('/') ? staticPath : `${staticPath}/`;\n\n    return name => {\n        if (name.startsWith('tuiIcon')) {\n            return `${base}${name}.svg${TUI_CACHE_BUSTING_PAYLOAD}#${name}`;\n        }\n\n        return DEFAULT_ICONS_PATH(name);\n    };\n}\n","import {tuiEditingKeys} from '@taiga-ui/core/constants';\n\n/**\n * Check if pressed key is interactive in terms of input field\n */\nexport function tuiIsEditingKey(key: string): boolean {\n    return key.length === 1 || tuiEditingKeys.includes(key);\n}\n","import {tuiGetElementObscures} from '@taiga-ui/cdk';\n\n/**\n * @internal\n */\nexport function tuiIsObscured(\n    el: HTMLElement,\n    exceptSelector = 'tui-hints-host',\n): boolean {\n    return !!tuiGetElementObscures(el)?.some(el => !el.closest(exceptSelector));\n}\n","export function tuiIsPresumedHTMLString(candidate: string): boolean {\n    const trimmed = candidate.trim();\n\n    return trimmed.startsWith('<') && trimmed.endsWith('>');\n}\n","export function tuiOverrideOptions<T>(\n    override: Partial<T>,\n    fallback: T,\n): (directive: T | null, options: T | null) => T {\n    return (directive, options) => {\n        const result = directive || {...(options || fallback)};\n\n        Object.keys(override).forEach(key => {\n            // Update directive props with new defaults before inputs are processed\n            (result as any)[key] = override[key as keyof T];\n        });\n\n        return result;\n    };\n}\n","import {TuiSizeXXL, TuiSizeXXS} from '@taiga-ui/core/types';\n\nconst SIZES: Record<TuiSizeXXL | TuiSizeXXS, number> = {\n    xxs: 0,\n    xs: 1,\n    s: 2,\n    m: 3,\n    l: 4,\n    xl: 5,\n    xxl: 6,\n};\n\n/**\n * Compares size constants to determine if first size is bigger than the second\n *\n * @param size size that we need to compare\n * @param biggerThanSize size to compare with, 's' by default\n */\nexport function tuiSizeBigger(\n    size: TuiSizeXXL | TuiSizeXXS,\n    biggerThanSize: TuiSizeXXL | TuiSizeXXS = 's',\n): boolean {\n    return SIZES[size] > SIZES[biggerThanSize];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["TUI_CACHE_BUSTING_PAYLOAD","DEFAULT_ICONS_PATH","tuiEditingKeys","tuiGetElementObscures"],"mappings":"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"}
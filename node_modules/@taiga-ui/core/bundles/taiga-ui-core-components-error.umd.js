(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core/animations'), require('@taiga-ui/core/providers'), require('@taiga-ui/core/tokens'), require('@angular/common'), require('@tinkoff/ng-polymorpheus'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/components/error', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core/animations', '@taiga-ui/core/providers', '@taiga-ui/core/tokens', '@angular/common', '@tinkoff/ng-polymorpheus', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].core = global["taiga-ui"].core || {}, global["taiga-ui"].core.components = global["taiga-ui"].core.components || {}, global["taiga-ui"].core.components.error = {}), global.ng.core, global.cdk, global["taiga-ui"].core.animations, global["taiga-ui"].core.providers, global["taiga-ui"].core.tokens, global.ng.common, global.i2, global.rxjs));
})(this, (function (exports, i0, cdk, animations, providers, tokens, i1, i2, i3) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);

    var TuiErrorComponent = /** @class */ (function () {
        function TuiErrorComponent(animation, mode$, defaultErrorMessage$) {
            this.animation = animation;
            this.mode$ = mode$;
            this.defaultErrorMessage$ = defaultErrorMessage$;
            this.error = null;
            this.visible = true;
        }
        Object.defineProperty(TuiErrorComponent.prototype, "errorSetter", {
            set: function (error) {
                this.error = cdk.tuiIsString(error) ? new cdk.TuiValidationError(error) : error;
            },
            enumerable: false,
            configurable: true
        });
        TuiErrorComponent.prototype.onAnimation = function (visible) {
            this.visible = visible;
        };
        return TuiErrorComponent;
    }());
    TuiErrorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiErrorComponent, deps: [{ token: tokens.TUI_ANIMATION_OPTIONS }, { token: tokens.TUI_MODE }, { token: tokens.TUI_DEFAULT_ERROR_MESSAGE }], target: i0__namespace.ɵɵFactoryTarget.Component });
    TuiErrorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiErrorComponent, selector: "tui-error", inputs: { errorSetter: ["error", "errorSetter"] }, host: { listeners: { "animationcancel.self": "onAnimation(false)", "animationstart.self": "onAnimation(true)" } }, providers: [providers.MODE_PROVIDER], ngImport: i0__namespace, template: "<div\n    *ngIf=\"error && visible\"\n    automation-id=\"tui-error__text\"\n    class=\"t-message-text\"\n    [@tuiFadeIn]=\"animation\"\n    [@tuiHeightCollapse]=\"animation\"\n    [class.t-message-text_light]=\"(mode$ | async) === 'onDark'\"\n>\n    <ng-container\n        *polymorpheusOutlet=\"error.message || (defaultErrorMessage$ | async) as text; context: error.context || {}\"\n    >\n        {{ text }}\n    </ng-container>\n</div>\n", styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);display:block;color:var(--tui-negative);word-wrap:break-word;animation:tuiPresent 1s infinite}.t-message-text{margin-top:.25rem;white-space:pre-line}.t-message-text_light{color:var(--tui-negative-night)}\n"], directives: [{ type: i1__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i1__namespace.AsyncPipe }, animations: [animations.tuiHeightCollapse, animations.tuiFadeIn], changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiErrorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'tui-error',
                        templateUrl: './error.template.html',
                        styleUrls: ['./error.style.less'],
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                        providers: [providers.MODE_PROVIDER],
                        animations: [animations.tuiHeightCollapse, animations.tuiFadeIn],
                    }]
            }], ctorParameters: function () {
            return [{ type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_ANIMATION_OPTIONS]
                        }] }, { type: i3__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_MODE]
                        }] }, { type: i3__namespace.Observable, decorators: [{
                            type: i0.Inject,
                            args: [tokens.TUI_DEFAULT_ERROR_MESSAGE]
                        }] }];
        }, propDecorators: { errorSetter: [{
                    type: i0.Input,
                    args: ['error']
                }], onAnimation: [{
                    type: i0.HostListener,
                    args: ['animationcancel.self', ['false']]
                }, {
                    type: i0.HostListener,
                    args: ['animationstart.self', ['true']]
                }] } });

    var TuiErrorModule = /** @class */ (function () {
        function TuiErrorModule() {
        }
        return TuiErrorModule;
    }());
    TuiErrorModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiErrorModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiErrorModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiErrorModule, declarations: [TuiErrorComponent], imports: [i1.CommonModule, i2.PolymorpheusModule], exports: [TuiErrorComponent] });
    TuiErrorModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiErrorModule, imports: [[i1.CommonModule, i2.PolymorpheusModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiErrorModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i1.CommonModule, i2.PolymorpheusModule],
                        declarations: [TuiErrorComponent],
                        exports: [TuiErrorComponent],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiErrorComponent = TuiErrorComponent;
    exports.TuiErrorModule = TuiErrorModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-core-components-error.umd.js.map

(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@taiga-ui/cdk'), require('@taiga-ui/core/constants'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@taiga-ui/core/directives/scroll-into-view', ['exports', '@angular/core', '@taiga-ui/cdk', '@taiga-ui/core/constants', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global["taiga-ui"] = global["taiga-ui"] || {}, global["taiga-ui"].core = global["taiga-ui"].core || {}, global["taiga-ui"].core.directives = global["taiga-ui"].core.directives || {}, global["taiga-ui"].core.directives["scroll-into-view"] = {}), global.ng.core, global.cdk, global["taiga-ui"].core.constants, global.rxjs, global.rxjs.operators));
})(this, (function (exports, i0, cdk, constants, i1, operators) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    /**
     * Directive scrolls element into view inside tui-scrollbar
     */
    var TuiScrollIntoViewDirective = /** @class */ (function () {
        function TuiScrollIntoViewDirective(el, destroy$) {
            this.el = el;
            this.destroy$ = destroy$;
        }
        Object.defineProperty(TuiScrollIntoViewDirective.prototype, "tuiScrollIntoView", {
            set: function (scroll) {
                var _this = this;
                if (!scroll) {
                    return;
                }
                // Timeout is necessary in order to give element render cycle to get into its final spot
                // (for example if it is inside dropdown box which has to be positioned first)
                i1.timer(0)
                    .pipe(operators.takeUntil(this.destroy$))
                    .subscribe(function () {
                    _this.el.nativeElement.dispatchEvent(new CustomEvent(constants.TUI_SCROLL_INTO_VIEW, {
                        bubbles: true,
                        detail: _this.el.nativeElement,
                    }));
                });
            },
            enumerable: false,
            configurable: true
        });
        return TuiScrollIntoViewDirective;
    }());
    TuiScrollIntoViewDirective.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiScrollIntoViewDirective, deps: [{ token: i0.ElementRef }, { token: cdk.TuiDestroyService, self: true }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    TuiScrollIntoViewDirective.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiScrollIntoViewDirective, selector: "[tuiScrollIntoView]", inputs: { tuiScrollIntoView: "tuiScrollIntoView" }, providers: [cdk.TuiDestroyService], ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiScrollIntoViewDirective, decorators: [{
                type: i0.Directive,
                args: [{
                        selector: '[tuiScrollIntoView]',
                        providers: [cdk.TuiDestroyService],
                    }]
            }], ctorParameters: function () {
            return [{ type: i0__namespace.ElementRef, decorators: [{
                            type: i0.Inject,
                            args: [i0.ElementRef]
                        }] }, { type: i1__namespace.Observable, decorators: [{
                            type: i0.Self
                        }, {
                            type: i0.Inject,
                            args: [cdk.TuiDestroyService]
                        }] }];
        }, propDecorators: { tuiScrollIntoView: [{
                    type: i0.Input
                }] } });

    var TuiScrollIntoViewModule = /** @class */ (function () {
        function TuiScrollIntoViewModule() {
        }
        return TuiScrollIntoViewModule;
    }());
    TuiScrollIntoViewModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiScrollIntoViewModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    TuiScrollIntoViewModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiScrollIntoViewModule, declarations: [TuiScrollIntoViewDirective], exports: [TuiScrollIntoViewDirective] });
    TuiScrollIntoViewModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiScrollIntoViewModule });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0__namespace, type: TuiScrollIntoViewModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        declarations: [TuiScrollIntoViewDirective],
                        exports: [TuiScrollIntoViewDirective],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.TuiScrollIntoViewDirective = TuiScrollIntoViewDirective;
    exports.TuiScrollIntoViewModule = TuiScrollIntoViewModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=taiga-ui-core-directives-scroll-into-view.umd.js.map

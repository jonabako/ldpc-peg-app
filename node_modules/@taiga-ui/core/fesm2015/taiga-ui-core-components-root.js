import * as i4 from '@angular/common';
import { DOCUMENT, CommonModule } from '@angular/common';
import * as i0 from '@angular/core';
import { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgModule } from '@angular/core';
import * as i1 from '@taiga-ui/cdk';
import { TUI_DIALOGS, TUI_IS_MOBILE, TUI_IS_IOS, TUI_IS_ANDROID, TUI_VERSION, TuiDropdownHostModule, TuiDialogHostModule, TuiAlertHostModule, TuiScrollControlsModule } from '@taiga-ui/cdk';
import * as i5 from '@taiga-ui/core/services';
import { TuiBreakpointService } from '@taiga-ui/core/services';
import { TUI_REDUCED_MOTION, TUI_ANIMATIONS_DURATION, TUI_THEME } from '@taiga-ui/core/tokens';
import { combineLatest, of } from 'rxjs';
import { map, debounceTime } from 'rxjs/operators';
import * as i2 from '@taiga-ui/core/internal/svg-defs-host';
import { TuiSvgDefsHostModule } from '@taiga-ui/core/internal/svg-defs-host';
import * as i3 from '@taiga-ui/core/components/hints-host';
import { TuiHintsHostModule } from '@taiga-ui/core/components/hints-host';
import { EventPluginsModule } from '@tinkoff/ng-event-plugins';

class TuiRootComponent {
    constructor(reducedMotion, duration, dialogs, isMobile, breakpoint, isIOS, isAndroid, document, theme) {
        var _a;
        this.reducedMotion = reducedMotion;
        this.duration = duration;
        this.dialogs = dialogs;
        this.isMobile = isMobile;
        this.breakpoint = breakpoint;
        this.isIOS = isIOS;
        this.isAndroid = isAndroid;
        this.isMobileRes$ = this.breakpoint.pipe(map(breakpoint => breakpoint === 'mobile'));
        this.scrollbars$ = this.dialogs.length && !this.isMobile
            ? combineLatest([...this.dialogs]).pipe(map(dialogs => !dialogs.some(({ length }) => length)), debounceTime(0))
            : of(!this.isMobile);
        (_a = document.defaultView) === null || _a === void 0 ? void 0 : _a.document.body.setAttribute('data-tui-theme', theme.toLowerCase());
    }
}
TuiRootComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRootComponent, deps: [{ token: TUI_REDUCED_MOTION }, { token: TUI_ANIMATIONS_DURATION }, { token: TUI_DIALOGS }, { token: TUI_IS_MOBILE }, { token: TuiBreakpointService }, { token: TUI_IS_IOS }, { token: TUI_IS_ANDROID }, { token: DOCUMENT }, { token: TUI_THEME }], target: i0.ɵɵFactoryTarget.Component });
TuiRootComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiRootComponent, selector: "tui-root", host: { attributes: { "data-tui-version": "3.72.0" }, listeners: { "touchstart.passive.silent": "0", "$.class._mobile": "isMobileRes$" }, properties: { "style.--tui-duration.ms": "duration", "class._ios": "isIOS", "class._android": "isAndroid", "class._reduced-motion": "reducedMotion", "$.class._mobile": "isMobileRes$" } }, ngImport: i0, template: "<tui-scroll-controls\n    *ngIf=\"scrollbars$ | async\"\n    class=\"t-root-scrollbar\"\n></tui-scroll-controls>\n<tui-svg-defs-host></tui-svg-defs-host>\n<tui-dropdown-host>\n    <div class=\"t-root-content\">\n        <ng-content></ng-content>\n    </div>\n    <ng-content select=\"tuiOverContent\"></ng-content>\n    <tui-dialog-host></tui-dialog-host>\n    <ng-content select=\"tuiOverDialogs\"></ng-content>\n    <tui-alert-host></tui-alert-host>\n    <ng-content select=\"tuiOverAlerts\"></ng-content>\n</tui-dropdown-host>\n<!--TODO: 4.0 rename to tuiOverDropdowns-->\n<ng-content select=\"tuiOverPortals\"></ng-content>\n<tui-hints-host></tui-hints-host>\n<ng-content select=\"tuiOverHints\"></ng-content>\n", styles: ["@keyframes tuiPresent{to{content:\"1\"}}@keyframes tuiSkeletonVibe{to{opacity:.5}}html,.tui-zero-scrollbar{scrollbar-width:none;-ms-overflow-style:none}html::-webkit-scrollbar,.tui-zero-scrollbar::-webkit-scrollbar,html::-webkit-scrollbar-thumb,.tui-zero-scrollbar::-webkit-scrollbar-thumb{display:none}body[data-tui-theme]{font:var(--tui-font-text-s);color:var(--tui-text-01);background:var(--tui-base-01);margin:0}tui-root{position:relative;display:block;flex:1;-webkit-tap-highlight-color:transparent}tui-root>.t-root-scrollbar{position:fixed;top:0;left:0;bottom:0;right:0;display:none;margin:0}[data-tui-theme] tui-root>.t-root-scrollbar{display:block}.t-root-content{height:100%;isolation:isolate}.t-overscroll-none{overscroll-behavior:none}\n"], components: [{ type: i1.TuiScrollControlsComponent, selector: "tui-scroll-controls" }, { type: i2.TuiSvgDefsHostComponent, selector: "tui-svg-defs-host" }, { type: i1.TuiDropdownHostComponent, selector: "tui-dropdown-host" }, { type: i1.TuiDialogHostComponent, selector: "tui-dialog-host" }, { type: i1.TuiAlertHostComponent, selector: "tui-alert-host" }, { type: i3.TuiHintsHostComponent, selector: "tui-hints-host" }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i4.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRootComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-root',
                    templateUrl: './root.template.html',
                    styleUrls: ['./root.style.less'],
                    encapsulation: ViewEncapsulation.None,
                    // So that we do not force OnPush on custom dialogs
                    // eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection
                    changeDetection: ChangeDetectionStrategy.Default,
                    host: {
                        'data-tui-version': TUI_VERSION,
                        '[style.--tui-duration.ms]': 'duration',
                        '[class._ios]': 'isIOS',
                        '[class._android]': 'isAndroid',
                        '[class._reduced-motion]': 'reducedMotion',
                        // Required for the :active state to work in Safari. https://stackoverflow.com/a/33681490
                        '(touchstart.passive.silent)': '0',
                        '[$.class._mobile]': 'isMobileRes$',
                        '($.class._mobile)': 'isMobileRes$',
                    },
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_REDUCED_MOTION]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_ANIMATIONS_DURATION]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_DIALOGS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_MOBILE]
                }] }, { type: i5.TuiBreakpointService, decorators: [{
                    type: Inject,
                    args: [TuiBreakpointService]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_IOS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_ANDROID]
                }] }, { type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_THEME]
                }] }]; } });

class TuiRootModule {
}
TuiRootModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRootModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TuiRootModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRootModule, declarations: [TuiRootComponent], imports: [CommonModule,
        EventPluginsModule,
        TuiDropdownHostModule,
        TuiSvgDefsHostModule,
        TuiHintsHostModule,
        TuiDialogHostModule,
        TuiAlertHostModule,
        TuiScrollControlsModule], exports: [TuiRootComponent] });
TuiRootModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRootModule, imports: [[
            CommonModule,
            EventPluginsModule,
            TuiDropdownHostModule,
            TuiSvgDefsHostModule,
            TuiHintsHostModule,
            TuiDialogHostModule,
            TuiAlertHostModule,
            TuiScrollControlsModule,
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiRootModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        EventPluginsModule,
                        TuiDropdownHostModule,
                        TuiSvgDefsHostModule,
                        TuiHintsHostModule,
                        TuiDialogHostModule,
                        TuiAlertHostModule,
                        TuiScrollControlsModule,
                    ],
                    declarations: [TuiRootComponent],
                    exports: [TuiRootComponent],
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { TuiRootComponent, TuiRootModule };
//# sourceMappingURL=taiga-ui-core-components-root.js.map

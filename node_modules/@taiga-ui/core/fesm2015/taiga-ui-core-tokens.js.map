{"version":3,"file":"taiga-ui-core-tokens.js","sources":["../../../projects/core/tokens/reduced-motion.ts","../../../projects/core/tokens/animations-duration.ts","../../../projects/core/tokens/animation-options.ts","../../../projects/core/tokens/assert-enabled.ts","../../../projects/core/tokens/common-icon.ts","../../../projects/core/tokens/data-list-accessor.ts","../../../projects/core/tokens/data-list-host.ts","../../../projects/core/tokens/day-type-handler.ts","../../../projects/core/tokens/document-or-shadow-root.ts","../../../projects/core/tokens/element-ref.ts","../../../projects/core/tokens/first-day-of-week.ts","../../../projects/core/tokens/i18n.ts","../../../projects/core/tokens/icon-place.ts","../../../projects/core/tokens/icons.ts","../../../projects/core/tokens/icons-path.ts","../../../projects/core/tokens/media.ts","../../../projects/core/tokens/is-mobile-resolution.ts","../../../projects/core/tokens/legacy-mask.ts","../../../projects/core/tokens/mode.ts","../../../projects/core/tokens/notification-options.ts","../../../projects/core/tokens/number-format.ts","../../../projects/core/tokens/number-format-observable.ts","../../../projects/core/tokens/option-content.ts","../../../projects/core/tokens/ordered-short-week-days.ts","../../../projects/core/tokens/sanitizer.ts","../../../projects/core/tokens/scroll-ref.ts","../../../projects/core/tokens/selection-stream.ts","../../../projects/core/tokens/spin-icons.ts","../../../projects/core/tokens/svg-content-processor.ts","../../../projects/core/tokens/svg-src-processor.ts","../../../projects/core/tokens/textfield-appearance.ts","../../../projects/core/tokens/textfield-host.ts","../../../projects/core/tokens/theme.ts","../../../projects/core/tokens/value-accessor.ts","../../../projects/core/tokens/viewport.ts","../../../projects/core/tokens/taiga-ui-core-tokens.ts"],"sourcesContent":["import {DOCUMENT} from '@angular/common';\nimport {inject} from '@angular/core';\nimport {tuiCreateTokenFromFactory} from '@taiga-ui/cdk';\n\nexport const TUI_REDUCED_MOTION = tuiCreateTokenFromFactory(\n    () =>\n        inject(DOCUMENT).defaultView?.matchMedia?.('(prefers-reduced-motion: reduce)')\n            .matches ?? false,\n);\n","import {inject} from '@angular/core';\nimport {tuiCreateTokenFromFactory} from '@taiga-ui/cdk';\n\nimport {TUI_REDUCED_MOTION} from './reduced-motion';\n\nexport const TUI_ANIMATIONS_DEFAULT_DURATION = 300;\n\n/**\n * Duration of all Taiga UI animations in ms\n */\nexport const TUI_ANIMATIONS_DURATION = tuiCreateTokenFromFactory<number>(() =>\n    inject(TUI_REDUCED_MOTION) ? 0 : TUI_ANIMATIONS_DEFAULT_DURATION,\n);\n","import {AnimationOptions} from '@angular/animations';\nimport {inject} from '@angular/core';\nimport {tuiCreateTokenFromFactory} from '@taiga-ui/cdk';\n\nimport {TUI_ANIMATIONS_DURATION} from './animations-duration';\n\n/**\n * Options for Taiga UI animations\n */\nexport const TUI_ANIMATION_OPTIONS = tuiCreateTokenFromFactory<AnimationOptions>(() => ({\n    value: '',\n    params: {\n        duration: inject(TUI_ANIMATIONS_DURATION),\n    },\n}));\n","import {isDevMode} from '@angular/core';\nimport {tuiCreateTokenFromFactory} from '@taiga-ui/cdk';\n\n/**\n * @deprecated:\n * Flag to enable assertions across Taiga UI\n *\n * The current token no longer matters as\n * it will not be provided in production\n */\nexport const TUI_ASSERT_ENABLED = tuiCreateTokenFromFactory(() => isDevMode());\n","import {Provider} from '@angular/core';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk';\n\nconst COMMON_ICONS: TuiCommonIcons = {\n    check: 'tuiIconCheck',\n    close: 'tuiIconClose',\n    error: 'tuiIconAlertCircle',\n    more: 'tuiIconChevronRight',\n};\n\nexport interface TuiCommonIcons {\n    readonly check: string;\n    readonly close: string;\n    readonly error: string;\n    readonly more: string;\n}\n\nexport const TUI_COMMON_ICONS = tuiCreateToken(COMMON_ICONS);\n\nexport function tuiCommonIconsProvider(icons: Partial<TuiCommonIcons>): Provider {\n    return tuiProvideOptions(TUI_COMMON_ICONS, icons, COMMON_ICONS);\n}\n","import {InjectionToken, Provider, Type} from '@angular/core';\nimport {TuiDataListAccessor} from '@taiga-ui/core/interfaces';\n\n/**\n * Accessor for data-list options\n */\nexport const TUI_DATA_LIST_ACCESSOR = new InjectionToken<TuiDataListAccessor>(\n    '[TUI_DATA_LIST_ACCESSOR]',\n);\n\nexport function tuiAsDataListAccessor(useExisting: Type<TuiDataListAccessor>): Provider {\n    return {\n        provide: TUI_DATA_LIST_ACCESSOR,\n        useExisting,\n    };\n}\n","import {InjectionToken, Provider, Type} from '@angular/core';\nimport {TuiDataListHost} from '@taiga-ui/core/interfaces';\n\n/**\n * DataList controller\n */\nexport const TUI_DATA_LIST_HOST = new InjectionToken<TuiDataListHost<unknown>>(\n    '[TUI_DATA_LIST_HOST]',\n);\n\nexport function tuiAsDataListHost(useExisting: Type<TuiDataListHost<unknown>>): Provider {\n    return {\n        provide: TUI_DATA_LIST_HOST,\n        useExisting,\n    };\n}\n","import {tuiCreateToken, TuiDay, TuiHandler} from '@taiga-ui/cdk';\n\n/**\n * Token for adding data-type attribute to calendar cell\n */\nexport const TUI_DAY_TYPE_HANDLER = tuiCreateToken<TuiHandler<TuiDay, string>>(day =>\n    day.isWeekend ? 'weekend' : 'weekday',\n);\n","import {InjectionToken} from '@angular/core';\n\nexport const TUI_DOCUMENT_OR_SHADOW_ROOT = new InjectionToken<DocumentOrShadowRoot>(\n    '[TUI_DOCUMENT_OR_SHADOW_ROOT]',\n);\n","import {ElementRef, InjectionToken} from '@angular/core';\n\n/**\n * ElementRef when you cannot use @Input for single time injection\n */\nexport const TUI_ELEMENT_REF = new InjectionToken<ElementRef>('[TUI_ELEMENT_REF]');\n","import {tuiCreateToken, TuiDayOfWeek} from '@taiga-ui/cdk';\n\n/**\n * The first day of the week index\n */\nexport const TUI_FIRST_DAY_OF_WEEK = tuiCreateToken<TuiDayOfWeek>(TuiDayOfWeek.Monday);\n","import {tuiCreateTokenFromFactory} from '@taiga-ui/cdk';\nimport {tuiExtractI18n} from '@taiga-ui/i18n';\n\n/**\n * Localized months names\n */\nexport const TUI_MONTHS = tuiCreateTokenFromFactory(tuiExtractI18n('months'));\n\n/**\n * i18n 'close' word\n */\nexport const TUI_CLOSE_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('close'));\n\n/**\n * i18n 'Nothing found' message\n */\nexport const TUI_NOTHING_FOUND_MESSAGE = tuiCreateTokenFromFactory(\n    tuiExtractI18n('nothingFoundMessage'),\n);\n\n/**\n * i18n of error message\n */\nexport const TUI_DEFAULT_ERROR_MESSAGE = tuiCreateTokenFromFactory(\n    tuiExtractI18n('defaultErrorMessage'),\n);\n\n/**\n * spin i18n texts\n */\nexport const TUI_SPIN_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('spinTexts'));\n\n/**\n * calendars i18n texts\n */\nexport const TUI_SHORT_WEEK_DAYS = tuiCreateTokenFromFactory(\n    tuiExtractI18n('shortWeekDays'),\n);\n","import {InjectionToken} from '@angular/core';\nimport {tuiCreateToken} from '@taiga-ui/cdk';\n\nexport const TUI_DEFAULT_ICONS_PLACE = 'assets/taiga-ui/icons' as const;\n\n/**\n * Path to icons\n * @deprecated Use {@link TUI_SVG_OPTIONS} instead\n */\nexport const TUI_ICONS_PLACE: InjectionToken<string> = tuiCreateToken<string>(\n    TUI_DEFAULT_ICONS_PLACE,\n);\n","import {tuiCreateToken} from '@taiga-ui/cdk';\n\n/**\n * A key/value dictionary of icon names and src to be defined with TuiSvgService\n */\nexport const TUI_ICONS = tuiCreateToken<Record<string, string>>({});\n","import {inject} from '@angular/core';\nimport {tuiCreateTokenFromFactory} from '@taiga-ui/cdk';\nimport {tuiIconsPathFactory} from '@taiga-ui/core/utils';\n\nimport {TUI_ICONS_PLACE} from './icon-place';\n\n/**\n * A handler to retrieve USE id for icon by name\n * @deprecated Use {@link TUI_SVG_OPTIONS} instead\n */\nexport const TUI_ICONS_PATH = tuiCreateTokenFromFactory(() =>\n    tuiIconsPathFactory(inject(TUI_ICONS_PLACE)),\n);\n","import {tuiCreateToken} from '@taiga-ui/cdk';\nimport {TuiMedia} from '@taiga-ui/core/interfaces';\n\n/**\n * Token for media constant\n */\nexport const TUI_MEDIA = tuiCreateToken<TuiMedia>({\n    mobile: 768,\n    desktopSmall: 1024,\n    desktopLarge: 1280,\n});\n","import {inject, NgZone} from '@angular/core';\nimport {WINDOW} from '@ng-web-apis/common';\nimport {\n    tuiCreateTokenFromFactory,\n    tuiTypedFromEvent,\n    tuiZoneOptimized,\n} from '@taiga-ui/cdk';\nimport {tuiIsMobile} from '@taiga-ui/core/utils';\nimport {distinctUntilChanged, map, share, startWith} from 'rxjs/operators';\n\nimport {TUI_MEDIA} from './media';\n\n/**\n * @deprecated use {@link https://taiga-ui.dev/services/breakpoint-service TuiBreakpointService}\n * TODO: drop in v4.0\n * Mobile resolution stream for private providers\n */\nexport const TUI_IS_MOBILE_RES = tuiCreateTokenFromFactory(() => {\n    const win = inject(WINDOW);\n    const media = inject(TUI_MEDIA);\n\n    return tuiTypedFromEvent(win, 'resize').pipe(\n        share(),\n        startWith(null),\n        map(() => tuiIsMobile(win, media)),\n        distinctUntilChanged(),\n        tuiZoneOptimized(inject(NgZone)),\n    );\n});\n","import {InjectionToken} from '@angular/core';\n\n/**\n * @internal\n * @deprecated\n * Don't use it! Will be removed after changing the mask.\n */\nexport const TUI_LEGACY_MASK = new InjectionToken('[TUI_LEGACY_MASK]');\n","import {InjectionToken} from '@angular/core';\nimport {TuiBrightness} from '@taiga-ui/core/types';\nimport {Observable} from 'rxjs';\n\n/**\n * Mode stream for private providers\n */\nexport const TUI_MODE: InjectionToken<Observable<TuiBrightness | null>> =\n    new InjectionToken<Observable<TuiBrightness | null>>('[TUI_MODE]');\n","import {Provider} from '@angular/core';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk';\nimport {TuiAlertOptions} from '@taiga-ui/core/interfaces';\nimport {TuiSizeL, TuiSizeS} from '@taiga-ui/core/types';\n\nexport interface TuiNotificationDefaultOptions\n    extends Omit<TuiAlertOptions<unknown>, 'data'> {\n    size: TuiSizeL | TuiSizeS;\n}\n\n/** @deprecated remove export */\nexport const STATUS_ICON = {\n    info: 'tuiIconInfo',\n    success: 'tuiIconCheckCircle',\n    error: 'tuiIconXCircle',\n    warning: 'tuiIconAlertCircle',\n    neutral: 'tuiIconInfo',\n} as const;\n\n/** Default values for the notification options. */\nexport const TUI_NOTIFICATION_DEFAULT_OPTIONS: TuiNotificationDefaultOptions = {\n    autoClose: 3000,\n    label: '',\n    status: 'info',\n    hasCloseButton: true,\n    icon: ({$implicit}) => STATUS_ICON[$implicit],\n    size: 'm',\n    hasIcon: true,\n    defaultAutoCloseTime: 3000,\n};\n\n/**\n * Default parameters for notification alert component\n */\nexport const TUI_NOTIFICATION_OPTIONS = tuiCreateToken(TUI_NOTIFICATION_DEFAULT_OPTIONS);\n\nexport function tuiNotificationOptionsProvider(\n    options: Partial<TuiNotificationDefaultOptions>,\n): Provider {\n    return tuiProvideOptions(\n        TUI_NOTIFICATION_OPTIONS,\n        options,\n        TUI_NOTIFICATION_DEFAULT_OPTIONS,\n    );\n}\n","import {Provider} from '@angular/core';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk';\nimport {TUI_DEFAULT_NUMBER_FORMAT} from '@taiga-ui/core/constants';\nimport {TuiNumberFormatSettings} from '@taiga-ui/core/interfaces';\n\n/**\n * Formatting configuration for displayed numbers\n */\nexport const TUI_NUMBER_FORMAT = tuiCreateToken(TUI_DEFAULT_NUMBER_FORMAT);\n\nexport function tuiNumberFormatProvider(\n    options: Partial<TuiNumberFormatSettings>,\n): Provider {\n    return tuiProvideOptions(TUI_NUMBER_FORMAT, options, TUI_DEFAULT_NUMBER_FORMAT);\n}\n","import {InjectionToken} from '@angular/core';\nimport {tuiCreateToken} from '@taiga-ui/cdk';\nimport {TUI_DEFAULT_NUMBER_FORMAT} from '@taiga-ui/core/constants';\nimport {TuiNumberFormatSettings} from '@taiga-ui/core/interfaces';\nimport {Observable, of} from 'rxjs';\n\n/**\n * Formatting configuration for displayed numbers\n */\nexport const TUI_NUMBER_FORMAT_OBSERVABLE: InjectionToken<\n    Observable<TuiNumberFormatSettings>\n> = tuiCreateToken(of({...TUI_DEFAULT_NUMBER_FORMAT, decimalLimit: NaN}));\n","import {InjectionToken, Provider, TemplateRef} from '@angular/core';\nimport {TuiContextWithImplicit} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\n/**\n * Content for tuiOption component\n */\nexport const TUI_OPTION_CONTENT = new InjectionToken<\n    PolymorpheusContent<TuiContextWithImplicit<TemplateRef<Record<string, unknown>>>>\n>('[TUI_OPTION_CONTENT]');\n\nexport function tuiAsOptionContent(\n    useValue: PolymorpheusContent<\n        TuiContextWithImplicit<TemplateRef<Record<string, unknown>>>\n    >,\n): Provider {\n    return {\n        provide: TUI_OPTION_CONTENT,\n        useValue,\n    };\n}\n","/**\n * TODO: v4.0 delete the whole file\n */\nimport {inject} from '@angular/core';\nimport {tuiCreateTokenFromFactory} from '@taiga-ui/cdk';\nimport {map} from 'rxjs/operators';\n\nimport {TUI_FIRST_DAY_OF_WEEK} from './first-day-of-week';\nimport {TUI_SHORT_WEEK_DAYS} from './i18n';\n\nconst convertToSundayFirstWeekFormat = (\n    weekDaysNames: WEEK_DAYS_NAMES,\n): WEEK_DAYS_NAMES => {\n    const sundayIndex = weekDaysNames.length - 1;\n\n    return [\n        weekDaysNames[sundayIndex],\n        ...weekDaysNames.slice(0, sundayIndex),\n    ] as WEEK_DAYS_NAMES;\n};\n\n/**\n * @deprecated\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport type WEEK_DAYS_NAMES = [string, string, string, string, string, string, string];\n\n/**\n * Ordered calendars i18n texts\n * @deprecated\n */\nexport const TUI_ORDERED_SHORT_WEEK_DAYS = tuiCreateTokenFromFactory(() => {\n    const firstDayOfWeekIndex = inject(TUI_FIRST_DAY_OF_WEEK);\n\n    return inject(TUI_SHORT_WEEK_DAYS).pipe(\n        map(convertToSundayFirstWeekFormat),\n        map(\n            weekDays =>\n                [\n                    ...weekDays.slice(firstDayOfWeekIndex),\n                    ...weekDays.slice(0, firstDayOfWeekIndex),\n                ] as WEEK_DAYS_NAMES,\n        ),\n    );\n});\n","import {InjectionToken, Sanitizer} from '@angular/core';\n\n/**\n * A custom Sanitizer to sanitize source before inlining\n */\nexport const TUI_SANITIZER = new InjectionToken<Sanitizer>('[TUI_SANITIZER]');\n","import {TUI_SCROLL_REF as TOKEN} from '@taiga-ui/cdk';\n\n/**\n * @deprecated import from `@taiga-ui/cdk` instead\n */\nexport const TUI_SCROLL_REF = TOKEN;\n","import {DOCUMENT} from '@angular/common';\nimport {inject} from '@angular/core';\nimport {tuiCreateTokenFromFactory, tuiTypedFromEvent} from '@taiga-ui/cdk';\nimport {merge, Observable} from 'rxjs';\nimport {share, switchMap, takeUntil} from 'rxjs/operators';\n\n/**\n * A stream of possible selection changes\n */\nexport const TUI_SELECTION_STREAM = tuiCreateTokenFromFactory<Observable<unknown>>(() => {\n    const doc = inject(DOCUMENT);\n\n    return merge(\n        tuiTypedFromEvent(doc, 'selectionchange'),\n        tuiTypedFromEvent(doc, 'mouseup'),\n        tuiTypedFromEvent(doc, 'mousedown').pipe(\n            switchMap(() =>\n                tuiTypedFromEvent(doc, 'mousemove').pipe(\n                    takeUntil(tuiTypedFromEvent(doc, 'mouseup')),\n                ),\n            ),\n        ),\n        tuiTypedFromEvent(doc, 'keydown'),\n        tuiTypedFromEvent(doc, 'keyup'),\n    ).pipe(share());\n});\n","import {tuiCreateToken} from '@taiga-ui/cdk';\nimport {PolymorpheusContent} from '@tinkoff/ng-polymorpheus';\n\nexport interface TuiSpinIcons {\n    readonly decrement: PolymorpheusContent;\n    readonly increment: PolymorpheusContent;\n}\n\nexport const TUI_SPIN_ICONS = tuiCreateToken<TuiSpinIcons>({\n    decrement: 'tuiIconChevronLeft',\n    increment: 'tuiIconChevronRight',\n});\n","import {\n    tuiCreateToken,\n    TuiHandler,\n    TuiSafeHtml,\n    tuiSvgLinearGradientProcessor,\n} from '@taiga-ui/cdk';\n\n/**\n * Transform function the contents of the loaded svg file\n * @deprecated Use {@link TUI_SVG_OPTIONS} instead\n */\nexport const TUI_SVG_CONTENT_PROCESSOR = tuiCreateToken<\n    TuiHandler<TuiSafeHtml, TuiSafeHtml>\n>(tuiSvgLinearGradientProcessor);\n","import {tuiCreateToken, TuiHandler, TuiSafeHtml} from '@taiga-ui/cdk';\nimport {identity} from 'rxjs';\n\n/**\n * Source path processor for svg\n * @deprecated Use {@link TUI_SVG_OPTIONS} instead\n */\nexport const TUI_SVG_SRC_PROCESSOR =\n    tuiCreateToken<TuiHandler<TuiSafeHtml, TuiSafeHtml>>(identity);\n","import {tuiCreateToken} from '@taiga-ui/cdk';\nimport {TuiAppearance} from '@taiga-ui/core/enums';\n\n/**\n * Appearance for inputs\n * @deprecated use {@link TUI_TEXTFIELD_APPEARANCE_DIRECTIVE} instead\n * TODO: Remove in 4.0\n */\nexport const TUI_TEXTFIELD_APPEARANCE = tuiCreateToken<string>(TuiAppearance.Textfield);\n","import {InjectionToken, Provider, Type} from '@angular/core';\nimport {TuiTextfieldHost} from '@taiga-ui/core/interfaces';\n\n/**\n * An interface to communicate with textfield based controls\n */\nexport const TUI_TEXTFIELD_HOST = new InjectionToken<TuiTextfieldHost>(\n    '[TUI_TEXTFIELD_HOST]',\n);\n\nexport function tuiAsTextfieldHost(useExisting: Type<TuiTextfieldHost>): Provider {\n    return {\n        provide: TUI_TEXTFIELD_HOST,\n        useExisting,\n    };\n}\n","import {tuiCreateToken} from '@taiga-ui/cdk';\n\nexport const TUI_THEME = tuiCreateToken('Taiga');\n","import {InjectionToken} from '@angular/core';\nimport {ControlValueAccessor} from '@angular/forms';\n\n/**\n * Buffer token to pass NG_VALUE_ACCESSOR to a different Injector\n */\nexport const TUI_VALUE_ACCESSOR = new InjectionToken<ControlValueAccessor>(\n    '[TUI_VALUE_ACCESSOR]',\n);\n","import {inject, Provider, Type} from '@angular/core';\nimport {WINDOW} from '@ng-web-apis/common';\nimport {tuiCreateTokenFromFactory} from '@taiga-ui/cdk';\nimport {TuiRectAccessor} from '@taiga-ui/core/abstract';\n\n/**\n * Viewport accessor\n */\nexport const TUI_VIEWPORT = tuiCreateTokenFromFactory<TuiRectAccessor>(() => {\n    const win = inject(WINDOW);\n\n    return {\n        type: 'viewport',\n        getClientRect() {\n            return {\n                top: 0,\n                left: 0,\n                right: win.innerWidth,\n                bottom: win.innerHeight,\n                width: win.innerWidth,\n                height: win.innerHeight,\n            };\n        },\n    };\n});\n\nexport function tuiAsViewport(useExisting: Type<TuiRectAccessor>): Provider {\n    return {\n        provide: TUI_VIEWPORT,\n        useExisting,\n    };\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["TOKEN"],"mappings":"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"}
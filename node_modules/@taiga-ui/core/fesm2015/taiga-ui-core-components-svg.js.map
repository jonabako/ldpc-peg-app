{"version":3,"file":"taiga-ui-core-components-svg.js","sources":["../../../projects/core/components/svg/deprecated-icons.ts","../../../projects/core/components/svg/svg-options.ts","../../../projects/core/components/svg/svg.component.ts","../../../projects/core/components/svg/svg.template.html","../../../projects/core/components/svg/svg.module.ts","../../../projects/core/components/svg/taiga-ui-core-components-svg.ts"],"sourcesContent":["export const TUI_DEPRECATED_ICONS: Record<string, string> = {\n    tuiIconAttach: 'tuiIconPaperclip',\n    tuiIconAttention: 'tuiIconAlertCircle',\n    tuiIconBackCircle: 'tuiIconArrowLeftCircle',\n    tuiIconCall: 'tuiIconPhone',\n    tuiIconCallIn: 'tuiIconPhoneIncoming',\n    tuiIconCallOut: 'tuiIconPhoneOutgoing',\n    tuiIconCallTransfer: 'tuiIconPhoneForwarded',\n    tuiIconCancel: 'tuiIconXCircle',\n    tuiIconCancelCircle: 'tuiIconSlash',\n    tuiIconCard: 'tuiIconCreditCard',\n    tuiIconCards: 'tuiIconCreditCard',\n    tuiIconChartBar: 'tuiIconBarChart',\n    tuiIconChart: 'tuiIconBarChart',\n    tuiIconCheckList: 'tuiIconClipboard',\n    tuiIconCloseCircle: 'tuiIconXCircle',\n    tuiIconCollapse: 'tuiIconMinimize',\n    tuiIconComment: 'tuiIconMessageSquare',\n    tuiIconCommentFw: 'tuiIconMessageForward',\n    tuiIconCompany: 'tuiIconBriefcase',\n    tuiIconDefaultDoc: 'tuiIconFile',\n    tuiIconDesktop: 'tuiIconMonitor',\n    tuiIconDesktopOff: 'tuiIconMonitorOff',\n    tuiIconDislike: 'tuiIconThumbsDown',\n    tuiIconDone: 'tuiIconCheckCircle',\n    tuiIconDraft: 'tuiIconEdit2',\n    tuiIconEyeOpen: 'tuiIconEye',\n    tuiIconEyeClosed: 'tuiIconEyeOff',\n    tuiIconExpand: 'tuiIconMaximize',\n    tuiIconExternal: 'tuiIconExternalLink',\n    tuiIconFrame: 'tuiIconLayout',\n    tuiIconGeo: 'tuiIconMapPin',\n    tuiIconHeartFilled: 'tuiIconHeart',\n    tuiIconHide: 'tuiIconEyeOff',\n    tuiIconImg: 'tuiIconImage',\n    tuiIconInfoCircle: 'tuiIconInfo',\n    tuiIconLike: 'tuiIconThumbsUp',\n    tuiIconLockOpen: 'tuiIconUnlock',\n    tuiIconMobile: 'tuiIconSmartphone',\n    tuiIconMoreHor: 'tuiIconMoreHorizontal',\n    tuiIconMoreVer: 'tuiIconMoreVertical',\n    tuiIconMoreVert: 'tuiIconMoreVertical',\n    tuiIconPicture: 'tuiIconImage',\n    tuiIconPin: 'tuiIconMapPin',\n    tuiIconPrint: 'tuiIconPrinter',\n    tuiIconRefresh: 'tuiIconRefreshCw',\n    tuiIconRemove: 'tuiIconX',\n    tuiIconShow: 'tuiIconEye',\n    tuiIconSound: 'tuiIconVolume',\n    tuiIconSoundOff: 'tuiIconVolumeX',\n    tuiIconStarFilled: 'tuiIconStar',\n    tuiIconStop: 'tuiIconSquare',\n    tuiIconStructure: 'tuiIconGrid',\n    tuiIconTime: 'tuiIconClock',\n    tuiIconTooltip: 'tuiIconHelpCircle',\n    tuiIconViewList: 'tuiIconList',\n    tuiIconWifiOn: 'tuiIconWifi',\n};\n","import {\n    FactoryProvider,\n    inject,\n    InjectionToken,\n    Optional,\n    Provider,\n    SkipSelf,\n} from '@angular/core';\nimport {\n    tuiCreateTokenFromFactory,\n    TuiHandler,\n    tuiIsString,\n    TuiSafeHtml,\n    TuiStringHandler,\n    tuiSvgLinearGradientProcessor,\n} from '@taiga-ui/cdk';\nimport {\n    TUI_DEFAULT_ICONS_PLACE,\n    TUI_ICONS_PATH,\n    TUI_ICONS_PLACE,\n    TUI_SVG_CONTENT_PROCESSOR,\n    TUI_SVG_SRC_PROCESSOR,\n} from '@taiga-ui/core/tokens';\nimport {tuiIconsPathFactory} from '@taiga-ui/core/utils';\nimport {identity} from 'rxjs';\n\nimport {TUI_DEPRECATED_ICONS} from './deprecated-icons';\n\n// TODO: Refactor it all in 4.0 and remove deprecated backward compatibility hacks\nexport interface TuiSvgOptions {\n    readonly contentProcessor: TuiHandler<TuiSafeHtml, TuiSafeHtml>;\n    readonly deprecated: TuiStringHandler<string>;\n    readonly iconsPlace: string;\n    readonly path: (name: string, baseHref?: string) => string;\n    readonly srcProcessor: TuiHandler<TuiSafeHtml, TuiSafeHtml>;\n}\n\nexport type TuiSvgInterceptorHandler =\n    | ((src: TuiSafeHtml, options: TuiSvgOptions) => TuiSafeHtml)\n    | ((src: TuiSafeHtml) => TuiSafeHtml);\n\nexport const TUI_SVG_DEFAULT_OPTIONS: TuiSvgOptions = {\n    iconsPlace: TUI_DEFAULT_ICONS_PLACE,\n    path: tuiIconsPathFactory(TUI_DEFAULT_ICONS_PLACE),\n    srcProcessor: identity,\n    contentProcessor: tuiSvgLinearGradientProcessor,\n    deprecated: src => {\n        const oldIcon = src.replace('Large', '').replace('Outline', '');\n        const newIcon = TUI_DEPRECATED_ICONS[oldIcon];\n\n        return newIcon\n            ? `${oldIcon}/(Large|Outline) is deprecated, use ${newIcon}/(Large|Outline) instead`\n            : '';\n    },\n};\n\n/**\n * SVG component options\n */\nexport const TUI_SVG_OPTIONS = tuiCreateTokenFromFactory<TuiSvgOptions>(() => ({\n    iconsPlace: inject(TUI_ICONS_PLACE),\n    path: inject(TUI_ICONS_PATH),\n    deprecated: TUI_SVG_DEFAULT_OPTIONS.deprecated,\n    srcProcessor: inject(TUI_SVG_SRC_PROCESSOR),\n    contentProcessor: inject(TUI_SVG_CONTENT_PROCESSOR),\n}));\n\nexport const TUI_SVG_SRC_INTERCEPTORS = new InjectionToken<TuiSvgInterceptorHandler>(\n    '[TUI_SVG_SRC_INTERCEPTORS]',\n);\n\nexport function tuiSvgSrcInterceptors(interceptor: TuiSvgInterceptorHandler): Provider {\n    return {\n        provide: TUI_SVG_SRC_INTERCEPTORS,\n        useValue: interceptor,\n        multi: true,\n    };\n}\n\nexport const tuiSvgOptionsProvider: (\n    options: Partial<Omit<TuiSvgOptions, 'path'>> & {\n        path?: TuiSvgOptions['path'] | string;\n    },\n) => FactoryProvider = options => ({\n    provide: TUI_SVG_OPTIONS,\n    deps: [\n        [new SkipSelf(), new Optional(), TUI_SVG_OPTIONS],\n        [new Optional(), TUI_ICONS_PLACE],\n        [new Optional(), TUI_ICONS_PATH],\n        [new Optional(), TUI_SVG_SRC_PROCESSOR],\n        [new Optional(), TUI_SVG_CONTENT_PROCESSOR],\n    ],\n    useFactory: (\n        fallback: TuiSvgOptions | null,\n        iconsPlace: string | null,\n        path: TuiSvgOptions['path'] | null,\n        srcProcessor: TuiSvgOptions['srcProcessor'] | null,\n        contentProcessor: TuiSvgOptions['contentProcessor'] | null,\n    ): TuiSvgOptions => ({\n        iconsPlace:\n            options.iconsPlace ??\n            fallback?.iconsPlace ??\n            iconsPlace ??\n            TUI_SVG_DEFAULT_OPTIONS.iconsPlace,\n        path: tuiIsString(options.path)\n            ? tuiIconsPathFactory(options.path)\n            : options.path ?? fallback?.path ?? path ?? TUI_SVG_DEFAULT_OPTIONS.path,\n        deprecated:\n            options.deprecated ??\n            fallback?.deprecated ??\n            TUI_SVG_DEFAULT_OPTIONS.deprecated,\n        srcProcessor:\n            options.srcProcessor ??\n            fallback?.srcProcessor ??\n            srcProcessor ??\n            TUI_SVG_DEFAULT_OPTIONS.srcProcessor,\n        contentProcessor:\n            options.contentProcessor ??\n            fallback?.contentProcessor ??\n            contentProcessor ??\n            TUI_SVG_DEFAULT_OPTIONS.contentProcessor,\n    }),\n});\n","import {DOCUMENT} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    Inject,\n    Input,\n    Optional,\n    Sanitizer,\n    SecurityContext,\n} from '@angular/core';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {WINDOW} from '@ng-web-apis/common';\nimport {\n    TUI_BASE_HREF,\n    tuiAssert,\n    tuiGetDocumentOrShadowRoot,\n    tuiIsString,\n    tuiPure,\n    TuiSafeHtml,\n    TuiStaticRequestService,\n} from '@taiga-ui/cdk';\nimport {TUI_CACHE_BUSTING_PAYLOAD, TUI_ICON_ERROR} from '@taiga-ui/core/constants';\nimport {TuiIconError} from '@taiga-ui/core/interfaces';\nimport {TuiSvgService} from '@taiga-ui/core/services';\nimport {TUI_SANITIZER} from '@taiga-ui/core/tokens';\nimport {tuiIsPresumedHTMLString} from '@taiga-ui/core/utils/miscellaneous';\nimport {Observable, of, ReplaySubject} from 'rxjs';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\n\nimport {\n    TUI_SVG_OPTIONS,\n    TUI_SVG_SRC_INTERCEPTORS,\n    TuiSvgInterceptorHandler,\n    TuiSvgOptions,\n} from './svg-options';\n\nconst UNDEFINED_NAMED_ICON = 'Attempted to use undefined named icon';\nconst MISSING_EXTERNAL_ICON = 'External icon is missing on the given URL';\nconst FAILED_EXTERNAL_ICON = 'Failed to load external SVG';\n\n// TODO: Consider moving to CDK along with SvgService and SvgDefsHostComponent\n@Component({\n    selector: 'tui-svg',\n    templateUrl: './svg.template.html',\n    styleUrls: ['./svg.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TuiSvgComponent {\n    private readonly src$ = new ReplaySubject<void>(1);\n    private icon: TuiSafeHtml = '';\n\n    readonly innerHTML$: Observable<SafeHtml>;\n\n    constructor(\n        @Inject(DOCUMENT) private readonly doc: Document,\n        @Inject(WINDOW) private readonly win: Window,\n        @Inject(TUI_SVG_OPTIONS) private readonly options: TuiSvgOptions,\n        @Optional()\n        @Inject(TUI_SVG_SRC_INTERCEPTORS)\n        private readonly srcInterceptors: readonly TuiSvgInterceptorHandler[] | null,\n        @Optional()\n        @Inject(TUI_SANITIZER)\n        private readonly tuiSanitizer: Sanitizer | null,\n        @Inject(TuiSvgService) private readonly svgService: TuiSvgService,\n        @Inject(TuiStaticRequestService)\n        private readonly staticRequestService: TuiStaticRequestService,\n        @Inject(DomSanitizer) private readonly sanitizer: DomSanitizer,\n        @Inject(ElementRef) private readonly el: ElementRef<Element>,\n        @Inject(TUI_BASE_HREF) private readonly baseHref: string,\n    ) {\n        this.innerHTML$ = this.src$.pipe(\n            switchMap(() => {\n                if (tuiIsString(this.icon)) {\n                    return this.isExternal\n                        ? this.getExternalIcon(this.icon)\n                        : of(this.getSafeHtml(this.icon));\n                }\n\n                return of(this.icon);\n            }),\n            startWith(''),\n        );\n    }\n\n    @Input()\n    set src(src: TuiSafeHtml | null | undefined) {\n        const deprecated = this.options.deprecated(String(src));\n\n        ngDevMode && tuiAssert.assert(!deprecated, deprecated);\n\n        this.icon = (this.srcInterceptors ?? []).reduce(\n            (newSrc, interceptor: TuiSvgInterceptorHandler) =>\n                interceptor(newSrc, this.options),\n            this.options.srcProcessor(src || ''),\n        );\n\n        this.src$.next();\n    }\n\n    get src(): TuiSafeHtml {\n        return this.icon;\n    }\n\n    get use(): string {\n        if (tuiIsString(this.icon)) {\n            return this.icon.includes('.svg#')\n                ? this.icon\n                : this.resolveName(this.icon, this.options.path);\n        }\n\n        return '';\n    }\n\n    get isInnerHTML(): boolean {\n        return (\n            !tuiIsString(this.icon) ||\n            this.isSrc ||\n            this.isExternal ||\n            (this.isName && this.isShadowDOM)\n        );\n    }\n\n    private get isShadowDOM(): boolean {\n        return tuiGetDocumentOrShadowRoot(this.el.nativeElement) !== this.doc;\n    }\n\n    private get isUse(): boolean {\n        return this.use.replace(TUI_CACHE_BUSTING_PAYLOAD, '').includes('.svg#');\n    }\n\n    private get isExternal(): boolean {\n        return this.isUrl || this.isCrossDomain;\n    }\n\n    private get isUrl(): boolean {\n        return (\n            tuiIsString(this.icon) &&\n            this.icon.replace(TUI_CACHE_BUSTING_PAYLOAD, '').endsWith('.svg')\n        );\n    }\n\n    private get isSrc(): boolean {\n        return tuiIsString(this.icon) && tuiIsPresumedHTMLString(this.icon);\n    }\n\n    private get isName(): boolean {\n        return !this.isUrl && !this.isUse && !this.isSrc;\n    }\n\n    private get isCrossDomain(): boolean {\n        const {use, isUse, win} = this;\n\n        return (\n            isUse && use.startsWith('http') && !!win.origin && !use.startsWith(win.origin)\n        );\n    }\n\n    onError(message: string = MISSING_EXTERNAL_ICON): void {\n        const {icon} = this;\n        const event = new CustomEvent<TuiIconError>(TUI_ICON_ERROR, {\n            bubbles: true,\n            detail: {\n                message,\n                icon: icon as string,\n            },\n        });\n\n        ngDevMode && tuiAssert.assert(false, message, icon);\n        this.el.nativeElement.dispatchEvent(event);\n    }\n\n    @tuiPure\n    private resolveName(name: string, iconsPath: TuiSvgOptions['path']): string {\n        return iconsPath(name, this.baseHref);\n    }\n\n    private getSafeHtml(src: string): SafeHtml {\n        return this.isSrc ? this.sanitize(src) : this.process(src);\n    }\n\n    private process(src: string): SafeHtml {\n        const icon = this.svgService.getOriginal(src);\n\n        if (this.isName && !icon && !!src) {\n            this.onError(UNDEFINED_NAMED_ICON);\n        }\n\n        // Empty line for innerHTML when icon is shown through USE tag\n        return !this.isShadowDOM || !this.isName ? '' : this.sanitize(icon || '');\n    }\n\n    private sanitize(src: TuiSafeHtml): TuiSafeHtml {\n        src = this.options.contentProcessor(src);\n\n        return this.tuiSanitizer && tuiIsString(src)\n            ? this.sanitizer.bypassSecurityTrustHtml(\n                  this.tuiSanitizer.sanitize(SecurityContext.HTML, src) || '',\n              )\n            : src;\n    }\n\n    private getExternalIcon(src: string): Observable<SafeHtml> {\n        const url = src.includes('.svg') ? src : this.use;\n\n        return this.staticRequestService.request(url).pipe(\n            catchError(() => {\n                this.onError(FAILED_EXTERNAL_ICON);\n\n                return of('');\n            }),\n            map(response =>\n                this.sanitize(response.replace('<svg', '<svg focusable=\"false\"')),\n            ),\n        );\n    }\n}\n","<ng-container *tuiLet=\"innerHTML$ | async as innerHTML\">\n    <div\n        *ngIf=\"isInnerHTML; else useTemplate\"\n        class=\"t-src\"\n        [innerHTML]=\"innerHTML\"\n    ></div>\n    <ng-template #useTemplate>\n        <svg\n            focusable=\"false\"\n            height=\"100%\"\n            version=\"1.1\"\n            width=\"100%\"\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"t-svg\"\n            (error)=\"onError()\"\n        >\n            <use [attr.xlink:href]=\"use\"></use>\n        </svg>\n    </ng-template>\n</ng-container>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {TuiLetModule} from '@taiga-ui/cdk';\n\nimport {TuiSvgComponent} from './svg.component';\n\n@NgModule({\n    imports: [CommonModule, TuiLetModule],\n    declarations: [TuiSvgComponent],\n    exports: [TuiSvgComponent],\n})\nexport class TuiSvgModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}
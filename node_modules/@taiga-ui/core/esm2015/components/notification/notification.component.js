import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, Input, Output, } from '@angular/core';
import { tuiIsObserved } from '@taiga-ui/cdk';
import { TUI_CLOSE_WORD, TUI_COMMON_ICONS, TUI_NOTIFICATION_OPTIONS, } from '@taiga-ui/core/tokens';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/components/svg";
import * as i2 from "@taiga-ui/core/components/button";
import * as i3 from "@angular/common";
import * as i4 from "@tinkoff/ng-polymorpheus";
import * as i5 from "rxjs";
export class TuiNotificationComponent {
    constructor(closeWord$, icons, options) {
        this.closeWord$ = closeWord$;
        this.icons = icons;
        this.options = options;
        /**
         * @deprecated Use {@link TuiNotificationComponent.icon} input or TUI_NOTIFICATION_OPTIONS instead
         */
        this.hasIcon = this.options.hasIcon;
        this.icon = this.options.icon;
        this.status = this.options.status;
        this.size = this.options.size;
        this.hideClose = false;
        this.close = new EventEmitter();
    }
    get hasClose() {
        return !this.hideClose && tuiIsObserved(this.close);
    }
}
TuiNotificationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiNotificationComponent, deps: [{ token: TUI_CLOSE_WORD }, { token: TUI_COMMON_ICONS }, { token: TUI_NOTIFICATION_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });
TuiNotificationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiNotificationComponent, selector: "tui-notification,a[tuiNotification],button[tuiNotification]", inputs: { hasIcon: "hasIcon", icon: "icon", status: "status", size: "size", hideClose: "hideClose" }, outputs: { close: "close" }, host: { properties: { "attr.data-status": "this.status", "attr.data-size": "this.size" } }, ngImport: i0, template: "<ng-container *ngIf=\"icon && hasIcon\">\n    <tui-svg\n        *polymorpheusOutlet=\"icon as iconName; context: {$implicit: status}\"\n        automation-id=\"tui-notification__icon\"\n        class=\"t-icon\"\n        [src]=\"iconName\"\n    ></tui-svg>\n</ng-container>\n<div class=\"t-content\">\n    <ng-content></ng-content>\n</div>\n<button\n    *ngIf=\"hasClose\"\n    appearance=\"icon\"\n    automation-id=\"tui-notification__close\"\n    size=\"xs\"\n    tuiIconButton\n    type=\"button\"\n    class=\"t-close\"\n    [icon]=\"icons.close\"\n    [title]=\"closeWord$ | async\"\n    (click)=\"close.emit()\"\n></button>\n<tui-svg\n    automation-id=\"tui-notification__more\"\n    class=\"t-more\"\n    [src]=\"icons.more\"\n></tui-svg>\n", styles: [":host{font:var(--tui-font-text-s);color:var(--tui-text-01);position:relative;display:flex;padding:.75rem 1rem;border-radius:var(--tui-radius-m);background:#fff;background:var(--tui-base-01);box-sizing:border-box;overflow:hidden;text-align:left}:host .t-more{display:none}:hostbutton,:hosta{border:none;cursor:pointer}:hostbutton .t-more,:hosta .t-more{display:inline-flex;color:var(--tui-text-01);opacity:.5}:host[data-size=s]{padding:.375rem .625rem}:host[data-size=s] .t-icon{width:1rem;height:1.25rem;margin:0 .375rem 0 -.125rem}:host[data-size=s] .t-close{margin:-.125rem -.375rem -.125rem .75rem}:host[data-size=s] .t-more{margin:-.125rem -.375rem -.125rem 0}:host[data-size=m]{padding:.75rem}:host[data-size=m] .t-icon{width:1.25rem;height:1.25rem;margin-right:.5rem}:host[data-size=m] .t-close{margin:-.125rem -.125rem -.125rem 1rem}:host[data-size=m] .t-more{margin:-.125rem -.375rem -.125rem 0}:host[data-size=l]{padding:1rem;font:var(--tui-font-text-m);border-radius:var(--tui-radius-l)}:host[data-size=l] .t-icon{width:1.5rem;height:1.5rem;margin-right:.5rem}:host[data-size=l] .t-more{margin-right:-.5rem}:host[data-status=info]{color:var(--tui-info-fill);background:linear-gradient(var(--tui-info-bg),var(--tui-info-bg)),var(--tui-base-01)}:host[data-status=success]{color:var(--tui-success-fill);background:linear-gradient(var(--tui-success-bg),var(--tui-success-bg)),var(--tui-base-01)}:host[data-status=error]{color:var(--tui-error-fill);background:linear-gradient(var(--tui-error-bg),var(--tui-error-bg)),var(--tui-base-01)}:host[data-status=warning]{color:var(--tui-warning-fill);background:linear-gradient(var(--tui-warning-bg),var(--tui-warning-bg)),var(--tui-base-01)}:host[data-status=neutral]{color:var(--tui-neutral-fill);background:linear-gradient(var(--tui-neutral-bg),var(--tui-neutral-bg)),var(--tui-base-01)}.t-content{flex:1;word-break:break-word;color:var(--tui-text-01);text-align:inherit;align-self:center}\n"], components: [{ type: i1.TuiSvgComponent, selector: "tui-svg", inputs: ["src"] }, { type: i2.TuiButtonComponent, selector: "button[tuiButton], button[tuiIconButton], a[tuiButton], a[tuiIconButton]", inputs: ["appearance", "disabled", "icon", "iconRight", "shape", "showLoader", "size"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], pipes: { "async": i3.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiNotificationComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'tui-notification,a[tuiNotification],button[tuiNotification]',
                    templateUrl: './notification.template.html',
                    styleUrls: ['./notification.style.less'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i5.Observable, decorators: [{
                    type: Inject,
                    args: [TUI_CLOSE_WORD]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_COMMON_ICONS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_NOTIFICATION_OPTIONS]
                }] }]; }, propDecorators: { hasIcon: [{
                type: Input
            }], icon: [{
                type: Input
            }], status: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-status']
            }], size: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['attr.data-size']
            }], hideClose: [{
                type: Input
            }], close: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvY29tcG9uZW50cy9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvY29tcG9uZW50cy9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsWUFBWSxFQUNaLFdBQVcsRUFDWCxNQUFNLEVBQ04sS0FBSyxFQUNMLE1BQU0sR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzVDLE9BQU8sRUFDSCxjQUFjLEVBQ2QsZ0JBQWdCLEVBQ2hCLHdCQUF3QixHQUczQixNQUFNLHVCQUF1QixDQUFDOzs7Ozs7O0FBVS9CLE1BQU0sT0FBTyx3QkFBd0I7SUF5QmpDLFlBQ3FDLFVBQThCLEVBQzVCLEtBQXFCLEVBQ2IsT0FBc0M7UUFGaEQsZUFBVSxHQUFWLFVBQVUsQ0FBb0I7UUFDNUIsVUFBSyxHQUFMLEtBQUssQ0FBZ0I7UUFDYixZQUFPLEdBQVAsT0FBTyxDQUErQjtRQTNCckY7O1dBRUc7UUFFSCxZQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFHL0IsU0FBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBSXpCLFdBQU0sR0FBcUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFJL0MsU0FBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBR3pCLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFJVCxVQUFLLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztJQU12QyxDQUFDO0lBRUosSUFBSSxRQUFRO1FBQ1IsT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLElBQUksYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4RCxDQUFDOztzSEFqQ1Esd0JBQXdCLGtCQTBCckIsY0FBYyxhQUNkLGdCQUFnQixhQUNoQix3QkFBd0I7MEdBNUIzQix3QkFBd0Isa1VDMUJyQyw4dUJBNEJBOzRGREZhLHdCQUF3QjtrQkFOcEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsNkRBQTZEO29CQUN2RSxXQUFXLEVBQUUsOEJBQThCO29CQUMzQyxTQUFTLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQztvQkFDeEMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2xEOzswQkEyQlEsTUFBTTsyQkFBQyxjQUFjOzswQkFDckIsTUFBTTsyQkFBQyxnQkFBZ0I7OzBCQUN2QixNQUFNOzJCQUFDLHdCQUF3Qjs0Q0F2QnBDLE9BQU87c0JBRE4sS0FBSztnQkFJTixJQUFJO3NCQURILEtBQUs7Z0JBS04sTUFBTTtzQkFGTCxLQUFLOztzQkFDTCxXQUFXO3VCQUFDLGtCQUFrQjtnQkFLL0IsSUFBSTtzQkFGSCxLQUFLOztzQkFDTCxXQUFXO3VCQUFDLGdCQUFnQjtnQkFJN0IsU0FBUztzQkFEUixLQUFLO2dCQUtHLEtBQUs7c0JBRmIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIEV2ZW50RW1pdHRlcixcbiAgICBIb3N0QmluZGluZyxcbiAgICBJbmplY3QsXG4gICAgSW5wdXQsXG4gICAgT3V0cHV0LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpSXNPYnNlcnZlZH0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1xuICAgIFRVSV9DTE9TRV9XT1JELFxuICAgIFRVSV9DT01NT05fSUNPTlMsXG4gICAgVFVJX05PVElGSUNBVElPTl9PUFRJT05TLFxuICAgIFR1aUNvbW1vbkljb25zLFxuICAgIFR1aU5vdGlmaWNhdGlvbkRlZmF1bHRPcHRpb25zLFxufSBmcm9tICdAdGFpZ2EtdWkvY29yZS90b2tlbnMnO1xuaW1wb3J0IHtUdWlOb3RpZmljYXRpb25UfSBmcm9tICdAdGFpZ2EtdWkvY29yZS90eXBlcyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3R1aS1ub3RpZmljYXRpb24sYVt0dWlOb3RpZmljYXRpb25dLGJ1dHRvblt0dWlOb3RpZmljYXRpb25dJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbm90aWZpY2F0aW9uLnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL25vdGlmaWNhdGlvbi5zdHlsZS5sZXNzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIFR1aU5vdGlmaWNhdGlvbkNvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogQGRlcHJlY2F0ZWQgVXNlIHtAbGluayBUdWlOb3RpZmljYXRpb25Db21wb25lbnQuaWNvbn0gaW5wdXQgb3IgVFVJX05PVElGSUNBVElPTl9PUFRJT05TIGluc3RlYWRcbiAgICAgKi9cbiAgICBASW5wdXQoKVxuICAgIGhhc0ljb24gPSB0aGlzLm9wdGlvbnMuaGFzSWNvbjtcblxuICAgIEBJbnB1dCgpXG4gICAgaWNvbiA9IHRoaXMub3B0aW9ucy5pY29uO1xuXG4gICAgQElucHV0KClcbiAgICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1zdGF0dXMnKVxuICAgIHN0YXR1czogVHVpTm90aWZpY2F0aW9uVCA9IHRoaXMub3B0aW9ucy5zdGF0dXM7XG5cbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnYXR0ci5kYXRhLXNpemUnKVxuICAgIHNpemUgPSB0aGlzLm9wdGlvbnMuc2l6ZTtcblxuICAgIEBJbnB1dCgpXG4gICAgaGlkZUNsb3NlID0gZmFsc2U7XG5cbiAgICBAT3V0cHV0KClcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L25vLW91dHB1dC1uYXRpdmVcbiAgICByZWFkb25seSBjbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFRVSV9DTE9TRV9XT1JEKSByZWFkb25seSBjbG9zZVdvcmQkOiBPYnNlcnZhYmxlPHN0cmluZz4sXG4gICAgICAgIEBJbmplY3QoVFVJX0NPTU1PTl9JQ09OUykgcmVhZG9ubHkgaWNvbnM6IFR1aUNvbW1vbkljb25zLFxuICAgICAgICBASW5qZWN0KFRVSV9OT1RJRklDQVRJT05fT1BUSU9OUykgcmVhZG9ubHkgb3B0aW9uczogVHVpTm90aWZpY2F0aW9uRGVmYXVsdE9wdGlvbnMsXG4gICAgKSB7fVxuXG4gICAgZ2V0IGhhc0Nsb3NlKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gIXRoaXMuaGlkZUNsb3NlICYmIHR1aUlzT2JzZXJ2ZWQodGhpcy5jbG9zZSk7XG4gICAgfVxufVxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cImljb24gJiYgaGFzSWNvblwiPlxuICAgIDx0dWktc3ZnXG4gICAgICAgICpwb2x5bW9ycGhldXNPdXRsZXQ9XCJpY29uIGFzIGljb25OYW1lOyBjb250ZXh0OiB7JGltcGxpY2l0OiBzdGF0dXN9XCJcbiAgICAgICAgYXV0b21hdGlvbi1pZD1cInR1aS1ub3RpZmljYXRpb25fX2ljb25cIlxuICAgICAgICBjbGFzcz1cInQtaWNvblwiXG4gICAgICAgIFtzcmNdPVwiaWNvbk5hbWVcIlxuICAgID48L3R1aS1zdmc+XG48L25nLWNvbnRhaW5lcj5cbjxkaXYgY2xhc3M9XCJ0LWNvbnRlbnRcIj5cbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG48L2Rpdj5cbjxidXR0b25cbiAgICAqbmdJZj1cImhhc0Nsb3NlXCJcbiAgICBhcHBlYXJhbmNlPVwiaWNvblwiXG4gICAgYXV0b21hdGlvbi1pZD1cInR1aS1ub3RpZmljYXRpb25fX2Nsb3NlXCJcbiAgICBzaXplPVwieHNcIlxuICAgIHR1aUljb25CdXR0b25cbiAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICBjbGFzcz1cInQtY2xvc2VcIlxuICAgIFtpY29uXT1cImljb25zLmNsb3NlXCJcbiAgICBbdGl0bGVdPVwiY2xvc2VXb3JkJCB8IGFzeW5jXCJcbiAgICAoY2xpY2spPVwiY2xvc2UuZW1pdCgpXCJcbj48L2J1dHRvbj5cbjx0dWktc3ZnXG4gICAgYXV0b21hdGlvbi1pZD1cInR1aS1ub3RpZmljYXRpb25fX21vcmVcIlxuICAgIGNsYXNzPVwidC1tb3JlXCJcbiAgICBbc3JjXT1cImljb25zLm1vcmVcIlxuPjwvdHVpLXN2Zz5cbiJdfQ==
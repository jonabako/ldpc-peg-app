import { inject, InjectionToken, Optional, SkipSelf, } from '@angular/core';
import { tuiCreateTokenFromFactory, tuiIsString, tuiSvgLinearGradientProcessor, } from '@taiga-ui/cdk';
import { TUI_DEFAULT_ICONS_PLACE, TUI_ICONS_PATH, TUI_ICONS_PLACE, TUI_SVG_CONTENT_PROCESSOR, TUI_SVG_SRC_PROCESSOR, } from '@taiga-ui/core/tokens';
import { tuiIconsPathFactory } from '@taiga-ui/core/utils';
import { identity } from 'rxjs';
import { TUI_DEPRECATED_ICONS } from './deprecated-icons';
export const TUI_SVG_DEFAULT_OPTIONS = {
    iconsPlace: TUI_DEFAULT_ICONS_PLACE,
    path: tuiIconsPathFactory(TUI_DEFAULT_ICONS_PLACE),
    srcProcessor: identity,
    contentProcessor: tuiSvgLinearGradientProcessor,
    deprecated: src => {
        const oldIcon = src.replace('Large', '').replace('Outline', '');
        const newIcon = TUI_DEPRECATED_ICONS[oldIcon];
        return newIcon
            ? `${oldIcon}/(Large|Outline) is deprecated, use ${newIcon}/(Large|Outline) instead`
            : '';
    },
};
/**
 * SVG component options
 */
export const TUI_SVG_OPTIONS = tuiCreateTokenFromFactory(() => ({
    iconsPlace: inject(TUI_ICONS_PLACE),
    path: inject(TUI_ICONS_PATH),
    deprecated: TUI_SVG_DEFAULT_OPTIONS.deprecated,
    srcProcessor: inject(TUI_SVG_SRC_PROCESSOR),
    contentProcessor: inject(TUI_SVG_CONTENT_PROCESSOR),
}));
export const TUI_SVG_SRC_INTERCEPTORS = new InjectionToken('[TUI_SVG_SRC_INTERCEPTORS]');
export function tuiSvgSrcInterceptors(interceptor) {
    return {
        provide: TUI_SVG_SRC_INTERCEPTORS,
        useValue: interceptor,
        multi: true,
    };
}
export const tuiSvgOptionsProvider = options => ({
    provide: TUI_SVG_OPTIONS,
    deps: [
        [new SkipSelf(), new Optional(), TUI_SVG_OPTIONS],
        [new Optional(), TUI_ICONS_PLACE],
        [new Optional(), TUI_ICONS_PATH],
        [new Optional(), TUI_SVG_SRC_PROCESSOR],
        [new Optional(), TUI_SVG_CONTENT_PROCESSOR],
    ],
    useFactory: (fallback, iconsPlace, path, srcProcessor, contentProcessor) => {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
        return ({
            iconsPlace: (_c = (_b = (_a = options.iconsPlace) !== null && _a !== void 0 ? _a : fallback === null || fallback === void 0 ? void 0 : fallback.iconsPlace) !== null && _b !== void 0 ? _b : iconsPlace) !== null && _c !== void 0 ? _c : TUI_SVG_DEFAULT_OPTIONS.iconsPlace,
            path: tuiIsString(options.path)
                ? tuiIconsPathFactory(options.path)
                : (_f = (_e = (_d = options.path) !== null && _d !== void 0 ? _d : fallback === null || fallback === void 0 ? void 0 : fallback.path) !== null && _e !== void 0 ? _e : path) !== null && _f !== void 0 ? _f : TUI_SVG_DEFAULT_OPTIONS.path,
            deprecated: (_h = (_g = options.deprecated) !== null && _g !== void 0 ? _g : fallback === null || fallback === void 0 ? void 0 : fallback.deprecated) !== null && _h !== void 0 ? _h : TUI_SVG_DEFAULT_OPTIONS.deprecated,
            srcProcessor: (_l = (_k = (_j = options.srcProcessor) !== null && _j !== void 0 ? _j : fallback === null || fallback === void 0 ? void 0 : fallback.srcProcessor) !== null && _k !== void 0 ? _k : srcProcessor) !== null && _l !== void 0 ? _l : TUI_SVG_DEFAULT_OPTIONS.srcProcessor,
            contentProcessor: (_p = (_o = (_m = options.contentProcessor) !== null && _m !== void 0 ? _m : fallback === null || fallback === void 0 ? void 0 : fallback.contentProcessor) !== null && _o !== void 0 ? _o : contentProcessor) !== null && _p !== void 0 ? _p : TUI_SVG_DEFAULT_OPTIONS.contentProcessor,
        });
    },
});
//# sourceMappingURL=data:application/json;base64,
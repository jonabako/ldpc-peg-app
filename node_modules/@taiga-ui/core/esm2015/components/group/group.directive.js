import { Directive, HostBinding, Inject, Input } from '@angular/core';
import { TuiDirectiveStylesService } from '@taiga-ui/cdk';
import { TuiGroupStylesComponent } from './group-styles.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
export class TuiGroupDirective {
    constructor(directiveStyles) {
        this.orientation = 'horizontal';
        this.adaptive = false;
        this.collapsed = false;
        this.rounded = true;
        this.size = 'm';
        directiveStyles.addComponent(TuiGroupStylesComponent);
    }
    get orientationHorizontal() {
        return this.orientation === 'horizontal';
    }
    get orientationVertical() {
        return this.orientation === 'vertical';
    }
    get sizeLarge() {
        return this.size === 'l';
    }
}
TuiGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiGroupDirective, deps: [{ token: TuiDirectiveStylesService }], target: i0.ɵɵFactoryTarget.Directive });
TuiGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiGroupDirective, selector: "[tuiGroup]:not(ng-container)", inputs: { orientation: "orientation", adaptive: "adaptive", collapsed: "collapsed", rounded: "rounded", size: "size" }, host: { attributes: { "role": "group" }, properties: { "class.tui-group_adaptive": "this.adaptive", "class.tui-group_collapsed": "this.collapsed", "class.tui-group_rounded": "this.rounded", "class.tui-group_orientation_horizontal": "this.orientationHorizontal", "class.tui-group_orientation_vertical": "this.orientationVertical", "class.tui-group_radius_large": "this.sizeLarge" }, classAttribute: "tui-group" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiGroupDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiGroup]:not(ng-container)',
                    host: {
                        class: 'tui-group',
                        role: 'group',
                    },
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiDirectiveStylesService, decorators: [{
                    type: Inject,
                    args: [TuiDirectiveStylesService]
                }] }]; }, propDecorators: { orientation: [{
                type: Input
            }], adaptive: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class.tui-group_adaptive']
            }], collapsed: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class.tui-group_collapsed']
            }], rounded: [{
                type: Input
            }, {
                type: HostBinding,
                args: ['class.tui-group_rounded']
            }], size: [{
                type: Input
            }], orientationHorizontal: [{
                type: HostBinding,
                args: ['class.tui-group_orientation_horizontal']
            }], orientationVertical: [{
                type: HostBinding,
                args: ['class.tui-group_orientation_vertical']
            }], sizeLarge: [{
                type: HostBinding,
                args: ['class.tui-group_radius_large']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9jb21wb25lbnRzL2dyb3VwL2dyb3VwLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBQyx5QkFBeUIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUd4RCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQzs7O0FBU2pFLE1BQU0sT0FBTyxpQkFBaUI7SUFtQjFCLFlBQ3VDLGVBQTBDO1FBbEJqRixnQkFBVyxHQUFtQixZQUFZLENBQUM7UUFJM0MsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUlqQixjQUFTLEdBQUcsS0FBSyxDQUFDO1FBSWxCLFlBQU8sR0FBRyxJQUFJLENBQUM7UUFHZixTQUFJLEdBQWEsR0FBRyxDQUFDO1FBS2pCLGVBQWUsQ0FBQyxZQUFZLENBQUMsdUJBQXVCLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBRUQsSUFDSSxxQkFBcUI7UUFDckIsT0FBTyxJQUFJLENBQUMsV0FBVyxLQUFLLFlBQVksQ0FBQztJQUM3QyxDQUFDO0lBRUQsSUFDSSxtQkFBbUI7UUFDbkIsT0FBTyxJQUFJLENBQUMsV0FBVyxLQUFLLFVBQVUsQ0FBQztJQUMzQyxDQUFDO0lBRUQsSUFDSSxTQUFTO1FBQ1QsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLEdBQUcsQ0FBQztJQUM3QixDQUFDOzsrR0F0Q1EsaUJBQWlCLGtCQW9CZCx5QkFBeUI7bUdBcEI1QixpQkFBaUI7NEZBQWpCLGlCQUFpQjtrQkFQN0IsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsOEJBQThCO29CQUN4QyxJQUFJLEVBQUU7d0JBQ0YsS0FBSyxFQUFFLFdBQVc7d0JBQ2xCLElBQUksRUFBRSxPQUFPO3FCQUNoQjtpQkFDSjs7MEJBcUJRLE1BQU07MkJBQUMseUJBQXlCOzRDQWxCckMsV0FBVztzQkFEVixLQUFLO2dCQUtOLFFBQVE7c0JBRlAsS0FBSzs7c0JBQ0wsV0FBVzt1QkFBQywwQkFBMEI7Z0JBS3ZDLFNBQVM7c0JBRlIsS0FBSzs7c0JBQ0wsV0FBVzt1QkFBQywyQkFBMkI7Z0JBS3hDLE9BQU87c0JBRk4sS0FBSzs7c0JBQ0wsV0FBVzt1QkFBQyx5QkFBeUI7Z0JBSXRDLElBQUk7c0JBREgsS0FBSztnQkFVRixxQkFBcUI7c0JBRHhCLFdBQVc7dUJBQUMsd0NBQXdDO2dCQU1qRCxtQkFBbUI7c0JBRHRCLFdBQVc7dUJBQUMsc0NBQXNDO2dCQU0vQyxTQUFTO3NCQURaLFdBQVc7dUJBQUMsOEJBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEhvc3RCaW5kaW5nLCBJbmplY3QsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpRGlyZWN0aXZlU3R5bGVzU2VydmljZX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge1R1aU9yaWVudGF0aW9uLCBUdWlTaXplTH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdHlwZXMnO1xuXG5pbXBvcnQge1R1aUdyb3VwU3R5bGVzQ29tcG9uZW50fSBmcm9tICcuL2dyb3VwLXN0eWxlcy5jb21wb25lbnQnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0dWlHcm91cF06bm90KG5nLWNvbnRhaW5lciknLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgY2xhc3M6ICd0dWktZ3JvdXAnLFxuICAgICAgICByb2xlOiAnZ3JvdXAnLFxuICAgIH0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aUdyb3VwRGlyZWN0aXZlIHtcbiAgICBASW5wdXQoKVxuICAgIG9yaWVudGF0aW9uOiBUdWlPcmllbnRhdGlvbiA9ICdob3Jpem9udGFsJztcblxuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy50dWktZ3JvdXBfYWRhcHRpdmUnKVxuICAgIGFkYXB0aXZlID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MudHVpLWdyb3VwX2NvbGxhcHNlZCcpXG4gICAgY29sbGFwc2VkID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIEBIb3N0QmluZGluZygnY2xhc3MudHVpLWdyb3VwX3JvdW5kZWQnKVxuICAgIHJvdW5kZWQgPSB0cnVlO1xuXG4gICAgQElucHV0KClcbiAgICBzaXplOiBUdWlTaXplTCA9ICdtJztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFR1aURpcmVjdGl2ZVN0eWxlc1NlcnZpY2UpIGRpcmVjdGl2ZVN0eWxlczogVHVpRGlyZWN0aXZlU3R5bGVzU2VydmljZSxcbiAgICApIHtcbiAgICAgICAgZGlyZWN0aXZlU3R5bGVzLmFkZENvbXBvbmVudChUdWlHcm91cFN0eWxlc0NvbXBvbmVudCk7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy50dWktZ3JvdXBfb3JpZW50YXRpb25faG9yaXpvbnRhbCcpXG4gICAgZ2V0IG9yaWVudGF0aW9uSG9yaXpvbnRhbCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3JpZW50YXRpb24gPT09ICdob3Jpem9udGFsJztcbiAgICB9XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLnR1aS1ncm91cF9vcmllbnRhdGlvbl92ZXJ0aWNhbCcpXG4gICAgZ2V0IG9yaWVudGF0aW9uVmVydGljYWwoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLm9yaWVudGF0aW9uID09PSAndmVydGljYWwnO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MudHVpLWdyb3VwX3JhZGl1c19sYXJnZScpXG4gICAgZ2V0IHNpemVMYXJnZSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2l6ZSA9PT0gJ2wnO1xuICAgIH1cbn1cbiJdfQ==
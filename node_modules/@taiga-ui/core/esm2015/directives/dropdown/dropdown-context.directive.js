import { __decorate } from "tslib";
import { Directive, HostBinding, HostListener, Inject } from '@angular/core';
import { EMPTY_CLIENT_RECT, TUI_IS_IOS, TUI_TOUCH_SUPPORTED, TuiActiveZoneDirective, tuiPointToClientRect, } from '@taiga-ui/cdk';
import { tuiAsDriver, tuiAsRectAccessor, TuiDriver, } from '@taiga-ui/core/abstract';
import { shouldCall } from '@tinkoff/ng-event-plugins';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk";
function activeZoneFilter(target) {
    return !this.activeZone.contains(target);
}
const TAP_DELAY = 700;
const MOVE_THRESHOLD = 15;
export class TuiDropdownContextDirective extends TuiDriver {
    constructor(activeZone, isIOS, isTouch) {
        super(subscriber => this.stream$.subscribe(subscriber));
        this.activeZone = activeZone;
        this.isIOS = isIOS;
        this.isTouch = isTouch;
        this.stream$ = new Subject();
        this.currentRect = EMPTY_CLIENT_RECT;
        this.longTapTimeout = NaN;
        this.type = 'dropdown';
    }
    get userSelect() {
        return this.isTouch ? 'none' : null;
    }
    onContextMenu(x, y) {
        this.currentRect = tuiPointToClientRect(x, y);
        this.stream$.next(true);
    }
    closeDropdown() {
        this.stream$.next(false);
        this.currentRect = EMPTY_CLIENT_RECT;
    }
    onTouchMove(x, y) {
        if (this.isIOS &&
            this.isTouch &&
            this.currentRect !== EMPTY_CLIENT_RECT &&
            Math.hypot(x - this.currentRect.x, y - this.currentRect.y) > MOVE_THRESHOLD) {
            this.onTouchEnd();
        }
    }
    onTouchStart(x, y) {
        if (!this.isIOS || !this.isTouch || this.currentRect !== EMPTY_CLIENT_RECT) {
            return;
        }
        this.currentRect = tuiPointToClientRect(x, y);
        this.longTapTimeout = setTimeout(() => {
            this.stream$.next(true);
        }, TAP_DELAY);
    }
    onTouchEnd() {
        if (this.isIOS && this.isTouch) {
            clearTimeout(this.longTapTimeout);
        }
    }
    getClientRect() {
        return this.currentRect;
    }
}
TuiDropdownContextDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDropdownContextDirective, deps: [{ token: TuiActiveZoneDirective }, { token: TUI_IS_IOS }, { token: TUI_TOUCH_SUPPORTED }], target: i0.ɵɵFactoryTarget.Directive });
TuiDropdownContextDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiDropdownContextDirective, selector: "[tuiDropdown][tuiDropdownContext]", host: { listeners: { "contextmenu.prevent.stop": "onContextMenu($event.clientX,$event.clientY)", "document:click.silent": "closeDropdown($event.target)", "document:contextmenu.capture.silent": "closeDropdown($event.target)", "document:keydown.esc": "closeDropdown($event.currentTarget)", "touchmove.silent.passive": "onTouchMove($event.touches[0].clientX,$event.touches[0].clientY)", "touchstart.silent.passive": "onTouchStart($event.touches[0].clientX,$event.touches[0].clientY)", "touchend.silent.passive": "onTouchEnd()", "touchcancel.silent.passive": "onTouchEnd()" }, properties: { "style.user-select": "this.userSelect", "style.-webkit-touch-callout": "this.userSelect", "style.-webkit-user-select": "this.userSelect" } }, providers: [
        TuiActiveZoneDirective,
        tuiAsDriver(TuiDropdownContextDirective),
        tuiAsRectAccessor(TuiDropdownContextDirective),
    ], usesInheritance: true, ngImport: i0 });
__decorate([
    shouldCall(activeZoneFilter)
], TuiDropdownContextDirective.prototype, "closeDropdown", null);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDropdownContextDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiDropdown][tuiDropdownContext]',
                    providers: [
                        TuiActiveZoneDirective,
                        tuiAsDriver(TuiDropdownContextDirective),
                        tuiAsRectAccessor(TuiDropdownContextDirective),
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i1.TuiActiveZoneDirective, decorators: [{
                    type: Inject,
                    args: [TuiActiveZoneDirective]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_IS_IOS]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_TOUCH_SUPPORTED]
                }] }]; }, propDecorators: { userSelect: [{
                type: HostBinding,
                args: ['style.user-select']
            }, {
                type: HostBinding,
                args: ['style.-webkit-touch-callout']
            }, {
                type: HostBinding,
                args: ['style.-webkit-user-select']
            }], onContextMenu: [{
                type: HostListener,
                args: ['contextmenu.prevent.stop', ['$event.clientX', '$event.clientY']]
            }], closeDropdown: [{
                type: HostListener,
                args: ['document:click.silent', ['$event.target']]
            }, {
                type: HostListener,
                args: ['document:contextmenu.capture.silent', ['$event.target']]
            }, {
                type: HostListener,
                args: ['document:keydown.esc', ['$event.currentTarget']]
            }], onTouchMove: [{
                type: HostListener,
                args: ['touchmove.silent.passive', [
                        '$event.touches[0].clientX',
                        '$event.touches[0].clientY',
                    ]]
            }], onTouchStart: [{
                type: HostListener,
                args: ['touchstart.silent.passive', [
                        '$event.touches[0].clientX',
                        '$event.touches[0].clientY',
                    ]]
            }], onTouchEnd: [{
                type: HostListener,
                args: ['touchend.silent.passive']
            }, {
                type: HostListener,
                args: ['touchcancel.silent.passive']
            }] } });
//# sourceMappingURL=data:application/json;base64,
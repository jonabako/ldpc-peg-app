import { Directive, Inject, Input, Optional, SkipSelf } from '@angular/core';
import { TuiHoveredService } from '@taiga-ui/cdk';
import { tuiAsDriver, TuiDriver } from '@taiga-ui/core/abstract';
import { merge, of, Subject } from 'rxjs';
import { delay, share, switchMap, tap } from 'rxjs/operators';
import { TUI_DROPDOWN_HOVER_OPTIONS, } from './dropdown-hover.options';
import * as i0 from "@angular/core";
import * as i1 from "rxjs";
export class TuiDropdownHoverDirective extends TuiDriver {
    constructor(hovered$, options, parentHover) {
        super(subscriber => this.stream$.subscribe(subscriber));
        this.hovered$ = hovered$;
        this.options = options;
        this.parentHover = parentHover;
        this.toggle$ = new Subject();
        this.stream$ = merge(this.toggle$, this.hovered$).pipe(switchMap(visible => of(visible).pipe(delay(visible ? this.showDelay : this.hideDelay))), tap(visible => {
            this.hovered = visible;
        }), share());
        this.showDelay = this.options.showDelay;
        this.hideDelay = this.options.hideDelay;
        this.hovered = false;
        this.type = 'dropdown';
    }
    toggle(visible) {
        var _a;
        (_a = this.parentHover) === null || _a === void 0 ? void 0 : _a.toggle(visible);
        this.toggle$.next(visible);
    }
}
TuiDropdownHoverDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDropdownHoverDirective, deps: [{ token: TuiHoveredService }, { token: TUI_DROPDOWN_HOVER_OPTIONS }, { token: TuiDropdownHoverDirective, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });
TuiDropdownHoverDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiDropdownHoverDirective, selector: "[tuiDropdownHover]:not(ng-container)", inputs: { showDelay: ["tuiDropdownShowDelay", "showDelay"], hideDelay: ["tuiDropdownHideDelay", "hideDelay"] }, providers: [tuiAsDriver(TuiDropdownHoverDirective), TuiHoveredService], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiDropdownHoverDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiDropdownHover]:not(ng-container)',
                    providers: [tuiAsDriver(TuiDropdownHoverDirective), TuiHoveredService],
                }]
        }], ctorParameters: function () { return [{ type: i1.Observable, decorators: [{
                    type: Inject,
                    args: [TuiHoveredService]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [TUI_DROPDOWN_HOVER_OPTIONS]
                }] }, { type: TuiDropdownHoverDirective, decorators: [{
                    type: SkipSelf
                }, {
                    type: Optional
                }, {
                    type: Inject,
                    args: [TuiDropdownHoverDirective]
                }] }]; }, propDecorators: { showDelay: [{
                type: Input,
                args: ['tuiDropdownShowDelay']
            }], hideDelay: [{
                type: Input,
                args: ['tuiDropdownHideDelay']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24taG92ZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9kaXJlY3RpdmVzL2Ryb3Bkb3duL2Ryb3Bkb3duLWhvdmVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEQsT0FBTyxFQUFDLFdBQVcsRUFBRSxTQUFTLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUMvRCxPQUFPLEVBQUMsS0FBSyxFQUFjLEVBQUUsRUFBRSxPQUFPLEVBQUMsTUFBTSxNQUFNLENBQUM7QUFDcEQsT0FBTyxFQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRTVELE9BQU8sRUFDSCwwQkFBMEIsR0FFN0IsTUFBTSwwQkFBMEIsQ0FBQzs7O0FBTWxDLE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxTQUFTO0lBc0JwRCxZQUNnRCxRQUE2QixFQUV4RCxPQUFnQyxFQUloQyxXQUE2QztRQUU5RCxLQUFLLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1FBUlosYUFBUSxHQUFSLFFBQVEsQ0FBcUI7UUFFeEQsWUFBTyxHQUFQLE9BQU8sQ0FBeUI7UUFJaEMsZ0JBQVcsR0FBWCxXQUFXLENBQWtDO1FBNUJqRCxZQUFPLEdBQUcsSUFBSSxPQUFPLEVBQVcsQ0FBQztRQUNqQyxZQUFPLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FDOUQsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQ2hCLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQ3JFLEVBQ0QsR0FBRyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDM0IsQ0FBQyxDQUFDLEVBQ0YsS0FBSyxFQUFFLENBQ1YsQ0FBQztRQUdGLGNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQztRQUduQyxjQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFFbkMsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUVQLFNBQUksR0FBRyxVQUFVLENBQUM7SUFZM0IsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFnQjs7UUFDbkIsTUFBQSxJQUFJLENBQUMsV0FBVywwQ0FBRSxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsQ0FBQzs7dUhBckNRLHlCQUF5QixrQkF1QnRCLGlCQUFpQixhQUNqQiwwQkFBMEIsYUFJMUIseUJBQXlCOzJHQTVCNUIseUJBQXlCLCtLQUZ2QixDQUFDLFdBQVcsQ0FBQyx5QkFBeUIsQ0FBQyxFQUFFLGlCQUFpQixDQUFDOzRGQUU3RCx5QkFBeUI7a0JBSnJDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLHNDQUFzQztvQkFDaEQsU0FBUyxFQUFFLENBQUMsV0FBVywyQkFBMkIsRUFBRSxpQkFBaUIsQ0FBQztpQkFDekU7OzBCQXdCUSxNQUFNOzJCQUFDLGlCQUFpQjs7MEJBQ3hCLE1BQU07MkJBQUMsMEJBQTBCOzhCQUtKLHlCQUF5QjswQkFIdEQsUUFBUTs7MEJBQ1IsUUFBUTs7MEJBQ1IsTUFBTTsyQkFBQyx5QkFBeUI7NENBZnJDLFNBQVM7c0JBRFIsS0FBSzt1QkFBQyxzQkFBc0I7Z0JBSTdCLFNBQVM7c0JBRFIsS0FBSzt1QkFBQyxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgSW5qZWN0LCBJbnB1dCwgT3B0aW9uYWwsIFNraXBTZWxmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VHVpSG92ZXJlZFNlcnZpY2V9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHt0dWlBc0RyaXZlciwgVHVpRHJpdmVyfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9hYnN0cmFjdCc7XG5pbXBvcnQge21lcmdlLCBPYnNlcnZhYmxlLCBvZiwgU3ViamVjdH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge2RlbGF5LCBzaGFyZSwgc3dpdGNoTWFwLCB0YXB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0IHtcbiAgICBUVUlfRFJPUERPV05fSE9WRVJfT1BUSU9OUyxcbiAgICBUdWlEcm9wZG93bkhvdmVyT3B0aW9ucyxcbn0gZnJvbSAnLi9kcm9wZG93bi1ob3Zlci5vcHRpb25zJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpRHJvcGRvd25Ib3Zlcl06bm90KG5nLWNvbnRhaW5lciknLFxuICAgIHByb3ZpZGVyczogW3R1aUFzRHJpdmVyKFR1aURyb3Bkb3duSG92ZXJEaXJlY3RpdmUpLCBUdWlIb3ZlcmVkU2VydmljZV0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aURyb3Bkb3duSG92ZXJEaXJlY3RpdmUgZXh0ZW5kcyBUdWlEcml2ZXIge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgdG9nZ2xlJCA9IG5ldyBTdWJqZWN0PGJvb2xlYW4+KCk7XG4gICAgcHJpdmF0ZSByZWFkb25seSBzdHJlYW0kID0gbWVyZ2UodGhpcy50b2dnbGUkLCB0aGlzLmhvdmVyZWQkKS5waXBlKFxuICAgICAgICBzd2l0Y2hNYXAodmlzaWJsZSA9PlxuICAgICAgICAgICAgb2YodmlzaWJsZSkucGlwZShkZWxheSh2aXNpYmxlID8gdGhpcy5zaG93RGVsYXkgOiB0aGlzLmhpZGVEZWxheSkpLFxuICAgICAgICApLFxuICAgICAgICB0YXAodmlzaWJsZSA9PiB7XG4gICAgICAgICAgICB0aGlzLmhvdmVyZWQgPSB2aXNpYmxlO1xuICAgICAgICB9KSxcbiAgICAgICAgc2hhcmUoKSxcbiAgICApO1xuXG4gICAgQElucHV0KCd0dWlEcm9wZG93blNob3dEZWxheScpXG4gICAgc2hvd0RlbGF5ID0gdGhpcy5vcHRpb25zLnNob3dEZWxheTtcblxuICAgIEBJbnB1dCgndHVpRHJvcGRvd25IaWRlRGVsYXknKVxuICAgIGhpZGVEZWxheSA9IHRoaXMub3B0aW9ucy5oaWRlRGVsYXk7XG5cbiAgICBob3ZlcmVkID0gZmFsc2U7XG5cbiAgICByZWFkb25seSB0eXBlID0gJ2Ryb3Bkb3duJztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFR1aUhvdmVyZWRTZXJ2aWNlKSBwcml2YXRlIHJlYWRvbmx5IGhvdmVyZWQkOiBPYnNlcnZhYmxlPGJvb2xlYW4+LFxuICAgICAgICBASW5qZWN0KFRVSV9EUk9QRE9XTl9IT1ZFUl9PUFRJT05TKVxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IG9wdGlvbnM6IFR1aURyb3Bkb3duSG92ZXJPcHRpb25zLFxuICAgICAgICBAU2tpcFNlbGYoKVxuICAgICAgICBAT3B0aW9uYWwoKVxuICAgICAgICBASW5qZWN0KFR1aURyb3Bkb3duSG92ZXJEaXJlY3RpdmUpXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgcGFyZW50SG92ZXI6IFR1aURyb3Bkb3duSG92ZXJEaXJlY3RpdmUgfCBudWxsLFxuICAgICkge1xuICAgICAgICBzdXBlcihzdWJzY3JpYmVyID0+IHRoaXMuc3RyZWFtJC5zdWJzY3JpYmUoc3Vic2NyaWJlcikpO1xuICAgIH1cblxuICAgIHRvZ2dsZSh2aXNpYmxlOiBib29sZWFuKTogdm9pZCB7XG4gICAgICAgIHRoaXMucGFyZW50SG92ZXI/LnRvZ2dsZSh2aXNpYmxlKTtcbiAgICAgICAgdGhpcy50b2dnbGUkLm5leHQodmlzaWJsZSk7XG4gICAgfVxufVxuIl19
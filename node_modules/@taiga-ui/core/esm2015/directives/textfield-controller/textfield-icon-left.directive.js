import { Directive, forwardRef, Input } from '@angular/core';
import { AbstractTuiController, tuiCreateTokenFromFactory, } from '@taiga-ui/cdk';
import * as i0 from "@angular/core";
export const TUI_TEXTFIELD_ICON_LEFT = tuiCreateTokenFromFactory(() => new TuiTextfieldIconLeftDirective());
export class TuiTextfieldIconLeftDirective extends AbstractTuiController {
}
TuiTextfieldIconLeftDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextfieldIconLeftDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TuiTextfieldIconLeftDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTextfieldIconLeftDirective, selector: "[tuiTextfieldIconLeft]", inputs: { iconLeft: ["tuiTextfieldIconLeft", "iconLeft"] }, providers: [
        {
            provide: TUI_TEXTFIELD_ICON_LEFT,
            useExisting: forwardRef(() => TuiTextfieldIconLeftDirective),
        },
    ], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextfieldIconLeftDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiTextfieldIconLeft]',
                    providers: [
                        {
                            provide: TUI_TEXTFIELD_ICON_LEFT,
                            useExisting: forwardRef(() => TuiTextfieldIconLeftDirective),
                        },
                    ],
                }]
        }], propDecorators: { iconLeft: [{
                type: Input,
                args: ['tuiTextfieldIconLeft']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLWljb24tbGVmdC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL2RpcmVjdGl2ZXMvdGV4dGZpZWxkLWNvbnRyb2xsZXIvdGV4dGZpZWxkLWljb24tbGVmdC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sRUFDSCxxQkFBcUIsRUFFckIseUJBQXlCLEdBQzVCLE1BQU0sZUFBZSxDQUFDOztBQUl2QixNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyx5QkFBeUIsQ0FDNUQsR0FBRyxFQUFFLENBQUMsSUFBSSw2QkFBNkIsRUFBRSxDQUM1QyxDQUFDO0FBV0YsTUFBTSxPQUFPLDZCQUE4QixTQUFRLHFCQUFxQjs7MkhBQTNELDZCQUE2QjsrR0FBN0IsNkJBQTZCLDZHQVAzQjtRQUNQO1lBQ0ksT0FBTyxFQUFFLHVCQUF1QjtZQUNoQyxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLDZCQUE2QixDQUFDO1NBQy9EO0tBQ0o7NEZBRVEsNkJBQTZCO2tCQVR6QyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLFNBQVMsRUFBRTt3QkFDUDs0QkFDSSxPQUFPLEVBQUUsdUJBQXVCOzRCQUNoQyxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSw4QkFBOEIsQ0FBQzt5QkFDL0Q7cUJBQ0o7aUJBQ0o7OEJBR0csUUFBUTtzQkFEUCxLQUFLO3VCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBmb3J3YXJkUmVmLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICAgIEFic3RyYWN0VHVpQ29udHJvbGxlcixcbiAgICBUdWlDb250ZXh0V2l0aEltcGxpY2l0LFxuICAgIHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnksXG59IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlTaXplTCwgVHVpU2l6ZVN9IGZyb20gJ0B0YWlnYS11aS9jb3JlL3R5cGVzJztcbmltcG9ydCB7UG9seW1vcnBoZXVzQ29udGVudH0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcblxuZXhwb3J0IGNvbnN0IFRVSV9URVhURklFTERfSUNPTl9MRUZUID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICAoKSA9PiBuZXcgVHVpVGV4dGZpZWxkSWNvbkxlZnREaXJlY3RpdmUoKSxcbik7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aVRleHRmaWVsZEljb25MZWZ0XScsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IFRVSV9URVhURklFTERfSUNPTl9MRUZULFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVHVpVGV4dGZpZWxkSWNvbkxlZnREaXJlY3RpdmUpLFxuICAgICAgICB9LFxuICAgIF0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aVRleHRmaWVsZEljb25MZWZ0RGlyZWN0aXZlIGV4dGVuZHMgQWJzdHJhY3RUdWlDb250cm9sbGVyIHtcbiAgICBASW5wdXQoJ3R1aVRleHRmaWVsZEljb25MZWZ0JylcbiAgICBpY29uTGVmdDogUG9seW1vcnBoZXVzQ29udGVudDxUdWlDb250ZXh0V2l0aEltcGxpY2l0PFR1aVNpemVMIHwgVHVpU2l6ZVM+Pjtcbn1cbiJdfQ==
import { Directive, forwardRef, Input } from '@angular/core';
import { AbstractTuiController, tuiCreateTokenFromFactory } from '@taiga-ui/cdk';
import * as i0 from "@angular/core";
export const TUI_TEXTFIELD_LABEL_OUTSIDE = tuiCreateTokenFromFactory(() => new TuiTextfieldLabelOutsideDirective());
export class TuiTextfieldLabelOutsideDirective extends AbstractTuiController {
    constructor() {
        super(...arguments);
        this.labelOutside = false;
    }
}
TuiTextfieldLabelOutsideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextfieldLabelOutsideDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TuiTextfieldLabelOutsideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTextfieldLabelOutsideDirective, selector: "[tuiTextfieldLabelOutside]", inputs: { labelOutside: ["tuiTextfieldLabelOutside", "labelOutside"] }, providers: [
        {
            provide: TUI_TEXTFIELD_LABEL_OUTSIDE,
            useExisting: forwardRef(() => TuiTextfieldLabelOutsideDirective),
        },
    ], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextfieldLabelOutsideDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiTextfieldLabelOutside]',
                    providers: [
                        {
                            provide: TUI_TEXTFIELD_LABEL_OUTSIDE,
                            useExisting: forwardRef(() => TuiTextfieldLabelOutsideDirective),
                        },
                    ],
                }]
        }], propDecorators: { labelOutside: [{
                type: Input,
                args: ['tuiTextfieldLabelOutside']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLWxhYmVsLW91dHNpZGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9kaXJlY3RpdmVzL3RleHRmaWVsZC1jb250cm9sbGVyL3RleHRmaWVsZC1sYWJlbC1vdXRzaWRlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDM0QsT0FBTyxFQUFDLHFCQUFxQixFQUFFLHlCQUF5QixFQUFDLE1BQU0sZUFBZSxDQUFDOztBQUUvRSxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRyx5QkFBeUIsQ0FDaEUsR0FBRyxFQUFFLENBQUMsSUFBSSxpQ0FBaUMsRUFBRSxDQUNoRCxDQUFDO0FBV0YsTUFBTSxPQUFPLGlDQUFrQyxTQUFRLHFCQUFxQjtJQVQ1RTs7UUFXSSxpQkFBWSxHQUFHLEtBQUssQ0FBQztLQUN4Qjs7K0hBSFksaUNBQWlDO21IQUFqQyxpQ0FBaUMsNkhBUC9CO1FBQ1A7WUFDSSxPQUFPLEVBQUUsMkJBQTJCO1lBQ3BDLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsaUNBQWlDLENBQUM7U0FDbkU7S0FDSjs0RkFFUSxpQ0FBaUM7a0JBVDdDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLDRCQUE0QjtvQkFDdEMsU0FBUyxFQUFFO3dCQUNQOzRCQUNJLE9BQU8sRUFBRSwyQkFBMkI7NEJBQ3BDLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLGtDQUFrQyxDQUFDO3lCQUNuRTtxQkFDSjtpQkFDSjs4QkFHRyxZQUFZO3NCQURYLEtBQUs7dUJBQUMsMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIGZvcndhcmRSZWYsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7QWJzdHJhY3RUdWlDb250cm9sbGVyLCB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5fSBmcm9tICdAdGFpZ2EtdWkvY2RrJztcblxuZXhwb3J0IGNvbnN0IFRVSV9URVhURklFTERfTEFCRUxfT1VUU0lERSA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnkoXG4gICAgKCkgPT4gbmV3IFR1aVRleHRmaWVsZExhYmVsT3V0c2lkZURpcmVjdGl2ZSgpLFxuKTtcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlXScsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IFRVSV9URVhURklFTERfTEFCRUxfT1VUU0lERSxcbiAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFR1aVRleHRmaWVsZExhYmVsT3V0c2lkZURpcmVjdGl2ZSksXG4gICAgICAgIH0sXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpVGV4dGZpZWxkTGFiZWxPdXRzaWRlRGlyZWN0aXZlIGV4dGVuZHMgQWJzdHJhY3RUdWlDb250cm9sbGVyIHtcbiAgICBASW5wdXQoJ3R1aVRleHRmaWVsZExhYmVsT3V0c2lkZScpXG4gICAgbGFiZWxPdXRzaWRlID0gZmFsc2U7XG59XG4iXX0=
import { Directive, forwardRef, Input } from '@angular/core';
import { AbstractTuiController, tuiCreateTokenFromFactory } from '@taiga-ui/cdk';
import * as i0 from "@angular/core";
export const TUI_TEXTFIELD_PREFIX = tuiCreateTokenFromFactory(() => new TuiTextfieldPrefixDirective());
export class TuiTextfieldPrefixDirective extends AbstractTuiController {
    constructor() {
        super(...arguments);
        this.prefix = '';
    }
}
TuiTextfieldPrefixDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextfieldPrefixDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TuiTextfieldPrefixDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTextfieldPrefixDirective, selector: "[tuiTextfieldPrefix]", inputs: { prefix: ["tuiTextfieldPrefix", "prefix"] }, providers: [
        {
            provide: TUI_TEXTFIELD_PREFIX,
            useExisting: forwardRef(() => TuiTextfieldPrefixDirective),
        },
    ], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextfieldPrefixDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiTextfieldPrefix]',
                    providers: [
                        {
                            provide: TUI_TEXTFIELD_PREFIX,
                            useExisting: forwardRef(() => TuiTextfieldPrefixDirective),
                        },
                    ],
                }]
        }], propDecorators: { prefix: [{
                type: Input,
                args: ['tuiTextfieldPrefix']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLXByZWZpeC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL2RpcmVjdGl2ZXMvdGV4dGZpZWxkLWNvbnRyb2xsZXIvdGV4dGZpZWxkLXByZWZpeC5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sRUFBQyxxQkFBcUIsRUFBRSx5QkFBeUIsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7QUFFL0UsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcseUJBQXlCLENBQ3pELEdBQUcsRUFBRSxDQUFDLElBQUksMkJBQTJCLEVBQUUsQ0FDMUMsQ0FBQztBQVdGLE1BQU0sT0FBTywyQkFBNEIsU0FBUSxxQkFBcUI7SUFUdEU7O1FBV0ksV0FBTSxHQUFHLEVBQUUsQ0FBQztLQUNmOzt5SEFIWSwyQkFBMkI7NkdBQTNCLDJCQUEyQixxR0FQekI7UUFDUDtZQUNJLE9BQU8sRUFBRSxvQkFBb0I7WUFDN0IsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQztTQUM3RDtLQUNKOzRGQUVRLDJCQUEyQjtrQkFUdkMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyxTQUFTLEVBQUU7d0JBQ1A7NEJBQ0ksT0FBTyxFQUFFLG9CQUFvQjs0QkFDN0IsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsNEJBQTRCLENBQUM7eUJBQzdEO3FCQUNKO2lCQUNKOzhCQUdHLE1BQU07c0JBREwsS0FBSzt1QkFBQyxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgZm9yd2FyZFJlZiwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtBYnN0cmFjdFR1aUNvbnRyb2xsZXIsIHR1aUNyZWF0ZVRva2VuRnJvbUZhY3Rvcnl9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuXG5leHBvcnQgY29uc3QgVFVJX1RFWFRGSUVMRF9QUkVGSVggPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KFxuICAgICgpID0+IG5ldyBUdWlUZXh0ZmllbGRQcmVmaXhEaXJlY3RpdmUoKSxcbik7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW3R1aVRleHRmaWVsZFByZWZpeF0nLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUVUlfVEVYVEZJRUxEX1BSRUZJWCxcbiAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFR1aVRleHRmaWVsZFByZWZpeERpcmVjdGl2ZSksXG4gICAgICAgIH0sXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpVGV4dGZpZWxkUHJlZml4RGlyZWN0aXZlIGV4dGVuZHMgQWJzdHJhY3RUdWlDb250cm9sbGVyIHtcbiAgICBASW5wdXQoJ3R1aVRleHRmaWVsZFByZWZpeCcpXG4gICAgcHJlZml4ID0gJyc7XG59XG4iXX0=
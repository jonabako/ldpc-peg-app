import { Directive, forwardRef, Input } from '@angular/core';
import { AbstractTuiController, tuiCreateTokenFromFactory } from '@taiga-ui/cdk';
import * as i0 from "@angular/core";
export const TUI_TEXTFIELD_CLEANER = tuiCreateTokenFromFactory(() => new TuiTextfieldCleanerDirective());
export class TuiTextfieldCleanerDirective extends AbstractTuiController {
    constructor() {
        super(...arguments);
        this.cleaner = false;
    }
}
TuiTextfieldCleanerDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextfieldCleanerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });
TuiTextfieldCleanerDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiTextfieldCleanerDirective, selector: "[tuiTextfieldCleaner]", inputs: { cleaner: ["tuiTextfieldCleaner", "cleaner"] }, providers: [
        {
            provide: TUI_TEXTFIELD_CLEANER,
            useExisting: forwardRef(() => TuiTextfieldCleanerDirective),
        },
    ], usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiTextfieldCleanerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tuiTextfieldCleaner]',
                    providers: [
                        {
                            provide: TUI_TEXTFIELD_CLEANER,
                            useExisting: forwardRef(() => TuiTextfieldCleanerDirective),
                        },
                    ],
                }]
        }], propDecorators: { cleaner: [{
                type: Input,
                args: ['tuiTextfieldCleaner']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dGZpZWxkLWNsZWFuZXIuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9kaXJlY3RpdmVzL3RleHRmaWVsZC1jb250cm9sbGVyL3RleHRmaWVsZC1jbGVhbmVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDM0QsT0FBTyxFQUFDLHFCQUFxQixFQUFFLHlCQUF5QixFQUFDLE1BQU0sZUFBZSxDQUFDOztBQUUvRSxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyx5QkFBeUIsQ0FDMUQsR0FBRyxFQUFFLENBQUMsSUFBSSw0QkFBNEIsRUFBRSxDQUMzQyxDQUFDO0FBV0YsTUFBTSxPQUFPLDRCQUE2QixTQUFRLHFCQUFxQjtJQVR2RTs7UUFXSSxZQUFPLEdBQUcsS0FBSyxDQUFDO0tBQ25COzswSEFIWSw0QkFBNEI7OEdBQTVCLDRCQUE0Qix5R0FQMUI7UUFDUDtZQUNJLE9BQU8sRUFBRSxxQkFBcUI7WUFDOUIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQztTQUM5RDtLQUNKOzRGQUVRLDRCQUE0QjtrQkFUeEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyxTQUFTLEVBQUU7d0JBQ1A7NEJBQ0ksT0FBTyxFQUFFLHFCQUFxQjs0QkFDOUIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsNkJBQTZCLENBQUM7eUJBQzlEO3FCQUNKO2lCQUNKOzhCQUdHLE9BQU87c0JBRE4sS0FBSzt1QkFBQyxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgZm9yd2FyZFJlZiwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtBYnN0cmFjdFR1aUNvbnRyb2xsZXIsIHR1aUNyZWF0ZVRva2VuRnJvbUZhY3Rvcnl9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuXG5leHBvcnQgY29uc3QgVFVJX1RFWFRGSUVMRF9DTEVBTkVSID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICAoKSA9PiBuZXcgVHVpVGV4dGZpZWxkQ2xlYW5lckRpcmVjdGl2ZSgpLFxuKTtcblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdHVpVGV4dGZpZWxkQ2xlYW5lcl0nLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUVUlfVEVYVEZJRUxEX0NMRUFORVIsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUdWlUZXh0ZmllbGRDbGVhbmVyRGlyZWN0aXZlKSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlUZXh0ZmllbGRDbGVhbmVyRGlyZWN0aXZlIGV4dGVuZHMgQWJzdHJhY3RUdWlDb250cm9sbGVyIHtcbiAgICBASW5wdXQoJ3R1aVRleHRmaWVsZENsZWFuZXInKVxuICAgIGNsZWFuZXIgPSBmYWxzZTtcbn1cbiJdfQ==
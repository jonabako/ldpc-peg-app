import { ChangeDetectionStrategy, Component, Directive, Inject, TemplateRef, } from '@angular/core';
import { TUI_PARENT_ANIMATION } from '@taiga-ui/cdk';
import { POLYMORPHEUS_CONTEXT, PolymorpheusComponent } from '@tinkoff/ng-polymorpheus';
import { TuiHintDirective } from './hint.directive';
import * as i0 from "@angular/core";
import * as i1 from "@tinkoff/ng-polymorpheus";
import * as i2 from "./hint.directive";
export class TuiHintUnstyledComponent {
    constructor(context) {
        this.context = context;
    }
}
TuiHintUnstyledComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintUnstyledComponent, deps: [{ token: POLYMORPHEUS_CONTEXT }], target: i0.ɵɵFactoryTarget.Component });
TuiHintUnstyledComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintUnstyledComponent, selector: "ng-component", host: { properties: { "@tuiParentAnimation": "" } }, ngImport: i0, template: `
        <ng-container
            *polymorpheusOutlet="context.$implicit.content; context: context"
        ></ng-container>
    `, isInline: true, directives: [{ type: i1.PolymorpheusOutletDirective, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }], animations: [TUI_PARENT_ANIMATION], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintUnstyledComponent, decorators: [{
            type: Component,
            args: [{
                    template: `
        <ng-container
            *polymorpheusOutlet="context.$implicit.content; context: context"
        ></ng-container>
    `,
                    host: { '[@tuiParentAnimation]': '' },
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    animations: [TUI_PARENT_ANIMATION],
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [POLYMORPHEUS_CONTEXT]
                }] }]; } });
export class TuiHintUnstyledDirective {
    constructor(templateRef, hint) {
        hint.component = new PolymorpheusComponent(TuiHintUnstyledComponent);
        hint.content = templateRef;
    }
}
TuiHintUnstyledDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintUnstyledDirective, deps: [{ token: TemplateRef }, { token: TuiHintDirective }], target: i0.ɵɵFactoryTarget.Directive });
TuiHintUnstyledDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.2.17", type: TuiHintUnstyledDirective, selector: "ng-template[tuiHint]", providers: [
        {
            provide: POLYMORPHEUS_CONTEXT,
            useValue: { $implicit: {} },
        },
    ], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TuiHintUnstyledDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ng-template[tuiHint]',
                    providers: [
                        {
                            provide: POLYMORPHEUS_CONTEXT,
                            useValue: { $implicit: {} },
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{
                    type: Inject,
                    args: [TemplateRef]
                }] }, { type: i2.TuiHintDirective, decorators: [{
                    type: Inject,
                    args: [TuiHintDirective]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGludC11bnN0eWxlZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL2RpcmVjdGl2ZXMvaGludC9oaW50LXVuc3R5bGVkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxTQUFTLEVBQ1QsTUFBTSxFQUNOLFdBQVcsR0FDZCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsb0JBQW9CLEVBQXlCLE1BQU0sZUFBZSxDQUFDO0FBRTNFLE9BQU8sRUFBQyxvQkFBb0IsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBRXJGLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLGtCQUFrQixDQUFDOzs7O0FBWWxELE1BQU0sT0FBTyx3QkFBd0I7SUFDakMsWUFFYSxPQUE4QztRQUE5QyxZQUFPLEdBQVAsT0FBTyxDQUF1QztJQUN4RCxDQUFDOztzSEFKSyx3QkFBd0Isa0JBRXJCLG9CQUFvQjswR0FGdkIsd0JBQXdCLHlHQVR2Qjs7OztLQUlULHFMQUdXLENBQUMsb0JBQW9CLENBQUM7NEZBRXpCLHdCQUF3QjtrQkFWcEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUU7Ozs7S0FJVDtvQkFDRCxJQUFJLEVBQUUsRUFBQyx1QkFBdUIsRUFBRSxFQUFFLEVBQUM7b0JBQ25DLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxVQUFVLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztpQkFDckM7OzBCQUdRLE1BQU07MkJBQUMsb0JBQW9COztBQWNwQyxNQUFNLE9BQU8sd0JBQXdCO0lBQ2pDLFlBQ3lCLFdBQTJCLEVBQ3RCLElBQXlCO1FBRW5ELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxxQkFBcUIsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1FBQ3JFLElBQUksQ0FBQyxPQUFPLEdBQUcsV0FBVyxDQUFDO0lBQy9CLENBQUM7O3NIQVBRLHdCQUF3QixrQkFFckIsV0FBVyxhQUNYLGdCQUFnQjswR0FIbkIsd0JBQXdCLCtDQVB0QjtRQUNQO1lBQ0ksT0FBTyxFQUFFLG9CQUFvQjtZQUM3QixRQUFRLEVBQUUsRUFBQyxTQUFTLEVBQUUsRUFBRSxFQUFDO1NBQzVCO0tBQ0o7NEZBRVEsd0JBQXdCO2tCQVRwQyxTQUFTO21CQUFDO29CQUNQLFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFNBQVMsRUFBRTt3QkFDUDs0QkFDSSxPQUFPLEVBQUUsb0JBQW9COzRCQUM3QixRQUFRLEVBQUUsRUFBQyxTQUFTLEVBQUUsRUFBRSxFQUFDO3lCQUM1QjtxQkFDSjtpQkFDSjs7MEJBR1EsTUFBTTsyQkFBQyxXQUFXOzswQkFDbEIsTUFBTTsyQkFBQyxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBEaXJlY3RpdmUsXG4gICAgSW5qZWN0LFxuICAgIFRlbXBsYXRlUmVmLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VFVJX1BBUkVOVF9BTklNQVRJT04sIFR1aUNvbnRleHRXaXRoSW1wbGljaXR9IGZyb20gJ0B0YWlnYS11aS9jZGsnO1xuaW1wb3J0IHtUdWlQb3J0YWxJdGVtfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9pbnRlcmZhY2VzJztcbmltcG9ydCB7UE9MWU1PUlBIRVVTX0NPTlRFWFQsIFBvbHltb3JwaGV1c0NvbXBvbmVudH0gZnJvbSAnQHRpbmtvZmYvbmctcG9seW1vcnBoZXVzJztcblxuaW1wb3J0IHtUdWlIaW50RGlyZWN0aXZlfSBmcm9tICcuL2hpbnQuZGlyZWN0aXZlJztcblxuQENvbXBvbmVudCh7XG4gICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPG5nLWNvbnRhaW5lclxuICAgICAgICAgICAgKnBvbHltb3JwaGV1c091dGxldD1cImNvbnRleHQuJGltcGxpY2l0LmNvbnRlbnQ7IGNvbnRleHQ6IGNvbnRleHRcIlxuICAgICAgICA+PC9uZy1jb250YWluZXI+XG4gICAgYCxcbiAgICBob3N0OiB7J1tAdHVpUGFyZW50QW5pbWF0aW9uXSc6ICcnfSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBhbmltYXRpb25zOiBbVFVJX1BBUkVOVF9BTklNQVRJT05dLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlIaW50VW5zdHlsZWRDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFBPTFlNT1JQSEVVU19DT05URVhUKVxuICAgICAgICByZWFkb25seSBjb250ZXh0OiBUdWlDb250ZXh0V2l0aEltcGxpY2l0PFR1aVBvcnRhbEl0ZW0+LFxuICAgICkge31cbn1cblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICduZy10ZW1wbGF0ZVt0dWlIaW50XScsXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IFBPTFlNT1JQSEVVU19DT05URVhULFxuICAgICAgICAgICAgdXNlVmFsdWU6IHskaW1wbGljaXQ6IHt9fSxcbiAgICAgICAgfSxcbiAgICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlIaW50VW5zdHlsZWREaXJlY3RpdmU8Qz4ge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBASW5qZWN0KFRlbXBsYXRlUmVmKSB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8Qz4sXG4gICAgICAgIEBJbmplY3QoVHVpSGludERpcmVjdGl2ZSkgaGludDogVHVpSGludERpcmVjdGl2ZTxDPixcbiAgICApIHtcbiAgICAgICAgaGludC5jb21wb25lbnQgPSBuZXcgUG9seW1vcnBoZXVzQ29tcG9uZW50KFR1aUhpbnRVbnN0eWxlZENvbXBvbmVudCk7XG4gICAgICAgIGhpbnQuY29udGVudCA9IHRlbXBsYXRlUmVmO1xuICAgIH1cbn1cbiJdfQ==
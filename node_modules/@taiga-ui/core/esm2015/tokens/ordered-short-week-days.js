/**
 * TODO: v4.0 delete the whole file
 */
import { inject } from '@angular/core';
import { tuiCreateTokenFromFactory } from '@taiga-ui/cdk';
import { map } from 'rxjs/operators';
import { TUI_FIRST_DAY_OF_WEEK } from './first-day-of-week';
import { TUI_SHORT_WEEK_DAYS } from './i18n';
const convertToSundayFirstWeekFormat = (weekDaysNames) => {
    const sundayIndex = weekDaysNames.length - 1;
    return [
        weekDaysNames[sundayIndex],
        ...weekDaysNames.slice(0, sundayIndex),
    ];
};
/**
 * Ordered calendars i18n texts
 * @deprecated
 */
export const TUI_ORDERED_SHORT_WEEK_DAYS = tuiCreateTokenFromFactory(() => {
    const firstDayOfWeekIndex = inject(TUI_FIRST_DAY_OF_WEEK);
    return inject(TUI_SHORT_WEEK_DAYS).pipe(map(convertToSundayFirstWeekFormat), map(weekDays => [
        ...weekDays.slice(firstDayOfWeekIndex),
        ...weekDays.slice(0, firstDayOfWeekIndex),
    ]));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXJlZC1zaG9ydC13ZWVrLWRheXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3Rva2Vucy9vcmRlcmVkLXNob3J0LXdlZWstZGF5cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckMsT0FBTyxFQUFDLHlCQUF5QixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hELE9BQU8sRUFBQyxHQUFHLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVuQyxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxRQUFRLENBQUM7QUFFM0MsTUFBTSw4QkFBOEIsR0FBRyxDQUNuQyxhQUE4QixFQUNmLEVBQUU7SUFDakIsTUFBTSxXQUFXLEdBQUcsYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFFN0MsT0FBTztRQUNILGFBQWEsQ0FBQyxXQUFXLENBQUM7UUFDMUIsR0FBRyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxXQUFXLENBQUM7S0FDdEIsQ0FBQztBQUN6QixDQUFDLENBQUM7QUFRRjs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUU7SUFDdEUsTUFBTSxtQkFBbUIsR0FBRyxNQUFNLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUUxRCxPQUFPLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLElBQUksQ0FDbkMsR0FBRyxDQUFDLDhCQUE4QixDQUFDLEVBQ25DLEdBQUcsQ0FDQyxRQUFRLENBQUMsRUFBRSxDQUNQO1FBQ0ksR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLG1CQUFtQixDQUFDO1FBQ3RDLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsbUJBQW1CLENBQUM7S0FDekIsQ0FDM0IsQ0FDSixDQUFDO0FBQ04sQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRPRE86IHY0LjAgZGVsZXRlIHRoZSB3aG9sZSBmaWxlXG4gKi9cbmltcG9ydCB7aW5qZWN0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeX0gZnJvbSAnQHRhaWdhLXVpL2Nkayc7XG5pbXBvcnQge21hcH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5pbXBvcnQge1RVSV9GSVJTVF9EQVlfT0ZfV0VFS30gZnJvbSAnLi9maXJzdC1kYXktb2Ytd2Vlayc7XG5pbXBvcnQge1RVSV9TSE9SVF9XRUVLX0RBWVN9IGZyb20gJy4vaTE4bic7XG5cbmNvbnN0IGNvbnZlcnRUb1N1bmRheUZpcnN0V2Vla0Zvcm1hdCA9IChcbiAgICB3ZWVrRGF5c05hbWVzOiBXRUVLX0RBWVNfTkFNRVMsXG4pOiBXRUVLX0RBWVNfTkFNRVMgPT4ge1xuICAgIGNvbnN0IHN1bmRheUluZGV4ID0gd2Vla0RheXNOYW1lcy5sZW5ndGggLSAxO1xuXG4gICAgcmV0dXJuIFtcbiAgICAgICAgd2Vla0RheXNOYW1lc1tzdW5kYXlJbmRleF0sXG4gICAgICAgIC4uLndlZWtEYXlzTmFtZXMuc2xpY2UoMCwgc3VuZGF5SW5kZXgpLFxuICAgIF0gYXMgV0VFS19EQVlTX05BTUVTO1xufTtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgdHlwZSBXRUVLX0RBWVNfTkFNRVMgPSBbc3RyaW5nLCBzdHJpbmcsIHN0cmluZywgc3RyaW5nLCBzdHJpbmcsIHN0cmluZywgc3RyaW5nXTtcblxuLyoqXG4gKiBPcmRlcmVkIGNhbGVuZGFycyBpMThuIHRleHRzXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgY29uc3QgVFVJX09SREVSRURfU0hPUlRfV0VFS19EQVlTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeSgoKSA9PiB7XG4gICAgY29uc3QgZmlyc3REYXlPZldlZWtJbmRleCA9IGluamVjdChUVUlfRklSU1RfREFZX09GX1dFRUspO1xuXG4gICAgcmV0dXJuIGluamVjdChUVUlfU0hPUlRfV0VFS19EQVlTKS5waXBlKFxuICAgICAgICBtYXAoY29udmVydFRvU3VuZGF5Rmlyc3RXZWVrRm9ybWF0KSxcbiAgICAgICAgbWFwKFxuICAgICAgICAgICAgd2Vla0RheXMgPT5cbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgIC4uLndlZWtEYXlzLnNsaWNlKGZpcnN0RGF5T2ZXZWVrSW5kZXgpLFxuICAgICAgICAgICAgICAgICAgICAuLi53ZWVrRGF5cy5zbGljZSgwLCBmaXJzdERheU9mV2Vla0luZGV4KSxcbiAgICAgICAgICAgICAgICBdIGFzIFdFRUtfREFZU19OQU1FUyxcbiAgICAgICAgKSxcbiAgICApO1xufSk7XG4iXX0=